cset: moving following pidspec: 9048
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.501808804 seconds)
loading group "string"... done (took 0.522751208 seconds)
loading group "linalg"... done (took 9.001591656 seconds)
loading group "parallel"... done (took 0.177272483 seconds)
loading group "find"... done (took 1.303172011 seconds)
loading group "tuple"... done (took 2.037132845 seconds)
loading group "dates"... done (took 1.512661017 seconds)
loading group "micro"... done (took 0.207355816 seconds)
loading group "io"... done (took 0.53858451 seconds)
loading group "scalar"... done (took 50.633605587 seconds)
loading group "sparse"... done (took 13.679215927 seconds)
loading group "broadcast"... done (took 1.288147341 seconds)
loading group "union"... done (took 10.172729197 seconds)
loading group "simd"... done (took 3.02848108 seconds)
loading group "random"... done (took 11.476230715 seconds)
loading group "problem"... done (took 2.240747633 seconds)
loading group "array"... done (took 24.184107939 seconds)
loading group "misc"... done (took 1.145372289 seconds)
loading group "sort"... done (took 3.77781147 seconds)
loading group "collection"... done (took 19.255149191 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615966966 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.181899809 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201555471 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.282659709 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.23361838 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151710483 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136591239 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.255123885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.557726356 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206143753 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128384407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.504926834 seconds)
done (took 6.202032832 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253143322 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.185431265 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169921426 seconds)
  done (took 1.044596388 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072765933 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154984689 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106446781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092079973 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.089523019 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107585686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091811738 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10716186 seconds)
  done (took 1.441252331 seconds)
done (took 3.504351493 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.505076128 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.871306864 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523760816 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164233712 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.300581902 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293393504 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32749352 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201943738 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089680777 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087001587 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172872373 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.384730144 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.442951063 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.951467633 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088551787 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.113277582 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116581284 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.763138201 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075735154 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111895008 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506390317 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190173979 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.095155372 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123343761 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.181528374 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129192498 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160073043 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098141187 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.654701234 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129618579 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185648684 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.093139357 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158543581 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.189044296 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202933207 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088997092 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668698574 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199212647 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091047117 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096008046 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655308391 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114455571 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181400206 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099616317 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087593875 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178019213 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093720161 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074720282 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112030547 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082164677 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162708679 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.439831384 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103600902 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.1683047 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088763102 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.680134183 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097598985 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27232907 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123324591 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090791748 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08699086 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085056843 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157434318 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091334019 seconds)
  done (took 19.884105562 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147954163 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161957317 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075213675 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152925918 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12102769 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077559377 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098380744 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075292292 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10538052 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239108792 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135113378 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150594467 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087922604 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085303507 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123278305 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244689246 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102550802 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116847309 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084289307 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086862822 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136436586 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093711603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103845267 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090381645 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16485242 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199964184 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107757947 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12021868 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.085911057 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093824076 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138263656 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142208389 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088788506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082650969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16756769 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118993798 seconds)
  done (took 5.116515485 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197854441 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119945053 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211988566 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159569917 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142919797 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165295498 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144486795 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.283623385 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199927704 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158447462 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124557648 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101800423 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09242893 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077539445 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075147047 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.48242625 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.133335394 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169135214 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131106156 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101616551 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079290076 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382411198 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080725749 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093370692 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083267003 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066426765 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.194788151 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081840005 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.07303535 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10018104 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087419365 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13034987 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18966396 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112030024 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133390657 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082691026 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076515689 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212444006 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106352107 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075124058 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104896104 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130991104 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110322243 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097506905 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105370986 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216699596 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079262151 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099868245 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.091099216 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192635426 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.143641092 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095222913 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284196824 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097267688 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082540282 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097017749 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.136311176 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275291548 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112605637 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080124939 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09562202 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082830888 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074889874 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428582315 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104015469 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.339736016 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07734677 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.153565618 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081238463 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100807931 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082954797 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080737571 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114750985 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076916069 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075178285 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092837462 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077071979 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080791174 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108043468 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079630732 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080109436 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093271086 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078499549 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142054062 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113186702 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.0994782 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120052378 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083239642 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076347712 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124330608 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079530346 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079911204 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169252255 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077621722 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100662716 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094660064 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097254153 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124907857 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077433645 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.231030442 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080491792 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104287673 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097633951 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12263826 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099119193 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076389339 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097699153 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075678397 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076755535 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155293346 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07876114 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079374491 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079893181 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107426417 seconds)
  done (took 23.061631013 seconds)
done (took 48.750486215 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.437670505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084965094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083718671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102627491 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084701315 seconds)
  done (took 1.56553433 seconds)
done (took 2.311158376 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316391823 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195510691 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097338464 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191173472 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083224782 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197459859 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184048501 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091380698 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212162857 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081835582 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189911203 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081689807 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100850685 seconds)
  done (took 2.795378393 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097477821 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102079506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095140283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112384138 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076658082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093850237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10932221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105179289 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092615928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104369266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076970605 seconds)
  done (took 1.81082455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096205756 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100275446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083945334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109389126 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077418932 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091939833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108206093 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10183457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092280108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105009257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077538108 seconds)
  done (took 1.791344302 seconds)
done (took 7.139343705 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.139964933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.267906522 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165279195 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.282339404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.338919714 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.24545828 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.641179806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152024678 seconds)
  done (took 32.133848031 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.161189945 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102706435 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085947716 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088214813 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087893073 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106370726 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087114069 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084443654 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.107078138 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088501649 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090486593 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103243472 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085806424 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084550698 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08324701 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101330916 seconds)
  done (took 2.357891876 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138096536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110516861 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107176286 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.091452118 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086752834 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108306363 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094041441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089178297 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104133405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088026531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094759661 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1063194 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09030404 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085119546 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106227019 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116603384 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086163186 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105774196 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115968637 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09078117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108262723 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.089177119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088864707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106596968 seconds)
  done (took 3.237637464 seconds)
done (took 38.476502939 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15116627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096146369 seconds)
  done (took 0.996900294 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139589161 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152552934 seconds)
  done (took 1.046737581 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108939087 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082752991 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130731014 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096752811 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083666491 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09822913 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.111396719 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098948124 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083879793 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084189355 seconds)
  done (took 1.73842988 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089906701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.086953397 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.114093293 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135479799 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106476508 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08751274 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087673849 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085225209 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105890163 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084031982 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.091328395 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119362215 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088467039 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118831721 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089581617 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089022209 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108337387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087501785 seconds)
  done (took 2.533559071 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085806124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084862857 seconds)
  done (took 0.929463128 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090266649 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083659092 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084718394 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101417346 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083066687 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082226251 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098851151 seconds)
  done (took 1.3836657 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491200029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259465392 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.364392618 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101388827 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138584395 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.333617557 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137838182 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097685904 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094967126 seconds)
  done (took 2.811604679 seconds)
done (took 12.194823127 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090657074 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.210583652 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621751572 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.225200059 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082936988 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157603817 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.282198115 seconds)
done (took 2.437559412 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350271985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149268664 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083516088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082094049 seconds)
  done (took 1.423073232 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080887596 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09150039 seconds)
  done (took 0.940141304 seconds)
done (took 3.130215316 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105740112 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082951622 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098435811 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083265085 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081400596 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081350386 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.098803392 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08224745 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08319502 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081561298 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100617842 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082784948 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.081627523 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.097122564 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083945206 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081602461 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081074319 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09875704 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081430219 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081392387 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095814719 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08217374 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08065853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080326829 seconds)
  done (took 2.892089899 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109422522 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08244569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101170498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088901619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086126075 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102762412 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087700682 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083005468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087229815 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101747058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086360614 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085060018 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100765865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086317447 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083858463 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102585869 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087479329 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083307572 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099353375 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087459729 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086925006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100539487 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087560614 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086560399 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102769738 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087610811 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083523839 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098664996 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088862661 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085911897 seconds)
  done (took 3.513281665 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097218922 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082023271 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08467252 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.109655047 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082698339 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085984985 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097605508 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083800981 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087395143 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08536868 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104120384 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085654776 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081414145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.102956869 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.087660931 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089323493 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093027718 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.098898298 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083811562 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086028945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.105170381 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083444751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085538537 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085479134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.102271664 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.083368894 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086486229 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.101146349 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.087790852 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08549416 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087985994 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105188315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08628785 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09606289 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105197493 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.086447438 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.090846381 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082093449 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.103893031 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082718858 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082349387 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.101736073 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084157733 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092410499 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085751253 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.103609841 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084256014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085886753 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.102558836 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090427234 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082804775 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081878605 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.105079998 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087903209 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088014411 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099169791 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.086898328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08316265 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086515713 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.101839701 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082677942 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081951136 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.1070943 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0874854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100595336 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10811575 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08366914 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.087435171 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085014584 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.108567483 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089612768 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095358073 seconds)
  done (took 7.351021693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099726685 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09192808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083029128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100673249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082998663 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083344336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104075917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085207102 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083565329 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104458727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084287502 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082859718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083259539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101631108 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084312349 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083673638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106240235 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08376129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083991695 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100249032 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085166629 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087269692 seconds)
  done (took 2.764802577 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225451968 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090188305 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133283017 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113505305 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10110633 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111943372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08963953 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089228233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103216715 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092321664 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090784355 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105065833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100782089 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09072357 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10829194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093234863 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087228634 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109961658 seconds)
  done (took 2.715952229 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102285217 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085108694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122610192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086144381 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084433739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085312524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107407964 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107979485 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085535539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103062988 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092441872 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085716685 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102731654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086437362 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086373758 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104811337 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088506569 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085222142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107911323 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092117028 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089924952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110149657 seconds)
  done (took 2.882871836 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102065731 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086136368 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11961978 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087747212 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083394863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084076824 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107863705 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086474319 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090170041 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103175071 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085346371 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08524481 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.116073503 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08486357 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089825915 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102389172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086557503 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084696285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102040065 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085447294 seconds)
  done (took 2.653374831 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17060049 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118262592 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104741881 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111046104 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121132998 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103964574 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110577391 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121329954 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104463473 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129821233 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104162646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104962326 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127486533 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109046907 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103284932 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129558446 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112421386 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128185426 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104580818 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103969276 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131960149 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10344592 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128565973 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10368633 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103151257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120652272 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10463141 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10779214 seconds)
  done (took 4.011028851 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08672837 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084877232 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082340103 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100111618 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085197759 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083759081 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083258725 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100406885 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085127849 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082727933 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.101289763 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085290961 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085249284 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084494572 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101072766 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085326207 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084003957 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08240337 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101233038 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083958073 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084451423 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100781442 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084984121 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082891872 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083504137 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102036968 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084145811 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082723452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100681255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084233144 seconds)
  done (took 3.445378396 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098186638 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092394239 seconds)
  done (took 0.977315749 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093643336 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099916046 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082418636 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101373581 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090876729 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085299343 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109776179 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090826316 seconds)
  done (took 1.540928928 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142728607 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158315136 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091292234 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.095873838 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158156456 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150259125 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131593731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090506925 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103869109 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081139839 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.151372253 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080637364 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088580417 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084156077 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107652233 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095006992 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085744323 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113942058 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091722984 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086321073 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107584443 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094580451 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090101317 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112437757 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082394139 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089755951 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109121604 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100468641 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084509005 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109246337 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087703237 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084203535 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106623921 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091341218 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086052313 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158456833 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09727196 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102230008 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09043895 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091267826 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.136536163 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.086159183 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090029692 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085876845 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10991433 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091287588 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090156513 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102763542 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081923106 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083635061 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.102850614 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085903011 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084112695 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105451171 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089016844 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095524102 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104348064 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085283138 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085746864 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083327579 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.1049931 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084141486 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090079894 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.106605804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090262899 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08883812 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105449565 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085982591 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087263786 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103105542 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.088711172 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103455212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107826801 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090753588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091208459 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102801491 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087090792 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092448944 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103467486 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090534865 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089569155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130666849 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091394484 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084878923 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082997909 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110934536 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088011514 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087758158 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098992076 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098445073 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087770039 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104583432 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082658212 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087002989 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101115657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090957928 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082140455 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105836697 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085454133 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090450908 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090392294 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105291524 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091567298 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090730644 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110547453 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088569899 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149990891 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086495568 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083860104 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088105925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110665735 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084045231 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087926681 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.102973656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086564451 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083959641 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107906952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090228412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087364796 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10820272 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092111113 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090654449 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105747575 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086489959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08484412 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089535316 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11268462 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090758166 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088079279 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104614435 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086493266 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087574274 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107652848 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086600915 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090943235 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103396735 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.086017338 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087148285 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089845764 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106839808 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084115954 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086730591 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109206332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08770075 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088983243 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108087946 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084693675 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080456745 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107489792 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085447542 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08611676 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112870904 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085911747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088540166 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103693682 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09596388 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086194161 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090673334 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1078196 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091635782 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091685249 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099743046 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087224533 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088909379 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108766395 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086922377 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086625769 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103337768 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095170765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089331088 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099934139 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087208869 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091795384 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.106226033 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.090846715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08446361 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.143344308 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100513002 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092083047 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108002844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090089169 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091314744 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105785507 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.091115087 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092084557 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091624184 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107961192 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088546271 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092918353 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104058039 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089302713 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087531178 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10866857 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082675983 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087667946 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099428935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092554328 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092317102 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090705545 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110389376 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090239508 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087587691 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113401305 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087218369 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089609913 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099425992 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092822555 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095156137 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11050584 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093933859 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090314789 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105008343 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.087787101 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096456221 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08901757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108474562 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08723713 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082491388 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100682143 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.093783494 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089007396 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103237228 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087368429 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091504846 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09065534 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106196411 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082704208 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090470187 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11240656 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085207963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088494205 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105472203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08822972 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096350332 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101231176 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086638979 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090825959 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110607292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08720214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088823071 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10854771 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09628301 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089720409 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089170919 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10588779 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097068949 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087444668 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104869092 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087917283 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089656461 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102008147 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.088897907 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090182312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086867469 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10509256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093786623 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094762714 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113351525 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088812726 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091321512 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112489704 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.093929778 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087200217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111216236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086511642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082227418 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10416987 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084232847 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0890714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08556145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111283599 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088280572 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087682965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.109390369 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09270353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086798365 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.11099427 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10202382 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084247364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101066592 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089264729 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089447736 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105233478 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08838444 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087742628 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11892257 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.092739362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093229624 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10422002 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087425534 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093170848 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094566353 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113484127 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.094075838 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.093200417 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104868434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093693005 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08648626 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114097295 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085025893 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089360086 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107365153 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090992288 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087313241 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106962254 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087695955 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083288233 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086237753 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112733384 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090060362 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091832519 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107915263 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088340436 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086303934 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104606698 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.094901493 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088012088 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.112823652 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.088552537 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083530361 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083466073 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.112457502 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091308285 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.092971592 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105559206 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0917925 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094243386 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.11061131 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089684948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096972664 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095478894 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112991071 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096193312 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082990897 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107580147 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095783498 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086122972 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110243987 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091427582 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083715164 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112244508 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09499814 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092513134 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106181792 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085387969 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087363968 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092904542 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.1112093 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09128659 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.089410484 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109994346 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086950092 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090604249 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111933503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091853074 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094056626 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088935901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111965083 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087488395 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.093626907 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.106874754 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085284191 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083544187 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106878915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094774812 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084605542 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.113694334 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.094476829 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08776484 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087534777 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112118008 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087691348 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09370436 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111615079 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088761667 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096905883 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.106801513 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090416413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093093092 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111107349 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085555519 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089631244 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088717598 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113860941 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089885329 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093021305 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110494092 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094323375 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.090699152 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111253696 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09467814 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.092960919 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083500094 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114524897 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095639791 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.090910959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107031105 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089334392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084816373 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107979595 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096450653 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087282884 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117059526 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095022711 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08870924 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106471041 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.095928491 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089682267 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093630305 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107824993 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093256261 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083998088 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112872976 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090819036 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093727576 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106773947 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086421438 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09354395 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.112332908 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094077047 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093617446 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.113560422 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085478025 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084423004 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089839393 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107246621 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09905523 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094210758 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108073676 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090579392 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.088647801 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.107083339 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09667308 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085563376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087167553 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112102789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093302679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088922884 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106136066 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.093915096 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089303374 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112408745 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09094606 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085685117 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110107059 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.096113315 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08903237 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105398062 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089564473 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095466983 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10832568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08902073 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085254956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09597849 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113333072 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095950656 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086803489 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111528907 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088712859 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.088768497 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.116180927 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089911227 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091687117 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108106586 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095097591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096486778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103529154 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089676131 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098956017 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112271516 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096010507 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090679551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089287011 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115981546 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095364489 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089428975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104713033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086824495 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089142805 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103943454 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09217082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096902153 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107999182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090356369 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092803094 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092122713 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10991193 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090993285 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084818231 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115019626 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089605504 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094809577 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104463789 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086909036 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.090024188 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09432376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110634967 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091830142 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.088608894 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.110527184 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086544811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087974837 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113873298 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094402546 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.094561625 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11025221 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091529047 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.091296773 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098103002 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.109543989 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090436082 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098668456 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115051622 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092990991 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090283258 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115593504 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.096445084 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090195287 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115447715 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090295775 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090559998 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11517514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097175247 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101082302 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109418535 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08656643 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.093981114 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089406529 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106128641 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095795768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095794413 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.115975914 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092102525 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088236467 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11830651 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098305944 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091385181 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108715629 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089472238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.093778754 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108453784 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094285931 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088798252 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095024323 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116178474 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095315061 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097420482 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105404835 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09792508 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093721364 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120404235 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090794662 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085144136 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104513817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.092833851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096383499 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097078593 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.113470206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.094800474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093717074 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111786107 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093073547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088732339 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115732713 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0967077 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08951279 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093070109 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110649052 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092479861 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090263864 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115317251 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.097104162 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092290098 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12017948 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096995954 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09001217 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108944839 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094588935 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090516772 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112378006 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095314713 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089734656 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085722701 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115536039 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097571331 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09121837 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117260605 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098217592 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089841669 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113910072 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100340987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.093739999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.089034649 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114455959 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093363639 seconds)
  done (took 58.517170126 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14464674 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096630501 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110948086 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091322895 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109223341 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112494477 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091795994 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092165266 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111153482 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102273681 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09075737 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108592146 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109297508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112936979 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129943635 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101343821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109399615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093100002 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090918504 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0901271 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12679691 seconds)
  done (took 3.066377879 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115131334 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105011614 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121844447 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105871049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096526828 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123199567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102277595 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124348683 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107242415 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098671741 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127143254 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103589385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119261501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101610196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098574393 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120714007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106638906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096863718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125576369 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102476004 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119759688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103656623 seconds)
  done (took 3.263121124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105071923 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095302596 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096324373 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.110927133 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09628906 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.090136351 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118653822 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094211775 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.099815414 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091894002 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107762631 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093191544 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0971719 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.110762802 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.088818661 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091818138 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119137968 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097084489 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09593451 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.090719339 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126025834 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.091620781 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09130314 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10888283 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103674336 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096247354 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112610134 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.096044777 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.086804538 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.114158702 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.093262897 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09176831 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111793062 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089589831 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.08781047 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.094675679 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.117105113 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.091913423 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091422156 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11419943 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.093102316 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.095854474 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116370401 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.092736233 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.092545371 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092416868 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.115827397 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092195255 seconds)
  done (took 5.636721245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125524989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.149960607 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095427323 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122929029 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128903986 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.102149409 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09492527 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125694837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093610953 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116551518 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108582685 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105388836 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11822825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.099920813 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097498495 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117785313 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097207357 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093528417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119927223 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.095543046 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.099208228 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.118302509 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106574115 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124143428 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100137615 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094148358 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.114419339 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100679993 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103234309 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121326187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.100967486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.098993882 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.368528185 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099174759 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09505654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11850299 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.107458802 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.095775852 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120019713 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.094562228 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.096971994 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120571223 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.098198442 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127812408 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097732606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09824243 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.115557096 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09368776 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105072905 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.116095167 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.103378229 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106763128 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118594887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.097604484 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097788845 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126496663 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.096797835 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.093696553 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118044001 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.105328084 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093173672 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119864893 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107018903 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.096478803 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123568275 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.106261015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117102943 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099119658 seconds)
  done (took 8.566987359 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135550104 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100096651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127873327 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10857772 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099241073 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12115377 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100252713 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.099405925 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121638975 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105592294 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119909063 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199093699 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.118738866 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105591065 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099463769 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12127095 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10035159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099136778 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121781384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101669615 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.099831508 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128954917 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099937718 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128351482 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1118701 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096988694 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121213233 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101738365 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107412653 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121936363 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110686889 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121374493 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101728352 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107739192 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133252525 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.100885382 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095085921 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121735244 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.101229142 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099620475 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118531802 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109204684 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099517592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.118888569 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101164091 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.099719722 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1308873 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112140843 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125505225 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107477665 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100405127 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130475627 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100637185 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121247564 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109827156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.114609639 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130496938 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109215697 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121459541 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110277057 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110028664 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137465841 seconds)
  done (took 7.891479938 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097676058 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092954807 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.091059427 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113344325 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095018509 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092276473 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092896946 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115099684 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094842656 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092989961 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114391693 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094073598 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092260131 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09328644 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113471319 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094373914 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091807184 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092062934 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114393779 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092695674 seconds)
  done (took 2.823561407 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107909059 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111076052 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114984799 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103093045 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.096144825 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120797256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098732497 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09649502 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095024955 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118577462 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105083673 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103386523 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117556425 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101089465 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124250076 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102174091 seconds)
  done (took 2.574782355 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119014153 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11324656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188465731 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10088414 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.116471031 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103145333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.095534501 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096924763 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.117249646 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102385069 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09996746 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.121340016 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09678673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096027776 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118800977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.099602297 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09376615 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.120695252 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0972471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163871522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122242624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0969556 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096871759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.122351664 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09737781 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099010487 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.123748521 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096349417 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097531062 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.118455709 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098313504 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.102823401 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.116829065 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.101555294 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097654575 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118178334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.098000422 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.096349378 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.119936795 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099079392 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099385756 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.096704366 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118395701 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100654792 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094059714 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118361206 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.095561272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.101831978 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.118867263 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09956014 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.096068627 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.125433994 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.102825978 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105237343 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124575907 seconds)
  done (took 6.839083373 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111968502 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09735117 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129201338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096200843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096614695 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096485858 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120020747 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097873096 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095909481 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117253704 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098786247 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097184686 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118206655 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09948108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097348955 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097144144 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115611531 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.097454204 seconds)
  done (took 2.739746425 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105010228 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095815603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10149406 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.117339735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097085282 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096408945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116112467 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.096660701 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095212334 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095251632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118809314 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097930286 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094945886 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118237196 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097823738 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095650094 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118222286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09738024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095967602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094677065 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118922983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096703545 seconds)
  done (took 3.126710164 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112787342 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181520003 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105265165 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.190612742 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.095422418 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094335485 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127371074 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096532192 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111424398 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.116421391 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095666911 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094600671 seconds)
  done (took 2.289065235 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129195444 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135635591 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119047439 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098455104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106415366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122047009 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102187081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100474039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130972943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113070768 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12251592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111263025 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109196465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129726985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106317537 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125631139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102431234 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099983199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096484214 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139686555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100694581 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130426772 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101547367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100481081 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122752699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109116223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130649331 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113959388 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100254402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130594545 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106315387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100089524 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1321979 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111988358 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118744148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110763004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100031475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139515755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106896175 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129580796 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098736022 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105406987 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130091524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106904154 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108772355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124586042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107084334 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121508265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103024936 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122758655 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12840276 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109431426 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127313842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111964706 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109303217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143630143 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111813676 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131482128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106810598 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132924718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111450685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105055849 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131274927 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112750716 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12763518 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109374739 seconds)
  done (took 8.507849565 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143449707 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096897259 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122675027 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112652085 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130555214 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102899739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100801705 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122378789 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10303395 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097852926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168110414 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102244827 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111797048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132396924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10102432 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122286618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102934276 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109563073 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120223529 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124346897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100728091 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132452076 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110558249 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130510213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112914508 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127782219 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102905958 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100927649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122521961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102943553 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106461355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123768201 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110410604 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097308449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131747327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102271825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101119048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129938927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101544261 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127570946 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112248693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116182596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123687051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101925523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133103363 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102957746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101212327 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120161051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104234845 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098288347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13481871 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113206592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133958652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111514834 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101699623 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12328983 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102794667 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10142135 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123756145 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108267414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109574926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124772112 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124384028 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122692364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10328587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109401236 seconds)
  done (took 8.442939361 seconds)
done (took 159.802301443 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151128856 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186524477 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14331739 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176921432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092336411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.124695805 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146324466 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146708419 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090210491 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115155939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091641438 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093683273 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179530094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092504736 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091101965 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11613524 seconds)
  done (took 2.906648199 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191813717 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305159341 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107673798 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117743858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100794931 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09786211 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117544708 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099081453 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09615775 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126627402 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099683752 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093962208 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125294593 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094054579 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095906913 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120062183 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106013187 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098633235 seconds)
  done (took 3.069349193 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120971599 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139562551 seconds)
  done (took 1.142284459 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131284636 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194399435 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272542646 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169976922 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119683109 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135460487 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149298842 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130959599 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.177790561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131650196 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110705307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096592271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146072512 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102547162 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.108661423 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120260078 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124706624 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.107212478 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.128815011 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098919757 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117020274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124558163 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10210825 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.129581064 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.168411155 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131564424 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103179115 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100656694 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121283646 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108345869 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103559989 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135750654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108922043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173112175 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101946419 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168315658 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106698927 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11884135 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.10863672 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096322686 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122804898 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102058855 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113348363 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11943663 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101955816 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107567134 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123562771 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101943781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126630708 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108573825 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104646754 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127630654 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.143555598 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131920967 seconds)
  done (took 7.701925809 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850926212 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139216727 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097636649 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.003036319 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147113295 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112518458 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84288787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142908261 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250030425 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.852466505 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114460177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10919682 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256811299 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248102799 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.172985059 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369064662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681109025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134200315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126656136 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163006713 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106519986 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146442206 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118432774 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427475754 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098538641 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097475784 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127562941 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110257024 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175009929 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097616155 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123306625 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173035821 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282872918 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206059457 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119218863 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097144525 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096769457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182963734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266642075 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213743495 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180779081 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094846179 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096183095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126867602 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117942185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092839672 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177549756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188748297 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189677323 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10184016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131118136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10891425 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104179555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17576038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094122385 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37204431 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.351441232 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097140031 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104497385 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136306524 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266306474 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097255713 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230621156 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145892089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212547488 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096645891 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805895434 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182733895 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096451101 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130719458 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106144257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101940084 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127381215 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156018772 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402421929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10878738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124234263 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096887738 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225713559 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09674263 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119075318 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15620662 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121162143 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10671674 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13244435 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110717072 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187301665 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265614588 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111755475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106757986 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125324561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110554472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098317334 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229326547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224623989 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173888947 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231281714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105841074 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179074497 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183782808 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104055694 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18671958 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103473458 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135536676 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105381575 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220865451 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15389081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097942008 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123446491 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107415699 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132875216 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124142142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106463129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183297054 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464122747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180319517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095075336 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102133621 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10500252 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177583386 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125222642 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262350593 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108640905 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181559262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104967582 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0935442 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128209506 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179282214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108799279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105620718 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129089992 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109529839 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26953977 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218824838 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110941953 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238748881 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187930963 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104715694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190721737 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127801667 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161736814 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131103235 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106262467 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098354136 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809513672 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134649058 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105673241 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125019861 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182907574 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118079312 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101559868 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.096890569 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093319479 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829209778 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123489962 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096482966 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098656172 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126530019 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106368764 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105166473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126086602 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175956044 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244109786 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111544329 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127292771 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099024568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175737893 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100021355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.097202476 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.119491958 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100167476 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106781257 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123849076 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101144505 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186686092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151541629 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.247128515 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.527873108 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099293698 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09741954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235095653 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120784403 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316949978 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105301298 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230865871 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182443694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094580198 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.370286311 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161221556 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205726925 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100506521 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188831285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0943962 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129891744 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15265905 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122407508 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105930728 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174365708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111989157 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133949324 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.185008025 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098745604 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248364854 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09454014 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186826065 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098981716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129369128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320374845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097742655 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138652148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.154409118 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125794827 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099116493 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.719811598 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098855737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132069807 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106139044 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229643211 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182334973 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106247308 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130807263 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111265119 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17819666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230711651 seconds)
  done (took 45.420597951 seconds)
done (took 61.120850919 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284391034 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251417667 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304427616 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210714461 seconds)
  done (took 2.027171072 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.285868699 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161386722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.231075734 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095890519 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245733683 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096282002 seconds)
  done (took 2.026737343 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.493518065 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38191162 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.341393597 seconds)
  done (took 2.130531755 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244764319 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.231681356 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347004826 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.405870339 seconds)
  done (took 2.254649509 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298814655 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130448786 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124160168 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.21300525 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.279943161 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255627411 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150698969 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200298735 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151438471 seconds)
  done (took 2.764631706 seconds)
done (took 12.108919334 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.34283017 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.381337815 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158954119 seconds)
    (4/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.221528097 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.27392372 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.328734353 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.192443891 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.16419849 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.338724073 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10543308 seconds)
    (11/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.249077106 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.167445849 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123305637 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.156758894 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.294762354 seconds)
    (16/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.321136143 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.234370701 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.103624543 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.149784296 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104995056 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.239367799 seconds)
    (22/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.35133379 seconds)
    (23/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.202830521 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.22319809 seconds)
    (25/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.202253539 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.191434912 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.16832017 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.104158564 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122239433 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13083374 seconds)
    (31/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189955411 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137882877 seconds)
    (33/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114806156 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.204272678 seconds)
    (35/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.213527398 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.172292334 seconds)
    (37/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130463893 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.172970685 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.157971291 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134968692 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10334849 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.10670553 seconds)
    (43/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105489104 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.219315352 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079875519 seconds)
    (46/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.106331779 seconds)
    (47/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104793847 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134846353 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.10610628 seconds)
    (50/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.153662929 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.286260052 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194871632 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.199517945 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137133381 seconds)
    (55/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.250806332 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103679307 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.087217307 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.160246036 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175180382 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.126116949 seconds)
    (61/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106465528 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202993404 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.208068898 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08207671 seconds)
    (65/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103287516 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.173987474 seconds)
    (67/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08439071 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.190250115 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.176904489 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083177035 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123566686 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197846342 seconds)
    (73/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.143743488 seconds)
    (74/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183051325 seconds)
    (75/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.111358787 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083346481 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104338371 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082662863 seconds)
    (79/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09195395 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122634459 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083404768 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121502967 seconds)
    (83/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124713186 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105029372 seconds)
    (85/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104495767 seconds)
    (86/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.137505947 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123828617 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.149255763 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.204747713 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196289763 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082816208 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.225567568 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096946565 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.128653205 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105728685 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10494314 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127494163 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084365854 seconds)
    (99/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177793658 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.144485711 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106002964 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104682684 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.200602074 seconds)
    (104/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084018534 seconds)
    (105/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082962112 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082963298 seconds)
    (107/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200778968 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.176086228 seconds)
    (109/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.209703532 seconds)
    (110/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106009795 seconds)
    (111/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082758214 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104559142 seconds)
    (113/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.105904512 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084782477 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106146239 seconds)
    (116/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083289681 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121731313 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084280434 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105591958 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104927074 seconds)
    (121/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.130390089 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105369349 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104327128 seconds)
    (124/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131219176 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.105182979 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083657942 seconds)
    (127/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121597292 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10489814 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103679025 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082260923 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.106755284 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083621183 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083918994 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098503683 seconds)
    (135/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135703877 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124877539 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104382 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148341062 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098843953 seconds)
    (140/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082629838 seconds)
    (141/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087620931 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.130619656 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084168086 seconds)
    (144/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082756846 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.222745275 seconds)
    (146/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149110267 seconds)
    (147/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084190104 seconds)
    (148/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.088570512 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082982825 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.172583234 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084274327 seconds)
    (152/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083479729 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.08511114 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108450263 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099275819 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1051891 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09799292 seconds)
    (158/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.106379369 seconds)
    (159/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090369771 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.105377243 seconds)
    (161/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.144946397 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108732167 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130539414 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.108285195 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08807932 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130571542 seconds)
    (167/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08443883 seconds)
    (168/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083062755 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082307903 seconds)
    (170/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.129668778 seconds)
    (171/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085085871 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084216761 seconds)
    (173/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083654601 seconds)
    (174/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132960882 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176638447 seconds)
    (176/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.088257095 seconds)
    (177/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088121753 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113272657 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102244461 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121626522 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.082895021 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.132312173 seconds)
    (183/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082711986 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083676367 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.087735117 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107420514 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105203329 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083234691 seconds)
    (189/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083525605 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08244651 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.107441551 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085589108 seconds)
  done (took 27.260544516 seconds)
done (took 28.185907918 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217562987 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129673312 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107053433 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107315088 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202323413 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115282548 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142062518 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110789947 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113386123 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.128214863 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099134671 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116809694 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107146276 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199335533 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109749682 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125636761 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100120413 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113936087 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14208019 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.117897333 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202578865 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101948616 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11325182 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124337929 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177930378 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125202008 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107639739 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106990718 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137686272 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107400375 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107550087 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098621756 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.141339668 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118405713 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09854528 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.130514271 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099700262 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089088895 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.12921344 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109255498 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115091736 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.104600502 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134466785 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10062835 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106586673 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130824381 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100017662 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.109962346 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123382766 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108118749 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101453144 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.14254095 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10564586 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097989285 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121862959 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101820494 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115054571 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099044444 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142842783 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100694687 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100214926 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125102785 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110218545 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099162926 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.12967178 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101444789 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106509061 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.131138557 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106510345 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103949558 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098637901 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.130049286 seconds)
done (took 9.59595815 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111461494 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.156507851 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200229851 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209954792 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129165356 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139810149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120891007 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127935695 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142252994 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125211904 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157431693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129102898 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.209479413 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112664449 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11458903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135135207 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114199361 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112556416 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.213717787 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12167786 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155363433 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.111810892 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157111803 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123978437 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106073224 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.162388915 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.106237466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.133532818 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108988663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11541409 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149403293 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107966757 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.105608727 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152344535 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119825609 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112684721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141262984 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110110523 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104846351 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130619187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11468273 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123398015 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131917981 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116064691 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.13541823 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114828687 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114515662 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.137512175 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110508745 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109940869 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132585301 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134112522 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112284663 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138991128 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114035564 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113332805 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138983561 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.114442074 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.105549585 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.139511765 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106791226 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10695887 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135262474 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128442419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13098119 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116363116 seconds)
  done (took 9.529324368 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129903603 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134738632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138489886 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115647578 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108987544 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123057131 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.096619517 seconds)
  done (took 1.817686191 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105602523 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184335555 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206653961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207235367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.177424983 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218559424 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145596879 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099200048 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130760104 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135586509 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184316452 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237655118 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.104957935 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141352611 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183487091 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124974762 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185143648 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125266317 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112783789 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210221266 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112788065 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.126404607 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138021999 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100112844 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206863103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100907419 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261798264 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115346939 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130472158 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114221241 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110509568 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203592335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205734838 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114335508 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103746098 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208712551 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203666024 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111443341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219579573 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104232371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205214494 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.111478998 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114581895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.136094409 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115755928 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16726501 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145610885 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112351996 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.109487394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217429265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.134844147 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182548797 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107412571 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137735848 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.109948354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11143249 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145162193 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.111362612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218828062 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113737868 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208497993 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.206131135 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182533144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208773172 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121424271 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209562584 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203050039 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111644564 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107731328 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.136854567 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18543807 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.134129659 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113244846 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.197027846 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117155687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.208427195 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185725327 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134966709 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113644437 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103738244 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108697973 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.127352467 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173467742 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136986859 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109274242 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117027591 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139713754 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111827537 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104793316 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150553198 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110436746 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1359147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11906721 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.110257105 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140322937 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188492663 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.136455483 seconds)
  done (took 15.40608188 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110713929 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101207888 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106323959 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127810036 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10224365 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101410069 seconds)
  done (took 1.633282837 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146446128 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113640011 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.146620978 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114024286 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163424027 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217053208 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.223414558 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108953627 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.154107707 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126137 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.21781525 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196595633 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.226538536 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115061253 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224116834 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116526887 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225337942 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109530144 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14923214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111120596 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115202379 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143615965 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111322076 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211006571 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11678653 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116763772 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13657309 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124306403 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146264644 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111124418 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.1149983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141611261 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.108858624 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109151521 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.225486693 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.106905302 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135848233 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121996657 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114417895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145946333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.199345867 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136911801 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122862573 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.1210817 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138238857 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107784876 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120736294 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136915878 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.223975109 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121957751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120804156 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1397088 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119019548 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121413099 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134289295 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110448613 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12235762 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.226568732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115168692 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134090755 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113722565 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116825468 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13725237 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120426656 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113169692 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.148192221 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107710938 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11400443 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138174308 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.114173149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121941591 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.140119605 seconds)
  done (took 11.113799473 seconds)
done (took 40.458474469 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.608989964 seconds)
  done (took 2.591310029 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.901825107 seconds)
  done (took 1.887178446 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.9989977 seconds)
  done (took 19.018837116 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.532894955 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602300239 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.044222329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149969063 seconds)
  done (took 3.313345241 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99687685 seconds)
  done (took 2.002552566 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296584384 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260686029 seconds)
  done (took 1.552339225 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731098413 seconds)
  done (took 1.734750781 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.523825315 seconds)
  done (took 2.516051884 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361306168 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.172869382 seconds)
  done (took 1.545254727 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.623035151 seconds)
  done (took 1.633841742 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.646382022 seconds)
  done (took 20.656765649 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251950428 seconds)
  done (took 1.265117958 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290516458 seconds)
  done (took 1.305344137 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.64634583 seconds)
  done (took 4.660680156 seconds)
done (took 66.680906893 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118455328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115340516 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113974502 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138178487 seconds)
  done (took 1.486184993 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125286581 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115580025 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119209238 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141643583 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122033391 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11479086 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142301819 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12016259 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113663603 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144202835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115298263 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116192611 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144667958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116295527 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113792922 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143287643 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121999274 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115333087 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141799768 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117987293 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118529617 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142160108 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121227697 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118435538 seconds)
  done (took 4.020251107 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117239332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106060358 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107348863 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13045901 seconds)
  done (took 1.478848362 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130206927 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128146009 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152611763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124770436 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128029514 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152760094 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115724651 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112733697 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141261697 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125262001 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131933273 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154463248 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128447607 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117917177 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152910658 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110310579 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116583527 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155665823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122393244 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124496064 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142567665 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122782136 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121441998 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150081035 seconds)
  done (took 4.178379353 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193274557 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125011968 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.164958874 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156569332 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167612312 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111482698 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.134579825 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144488024 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118044048 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114668179 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.141133275 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157784721 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14469699 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.115218759 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.111715826 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14335298 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.124119052 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117410447 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182097116 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.115853377 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145062321 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.125907597 seconds)
  done (took 4.073087616 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122684181 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106002246 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102108055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135354549 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117791378 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107947211 seconds)
  done (took 1.716225768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111099496 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099952982 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.1003364 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125480773 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1051669 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100051304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099191903 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127480149 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100612822 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100157774 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126407772 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100276463 seconds)
  done (took 2.321415111 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.345298919 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105360143 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132971531 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10637036 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112424368 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103300539 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14681177 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105182392 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268357783 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105718789 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145719193 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194780886 seconds)
  done (took 2.895807518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208254273 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141085256 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29229118 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366446363 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159491659 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18262369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268138667 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186108882 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202381845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130793303 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238811329 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150012187 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175273969 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168734969 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160376468 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159921397 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190768959 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184129514 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170119966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191566033 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178680207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18548351 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174994685 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175013282 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129985517 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183267972 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114437817 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122041112 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189137458 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157996907 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194361682 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167912026 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135026653 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214784779 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252797237 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166573765 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282853011 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154930496 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176112008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201654957 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251476562 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133379931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208509388 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173261774 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124588151 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198610273 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148675467 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195462467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12677471 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135953178 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201664863 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193997782 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172998337 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15726193 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307152644 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16038557 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.135334476 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196993386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205476792 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181725273 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188430588 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117799175 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205488121 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203584958 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173007043 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160846636 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159190655 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145708841 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160055912 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21622794 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199880941 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152678161 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21892229 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124007463 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180711021 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165105285 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200499418 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168021496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179925801 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113485337 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171172201 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128657394 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146486421 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195914363 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115746969 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220973147 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125029675 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.33721286 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209338972 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150011848 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180765295 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17942483 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153380279 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164279928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110472366 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139593833 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184806952 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149957189 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154936759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150140242 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158130459 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124251566 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143268051 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145300449 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151677276 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158498814 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158674489 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179003875 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124716237 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18458357 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14310233 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.17253357 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162759926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204677374 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125802761 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153099537 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18336526 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17799676 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12661342 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196271223 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177530176 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172638624 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131101577 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186580458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181615173 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163858627 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179908654 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158306543 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128616958 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17053627 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155122783 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180658522 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148819689 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121024321 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172991441 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21777038 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122481871 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131207457 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189260579 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125327769 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14854552 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133106425 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15504578 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136211767 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13757017 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157101548 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145865958 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180708148 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149468455 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178615771 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128214766 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199101872 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125469173 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182388905 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139727242 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.112314269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192989924 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205904205 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123101445 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224859577 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156222457 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216184882 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180877132 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126228785 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199962633 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122587142 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.113311878 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184057754 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146759545 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184744283 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199129396 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184190067 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186930762 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16932144 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143422694 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187295244 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170386765 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174509907 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137701308 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177287693 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157990154 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.114374862 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145451669 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.121317712 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157797945 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124522688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128078031 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197534712 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183724848 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178773391 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177991102 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132513172 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204502573 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12000103 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183542146 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.156898658 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161297397 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174285343 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203767632 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185031975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135665804 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181381432 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115164112 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12040426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.153862073 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15859245 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127763669 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157012238 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134571752 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2046241 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193296118 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141875884 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221428536 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186299256 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188068338 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.141251051 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161538089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19277867 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151227851 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177739735 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156388699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152224631 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201362542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135294614 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209121176 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148982763 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184795029 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211862255 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149386216 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151642609 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142847926 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152810324 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161630776 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157592988 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169618308 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123388945 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175231051 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131000798 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117866841 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205828456 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164664402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164106281 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.180832569 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162201057 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148801834 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135582134 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182060464 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138309056 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112472297 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19384677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204115741 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140117491 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17865369 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169153555 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150268509 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315817578 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212301483 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168920827 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158639885 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134437043 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183916375 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155151823 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184992018 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172867298 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163108559 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17043309 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181348749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137172109 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152890546 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142768688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172496509 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.145085891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.124167402 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178105841 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.135888013 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206099873 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132000908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182721884 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152729736 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170414267 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145566524 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164002412 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188072265 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179271975 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166585636 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.178691648 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159206477 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215174688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11695671 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151401445 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125910532 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20361681 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124493685 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182847418 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.174708195 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21424655 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186096576 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155100602 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162593931 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121026298 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178532881 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142625039 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214947852 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130336634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159827755 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186158945 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163577647 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124860906 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18387191 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275966466 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166244171 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166281831 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.146495429 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268008292 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150650476 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126002097 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185961436 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163698449 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.154365009 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177469701 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15583553 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1622301 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156444941 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158772413 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208770018 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186567748 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189100796 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193686443 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138646257 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180954797 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155104947 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198870697 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136907221 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.167006073 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157813925 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202944832 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175421424 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15401343 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152343182 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179141712 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151109604 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193305414 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130132194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213610831 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122279467 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184282324 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131876881 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117147669 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181409074 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201145345 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127030417 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201005035 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153868323 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153732297 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122658468 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138847853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179914443 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132519925 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.151678646 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176492605 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152097431 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158586821 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20066501 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124680744 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149911699 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16925771 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12409354 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164241596 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136010353 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123378347 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.191623785 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175918582 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.153721302 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171095962 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186538411 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157634758 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180859307 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135907483 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688442398 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.121206817 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205424789 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141638448 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210977792 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142580812 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186606029 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152042231 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171850067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157884316 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171441959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233488915 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187103839 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150370413 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155017325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134833872 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162231837 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127772728 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146262684 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180464722 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134889092 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157738485 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151367739 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16458083 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140230833 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13309208 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205676999 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142212353 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20599896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206504463 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130754718 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185121614 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166365947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15390067 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157174679 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196709741 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133577282 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170721961 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127705626 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13063999 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20597706 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.11776745 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181439918 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156109449 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1817771 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15285539 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.156282822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157241007 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133961166 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184273232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12039528 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175109122 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154200161 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156922072 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12153467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152284763 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181645773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149423309 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150023138 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166173769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206574375 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118736549 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127138422 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301262154 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181511633 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181114026 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172752042 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130143389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136871104 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178366218 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148297843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185131803 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.123564198 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151553592 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1239537 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.169041936 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17450227 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152827987 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201630303 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153202672 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216506195 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128393474 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.315704222 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13332736 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181936068 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124276907 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.151276464 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135922922 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128361073 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165244703 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210141128 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175089311 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.17722948 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141287479 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128372723 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.149143314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126054102 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186741841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146124255 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181803403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138741971 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111596217 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167187654 seconds)
  done (took 81.640191461 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170530704 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14947459 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165929367 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219719593 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195735481 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28842645 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228231107 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253941313 seconds)
  done (took 2.777987748 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123057697 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156438248 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138810664 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141307505 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115667312 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.444272284 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155980326 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117448836 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162286681 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156464001 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139536586 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.609156636 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112322459 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143488127 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127342342 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11612059 seconds)
  done (took 4.061992496 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.422670115 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.585576766 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.216780784 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.275891811 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.230464861 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.177212398 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.796926469 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187954727 seconds)
  done (took 13.006165558 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150055662 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.131591175 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.313515175 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.762932098 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149001823 seconds)
  done (took 2.625505819 seconds)
done (took 127.286239029 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.1245557 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.11869358 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117980255 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149626715 seconds)
  done (took 1.611155054 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.187671555 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095210174 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096997055 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121956893 seconds)
  done (took 1.616302152 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.437626951 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094542173 seconds)
  done (took 1.674045555 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153897244 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141970004 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162229555 seconds)
  done (took 1.587232321 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144822321 seconds)
  done (took 1.261132198 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131279746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118580056 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240195726 seconds)
  done (took 1.610488091 seconds)
done (took 10.481219838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124239838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413733051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430435143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132003338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708509625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42468718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02896704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172488455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172305805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135714121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12967598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686621939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045500291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.357622597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000001498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.384510719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691344348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109313078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142911357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110214913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.0082987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135913219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110189843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108652453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714890932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420268009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10729214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.397131739 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108648016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111617135 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42468772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108600478 seconds)
  done (took 17.261914222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122580715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169974051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143759235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110126343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110480578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136976349 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119073646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120509027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202861924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107689558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15743062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108181713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113392199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135429304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133746427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107655617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109971521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140383034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116734756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110257561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158134085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108054829 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108843074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13940527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107804153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130416384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137873328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119994915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107540804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141553687 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113032612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108610394 seconds)
  done (took 5.187152913 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161640466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180046305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145851945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144734913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183619627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110921997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220112603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146316569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20052848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109982043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129642678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135389865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149773818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108429934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162137658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108792149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111552834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138674332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116987764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110474715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159133368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10786115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11064565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138829187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109969785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132432564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137422062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121430655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108080429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141156027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114634656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108430321 seconds)
  done (took 5.498514741 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128779848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124406612 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131829005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162197654 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119198073 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123963702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15402674 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119353483 seconds)
  done (took 2.195988592 seconds)
done (took 31.261611746 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137753653 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126498865 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125519006 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150116242 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.19081552 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142886427 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124008601 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.111521663 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149290925 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128283643 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108912314 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112599272 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156706344 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116736246 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.221794199 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12204184 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226011182 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194178656 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143115529 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.121035225 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11394439 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227473256 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118098604 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113140308 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.231246119 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112388008 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213626025 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.115213576 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.145805394 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111637647 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.220987538 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.117131353 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112560071 seconds)
  done (took 5.976046481 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212347118 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.114614302 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147958883 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117730504 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115796058 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146551628 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211366219 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145968647 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118297136 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117556383 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115754586 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221661497 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.120824844 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139082939 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117684129 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115750903 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.241510745 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.115363136 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107677118 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.125496002 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111029625 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116389388 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.252297528 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110284742 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117511078 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147311878 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118102384 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.119177351 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144189186 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119329881 seconds)
  done (took 5.364032333 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129904895 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130390413 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134071729 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214601374 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146263049 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159527856 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139235711 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132177557 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169972878 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110930876 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126122126 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177873964 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128265562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120149964 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14571312 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129981331 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133336178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140882319 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118929664 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128527139 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160798069 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129051917 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137928032 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149155806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110527487 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117267184 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148722898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127133945 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119195688 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124957845 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144564634 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114844188 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112593451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176192527 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111672516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153820499 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137257133 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122844151 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125140036 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171325051 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114540444 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11318259 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167138289 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166433727 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140832813 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126189006 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122409257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124513065 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.139658503 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129809497 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154450511 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142536869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13253274 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112022017 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138900178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120411299 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111584262 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143216035 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127703852 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11349906 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165514372 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11999129 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121508354 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141012942 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122800783 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110536155 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.10915349 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144752432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138417352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118646632 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177579462 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110669477 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122839096 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152164157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122750246 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123203914 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.138561012 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123202576 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12168258 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116462117 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153771317 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114932139 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114579971 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157889425 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132356435 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12479672 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153070276 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125386053 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114466386 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141809569 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129461973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112143075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144760375 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125325641 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112210721 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114447494 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154772129 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123228543 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.1096872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16653347 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116342856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110587109 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165709346 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118250331 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116687641 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.150317064 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155255746 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11035156 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152765656 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126085136 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111595085 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.148261436 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117234508 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110841355 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.12878446 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157319523 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118353039 seconds)
  done (took 16.74164515 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.329744894 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311281388 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.178018585 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309252025 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155920422 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208155442 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304436889 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.306817544 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11126366 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179288277 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16381807 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27629938 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145098261 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139669981 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.308819557 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.360943846 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172279868 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148115584 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179001043 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125221111 seconds)
  done (took 5.566034112 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139266038 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146842165 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166362397 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142045264 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118569981 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157425602 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112108085 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130414903 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.149905563 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122727119 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114431272 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158102251 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12137193 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.124853188 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157466489 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151721052 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120710772 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146512746 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135299658 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116558634 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136294542 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13901224 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120565436 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164680975 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.12871807 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122956415 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139949307 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118077271 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.115881782 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.117356847 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147094089 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131015961 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146872521 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110421183 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124935713 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127323026 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.145091925 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115709103 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116617721 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144363295 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128413857 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122681635 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121602228 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132943486 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129832144 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115526056 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122712696 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.15537405 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110794389 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127697733 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155760844 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123414051 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119193821 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.1592983 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.116782076 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12961433 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152378139 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124439224 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116975317 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.1384082 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111647481 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117098081 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118014639 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153732274 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125259468 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133726878 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158765799 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112014749 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116450015 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146257061 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118260915 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125850924 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163195273 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.117927829 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.115467523 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15442357 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118552666 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098985372 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121171568 seconds)
  done (took 11.541717726 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144944235 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118394348 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131203784 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178022468 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123082628 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120753618 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.148282147 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133344387 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12241982 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.156601981 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123563809 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12556116 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165731893 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122560493 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11720847 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159018315 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123254334 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151198941 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162026544 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140957678 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122242179 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.1491774 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125465829 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124228437 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173750766 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124736187 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139378125 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.152990617 seconds)
  done (took 5.045267599 seconds)
done (took 51.366358021 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.271100847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.470050584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.251997884 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.254469288 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.260234559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.25688518 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.250215464 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.251839631 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.766853832 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.23042987 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.256414509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.25321751 seconds)
done (took 28.928032796 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.329378403 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.776214077 seconds)
    (2/2) benchmarking "String"...
    done (took 1.538522201 seconds)
  done (took 4.463044438 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.263163286 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.248588332 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472207684 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.247564662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.248321757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.245633037 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.252892391 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248525256 seconds)
  done (took 16.110701607 seconds)
done (took 26.314678573 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.325628988 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.462914952 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.520425825 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.249994085 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.252300597 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.269933157 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.247899758 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.278710302 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.256069829 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.246822321 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.669089898 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.508064954 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.26169816 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.62499206 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.24740906 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.248811175 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.262227931 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.497579066 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.249958262 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.281679669 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.228032839 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.230224344 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.265185994 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.253052186 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.253705036 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.256210548 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.31450809 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.250278236 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.449618151 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.260037662 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.284568125 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.246228749 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.309422605 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.250613922 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.244782673 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.275955458 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.441876118 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.256578004 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.235701244 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260950468 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.453384915 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.252838714 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.245473172 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.261400171 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.249403085 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.305595748 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.233131387 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.364163989 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.27132676 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.247254708 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.255441568 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.620119016 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.261071391 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.252641972 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.248226198 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.483039767 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.272195036 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.311065362 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.274382364 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.253636852 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248563236 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.250093352 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.311881452 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.264387931 seconds)
  done (took 146.869696434 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.253984178 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250415576 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.25021311 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.252930025 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.250644651 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.249961925 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.252870992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.250009063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.251071259 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.278469051 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.254332506 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25041457 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.254163736 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195032835 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.261158174 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.270904014 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.254575606 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.252514645 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.273116503 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.255873635 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.27661372 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.250910105 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.252011429 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.253033371 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.25345708 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.330172557 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.257495943 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.252286827 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.259594337 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.254758824 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.296029067 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.303536063 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.879986171 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.117028717 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.260412272 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.273648961 seconds)
  done (took 81.985684241 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.254483974 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.256068232 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254970831 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.290709534 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.257717456 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847296226 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849187421 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.97006841 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.767260427 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.675050957 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574615315 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.254227044 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350807263 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.268275141 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.25617463 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270678936 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.283366675 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255790381 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255036391 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850404614 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.27008443 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.338250523 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.433920966 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.268935263 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289053079 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.656900001 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.253090224 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29037559 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.593638405 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.305096575 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.253127401 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.651761504 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.572545121 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375215212 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253991132 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289451424 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.256222412 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.543408652 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.254912964 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.257518625 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.260170304 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96198044 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.257125932 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.849938544 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25744082 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.253191373 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.253969925 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257459794 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.445705387 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.988162477 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.254674524 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.254376777 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.257513417 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.253865098 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253091835 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.289912099 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.255733795 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.525658032 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.35069889 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.255764243 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.257821567 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288446929 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255216179 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.483932843 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256386819 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.660029197 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.312222837 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.386564399 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841530842 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.256018504 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357197252 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375263184 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.253698293 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.252886265 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255550395 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.255419664 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.367361037 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.251661872 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.674994024 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252822223 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.4336114 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.265880103 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253899299 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.651518101 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.351893857 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.251672549 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631703848 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.25274538 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.254488498 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.052313958 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.355193013 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.251247463 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.256410228 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.255051744 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255695658 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.671866925 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.830339531 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.517537372 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.255332314 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.797386338 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.251848249 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.678832531 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803252274 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.938558492 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.254202337 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36826959 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.427486825 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.267444843 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.255768662 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.609914727 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.257047203 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.31569236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.25400799 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.655384608 seconds)
  done (took 372.825744961 seconds)
done (took 602.831998731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.142993944 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.083468796 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.235156259 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.092415269 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.071675252 seconds)
  done (took 11.77720582 seconds)
done (took 12.93092146 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444500876 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.44466209 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313823273 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448533287 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283203665 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462206787 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431806128 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.2784694 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.371315537 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.335910265 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.364298946 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.304450802 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285292204 seconds)
  done (took 18.919750532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524947502 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.257780111 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317063066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503371485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295538173 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541190907 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.559137675 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.25821415 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408050475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277933205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27517795 seconds)
  done (took 18.369889247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527863112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260112273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.316742087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546355146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295314235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535664154 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.566832823 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.260858625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401176884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274626608 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273083445 seconds)
  done (took 18.411095666 seconds)
done (took 56.854653145 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.217321507 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.572101821 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.286725546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.357653937 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.273538867 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.288790679 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.348911189 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.276830042 seconds)
  done (took 28.773789937 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268839061 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.271172285 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.268791744 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.266426476 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268905817 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.269671939 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.273296487 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.270184486 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.269101876 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.268753191 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.271222919 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.270358244 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.269451492 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.270981525 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.271465977 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.270271027 seconds)
  done (took 21.471606223 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.272793079 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.270139699 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.26801895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.271637905 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.269387835 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.271390966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.271213639 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.271654666 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.269604614 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.269443233 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.271958095 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.268294369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.26953911 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.268968829 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.269849111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.271089092 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.271193229 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.272440931 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.273759869 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.269941218 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.271806016 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.270442743 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.272068663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.26986467 seconds)
  done (took 31.651727943 seconds)
done (took 83.052383257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.273261588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.259265566 seconds)
  done (took 5.689089026 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.332388808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.333924511 seconds)
  done (took 3.823476736 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.274510997 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.272479801 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.27616071 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.274053479 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.273776539 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.274443508 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.273299602 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.272861372 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.271741648 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.273702135 seconds)
  done (took 13.894071185 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.272693977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.273160696 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.274534132 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.277877908 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.275488961 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.271297651 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.272727391 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.27060944 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.272273275 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.270701963 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.27774626 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271756788 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.272900996 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.274795114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.273402831 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.273608886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.271887165 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.271560105 seconds)
  done (took 24.077453321 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.287093151 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.290282723 seconds)
  done (took 3.73582154 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.415888536 seconds)
    (2/7) benchmarking "second"...
    done (took 1.312218745 seconds)
    (3/7) benchmarking "month"...
    done (took 1.389311922 seconds)
    (4/7) benchmarking "year"...
    done (took 1.37969598 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.318366251 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.293251182 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.315306764 seconds)
  done (took 10.580554943 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.27761207 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.494325119 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.630390581 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.846534422 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.275875567 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.278048054 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.078910797 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.277675703 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.280153073 seconds)
  done (took 14.597962143 seconds)
done (took 77.554913695 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.26412441 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.321698757 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.288886479 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.285509673 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.568981401 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.272389133 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2631639 seconds)
done (took 16.425766029 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.248724563 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.259295901 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.245609414 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.273478075 seconds)
  done (took 10.184335464 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.266904816 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544801006 seconds)
  done (took 4.969264828 seconds)
done (took 16.316563352 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.276534639 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278689721 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.275768942 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27476116 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.273578521 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.272581668 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.273028519 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.275369418 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.277888375 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.279139457 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.276378156 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.275319892 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.27500691 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.275580083 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277767731 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276374569 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274567388 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278030191 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.275082005 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275999816 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274277457 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275030557 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.276895483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.276361006 seconds)
  done (took 31.778881138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.280340475 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.276336522 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.277883841 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.277379951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276081211 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.277773828 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.276468118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.276425058 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282180392 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.277831687 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277880503 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.277092097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.276750531 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.276280066 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279606608 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.279477615 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.279149396 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27654084 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277690916 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.277468116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.278754921 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277632801 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.278345562 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281279189 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.276913941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278379248 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.277991324 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.275061783 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277507628 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274195551 seconds)
  done (took 39.493654265 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.286128918 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.28360146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.278814982 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.280840913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.277488044 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.279193074 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.280295182 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.281835207 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.282393138 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.280429103 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.279815844 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.280197181 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.277978223 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.279936023 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.280356802 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.279875684 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.283924729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.279048258 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.276921924 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.280135164 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.279329693 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.279087489 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.281636467 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279639495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.281540902 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.279505639 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.278827226 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.278832674 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.281046112 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.281269741 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.279813249 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.28360195 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.280088567 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.279085044 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.280078599 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.282121181 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.284285372 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.285319698 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.280013506 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.284618041 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.280120373 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.280994915 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.280277253 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279775738 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.281604455 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.280802594 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.280843174 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.28135044 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.280565164 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.279560146 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.278935365 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.280887748 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.27998095 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.283027143 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2803001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.282888568 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.283486807 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.283389378 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.282127426 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.281752048 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.282600383 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.28130486 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.283584348 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.281372514 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.283615973 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.283850686 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.279321357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.282160981 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.28300877 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.283061886 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.282671384 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.282408193 seconds)
  done (took 93.401428866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.280977908 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27778886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281040591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.278998267 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279596064 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279200348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280249276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280225536 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280468989 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282495001 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28273616 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280040124 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278120612 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278801074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279744034 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277108506 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281904361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279691087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.279657985 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283930573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282638634 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279775435 seconds)
  done (took 29.324698061 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280682162 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28483476 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.279874098 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280595006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282025079 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27942292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280378246 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281561081 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280718946 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279622567 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277348165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280129195 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278910555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279661246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280035885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280496995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281627114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282133577 seconds)
  done (took 24.211483928 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.281437886 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.282288008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.280497633 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.27947122 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.280558999 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28116332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280418721 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283614882 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.281015903 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.281262688 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.282602373 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281861976 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.28324557 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281459245 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283116987 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282271806 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.284118211 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281350234 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284000334 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281687115 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281931288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284086787 seconds)
  done (took 29.366530386 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283684986 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282327825 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283248722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283090004 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283593589 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282649116 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.286010032 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.284207539 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.284177617 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.284446842 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282059725 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282023527 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.282892716 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282879246 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.282779632 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282419171 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284605939 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284904366 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282466596 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283858807 seconds)
  done (took 26.832179568 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287894936 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284782134 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283454355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283228603 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285337377 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283243204 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284742966 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283841138 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284091398 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284219122 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283123713 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285278238 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283030819 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28703142 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282863252 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28553465 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282513041 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284918821 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283289855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284980731 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281975134 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284861063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284844401 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284203836 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284276598 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284178846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283240494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284540223 seconds)
  done (took 37.125234771 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28765485 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282321176 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.285084676 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.283160721 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.282631288 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.280952854 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.284173151 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.283647519 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28578583 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281288097 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.282683848 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.286845345 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284710686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.284987105 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28566225 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.285506473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286402145 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.28567484 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281575753 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282382995 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.287324187 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286101568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.286224303 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287121627 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279795483 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.283590085 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28190946 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28466646 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284668623 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282112919 seconds)
  done (took 39.689981735 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309644174 seconds)
    (2/2) benchmarking "in"...
    done (took 1.30523424 seconds)
  done (took 3.77915049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.283244256 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283887086 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.288441461 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282592791 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283399827 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.287192458 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285977582 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283652279 seconds)
  done (took 11.444735923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.281084492 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.28585397 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.285498564 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.286150338 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.28994995 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.278053415 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285484045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.292113486 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.27994056 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.281854701 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.284320989 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.285326406 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.287159616 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282199054 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.283334833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286206917 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.289079322 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.287601397 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.285540977 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.290802028 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286732552 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281103009 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284681914 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.285940122 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.284447867 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.289485794 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.286556688 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.294679077 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280481916 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.287627555 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.284064144 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.287460297 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.286555636 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.288014112 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.287555559 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.289204484 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289164924 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286710008 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.289843132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290375382 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288504469 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.284938835 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.283651986 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.286636915 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28399268 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.287442647 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.286818213 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.286641369 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.283457106 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.282905234 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.293338573 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281118706 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.284924134 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281346686 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.284659431 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291629753 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292177922 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.283809112 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.292138417 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.293056666 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.297012851 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291202141 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285226829 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.289877701 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291119913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.296351646 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292852044 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289679314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.286978343 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.288065584 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.288482319 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293402043 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294005768 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.291166532 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290459846 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.286017792 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282675596 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29017737 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289023241 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.288940451 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.291948064 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288911214 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29514199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.296483532 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.284209569 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.28897506 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.289173459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.287631762 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.282769155 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292852623 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294222499 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.29040193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.283215306 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.284540642 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.283791738 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.290235076 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.283745927 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28735223 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.290510689 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.290758199 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28809707 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284415189 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.290207002 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288476044 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288025608 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.294374622 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.28947727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283182577 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.287981094 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.289612892 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287879505 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.284258452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.286023926 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.288271818 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287390066 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.28957525 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.287712278 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.285116156 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.290148203 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.29265141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293568198 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.301411186 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.292481771 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.287670595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.287636819 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.295548578 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290408867 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.287224988 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.29451226 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.287590483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.288871116 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283653368 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.292251619 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.28487225 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292084381 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282944621 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.291262773 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.292312408 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.289564257 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.287093034 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.289424256 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.286088274 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.287881716 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.288444597 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.293106305 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.289683857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.296321859 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.288239213 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.287718869 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.289686771 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.290455571 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295222974 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.288507073 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.293324046 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.287134097 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29401542 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.286647198 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.292181155 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293358225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.293547889 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291676185 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.285722002 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286488194 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.291342138 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.288059918 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.287402711 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.291969209 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.292727808 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.294409822 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.286295999 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.293331142 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.285421419 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.286866927 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.294538664 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.291386349 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.294195173 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.291354423 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293121885 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291498149 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290568815 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.288579531 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.29084281 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.294765389 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.294211112 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.295179828 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293882616 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.293003394 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.287296185 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.287550383 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29357743 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.291861002 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.298258452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299453 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298769766 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.288999314 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.296078401 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.286647489 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.293827501 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.290118179 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.292769696 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.294487603 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290162088 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286622863 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291207013 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.287128191 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.293978725 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.287301295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.294430286 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.292768393 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.292053285 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293806786 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.285594149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29088857 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.294761315 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294202082 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292781768 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.286045201 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.292709411 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.286968023 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.287063098 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.293499132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.294036309 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.295334321 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.293684384 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289000429 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291717904 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.28976901 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.28926824 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.295502456 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293457382 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28948416 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297626606 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291850476 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.29127812 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29542827 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.29501561 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.289797701 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.295132466 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.298528314 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.292436096 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.289619075 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.29923762 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.296223663 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.29261141 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.295759966 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282432533 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295986239 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.295649178 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.29497516 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.290374024 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29717913 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289502092 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.293902943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.292177304 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.28957815 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.289801569 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292907647 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.299235836 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.294787177 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289894031 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.296863299 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.29637906 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.295245333 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291714009 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.301385607 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.295610289 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.292619029 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.29344779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.289661234 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.297426045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.288430114 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.296022203 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.291091788 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302524029 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.305650658 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298163026 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.293498182 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.296553596 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296069949 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291252067 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.291860642 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291737944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293635073 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.293109522 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.291803893 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.295106737 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291922966 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.296948733 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293600253 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.293037077 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.294679628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.296808993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291062723 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.293556609 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.293978248 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.293577044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.288252984 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.294437835 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.290311307 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293155999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.290686157 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.290226528 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297782511 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296170578 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.292865394 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.291161466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.292821226 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291735799 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.294429536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.297188143 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.293044556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.301697325 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.290760181 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.295336261 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.293895943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298370557 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.300207542 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.294412869 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.300713025 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.295990568 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.290099875 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.292203052 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.295925336 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301942878 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298817719 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.291018637 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.298055398 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.296379625 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.29623401 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.296101424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.29742478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295977706 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295394687 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.300215764 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297629234 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.29280382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293438176 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.300360198 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.296392705 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.296812309 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.291700885 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295678925 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.299158276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.294808716 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.293973736 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.296423064 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.296613575 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.296976582 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.295964311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.297785247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.298552545 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302309455 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297210008 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302762172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.297722359 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.301615733 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30140307 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300895636 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301531817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.29523453 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.301019766 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.297876898 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.29379917 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295838426 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.29584596 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.298267123 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.295484694 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.302579917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.30101063 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.297379617 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.29467874 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.303068916 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294652782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301591616 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313687392 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.293313021 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302544174 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299761992 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.297509376 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.301022616 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.300725744 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.293571558 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.297291579 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300864616 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302966324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.297218127 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.297959303 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294064011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298870326 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.298324959 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.299630423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301736768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.299587476 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.295186765 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.300944362 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297882604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.299794978 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.29529064 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298963298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.294643548 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.305396694 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.303671678 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.293865071 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304178075 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.302842771 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.295836107 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.299624616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.301989235 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298282325 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301251827 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.298371762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302222158 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.300977433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.299245033 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.30016994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.305642295 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.298750896 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.295177213 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302737214 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.300011628 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300512447 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.296493991 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.301456631 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.295427396 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.294740199 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.302550959 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.295941992 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30290733 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300332018 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302849339 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296537819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.302186654 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.302062036 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300375561 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.294923158 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.296805325 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.305711436 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303771747 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.303934728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301686469 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.304976558 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.295812702 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297095283 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301049745 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.297154058 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.299364478 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.304343827 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.299277143 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.298671815 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.301012073 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303017513 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.307615138 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.304506689 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.300674175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.309209394 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304706976 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306709354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.300466757 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.304381944 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302515214 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.304563344 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.306888085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.302221655 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309462734 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30548724 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307167694 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302561037 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.301198632 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.30200987 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30625297 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.306429378 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.300855698 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.305350894 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.300799511 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308108617 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308214649 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.305685298 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.301034444 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.301453068 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.302250648 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.304739152 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.304715334 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301485175 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.301460024 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.301848258 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307618471 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.306964265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.304306174 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.306076438 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.298944352 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308500338 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.304783341 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.303587486 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.301304095 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.302208983 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.309959911 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306205357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303663315 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.305916275 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.311101001 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.304541285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301067837 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.301398587 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.305134502 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.309611659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.305762389 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305546077 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.303442108 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.306494094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306451673 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.307914486 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.303835293 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315203895 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.313962143 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304653823 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.301703344 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305877779 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.310519004 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.307296845 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.306507081 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.30298979 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.303665182 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.314047291 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.307179151 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310404274 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307679967 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.304873485 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.310659521 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.301560785 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.308269628 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.30730414 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310652686 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.310210899 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.306933309 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.312970836 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310737334 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311759101 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323985377 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.306569559 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.307297293 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.308989562 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303826075 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.309258186 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.30542599 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.309224204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.310836944 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309759152 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.30888719 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.301691258 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307486335 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.306241257 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.311543854 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.307757544 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.303739996 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.305455061 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.306146896 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.310023071 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.311493247 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.307807076 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.308989895 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.306776298 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.305084363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316129177 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313771217 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.311945276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.310074775 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.308482126 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.311638517 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.308838898 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311613507 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.31662 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.311075029 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.309460635 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.307449547 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310020032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.308446508 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.305106683 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.306584543 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30603338 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.309900686 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.315554254 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3197747 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.312423727 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.306594036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.312445856 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.311330961 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308489783 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311143306 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311354967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.307468601 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.307795921 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31397043 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.310875612 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.311475506 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.307547049 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.314841778 seconds)
  done (took 773.905007865 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30881267 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308863135 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308364894 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.309479273 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310709919 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309219991 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308183274 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309539093 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309861724 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.309644093 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.311476839 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310492076 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31238337 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310133349 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312665857 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.311001374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307968391 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310768717 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.309495841 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311809445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312030714 seconds)
  done (took 28.69884561 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.312081702 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.309216058 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311964497 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311324855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312890319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.313180268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.311381973 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311715532 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.3138519 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313130247 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.311076022 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311164037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.310255039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.314032614 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309550888 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312421491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311948827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310484876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.31338916 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310807821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312456254 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312311212 seconds)
  done (took 30.0444707 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.314339954 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.313312892 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.309893949 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.313860299 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.311907582 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.312893467 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.312956387 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.31537999 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.315306269 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.310123211 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.309404713 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.309700935 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.313367882 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.319257187 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.311306346 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.313167319 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.315564442 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.315022501 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.315499617 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.314746615 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.316587083 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.315140216 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.313772695 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.309613973 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.318823593 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.318894222 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.31387993 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.315651308 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.30975434 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.318100342 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.314161551 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.310591909 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.312761106 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.310672352 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.311024479 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.316900437 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.315017221 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.314890139 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.31509325 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.318445839 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.327294039 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.31662729 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.319168902 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.318553271 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.317919539 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.315522112 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.320068695 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.315672928 seconds)
  done (took 64.297162839 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.318015264 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.319269587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.316628506 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.317580617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.317836128 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.3179782 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.319478494 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.319802028 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.317701493 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.315771621 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.318300959 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.31573014 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313998199 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.315776317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.31626466 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315924142 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.315957391 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315888921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.315492894 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.316264708 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.31591879 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.316828697 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.319837679 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.317614987 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317775746 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.318615827 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.318138786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.320689409 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.316463214 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.316261122 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.316474023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321084061 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.31721606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.318401626 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.317061382 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.319386826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.320100196 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.318984894 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.318541895 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.318389325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.320328482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.31747266 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.318494416 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.319959191 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.31937555 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.319742932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.320044403 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.320930938 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.320136065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.320973941 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.320840536 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.319545214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.319425553 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.317386717 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.322897081 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.321761345 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.321416227 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.319351055 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.32019358 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.318308946 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.320042513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.320531043 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.322356531 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.318694278 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.320680805 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.319737075 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.318773864 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.320707768 seconds)
  done (took 90.856040692 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323641115 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.321012266 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324006575 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319671849 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322091948 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.321799897 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.322930454 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.321573423 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.322476842 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321829345 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319439014 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.322738335 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.322398712 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.322942252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.322277494 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320418072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.321519911 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321519778 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.323294211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322937814 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.321565441 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.324406248 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.321575968 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.321913511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322019784 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.323638642 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.323024992 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.322728157 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322014871 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.32057306 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.322492639 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.318968315 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319667096 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320246341 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.320919663 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.319493899 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319696552 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310863359 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.311982464 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.311480668 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309889678 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311324503 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309448571 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.314752776 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302994041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304374213 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302542027 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.30509541 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304517903 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306858567 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.306528345 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304564223 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295375757 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297790431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299575171 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.297483533 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299253078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297161926 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29994338 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298059763 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293794822 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291170539 seconds)
  done (took 82.690006755 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295972331 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293082448 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292916797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293318665 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294081762 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29138109 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292337637 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290820538 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293633099 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290698204 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292566841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293682768 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290111234 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291759958 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289294721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290945959 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290639132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290605065 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290875044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291959838 seconds)
  done (took 27.01612596 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28585147 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287220779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286285001 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286976962 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288458084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28836725 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290053453 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288446852 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285699243 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286874367 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288185826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286964792 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284995901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284937643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286468379 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284019123 seconds)
  done (took 21.757810948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.283371828 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285491616 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287218872 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288665207 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286347073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28463386 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282790727 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281927839 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28319877 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282031804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283627632 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285028434 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287461101 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279140023 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278711366 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.278282205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276976352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278049716 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279462348 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.2777205 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279642335 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274848013 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276201624 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277696309 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.275106021 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275784537 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.276898424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276063383 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274960705 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.2756359 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.273146466 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271700468 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274460913 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27405444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275319985 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.27575035 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.278044999 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.27422474 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.274789564 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274502091 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276354063 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.274019805 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.274416641 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.275274677 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274750416 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.27694492 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.27456548 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272739062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273995765 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.275991826 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.276109046 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.275701958 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.27791002 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271321383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27074778 seconds)
  done (took 71.447229769 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272044408 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27184717 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271052242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273006632 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273275817 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.268169617 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270761068 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270437199 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268354027 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270864654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268691019 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274165968 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266845558 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268044184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264096362 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26763402 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266547887 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267262929 seconds)
  done (took 24.009042957 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269495162 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263278757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.265412159 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.263228969 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.262429625 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267278291 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264780356 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267385073 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267240539 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.264507747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263627585 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26554383 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265285554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.265781279 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263483753 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262978759 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.266000041 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264917989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265446142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265764299 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266097804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266194523 seconds)
  done (took 28.989425778 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.263081734 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.26074104 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.261201999 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.278420623 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.272915053 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.259778539 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.259478293 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.262779622 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.2830998 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.301944426 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.296719843 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.272673651 seconds)
  done (took 16.425410059 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267653195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267625112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266373003 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267313662 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26942179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268798213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265862791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26956351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268348437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266972854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267215203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267526106 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269301039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265902378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26925357 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267078642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266894788 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26914275 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267183336 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267596904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268849761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268018751 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267331993 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267527685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266827353 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267120674 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270725593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266913815 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267238502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267055166 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271204352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267827204 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266392939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266549618 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269662814 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270841214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26928686 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270785593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271738331 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268888725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271110934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270152089 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271030628 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268944349 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271928655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268658339 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270459342 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270825684 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269818917 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272984026 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270078391 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27088876 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270741629 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27010374 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271777019 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273895508 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26943443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271171305 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269736891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270929593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269459142 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270185176 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270985746 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271390034 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271112999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270598148 seconds)
  done (took 84.921455138 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271466012 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26982013 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27208241 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270469712 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270352823 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269183092 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272121499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271330711 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269342195 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270742545 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272271014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272417362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271275692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2702897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270903769 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270174454 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271407752 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272276697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270577234 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274401975 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272038371 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271387502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271392947 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27198928 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272157216 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272515205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270641714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27193679 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271869495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275374023 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273831604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272960057 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273832701 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273431272 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273539568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275689494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275096826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271413649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273592221 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273744633 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274211533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274151669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275568123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274678961 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27465631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274011068 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273538856 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275726993 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273942754 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275319088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27450612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27422551 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274377773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27560478 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275358404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277320701 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268864377 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270657822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267387813 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269893931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270102922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270526606 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271213347 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27001346 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265530206 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262119353 seconds)
  done (took 85.122132973 seconds)
done (took 1797.78543834 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.417827176 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.375838577 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.257661355 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.269060707 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.25288225 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.273351302 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.266699183 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.252821313 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.257449226 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.258235388 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.253275392 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.444144287 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.250839651 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.256664226 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.253904454 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.351060215 seconds)
  done (took 25.837618584 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.278627313 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.264004866 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.367765429 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.263993274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.288671651 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.442198117 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.325717508 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.262793719 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.418502165 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.280778152 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.264397678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.286068636 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.264642126 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.267222758 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283048774 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.44086815 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.496554347 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.265228101 seconds)
  done (took 27.91001575 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.676513873 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.274308685 seconds)
  done (took 5.10850078 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.285134156 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.266343122 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.266683826 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.265360013 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.259709883 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.257520385 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264618236 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.25837167 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267222593 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.383910323 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.27134397 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.275939339 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.263842818 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.265333795 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.269933701 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.30740215 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.419078602 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.268919733 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.269376676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.270522357 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.265406733 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.360975329 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304305069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.271965246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.381931321 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.262737946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286674277 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.271891786 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.404901456 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.275406908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.266820241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267119517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.266811069 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.257769378 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.7259166 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.262811667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.273571022 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290773693 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.26964812 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413116911 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.265594876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.271185703 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.258567 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.721976568 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.384243571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.379961651 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.264481454 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.267731425 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.266415499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.329548942 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.268272132 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268964659 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.32411991 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.075732264 seconds)
  done (took 81.547123498 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319952336 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.259063806 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440457939 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.284070072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259708542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261986173 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.260764645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.526345959 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.305168485 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.273757577 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.537281041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813827153 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.269909766 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.336832177 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.247840855 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362507373 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261141713 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.262004411 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.264553288 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.266312203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804013087 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260629499 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.261588532 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.406573044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.300152627 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756428159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260432336 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.277212124 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.280243538 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.260705391 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769218883 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.268827791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.357283099 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.2621288 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525866283 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619934222 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582351991 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.261655647 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.291568295 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.263789108 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.291754974 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740223878 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600077721 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261016772 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.27844238 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754123188 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.266869925 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.262470861 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.272055547 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514696839 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.260551249 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264603586 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.261964235 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.262490037 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.262335525 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.303003934 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.274581623 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76541819 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265862151 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.263743809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29929224 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.265802295 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.271224866 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.266706839 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.281321338 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606884996 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45523373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.275028089 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607850776 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.771178853 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.267742213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834259114 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.268470733 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.273680519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.267125248 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264440932 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.280638353 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755282878 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.302378745 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264313317 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588110891 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.266559999 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.544869657 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.280793637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.26655656 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834190676 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.267834355 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.281836114 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.265021506 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.265108804 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.264969011 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267413776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.531585138 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.29621549 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.267151217 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.265520524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.295867552 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276582681 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.267713897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.276162366 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838340795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.274945941 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.266201544 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26826993 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26665476 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.266228447 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.265906036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.266411392 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537682028 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.265821552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.284590552 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.268826409 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266579065 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.275780089 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356127781 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.274131706 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.555032739 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.272645916 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.267719851 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.270898395 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266749027 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.296399044 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268587769 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.268703629 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.131524963 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52821724 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286180795 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.26923835 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.270664025 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268154052 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268068813 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.268431174 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.328769435 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.27087482 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048014303 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28067812 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.278535746 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.269134155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.279948551 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269370726 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.27625832 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271076261 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56330928 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.535219137 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.444925622 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.272587841 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.27392562 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02023302 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.296058193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448032454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291113413 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.271181969 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521632332 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497405303 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.272155156 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.271034586 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.27064313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535838658 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.270514278 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583432731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803966534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.271743911 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27222254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049164127 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.965593715 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.273187989 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.271146711 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.546983141 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.285702263 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.269432791 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.269415716 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.270587177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.269754115 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.271496796 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.276113053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.271393419 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.270128485 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.574337958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461934818 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289219912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.282430555 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761460715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309529267 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.273690271 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.281667912 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.275637102 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.270993832 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367903032 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.275102165 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.295259178 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.275408307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.273535117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.777117399 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.275751013 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.274724778 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463968156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962294814 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.272920781 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275221848 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.273888868 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.204285424 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790526513 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.341054099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.561099563 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.282694673 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.311068409 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271520244 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364995761 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787615839 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.275572094 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.271759728 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923066799 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.27517958 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.789559972 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.273274405 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273124305 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.851013637 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.275545819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.275315864 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274879198 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28496303 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57757601 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.274462989 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.281443842 seconds)
  done (took 483.284905185 seconds)
done (took 624.834286575 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.27330106 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.273278851 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.263350371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.276033549 seconds)
  done (took 10.260467918 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.310677088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.276823046 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.285523601 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.277421107 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.289076721 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276816341 seconds)
  done (took 8.886734877 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.271396776 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.278674043 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.274813495 seconds)
  done (took 7.995649075 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.482193605 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.295070221 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61772559 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280590207 seconds)
  done (took 8.849058133 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.284936779 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.284118441 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.286579333 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.291827229 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313114852 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316283287 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.290306639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.290646151 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.314697067 seconds)
  done (took 12.844319621 seconds)
done (took 50.012144161 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.984186497 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.261720593 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.402772822 seconds)
    (4/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.394671151 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.426100155 seconds)
    (6/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.259524805 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.344970973 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.275204429 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.532415559 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.310915232 seconds)
    (11/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.275935794 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.438673697 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.342415508 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.385499266 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.266975932 seconds)
    (16/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.418026434 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.944778044 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.30578348 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.346362136 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.272740262 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.120232425 seconds)
    (22/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.270783642 seconds)
    (23/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.400404842 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.486356664 seconds)
    (25/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.267532827 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.26755875 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.363206095 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.31049581 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.336830411 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337796723 seconds)
    (31/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.258486667 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.381245395 seconds)
    (33/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.289135742 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.4685987 seconds)
    (35/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.350109389 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.378533298 seconds)
    (37/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.307110488 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.361328784 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.431373259 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.386822398 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.422384181 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.266270882 seconds)
    (43/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.337702331 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.267133327 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.415167162 seconds)
    (46/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.311869391 seconds)
    (47/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.261420165 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.289619678 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.273739587 seconds)
    (50/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.345770895 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.392893563 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.462874425 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.239075201 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.558055405 seconds)
    (55/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.309812966 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.377484057 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.457382989 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.406841795 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.381385857 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.380416673 seconds)
    (61/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319570347 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.982937338 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261103738 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.495320534 seconds)
    (65/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.348401334 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.400987232 seconds)
    (67/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.26526433 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.415570847 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.379889601 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.13131475 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.389295218 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.461508755 seconds)
    (73/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.370126771 seconds)
    (74/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.506348391 seconds)
    (75/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.493299339 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.987734453 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.387090503 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.122427467 seconds)
    (79/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.269217636 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.339270353 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.262012098 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.389612789 seconds)
    (83/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.281348841 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.445647381 seconds)
    (85/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.313621675 seconds)
    (86/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.294902368 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.360753717 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.452762217 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.435817708 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.420544334 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.271019843 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.261679124 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.40282733 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.312219275 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.435614219 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.283539321 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.395479011 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.136834794 seconds)
    (99/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.441737817 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354490589 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.31435998 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.382515633 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.043894014 seconds)
    (104/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.268419055 seconds)
    (105/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.164056782 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.03330537 seconds)
    (107/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.476487371 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.268603815 seconds)
    (109/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.287907709 seconds)
    (110/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.327767979 seconds)
    (111/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100395244 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.55366175 seconds)
    (113/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.375283701 seconds)
    (114/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.290081462 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.31606244 seconds)
    (116/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.264160874 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.389789949 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.432028356 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.532934961 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.29102261 seconds)
    (121/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.31849625 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.376317768 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.407537642 seconds)
    (124/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.338917726 seconds)
    (125/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.322244267 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.46400216 seconds)
    (127/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.456112783 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.390057678 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.366832553 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.048779698 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.273456087 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.09214917 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270125665 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.369529251 seconds)
    (135/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345665918 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.408610373 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.433583314 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.372655972 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.394141572 seconds)
    (140/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.403462284 seconds)
    (141/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.408117249 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344786157 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.941387923 seconds)
    (144/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.176193545 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.463555128 seconds)
    (146/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.311589927 seconds)
    (147/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.284068324 seconds)
    (148/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.52983452 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091843042 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.286762954 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.266665293 seconds)
    (152/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.268978373 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.228044581 seconds)
    (154/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.270805685 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.344142903 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.309545581 seconds)
    (157/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.392508935 seconds)
    (158/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.327805585 seconds)
    (159/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.281582966 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.317573815 seconds)
    (161/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.370502913 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.095146689 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.405139084 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.350791039 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.610906894 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.410579482 seconds)
    (167/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.268566571 seconds)
    (168/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.092905725 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.426583188 seconds)
    (170/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.313139031 seconds)
    (171/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.27201438 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.03122879 seconds)
    (173/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.269883913 seconds)
    (174/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.370554446 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.438378819 seconds)
    (176/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.512375441 seconds)
    (177/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.290497817 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.544742096 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.306614314 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.482099705 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.56688938 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.286142234 seconds)
    (183/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.321981256 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.275895105 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.50283548 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.27688085 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.445192119 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107062768 seconds)
    (189/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274565038 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.000892569 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.354172735 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.269677695 seconds)
  done (took 329.940118558 seconds)
done (took 331.115558584 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310515819 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.373648146 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.292746892 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.293944737 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293077781 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297854067 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.316737059 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.293505516 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.303093337 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304039316 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.286297294 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.30258809 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.305152693 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.302673224 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.329597739 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.29461637 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.293746331 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.301435567 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306046021 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.307926722 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298074277 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295043416 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314930553 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.295190199 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304115388 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304122211 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.3007705 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.291804872 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.301419503 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.30645527 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.295181608 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.301900597 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.309388063 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.30461223 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297213892 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30154969 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295540109 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.375477276 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313076302 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.302209568 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.298639304 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.308290405 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.301467806 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.300312813 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.305264816 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.31489135 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302714858 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.3104074 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294862501 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.29309888 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312111606 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.307227591 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.301081653 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.291267293 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.288925476 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.313335726 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.306033003 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313170147 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.301705057 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296460921 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.330029157 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314563953 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.305473682 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304293963 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.300111644 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.308603155 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.303843491 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.308631498 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.300588521 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298324997 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29872618 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.302579778 seconds)
done (took 103.142204043 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424608964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.29783317 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443017542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.302592358 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.460711448 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.434307021 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.299623431 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.302969539 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.301175488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.121832974 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302272421 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.303869232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.29058235 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.301413017 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432496275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.303836318 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.301063873 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.016249745 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.302451321 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.442125877 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.29445657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.30379369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.305613758 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.126765731 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290983491 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.293607529 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.443480837 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.304743234 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.017108508 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.293515991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.294161893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.017105123 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444769816 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.322233428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.313816206 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.312378072 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463973252 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.30722823 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.427075584 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42610113 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44465095 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.342683234 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.295659558 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.296985147 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.305237991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.305775339 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.304923269 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.33047833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.300408643 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.302958874 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.016131711 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.313519278 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.312535528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.304926892 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.303496273 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.324765776 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.304041903 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.306298776 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447962047 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.306530306 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427980797 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.127363766 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.126505238 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.305372109 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.298535581 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.30625546 seconds)
  done (took 106.339306794 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367736511 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.375275079 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.409376962 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.305746381 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.350440225 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.409104555 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.305105808 seconds)
  done (took 10.712253812 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.307990028 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.306721423 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350677087 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352336622 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.305384472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.459499033 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307617844 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313988034 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.306616154 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.354443629 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.309494068 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309103372 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.315147978 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.300025184 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351121869 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.314365432 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.418032925 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.303686403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.307342659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.456586279 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306756422 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.316162066 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.353553227 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.312932147 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.309237411 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.309900804 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.0744081 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308806054 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306310482 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.309962262 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305871082 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.357113392 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.308644528 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.301249915 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307526839 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419368797 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.309146745 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308041648 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.312211461 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.304268834 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.311854142 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.310132783 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.310686243 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.30752222 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.312937398 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.326443824 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.311297752 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.309665713 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.30903956 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312109946 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.35504798 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.309919969 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.308445094 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.307645387 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.35947065 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318374906 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308052172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.309885831 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313036944 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309445574 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458411457 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352580699 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.312655249 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351475497 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311017903 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.311500395 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.313364942 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.310707347 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39619485 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.31166273 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352329642 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.31258941 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.485773749 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.329714726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312572418 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.309550245 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30816109 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311659092 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.304267564 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.312363121 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.30981637 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.307492179 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.313439493 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312302705 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310422609 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.47006037 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416256555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.311658984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.318547202 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.314160969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.312583461 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.360550533 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.314199535 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.311186678 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357972742 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42205654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.360803011 seconds)
  done (took 134.997437535 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.320895033 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.319653644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.310113621 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.333316632 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.308978529 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.306546473 seconds)
  done (took 9.09721137 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.309085489 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.314099586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.312028915 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.311881341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.313318232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.316201904 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.318393335 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.309673577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.317043764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3148553 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31697031 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.319736193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.323899481 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.311741617 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.318309951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.315917745 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.318923709 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.313031379 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.313920463 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315035567 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.30846912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.314321433 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314828954 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.309761682 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.320883879 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316717548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331913941 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.317102942 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3150863 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.316837573 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.315878547 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.32190023 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.311925961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.312511076 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.323670323 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.311227938 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317251083 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.32167728 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.314328474 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.319161455 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.323568729 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315540369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.318249402 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.320061251 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.311593343 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.315118987 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.324993714 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331868037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.319962705 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.321526928 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.324563523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.316908419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.320204527 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.320293287 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.313137356 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314412111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.32425806 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.325097855 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.316760225 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.312609026 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.318043139 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.320393025 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314646571 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.321634156 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315406958 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.322033988 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.31243128 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318542776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316714729 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.315185622 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.323786142 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.317576613 seconds)
  done (took 97.046624148 seconds)
done (took 359.378386202 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.704071052 seconds)
  done (took 3.903748464 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.350035143 seconds)
  done (took 3.551278003 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.270048144 seconds)
  done (took 22.474534292 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.319332003 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.381187077 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.321287638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.3115831 seconds)
  done (took 10.534366171 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.560586422 seconds)
  done (took 3.760616905 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.309870805 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.312606569 seconds)
  done (took 5.82630848 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.485886591 seconds)
  done (took 3.686329219 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.52754026 seconds)
  done (took 3.732313586 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.321441269 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.324144764 seconds)
  done (took 5.85388628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.291817108 seconds)
  done (took 3.494197663 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.047941818 seconds)
  done (took 20.248773531 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.320946665 seconds)
  done (took 3.522769164 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.362590378 seconds)
  done (took 3.563909846 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.787071659 seconds)
  done (took 5.988815563 seconds)
done (took 101.342979059 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.305824681 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.306269465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.309092598 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.307813053 seconds)
  done (took 10.430467114 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.374323538 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.373158206 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.380363814 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.373851026 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.374112129 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.373694818 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.348363373 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.347400462 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.37590462 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.372563445 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.379453173 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.374860983 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.374108668 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.347114562 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.374748364 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.380773971 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.373303676 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.380121947 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.349355774 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.374893848 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.324575977 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.375044692 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.374170814 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.325725551 seconds)
  done (took 34.003121419 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.831426572 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.386695885 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470020636 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.368579273 seconds)
  done (took 7.260780682 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.402222354 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405656651 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.424212209 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.458140526 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.486087789 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.422200699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.346884174 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.345800967 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.331358868 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404828908 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.455698996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.389525566 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.495391236 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.32332044 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.542078208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.324192447 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.325256306 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404019904 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.456754213 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474962742 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.326092335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403063137 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.409675025 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.391066329 seconds)
  done (took 34.952577199 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.330578971 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.343123851 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.321869975 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.337219969 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.322593089 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.323821689 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.325724504 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.32876383 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.323024158 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.322595467 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.325840354 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.337197066 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.324600208 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.325221819 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.330490326 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.324719663 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.325432622 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.329991199 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.33151114 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.324702952 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.323854988 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.32935269 seconds)
  done (took 30.418609882 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.311276344 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.312695438 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.661651059 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.56793677 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.313855031 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.312303573 seconds)
  done (took 13.683656735 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.386416992 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.521273566 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.320066126 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657907958 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747372814 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.318779976 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.319973544 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554567102 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.844859819 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.841852822 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.379159747 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.385904415 seconds)
  done (took 19.486041429 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.314282535 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.318499662 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.31807135 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.334223824 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.370314043 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.324355617 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.324797833 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.312670977 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.377176551 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.374390305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.328576344 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.373315454 seconds)
  done (took 21.278047697 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409485244 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321328558 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32223059 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333142939 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320687601 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162407261 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341953928 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004016989 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325226817 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59577032 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323510441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415505726 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57588336 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329202523 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326345075 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.312900527 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550351567 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790438222 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325578253 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328861616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362180222 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326960815 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327875734 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5283085 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170906674 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322981887 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.5848179 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324045475 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592146682 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571784623 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572345844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330834838 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597665129 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956669472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420917448 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52136522 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328777732 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329832711 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.30569993 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.327891172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331994023 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329143301 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564866844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330899336 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325146551 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323700769 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021028001 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330563793 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.323303463 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323755317 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568350647 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42871602 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.329027901 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32444903 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369064596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325892429 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.331633922 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451305145 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889497623 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327415937 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334630172 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.333855697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339136673 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347574751 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915475875 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.332874286 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.331786859 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331608651 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32834701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338888459 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353739712 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328298229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.350876671 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328795947 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009534638 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34454338 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333959753 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863113977 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334957154 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.332162682 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558272926 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328959163 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32710177 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.327499787 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328511128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001095996 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335632907 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.31609064 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371537892 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014151286 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527826921 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350602589 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360552741 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551825546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.307597696 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331241315 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.33119226 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336070713 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350307429 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021021036 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327504806 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.332530425 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584953518 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.540566994 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343003443 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.325079494 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789180378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332683062 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.356881923 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337514265 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.533264812 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.895000368 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58345409 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336237702 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366219299 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330960588 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057478101 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334787242 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.339076676 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337295236 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601081568 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.100686162 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331602954 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39838861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336326742 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331887627 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34440113 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336465048 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332509345 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.526636406 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350486427 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578346113 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.337630891 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332102145 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.331206661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361167464 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.337486775 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552095327 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332281052 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613673916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331297331 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330709883 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332329358 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.553056642 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.335372612 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.341873859 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591231965 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341936163 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342926256 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581378292 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367666666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441816021 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362032006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.337429081 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592547396 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.337132794 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.336470196 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332748621 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355514743 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335031039 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.341180329 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327106512 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914213847 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316739962 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33517493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333979 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.347555495 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401491703 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339348095 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534081106 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.344154266 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333361643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34493882 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.332817509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56291591 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576629545 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.341452859 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431909692 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.792450164 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89714396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352624941 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.333342638 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.332921931 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.333779681 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334870627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333917684 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334989358 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532828047 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587579292 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339949361 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904709322 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342384261 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347121584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.34753102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579365178 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.348322769 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336779695 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.335308466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34121712 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341770227 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586151102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478958962 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.349826653 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335129793 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.852639576 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343104748 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337125407 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336752498 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36852572 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348066114 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169059166 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597550446 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337924241 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586024516 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349396122 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.360332991 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334146958 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338910781 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343353487 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.360604902 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36603505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.537635723 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345199597 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342912017 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896196641 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043936247 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858931032 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354433032 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.337087452 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342519206 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035972832 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337549543 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337544674 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56740423 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040972788 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338051547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80025024 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.348947639 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082354152 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588795276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575269402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346936649 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.338576183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609615737 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554052938 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371076853 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338003117 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34340785 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.317261997 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874351599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34914271 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421903644 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035286707 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336440398 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361280251 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.389152231 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338845976 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725314171 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342920934 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338816224 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34199471 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343918944 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175163108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342638927 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339304371 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941708431 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346598174 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.80623484 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339883375 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539569943 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59173538 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.589482706 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.344341607 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.338295507 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.613610544 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58576549 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346904401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343138392 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864470631 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.214802039 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.345481091 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342331135 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068898534 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351617556 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619222029 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.359349942 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.343408857 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357084789 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340512477 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341362117 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.34072226 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347473138 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316145509 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813091567 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.344167835 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347760025 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359760301 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345593903 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593881886 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.355411055 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907904077 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575314995 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333454008 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377335793 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.345548902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341639875 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.324896211 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340799268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342881591 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403441923 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563096709 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342596289 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.31885947 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365424173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551873219 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34212784 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342460881 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559847686 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.348329085 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.346071125 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067578222 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378555719 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343070284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349528381 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342207934 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387818788 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410478066 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546171196 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.596397208 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597794376 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734510101 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342990924 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366091009 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.358150755 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439462309 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342232457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.34947835 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.13808351 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920087673 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053301366 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920005375 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594430641 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350951737 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351788356 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34488937 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480798822 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343194214 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618116935 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344457872 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.340223215 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37043292 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343775381 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372939015 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560539022 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619208218 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344452541 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356217604 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350526182 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.345902568 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597876553 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.561597126 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817240395 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883022738 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347273003 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359088196 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04899257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619705102 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346460745 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347408733 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347243405 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.349247701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369750606 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.351710459 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34668275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484239384 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59156521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992320038 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592319032 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.388205282 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.862789015 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345493155 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604832275 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112381532 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547717589 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926554201 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03517279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616089811 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41489127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548990139 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.350682457 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484285136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.351519262 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352367464 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34762669 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347213041 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.344467897 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595069249 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932892225 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612357429 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.350993965 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.353382249 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382131851 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.549671324 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575454314 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029519688 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569023456 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601151948 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359739723 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349162059 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927140859 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599628639 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353644615 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353140686 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561886049 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353428222 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375465031 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.03822846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.34802561 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885497149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.239018735 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370970767 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349308748 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037837345 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935003887 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.350283827 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825226717 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352058003 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36519478 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629212784 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.355834824 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349886043 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650179813 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.354537346 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353499347 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55900368 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.926898773 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107695363 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.354623876 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374484791 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.358659373 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352378855 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370530459 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351079493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36105806 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.762540816 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351826002 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351405569 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363595535 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.359738314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356645012 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.356178078 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351469682 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357670546 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.345669806 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.331392081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370019686 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478821912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890880035 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35279814 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.027388201 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.67678846 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606412203 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353362008 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.335615095 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.356706486 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354338311 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353346263 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35418815 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350540469 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886428297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.362436624 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.607784168 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364588755 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.563259745 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563550292 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354211545 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563225725 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357982346 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379191048 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.332182356 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352844747 seconds)
  done (took 961.073180138 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4011851 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.36842193 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.372616249 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.374194483 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364367872 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42923755 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.402497139 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462833858 seconds)
  done (took 20.409196436 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.349201619 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.355262504 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.350874563 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.357508053 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.361974582 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.818517273 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.359556839 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.35754673 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.370778383 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.360390431 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.360881121 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.022804279 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.377283329 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.352408668 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.339569559 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.359494542 seconds)
  done (took 32.095293122 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.439723844 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.535714541 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.27857042 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.397742711 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.383735729 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.354156643 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.583996297 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.368205531 seconds)
  done (took 26.578954318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.36288487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.363135271 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.364232143 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363717756 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.363744309 seconds)
  done (took 8.054577205 seconds)
done (took 1220.929582498 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.363210436 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.360278385 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360717723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361655992 seconds)
  done (took 6.682395668 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.336819105 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.334592085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.337075615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.353752798 seconds)
  done (took 9.599456276 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.038083554 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.978761846 seconds)
  done (took 5.254531043 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.846931697 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.84801617 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.845341402 seconds)
  done (took 6.77846385 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.63355323 seconds)
  done (took 2.87198363 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.276015932 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.356665867 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.021808417 seconds)
  done (took 7.89378017 seconds)
done (took 40.318266336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.351113696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.597731919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.509618249 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.350834942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514843025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.508599529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.08773598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.351931634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.352146834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366234303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.352680639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.535472203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.071907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.598330739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.072994057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.599098461 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.51686474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358163985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.358489865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356177033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.09337662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360111968 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.366173826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361363781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.513288778 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.497060908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.36121308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.597985209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352611163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.380821547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.498783099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367171328 seconds)
  done (took 81.800002595 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.353413987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.354289578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361255212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.360844961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.353866285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.37756855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.352593678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.353965213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355171062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354555143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363118912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352794695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.373313801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.353283245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.373456001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.355125816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.369550734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358487178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.355299462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.353609272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.356152109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.35412786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.355904329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.3552771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.35553717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.387549487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35637199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.356324379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.355488998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.355461933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.353717855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.384502209 seconds)
  done (took 76.753169061 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355618943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.360469329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.356127272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.368557608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.356223945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.361417298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358052986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.355842675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361248101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.361459422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.355794763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372405872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.359742866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.356283565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.374716037 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.356320566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.369542746 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364062379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.359423774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356745941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.373672028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.357228445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.362623257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.355499821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367613519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.358837373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357476786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.356566834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.35716904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.373450957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.364580954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358605362 seconds)
  done (took 76.806941498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.595368855 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.372050941 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.37368614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367142991 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.375743381 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.373589518 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.366016795 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.604876684 seconds)
  done (took 14.671587533 seconds)
done (took 251.273102323 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.363690129 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.855992018 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392897156 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.36236535 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.384976794 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.388615303 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.580061515 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.387511489 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.582723214 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.380567302 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.381638855 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.364320365 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.153193246 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.511997877 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.221315109 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.335101405 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.231423542 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.360804176 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.920184676 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.644582971 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389108606 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.361490478 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.209354247 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.239746659 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.361501781 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.44538128 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.460498747 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.586539832 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.521362748 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44161859 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.870776397 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.370267435 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.365372879 seconds)
  done (took 63.670879007 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.365227947 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.369727182 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.376270526 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.374770599 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.370957418 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.374249791 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.367006368 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.374625094 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.375269115 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.375039209 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.37589585 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.372816729 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.373399988 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.373321011 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.372285139 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.356572185 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.366531841 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.371033003 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.367731904 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.357643251 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.372114257 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.376791477 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.375349123 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.373323328 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.376787811 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.375554418 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.372966263 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.374128548 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.373262058 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.372913512 seconds)
  done (took 42.400446654 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.377572841 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.93205756 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.089074978 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.374267338 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.370695294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.374457959 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.653184224 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382670705 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.372479897 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.374002194 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.840488434 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.381369244 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40207464 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.094791905 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37359179 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.378719444 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.378092441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.371367994 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.940446218 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38009017 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.650288802 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.378541261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.65283164 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381835696 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.374183249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.371864368 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.376725277 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.191725456 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.391607494 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.845620554 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.134955552 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.653732706 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.107767641 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140077241 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138365543 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.386875408 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.379335888 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.849635096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.375077746 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.372868061 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.651151309 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.372763709 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.09671765 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.044308133 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.390837726 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.380522634 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.194349672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.873103704 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.612152491 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377959037 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.132848502 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.376892774 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.383506865 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.375135063 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610541715 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.375208197 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.374196489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.206257547 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.393967174 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.652956156 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.382460581 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.374155454 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.940991213 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.374955644 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.936436073 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.375463793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.381398038 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.376089886 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.099286512 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377152739 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05026439 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390242772 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.381256115 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.849294329 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.937983025 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.256522022 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37651273 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944527209 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.136098698 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.670716822 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.383180017 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.202184826 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.672461907 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.378547568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.384906949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.384168661 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382930996 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.447542555 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.651183404 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.997087624 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052093113 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.21329645 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.673258664 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385538427 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.375893613 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219412673 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.399328626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.385418167 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.098394778 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.057469447 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.392167604 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.383096615 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.043945714 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.39557782 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.657560786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.381565457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.139794425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.377498444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.448866753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.385958652 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.383883202 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.381490492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.65821267 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.37990646 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.386124885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.043914639 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.874032509 seconds)
  done (took 192.192966018 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.374866295 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.372315606 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.371780493 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.371939374 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.371467012 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.377550781 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.370161491 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.372168557 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.377239931 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.371832078 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.373018064 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.380881793 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.377542206 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.37279268 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.373135554 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.372971445 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.372672731 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.390206783 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.373587351 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.372600618 seconds)
  done (took 44.74790933 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.38727328 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.924536845 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.90054041 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.388059803 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.382912287 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.379709054 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.433624687 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.39014958 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384519572 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.674175781 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.552600949 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.39380899 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.384739475 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.384787455 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.896906185 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371856945 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.676599357 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940023213 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.393710979 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.935638193 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.371663271 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.388300774 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.378710186 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.928672709 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.678830861 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.660084411 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.441717666 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.93142083 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.386499232 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.384022617 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.927956411 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.390109973 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.381423393 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.919671256 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.390503058 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.401835948 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.386290956 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436926588 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.441269111 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.674932383 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.933336786 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.66653272 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.399921107 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.547523377 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.390609316 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.368226966 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935899308 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.390706739 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.369031569 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.386468435 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.394614968 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908354389 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387048075 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.908386622 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.389679775 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.390778246 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.930738448 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.910887521 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.9089844 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553576979 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.387671212 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.662309326 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.389585224 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.938760632 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390216795 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389536128 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39194722 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.551556813 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.936605272 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.664348236 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.681146282 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.677608487 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.391889948 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445627422 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.389551714 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.677866597 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.444393455 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.770572821 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.682995508 seconds)
  done (took 125.27091152 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.643734721 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.496702328 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.743753336 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.961697467 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.877525287 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.517501028 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.493839343 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.624014249 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.383723978 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.49206991 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012060099 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.481281311 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.111791915 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.474759752 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.485307739 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.509883183 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.769380206 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.379569864 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.027284694 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.987056572 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.383691122 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.482560677 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.912589267 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.571638297 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.384813681 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.9335771 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.329478477 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.892092305 seconds)
  done (took 52.623958512 seconds)
done (took 522.151903885 seconds)
SAVING RESULT...
DONE!
