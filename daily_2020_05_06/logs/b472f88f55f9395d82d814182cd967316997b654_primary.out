cset: moving following pidspec: 24855
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.310322295 seconds)
loading group "string"... done (took 0.698820815 seconds)
loading group "linalg"... done (took 8.126692208 seconds)
loading group "parallel"... done (took 0.169080695 seconds)
loading group "find"... done (took 1.242081586 seconds)
loading group "tuple"... done (took 1.989889138 seconds)
loading group "dates"... done (took 1.378404702 seconds)
loading group "micro"... done (took 0.202017422 seconds)
loading group "io"... done (took 0.936736572 seconds)
loading group "scalar"... done (took 40.07106757 seconds)
loading group "sparse"... done (took 12.248881256 seconds)
loading group "broadcast"... done (took 0.970188364 seconds)
loading group "union"... done (took 13.761293923 seconds)
loading group "simd"... done (took 4.932661588 seconds)
loading group "random"... done (took 9.142946903 seconds)
loading group "problem"... done (took 1.786154986 seconds)
loading group "array"... done (took 21.360814531 seconds)
loading group "misc"... done (took 1.65071805 seconds)
loading group "sort"... done (took 3.489118003 seconds)
loading group "collection"... done (took 18.582789834 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540806438 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124360974 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13686648 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120608033 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150605443 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117802017 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124952201 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084599888 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.840238947 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147817624 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114487857 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418618744 seconds)
done (took 5.32115998 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175949627 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088531519 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079973526 seconds)
  done (took 1.241188449 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066036894 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128266921 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067495818 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068080403 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067836332 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06724701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067382561 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067135912 seconds)
  done (took 1.605202246 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073584985 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069348847 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066313964 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068620637 seconds)
  done (took 1.351856349 seconds)
done (took 5.523674322 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801807809 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209572082 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189280548 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411087352 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135871773 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178916518 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650692223 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320551948 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19289744 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094204069 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113150656 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392882007 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124782819 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642964656 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077875566 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096600311 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141991634 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428690458 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071924988 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085293621 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093387178 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131960198 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080530065 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077468011 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150524233 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070766783 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14533662 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086754904 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069727668 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256500356 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175609294 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662909213 seconds)
  done (took 10.472602359 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102629885 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100543058 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069697597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12514224 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098159776 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070278988 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075813972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068021167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089921144 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128447589 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091648055 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108051581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06671669 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069938738 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083348441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210638095 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082719664 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086357169 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068681806 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07881045 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107615347 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078231858 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08067459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079914323 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129407544 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18162936 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09682553 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098212271 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067233775 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084099228 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11611433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127756227 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066703264 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066987708 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125601414 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094888236 seconds)
  done (took 4.587225037 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011009632 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152695745 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091116693 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135477536 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065837459 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110522973 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066545295 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08333305 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234679798 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.436039771 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091203986 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.62506392 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.121877789 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117628766 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104691193 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071434386 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06974591 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068027386 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.280518581 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09810899 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111810652 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083606388 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070636304 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069299986 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065361012 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074296543 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064143673 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069033379 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087731528 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076557994 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334466703 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128341284 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069230609 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961174738 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167661778 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068620735 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106166557 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16157931 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09463313 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140807517 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068428881 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064732793 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.294307567 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066738298 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073399439 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094414259 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068209948 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086281422 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110856554 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121130365 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066374986 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066888798 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169458021 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065449716 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08243298 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.199586101 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156537383 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067748248 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298582856 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092932543 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072301051 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065839588 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.218473079 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12376949 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069436875 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068675724 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070104854 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071796042 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390067933 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066704443 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.210458417 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06972785 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078298047 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071251337 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072149631 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079933738 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079780446 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091946763 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067518653 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074386928 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067392932 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066950135 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068046639 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064601296 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099828354 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39079846 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06824712 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073057044 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065449833 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093024484 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09905012 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068365204 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066327957 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10290898 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071672694 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067010527 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068539556 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064357032 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099393321 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071419717 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112722525 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070442773 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.227366115 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101662642 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070275879 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10245288 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079990649 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072217506 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.468982607 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066308825 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072886623 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067257926 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069807567 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068016981 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078765287 seconds)
  done (took 22.273520024 seconds)
done (took 39.417991358 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242990886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084016763 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083746245 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084302638 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083727636 seconds)
  done (took 1.743991171 seconds)
done (took 2.888832329 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126305333 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100092684 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065628023 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098350806 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064948266 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101233321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103524984 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084425334 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100003221 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065666724 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097674877 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065319197 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065438772 seconds)
  done (took 2.299010795 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083064103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083111035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069993631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085610253 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063430491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081823494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081208171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088317617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081541558 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072447355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063333787 seconds)
  done (took 1.98951736 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081843307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082991723 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069709028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08163387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063224573 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081408044 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081235303 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085221739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081573553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074010701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063415175 seconds)
  done (took 1.976603785 seconds)
done (took 7.399810102 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076800555 seconds)
  done (took 1.198145058 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531320436 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.608066013 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078698703 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1004275 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192575787 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108732064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23453324 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083692496 seconds)
  done (took 8.23623892 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096136922 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081266522 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070947704 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071021678 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070291742 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069469001 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070591156 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070243322 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07013106 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069824837 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071187607 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069440653 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069872039 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06939856 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070979939 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070764527 seconds)
  done (took 2.36713631 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097985296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096576429 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074304921 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076215629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072929584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072743197 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074547811 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074450965 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071822657 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07311305 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07613482 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074082842 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073834729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064893036 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075049634 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076903966 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071396185 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074312168 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07542202 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076224233 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075535831 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064757892 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073472146 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074920129 seconds)
  done (took 3.040937727 seconds)
done (took 15.974520746 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107016506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068329341 seconds)
  done (took 1.301604373 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079615367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080155154 seconds)
  done (took 1.294182548 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07868085 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063788737 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084958479 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073893717 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063743478 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063594841 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.0826657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063835412 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063711667 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063569238 seconds)
  done (took 1.837962792 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065757245 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073657882 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070215245 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079064765 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070740479 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064587776 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068730202 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065804507 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073934903 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064610368 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068923887 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083438261 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069353058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085295889 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068856807 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068371609 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070165924 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067645798 seconds)
  done (took 2.421908143 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063206268 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064320872 seconds)
  done (took 1.269907739 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066888769 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064433675 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067045893 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066066401 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064049447 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062915108 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063956292 seconds)
  done (took 1.595275771 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399279662 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122172112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328025256 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070427581 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079512717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256758023 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065019337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069897155 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069753467 seconds)
  done (took 2.642666029 seconds)
done (took 13.507134702 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081511438 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086659076 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097560184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417678605 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092998679 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068073115 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113713422 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17945871 seconds)
done (took 2.294568931 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208194372 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.810453367 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481611907 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206044485 seconds)
  done (took 2.646511424 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343199279 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081401787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077495543 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067243958 seconds)
  done (took 1.72786798 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068228054 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07121686 seconds)
  done (took 1.292949568 seconds)
done (took 7.032782725 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06603391 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065404582 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090437516 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065172138 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064978861 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065258497 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065212793 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064890187 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064766485 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065478406 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065395028 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064940788 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064836376 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065606027 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065181169 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065035524 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065363942 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.179327646 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06540126 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065517833 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065157554 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065042183 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065057516 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064671484 seconds)
  done (took 2.888611608 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082729251 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067362972 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068721786 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068766714 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069474524 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068798908 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069018614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067728949 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06889874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066618534 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069500124 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069143499 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066700876 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06911666 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066760849 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069098956 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068729938 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066943714 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066741649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06912776 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068446815 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067050542 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069317517 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068693528 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06906159 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069501474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066703755 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067038514 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06855924 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069434426 seconds)
  done (took 3.22768738 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068916631 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061618478 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062467919 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070679312 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062007758 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061946286 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061283268 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061464741 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062302644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061736381 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062396728 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061241731 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06142335 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061908768 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062416728 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065544197 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079099149 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061354389 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06124326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061864757 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065618006 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061397668 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061405025 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063771031 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061183553 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060900396 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061725614 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061228628 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061678951 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061190747 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065088633 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065590625 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061777038 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069953431 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065695759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061761833 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06645721 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061140654 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061802968 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061170364 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061675397 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061352187 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061746227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070983931 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06173279 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062728203 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061570151 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062742458 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062047312 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063333504 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061012581 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061476117 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063250205 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063086667 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066375114 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060963233 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062603102 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061406522 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061939704 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061415357 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060902217 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061062397 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064513409 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062389739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078482748 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070466876 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060781396 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062887435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061882386 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06428806 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062406014 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076398307 seconds)
  done (took 5.739595067 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086975815 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0881466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066286296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066572686 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061837011 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061927138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070275137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062051931 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066551754 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080860609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062323331 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066674706 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066526808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065942823 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062080494 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066909501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070230924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062231736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062009168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066566947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062423141 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070191292 seconds)
  done (took 2.674384182 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148068024 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068333702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105719372 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072849767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070569658 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072627485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068492312 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068507861 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06840598 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068533448 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068459973 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06821798 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070665228 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068966171 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068921088 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068433186 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068008975 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068444366 seconds)
  done (took 2.530988129 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079698139 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06791811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086928337 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068092361 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067479785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066936043 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071457527 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072378144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067375504 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067638192 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072204099 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066918447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067373486 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067529081 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067441122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067381665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067523901 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067415942 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072113639 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071193387 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07145825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080919572 seconds)
  done (took 2.723711303 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079512658 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066548713 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082390718 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069896549 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061940103 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062132533 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067887044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066973732 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067984042 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066022034 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067077457 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061871465 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069159846 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066720551 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069170077 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066812458 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066235054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06720052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06606783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061976725 seconds)
  done (took 2.520330487 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084613651 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065287609 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065426492 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071724841 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064843943 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064868121 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071625725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065049946 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064949256 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086467109 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064889055 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065392188 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071623367 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068846406 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065119277 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071564331 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073900466 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071602085 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065279047 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065028943 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085487422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064941444 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071225171 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065637069 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064940193 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064994297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065083819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069042526 seconds)
  done (took 3.108992639 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066082936 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065291824 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06505904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064733293 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065147438 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064931357 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065084316 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065092148 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065048189 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065056673 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065119204 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064739241 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064726627 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064565046 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064978646 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064745196 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06503051 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065315791 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065106133 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065118967 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064874752 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064455939 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064503137 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064758365 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065099742 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064578647 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064798611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065466099 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064456442 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064640225 seconds)
  done (took 3.121668297 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076561194 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074582172 seconds)
  done (took 1.321747416 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06476689 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078638687 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061224993 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072914807 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070931169 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065520676 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071237969 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070489895 seconds)
  done (took 1.723707305 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086586103 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075445433 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064614766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076200238 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074505937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084677549 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125978598 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063905955 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074486673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064944083 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082489129 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066668415 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074470041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069033839 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074287831 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078117471 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06176036 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068584627 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065666201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063038617 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064826387 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077564768 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073693532 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062137227 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0695258 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091298329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08017114 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063490922 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07090937 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0764772 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073899287 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06107395 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063745939 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06398421 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061853218 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074728347 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08221967 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071250028 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076267048 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064752072 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07164839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062031076 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072562673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074379004 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079466506 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06426973 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064058807 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061664971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064555857 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069744297 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061814594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068628388 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061111877 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075586566 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071788325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078660919 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062576433 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069935498 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069998589 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070455272 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074879655 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069524396 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073633747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063259826 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079288305 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073054402 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075041114 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061714503 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061129931 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061979308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07854532 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091809806 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07366192 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064157059 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064504557 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061835587 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071373215 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064000602 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072503412 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075264675 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063196603 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068433452 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075432132 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068086976 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069966808 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069744506 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061724199 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066507502 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064415777 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082902912 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062488198 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062282049 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064899778 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078622589 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073231393 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062797242 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064389987 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075166042 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060649113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063496635 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064098477 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069200239 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076457651 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068030727 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067955219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076725507 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072520947 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069277905 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070205178 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061159669 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064745639 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065950531 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075294674 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061115956 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070648584 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067969002 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063985076 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075897543 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062294789 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063953142 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076225701 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074931638 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06201292 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0602959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069672198 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062773979 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0658997 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076459725 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061473939 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061263371 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060953181 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070352908 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062135128 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070102253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065751927 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069675666 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060336362 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06084626 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.066120656 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.201495351 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069380658 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071604312 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075267073 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071265968 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063589262 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076591789 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07112387 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066868516 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0742423 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06813383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063074719 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066647884 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071444932 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062980855 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072634427 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06680716 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070679318 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064908292 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063453739 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069955636 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064772978 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066783753 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069279175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063062417 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07872084 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070719258 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062505292 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062268265 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071844829 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065644179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064113525 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066305129 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070605048 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064920766 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063087918 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063851417 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070917104 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072237158 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067106138 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06527617 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073953822 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080872243 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063336201 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071399326 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063648632 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064427291 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064464344 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078122845 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074569639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067800966 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070814812 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061309231 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073267604 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076518057 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066101297 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062015287 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066142995 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067384121 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07558696 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067243114 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064254247 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062731876 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070136121 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066288343 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070380856 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063169093 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066063356 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068494359 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062241236 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069618733 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064449165 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078196799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071221689 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062108225 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066306603 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06258711 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075045229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062015731 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065256619 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066486412 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06433741 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0636256 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070324154 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061261623 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076444509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076515006 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069077702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06627321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063437188 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076221101 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069449743 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071682067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070953242 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073178926 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079057659 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065988398 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070618178 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078352629 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063597248 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061007333 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075822979 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062221874 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062773261 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062940674 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062752503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070873411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070814206 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074012512 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061115832 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070201265 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062347597 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066210481 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062119271 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072526797 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070392517 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067908615 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075631587 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064180937 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063947979 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07121317 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063128393 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0638694 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064305492 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07043025 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06374442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069199451 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065557904 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068832674 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065337427 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060637466 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068374578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062596156 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067963638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070930993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062009006 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067857993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069019913 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062463327 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068808303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065945931 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06518684 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069765352 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068547277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.195103155 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071374852 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063232243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077519098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064638117 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07692814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070057098 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06181649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070413402 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070418566 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068598145 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064784275 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065366304 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070233511 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063592757 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071077015 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077076931 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065467115 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080535418 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075732833 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069911796 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071070168 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070089959 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070478349 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066336499 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068815727 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064688188 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069906071 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064171606 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072584737 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071374611 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069216906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070743003 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065134984 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070461719 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064710619 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06230348 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066538962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067020202 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064305748 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077141592 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065359275 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068013681 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063663636 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06585162 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063282988 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061482948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071011974 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070998425 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06466485 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074298609 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066445766 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069857385 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079198593 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061544652 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062433674 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062697691 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065419504 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076425076 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064173324 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077720967 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068922222 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066664873 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06173861 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064328966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062856199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061757683 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062402737 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072537123 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066469173 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063393289 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064084834 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071296767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064828892 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07679669 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063199621 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068457153 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063893248 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061706523 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066368423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066287946 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070321709 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064382633 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065665506 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061763626 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064130191 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068234147 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06999237 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063529188 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069760713 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075702477 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06333955 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070638937 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066240166 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061991977 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070359156 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063434322 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063561129 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066367166 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071203695 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070699986 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064451514 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077412625 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065780356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070058379 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063716835 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061989787 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063198366 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063332515 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063505188 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066366715 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064434572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076925201 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062471253 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069860052 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068720116 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067456238 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074058052 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064480022 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069886497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068721977 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065215716 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070219325 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076647115 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066937419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071239692 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064099182 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069149852 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073474626 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066230346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07468914 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068647732 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063624862 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069059503 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064541027 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062436932 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062660139 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061865177 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072024141 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062599915 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065600699 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06483703 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060576576 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066564249 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064554065 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075138071 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069069558 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.200830177 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062766048 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062806989 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066386742 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065853076 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069869965 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071333144 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074105759 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070779158 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068191797 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063393715 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078441412 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074524496 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072140276 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065434887 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071851813 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064918191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071421597 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068817762 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06931373 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065155767 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072176094 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070189361 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067288601 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074380216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072108328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064942603 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070422354 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070258365 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068921342 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062512606 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064702538 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070750667 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073631381 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070818707 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065035018 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079528354 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06567009 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06940884 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066375071 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064255349 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072820882 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062312829 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07150211 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065059077 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06499395 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062632 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067204953 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06548531 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070708772 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06671864 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062829398 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07988734 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078251323 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069959425 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063684687 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062895091 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062631232 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062480114 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066842225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064852958 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069850054 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078817686 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066254278 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066154499 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062434719 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063853505 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071060031 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071435031 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061814257 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062115782 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066799936 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070209289 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075950712 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062869765 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063779714 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071361452 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070697091 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062283414 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066635591 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061475377 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072184971 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080463329 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06439917 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069896487 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074128337 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076313882 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063961309 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062470153 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064193191 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070801353 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069400674 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064903206 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064343155 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082867548 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071112443 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066321018 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063048099 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071094055 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066527114 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077329138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064945799 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064384084 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075589102 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070233556 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070566379 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073964142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075330762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070386282 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069966022 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06288751 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069327726 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062791132 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066444677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064501868 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064429885 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068163508 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071377726 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067662204 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07966291 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077514091 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066482377 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061633727 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066614156 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06680858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062489921 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064759618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062260055 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062963074 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062337582 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063381611 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070230907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072795074 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067909778 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064445039 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062931432 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061315259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072814676 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069458388 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068846 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060875972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063020718 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063219223 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070481958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064915475 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064528283 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068852663 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06812121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.200767125 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064158419 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077001759 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063945109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071996906 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067392709 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06473786 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065884303 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088199353 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068616242 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06539152 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071039438 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071333592 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066169004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062287912 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061799906 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073580729 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062455759 seconds)
  done (took 42.454862521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10063277 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06426718 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062677118 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062717624 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071947495 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063371943 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062560118 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063375469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063379134 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06504226 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062537273 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062353335 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069738371 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077691222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072505075 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066930055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062575866 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063435589 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062725591 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063435485 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069903552 seconds)
  done (took 2.680127371 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070679015 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077899328 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074989477 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079624829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071391912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067529005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074987443 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067221181 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075086782 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072628491 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075085752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067159661 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072363809 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072547283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072817684 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067614069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075406967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071489959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067439052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075275029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067385276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074888832 seconds)
  done (took 2.847565667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064970419 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063373592 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069945018 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062555487 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063593331 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062015122 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065966439 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062153822 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065857565 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066073061 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065599736 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065796625 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070017864 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061883039 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067128531 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061993307 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106729451 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06630881 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063245515 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064170894 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062558688 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070877591 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061906199 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062662197 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065711282 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065862819 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064517711 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061650259 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063033207 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065602871 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063623592 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061373572 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069683615 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068763985 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066058202 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065810298 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063048901 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063128652 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062005108 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061977596 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071825314 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062243362 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063684359 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069746684 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061508434 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061886517 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069523214 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063120342 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061799195 seconds)
  done (took 4.474697186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075431483 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110518495 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067859353 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091439833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076642043 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069279616 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067887333 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092132394 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063857684 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064860402 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077840165 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077603764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065980711 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067302366 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069507994 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065654245 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066085535 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064824546 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068961498 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065094185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06872903 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069291354 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076125997 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0774623 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066124819 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064757967 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064846574 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066528373 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076116995 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069145288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067092193 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06809068 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07660118 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070079103 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064858689 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065216366 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078180711 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065722244 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065272117 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063394698 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064701017 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066684009 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0696605 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077539943 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065423664 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069930023 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065188967 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063277378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076636691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065022925 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069434365 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077648131 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066626956 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066007022 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067085963 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076408959 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065296167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064304287 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065676039 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076171976 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063790255 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066203078 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077017118 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065098194 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068705514 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07732552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070242411 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066230531 seconds)
  done (took 6.181783652 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073252489 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094386382 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079603585 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079278855 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073104361 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073747834 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073102691 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07320127 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073320363 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077301527 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073447029 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114681282 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068919503 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074947581 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07325825 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07321318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073187912 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073320971 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073020958 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072747982 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073135377 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079252149 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072998803 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079678917 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07597347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068970471 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072918131 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072995266 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079388439 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07332392 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075869319 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072628153 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072969195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079453435 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076384976 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072773207 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063671896 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072876248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072829019 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072828301 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068764522 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079046625 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073043204 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069279615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072983537 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072988017 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079126688 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076058842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074884125 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076625504 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073280303 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079267695 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072818903 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072978779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078921642 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081631993 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078909174 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079021657 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073320996 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07919026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078969212 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081636915 seconds)
  done (took 5.978974652 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078959873 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070607725 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081527048 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061963648 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062069004 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072151087 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062136271 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064225872 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070310818 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070353598 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072744859 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072235523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074818575 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072443925 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072365718 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074618201 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072033016 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071813549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070202867 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071987343 seconds)
  done (took 2.703842405 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076919824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081126469 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068219562 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072323607 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067364115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071900122 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067201107 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067792884 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068010683 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0678403 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073443413 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073339848 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068055234 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072137613 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073491009 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071788986 seconds)
  done (took 2.416140444 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084958556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071345342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077239101 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063555464 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066938445 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06264337 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063367961 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061610953 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06252718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076571532 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063180709 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074804403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063135001 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062490035 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063116481 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069062854 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062378849 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063328756 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0632834 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076702508 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070206564 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064778865 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06711469 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063478802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068745888 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070515591 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064803174 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067093337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063116961 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064093493 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069043795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070140982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063294739 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063819987 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062672851 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063116998 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063288559 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063663461 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087371204 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063559503 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061608055 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068579077 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063254335 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064234802 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062845511 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063705067 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062623694 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069367047 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063677067 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069154443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063387884 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06587152 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064518912 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071054036 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06595649 seconds)
  done (took 4.940426904 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080162185 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068012086 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06143857 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062345315 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067926755 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067838716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067426067 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067339085 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06810107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061773587 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068538064 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067030687 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068425033 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067748798 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068443968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067714827 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061688002 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067419209 seconds)
  done (took 2.498530032 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073490948 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067345703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071621484 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067232352 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066948854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066374149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062217564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06189679 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062430916 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067029289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067075406 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066457458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062535562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066749413 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067459253 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067095724 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066315576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06256058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066905844 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062167775 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066509749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062400234 seconds)
  done (took 2.730663908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096221532 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083117249 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139927278 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079750319 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085921257 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072290081 seconds)
  done (took 1.839659579 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093151377 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098940632 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067230904 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067602843 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07294902 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070150278 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070366198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070519958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074932972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076036726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070387238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075150604 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074807733 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077016533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072726777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075393268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07010971 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070335106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067053277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080161804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070671267 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074944449 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070498305 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07087697 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07068637 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076925994 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074776199 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075519813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07033856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07529351 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072802333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070747729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075132287 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075360404 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068079615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075367082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070519387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079937474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07301038 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0771066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067270695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072459078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075453817 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074458871 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074966438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070421974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074734405 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070944949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070582639 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081334187 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072815144 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076178822 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072674246 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075314509 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074571375 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081011505 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075151698 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076460303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072438571 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075115693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076235557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072537253 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076494308 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075310697 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072868473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076639488 seconds)
  done (took 6.182357938 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105505449 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067922615 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071871196 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075369386 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076778311 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070505375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070835638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070915133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071354303 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06808247 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105871374 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071215853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077401339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077190871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071274202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070748792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070799745 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077217332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067858265 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081739693 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070849662 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076827454 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07690665 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077116737 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075160689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072835604 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070702081 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070795997 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070756901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070858727 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074752446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071056763 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077119931 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067718156 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076987345 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070857396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070747356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074812292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070756906 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072954106 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077368122 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079754212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070434575 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070363169 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07511745 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070221973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070341553 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067521995 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070246616 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067566099 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075189499 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075170131 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07507635 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076441044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070338291 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070439947 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070516602 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070301324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070371405 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07267597 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076370598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071959614 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081252981 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07036209 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070447429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076848822 seconds)
  done (took 6.177571886 seconds)
done (took 126.844491204 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210387371 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184878069 seconds)
  done (took 1.661758606 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074599241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104670569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082570974 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134601136 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071685589 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105435149 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104320844 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083781692 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071225401 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071216267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071233179 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073971379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136533994 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071657201 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07150188 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073896765 seconds)
  done (took 2.691557727 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105868454 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166608954 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10933711 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069425268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10422579 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077119686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069091627 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08273363 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075925542 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071561527 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077247691 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077909845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071016689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075500151 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075810354 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077192296 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07087844 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076913217 seconds)
  done (took 2.825099028 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105180091 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095053757 seconds)
  done (took 1.495717408 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173253585 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133697411 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202163973 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346202534 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154313948 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.424811284 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138784246 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139929094 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114162037 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135875495 seconds)
  done (took 3.251074017 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104584605 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170031295 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294244866 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120460535 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076221287 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090715245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122089682 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082025091 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084047692 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083236553 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083827539 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078446336 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103118062 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076635166 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075730595 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07881103 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105805211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074987669 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075890916 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078726987 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106060631 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070034949 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076753235 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074885731 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080952923 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080727809 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071472392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070180616 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078118293 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075886977 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079971854 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087185962 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08052822 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105963934 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074061474 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106913425 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077946844 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076588698 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075639463 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076185956 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079895123 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079893168 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078409954 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077693684 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071260053 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078156658 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070888012 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069339521 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080444346 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070729072 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079918358 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078799343 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105824283 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070695793 seconds)
  done (took 6.093933736 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109030701 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106885016 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071280861 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112143138 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104063431 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070524585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105240529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098662456 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107361536 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070827413 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069367945 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07075977 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079575557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081447113 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114328275 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10756326 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072939118 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070449892 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107835934 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107102122 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069622632 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101853863 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098323703 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106572163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068545115 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070705391 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069286495 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070848903 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076108407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077763582 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069778697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079132332 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083116345 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076989249 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068416007 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069357493 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069650936 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078089932 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078304283 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078043628 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07625979 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068402507 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068776052 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070049574 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069728699 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068367233 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077551412 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07852888 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076907744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06932767 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070401203 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069215045 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069763028 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078326751 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075808396 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079082965 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078088231 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068900985 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068932344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071451442 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0788099 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078335937 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078247343 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070306422 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078163633 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068817769 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078806896 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084952742 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06916861 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070109826 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069216432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069245987 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070665163 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075925591 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076327638 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070328351 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068916394 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068713582 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078936281 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076342107 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068850361 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075738839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067911203 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068688021 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070656845 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070309872 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075930661 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077797169 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070381981 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068955556 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068838917 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068774655 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067863965 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075748691 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077823324 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07800628 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076976493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069769192 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077535426 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076156404 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070482206 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077010653 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068796376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070316877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069607605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076590584 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075963932 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078426109 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068728798 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06885074 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.0760227 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07816119 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068670047 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074936327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076771442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074649397 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067038971 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077352068 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068313619 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07649939 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067869413 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07661434 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067993759 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075500559 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067826892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066784239 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067535602 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075650133 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068915818 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067663584 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068848837 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068152296 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075565592 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078392484 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069535933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075322849 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075301988 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068833011 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075294069 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067810804 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075502924 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06748788 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068542696 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066718409 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077494808 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068394757 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068158681 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068254907 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076836723 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068224959 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077047898 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073788864 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067245469 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077940489 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076402788 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074182561 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076876819 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06960796 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067892713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067819017 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067970636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074682851 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076215954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069080859 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067824145 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073105562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.0757226 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067041198 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07358192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074145727 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073995237 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066902994 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067223638 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07639251 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07613991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072916139 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074008917 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073295713 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067478739 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073652041 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074138597 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068328172 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080367945 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068165626 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077757898 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074938639 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073533745 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074410321 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075447341 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075635267 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076578222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078225695 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066907082 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067337551 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074172057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067400986 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067112907 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073680184 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068712904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068607818 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078165375 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067647672 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075962688 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06688521 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074467901 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067342971 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068469653 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078565691 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068004327 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06876682 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073953589 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067194968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073143488 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075601163 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077001226 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067578136 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068791152 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075129905 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074796063 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067689295 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068103751 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069375274 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073922934 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073260629 seconds)
  done (took 18.041738216 seconds)
done (took 37.36691312 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21340927 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159493901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191424397 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119200256 seconds)
  done (took 2.113732733 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112329901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102972843 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090761036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068465421 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096678043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068414504 seconds)
  done (took 1.898926428 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296191079 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199508783 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181655295 seconds)
  done (took 2.033048038 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215921929 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195767979 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467812919 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287013489 seconds)
  done (took 2.624348706 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143609969 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084066348 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06636265 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08383402 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124122003 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149643831 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093377621 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118441826 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077233674 seconds)
  done (took 2.353833637 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147110401 seconds)
done (took 12.657460522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105477655 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120979003 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073765511 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.252004956 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.255668204 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069973495 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107250944 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100654822 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077448943 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075594979 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081027132 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.209350899 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.218934771 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077880726 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156512434 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076038523 seconds)
    (17/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178682477 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075853116 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105584691 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101248672 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.172727027 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091597701 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07646556 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06746907 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.182432446 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117927788 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11776919 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074060674 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079016504 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068101314 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.36546108 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.239341689 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076094323 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075798549 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06706342 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06686013 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07408073 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216609271 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.20016917 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066922647 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076370403 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076500283 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10171987 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06597207 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086014492 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067253129 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233426455 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103392509 seconds)
    (49/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.167908857 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117913571 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088955027 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178968072 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241653735 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067195999 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073570518 seconds)
    (56/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076287856 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.146763821 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079862477 seconds)
    (59/309) benchmarking ("sort", Float64, false)...
    done (took 0.13363576 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206350287 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075598912 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.067954702 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145550474 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067103932 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074969998 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074309291 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066458332 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075822066 seconds)
    (69/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079136123 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066075938 seconds)
    (71/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092325944 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201303726 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067258573 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138273237 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077522054 seconds)
    (76/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171987923 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091607302 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067657099 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089198757 seconds)
    (80/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.165336189 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 0.157771207 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066129434 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06687115 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073911708 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088711618 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073674801 seconds)
    (87/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17240577 seconds)
    (88/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136051266 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065722759 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081924066 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089648849 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06582315 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074638435 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210344796 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09409697 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09275406 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074344872 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.327212829 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.198459501 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19775714 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075431515 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096101446 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.222739287 seconds)
    (104/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.130405275 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.129147157 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067259444 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067347824 seconds)
    (108/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079002593 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067341044 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073962199 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067932001 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071106024 seconds)
    (113/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.171538831 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067661733 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174595239 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077430038 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066990555 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.177152909 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066353792 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067067053 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179772541 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069299636 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071581849 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16989108 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119516841 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075129915 seconds)
    (127/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128578095 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122800777 seconds)
    (129/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126045318 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090106593 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066941105 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075289356 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088811497 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197863491 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075976959 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077414988 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066716268 seconds)
    (138/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079730828 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.221357777 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119964044 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067297251 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093275442 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077177214 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12557195 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.0680055 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114754122 seconds)
    (147/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076386682 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075092204 seconds)
    (149/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.14015259 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067092424 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075275405 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084140448 seconds)
    (153/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093836134 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074098149 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065794524 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089823596 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07397434 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066170865 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088521208 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066880433 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10303138 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074654176 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171754114 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069741043 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067880669 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179878478 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076072211 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176530735 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193810208 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130453226 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087592036 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073036256 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065551713 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066865609 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066297227 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07090283 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066736404 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078127753 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07242977 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078801309 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130598278 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066027112 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066166651 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066098096 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065815654 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066333601 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143068591 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087383384 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17326642 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075175061 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125890391 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182644585 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080398024 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072808722 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197089183 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06663037 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068102962 seconds)
    (198/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072193029 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068658264 seconds)
    (200/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066635941 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071416982 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067204348 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174428384 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078020858 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181107576 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173350507 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066245438 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074565312 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065626288 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131759543 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06583663 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066522511 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065176944 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132308407 seconds)
    (215/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067699575 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066723576 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06563614 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.233242698 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180768035 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071899723 seconds)
    (221/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131952571 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068720508 seconds)
    (223/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.068079984 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075608474 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074379685 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121733132 seconds)
    (227/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069633127 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074449822 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067953123 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075395377 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077060205 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074290768 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075691807 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13765384 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139709974 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068060194 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070879807 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068222623 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083274516 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070824818 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075239296 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221954417 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121700342 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079482284 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.083623854 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089844191 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067004189 seconds)
    (248/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068168697 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067185437 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067243077 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068554761 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06661616 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145393727 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075817216 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066235106 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183063208 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071412098 seconds)
    (258/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069788028 seconds)
    (259/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067655854 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088542769 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132694083 seconds)
    (262/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079610336 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068159358 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071086112 seconds)
    (265/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065992385 seconds)
    (266/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.079572893 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068261876 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193210074 seconds)
    (269/309) benchmarking ("sort", Float32, false)...
    done (took 0.134471291 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069090924 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076353375 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068652839 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077507556 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.139708582 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073773662 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068318943 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112867591 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.06886235 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128506191 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067302717 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066845982 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087691283 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067669114 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067749634 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06683557 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067338371 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066977166 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088448536 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068268901 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066971987 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068200421 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07695304 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075134993 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090510905 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066402935 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090893491 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088458168 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.079956415 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142985013 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069233342 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067593176 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123936245 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07378901 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090600998 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070271329 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119370444 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066771089 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078848836 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065919966 seconds)
  done (took 33.23866391 seconds)
done (took 34.609990727 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089433689 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100844277 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074871091 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094868536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082755406 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097193653 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075170941 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08039471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082686279 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081330906 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080143899 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073086392 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076043917 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075975864 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073674264 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097472023 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080520471 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074887969 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074768777 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066236648 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075115813 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067026408 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06652701 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07275605 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078436548 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073986919 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076385 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075635241 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066749826 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066739016 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071864841 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075789828 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066220566 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078925606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075651421 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075219312 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076334998 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079524797 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066231797 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066905295 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07619401 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067174905 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074312592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073769588 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071134418 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07339911 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075270936 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079308298 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097280565 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071165243 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076907839 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077144809 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078487502 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071931407 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071877965 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074432742 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07287434 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09732005 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074717108 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071365298 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076093389 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075568969 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073110929 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074863367 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074511265 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077193866 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078544371 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073103384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076708837 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073282017 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066195387 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074500292 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071168897 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066497915 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07776346 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079680561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066097515 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071021262 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076979608 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075103717 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066386474 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071174118 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066422193 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071515292 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071038483 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072443806 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071763821 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074705764 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06603002 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07550841 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073495468 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074213299 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065866185 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079258451 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066494195 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072754432 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066352969 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067122219 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065819162 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071523209 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066666772 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071230179 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075039821 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06579344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071242505 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079835489 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066587308 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074117033 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065713668 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066089925 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077370357 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076345457 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066186142 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071027737 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066004314 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071494505 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065746836 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06637363 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065893376 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065661389 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069985154 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066231823 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070534395 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071045094 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078296511 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065600776 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070537692 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070733146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066078962 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072998984 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066471855 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06659376 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065727424 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07983926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070830074 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065872378 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07137435 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070579715 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073757097 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065534677 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074657726 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07166952 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070209724 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072030636 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065659286 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076101708 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070168573 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069772597 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064898207 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065603411 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064736161 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065755865 seconds)
done (took 12.604307982 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071498825 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.119232796 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094067318 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093259627 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083263393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067278964 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075079531 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.093246622 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068905179 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097869615 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089181904 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089092262 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110460026 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066729829 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066824862 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068131326 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068676449 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079141396 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094612221 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089880953 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106726897 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067597927 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086639138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088452513 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084280077 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089072665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068453987 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068214202 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07058184 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090966901 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092461526 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070320292 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06794051 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091675089 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085792942 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081029137 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068105913 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075777252 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068042226 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067024447 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068749894 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08830537 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075339358 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075870612 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068927381 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075112829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069088612 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082984806 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088297664 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075722563 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083024346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091779387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07070408 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083638741 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066326099 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082948221 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077081681 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067326347 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067793445 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072259412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067698086 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069789094 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079276628 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076426152 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072237253 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082307506 seconds)
  done (took 6.666035197 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086965771 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094741333 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08419993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08468262 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06680536 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067507359 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070038945 seconds)
  done (took 2.012797066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069003106 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088223141 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09147417 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09073742 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081154744 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091707092 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07524629 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06774612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097166273 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067130538 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086980751 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09828651 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071255728 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079339817 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092888969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067391011 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092116333 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067831148 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068176162 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091207697 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072370973 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094570289 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078771855 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067961892 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080050262 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067724458 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099378362 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075646139 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068966054 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069130963 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06873954 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.095174667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080324395 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07921813 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068998483 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082643346 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080904836 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07109807 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078686437 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08012764 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080785992 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068598233 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066647148 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069595445 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070550604 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079321117 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067025364 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069047906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068706564 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087064311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066603485 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080194017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071215947 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073540604 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073295107 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072820205 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0756605 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069414741 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086564054 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069360567 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084488193 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083709546 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081046178 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08410395 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067402585 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080336121 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081113154 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068869656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070008794 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068863038 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083570382 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070734778 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069101124 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079225487 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067413309 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092039928 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091311057 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067191789 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080993843 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068204315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069064444 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079228546 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091446368 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073489516 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069061114 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071844404 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069702272 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070858968 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066632373 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07230579 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06919903 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073252517 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069203926 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071624183 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069963705 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083946557 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066796967 seconds)
  done (took 8.882308901 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070944952 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069109555 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070235673 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069285534 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068616011 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068694808 seconds)
  done (took 1.900029134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09369204 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069102693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08157774 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068625794 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104782524 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083998503 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084150769 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077671645 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082710645 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080038612 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083946641 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087116497 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08838127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071034462 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083600923 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069648639 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084220866 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073252198 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079451765 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071280084 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082379255 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07101319 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071830338 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087426963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072132467 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069618511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07779805 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079891868 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080200647 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078110757 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070529478 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072352143 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07572631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077988728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084004199 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075032695 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068679385 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0754457 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071286946 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072596254 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086391736 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071051741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073685403 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074756862 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077578243 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075896219 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074772098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076931799 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083408202 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074640914 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074780023 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069179165 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071940091 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074737938 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075314938 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078025441 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074580002 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083794777 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070420853 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075523947 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068389894 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072138801 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077093207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071760301 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076088995 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074498072 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075504135 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070683329 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07073133 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068586466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075185337 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068675373 seconds)
  done (took 6.969785901 seconds)
done (took 27.901916938 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515733128 seconds)
  done (took 1.952678264 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623593792 seconds)
  done (took 2.088316194 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.536371789 seconds)
  done (took 8.001394533 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.387346111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.461307389 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.736010006 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134483319 seconds)
  done (took 3.220542221 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706752923 seconds)
  done (took 2.185542756 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238517908 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22616653 seconds)
  done (took 1.947494906 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351193739 seconds)
  done (took 1.819852007 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.072827487 seconds)
  done (took 2.541543255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236411585 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160477135 seconds)
  done (took 1.870840125 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446813672 seconds)
  done (took 1.915882307 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.386102231 seconds)
  done (took 5.85799207 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224906185 seconds)
  done (took 1.730430059 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238361548 seconds)
  done (took 1.713114201 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.743913204 seconds)
  done (took 3.213738875 seconds)
done (took 41.537566302 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084466401 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085662717 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08489362 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081925349 seconds)
  done (took 1.784468213 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07610556 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071463041 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075019693 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071269609 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075132319 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070902755 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071966077 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073571653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070642913 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071222018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070747191 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070870315 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073857684 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072414807 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069569506 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074300676 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074874238 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070707358 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073782854 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071117315 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069058359 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073512223 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073808117 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06988085 seconds)
  done (took 3.206227093 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079002161 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073311544 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075896422 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072369932 seconds)
  done (took 1.779698361 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078225255 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087647982 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086898292 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077787025 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08847945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083871414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067233454 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067332033 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068499416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077259207 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066823551 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092568255 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086119069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076728142 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078878902 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064246501 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066174 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084934379 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077487588 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07776697 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069220156 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076856375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066472452 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086398162 seconds)
  done (took 3.329443114 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082273026 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102696194 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081207328 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092506105 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093220552 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066408354 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079532025 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093550235 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135611498 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066914051 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072226393 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066416563 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109538016 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066490868 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080698688 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109218798 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112853948 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069917649 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101341603 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066380411 seconds)
  done (took 3.233876569 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084084069 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070285591 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07114379 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06597217 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077381414 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073489014 seconds)
  done (took 1.930151513 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069591195 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068935044 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068099451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067808689 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072597801 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06796413 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066606151 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068751748 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068342412 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06834669 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067621582 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066946671 seconds)
  done (took 2.306480439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19195016 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069011761 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069236365 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066519114 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07108081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066832259 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082015361 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068042488 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09397447 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067740547 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067123289 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069011685 seconds)
  done (took 2.469219072 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197919808 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074520697 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228494477 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146002426 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104015328 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108847456 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111098799 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108265699 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133851046 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097079183 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155303076 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15944957 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102944888 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131358717 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087102009 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119199328 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144863687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161549976 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10138114 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155698204 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137369943 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121222405 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140322928 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097150285 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100978818 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112887939 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071576795 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077046695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165212817 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12485691 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136623427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107038084 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089704916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172282823 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162443344 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135347837 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143405405 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08125214 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117322983 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128453392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194300727 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086850117 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155813934 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106298441 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078048193 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1253225 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110910237 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11460513 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098504344 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085639647 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277093125 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17790496 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130433859 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084455893 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119646422 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107397466 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110235098 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114492664 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174294402 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151743232 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12336277 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070082049 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106955748 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143380041 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12678339 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104630185 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119491042 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090732209 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124985276 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150535556 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118880426 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13389416 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112164525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085320064 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116045949 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13089858 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120748888 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164728451 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119741802 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070882859 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114821188 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095142678 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07828364 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141823044 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073573463 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168581915 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098621766 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120499908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124918202 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105357429 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105865173 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149497852 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134188749 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100376916 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084212409 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101225125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113705866 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136230804 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084892527 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104944279 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109905487 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077390174 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126661952 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07265475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115902378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092605969 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115278811 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121414272 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076652028 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261776874 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101250988 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09992047 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125751089 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151331087 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086087315 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079462227 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158913287 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118220544 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101104641 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136689942 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149405912 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117967746 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095814456 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138823239 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166228874 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087352373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153515485 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099800551 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081402322 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103173993 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117726119 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10706765 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117907591 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078749804 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114635525 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1554882 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072266606 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092937614 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128786761 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078811846 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07840001 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101130597 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100324518 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092996388 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09754796 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10055755 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129594195 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118611556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101204616 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118619925 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097690035 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156505909 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085572285 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09900452 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100148597 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070572725 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126563433 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146019125 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076607594 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149575268 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116957168 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111424531 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11499023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081468774 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129464589 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07609751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070539121 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131935928 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10713445 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103341667 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14015554 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257990349 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12081436 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115929903 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126189713 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124673459 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123913408 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105356158 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086736607 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109563279 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123397988 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072092391 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089552024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080095338 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102181878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092347852 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081728652 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135921942 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117271331 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106801669 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110012429 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093590965 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140424168 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07656312 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120886923 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116245879 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092410601 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144743974 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143726026 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127260364 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096558518 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130208915 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071206543 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072784423 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086084951 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118237712 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081118461 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081019254 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109297356 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140733014 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121904352 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128422826 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118382745 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113951358 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147722157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070611836 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116366273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134988532 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115745622 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100579026 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08804127 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095035029 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136016087 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100008341 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17301829 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108872986 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120026465 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147024598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097442523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076247725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098399888 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122652097 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24334405 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137089708 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095691389 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085869145 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103609212 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076872074 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099665158 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121271813 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113605105 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130745612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107502217 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126381812 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075313134 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10856993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117626314 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117140443 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082128686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112791909 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157169607 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094790023 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112449602 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142417135 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076927904 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134743033 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162369822 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138385278 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082030906 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101377408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115866555 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119463687 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113661478 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130443697 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100651802 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13332029 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107085546 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.081871422 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08400347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093455928 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100317405 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109081049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100770362 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109561774 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09228021 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124769099 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098552033 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106501184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112578135 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097432759 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09228939 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093240973 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166540528 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112617876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164795845 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096285169 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133204527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150250604 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07278356 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076055048 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077471409 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128128615 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081591233 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122103761 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.254328866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112978738 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119324065 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13271722 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094212385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070432017 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106546925 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127408226 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119408285 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094954066 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100863262 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152125171 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114857961 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077472953 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108680381 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112954338 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100358208 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165085243 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079352934 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10482399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074955996 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078015354 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119510532 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14597118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080513482 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100667789 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115816878 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107178168 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119786818 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0946429 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106719837 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12484075 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138410422 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122018888 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086713971 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107178852 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120980354 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145517767 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100889692 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097092336 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163591945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144778197 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149915074 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085015749 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109477316 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109186053 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10530845 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12918053 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081165871 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150617228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079296482 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12745532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097227765 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086393051 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121308273 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107917001 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084835717 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133730229 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110236089 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079459516 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22454028 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109607474 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11549396 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100902998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073298223 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132858674 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072532458 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130062265 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164601396 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078942938 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101774201 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093230093 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080534276 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100258823 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099235832 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084638428 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096847707 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161714768 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086393985 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138467746 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127286096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107459458 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129229214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099592108 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639234893 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078443503 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142606868 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11039401 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165399217 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095964734 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112835439 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105959124 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115067051 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134839613 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097546082 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174711167 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123931901 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112417241 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076897389 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098208836 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0996411 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085710205 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10340784 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109306181 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108497918 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091039971 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112398955 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116289685 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079725044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092750403 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145350526 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110152838 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135202699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130402724 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081742461 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112634722 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127492587 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077090456 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112462729 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142175177 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249042964 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098850837 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081946956 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098106544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164025535 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072180497 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15113291 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115574231 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109252746 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110190315 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106651177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126421505 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100830223 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116137401 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090480886 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139621745 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109517315 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081314418 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077406481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101905053 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106344653 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094896991 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094643955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096658833 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142354764 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070567232 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09498766 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110781082 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135552314 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160417067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10332549 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081320646 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113226907 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113363434 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109196058 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115718498 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079615241 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079163666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079158294 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098126979 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120184821 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108859046 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11420093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104434176 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150822201 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081817905 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221863341 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093108124 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100911221 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086466008 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077783159 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093022088 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093165462 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100017579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106256342 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1632524 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091985772 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086187098 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088720453 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073015864 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080920764 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118750662 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106411117 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112003414 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098594258 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078959869 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246894751 seconds)
  done (took 56.911380857 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104531606 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.07763302 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097589791 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145735901 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121502786 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199174006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149826478 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188596855 seconds)
  done (took 2.650172334 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069605397 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093930022 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103654192 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082849885 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067636834 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068366505 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224270655 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081079874 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066964323 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091244436 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077301004 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068625627 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.443794474 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06704682 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0677164 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076038034 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067425455 seconds)
  done (took 3.387353998 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382400668 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60895428 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351948945 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075561068 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.007243479 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089300118 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.204720223 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138006698 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082111263 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536806245 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364826134 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132456904 seconds)
  done (took 18.554649149 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082844832 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076472328 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08990644 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089793818 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077858591 seconds)
  done (took 1.994705747 seconds)
done (took 105.029847058 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081801023 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433211261 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069652085 seconds)
  done (took 2.106260354 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092704289 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089741303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08881211 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086990748 seconds)
  done (took 1.945376645 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075987456 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077432913 seconds)
  done (took 1.72861447 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225714171 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175440455 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095225865 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084276633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080387244 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080630061 seconds)
  done (took 1.830882495 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07397318 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073240348 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074198416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073900317 seconds)
  done (took 1.874749487 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069855115 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06721184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069530982 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071924945 seconds)
  done (took 1.858558976 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085820246 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085457508 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078997468 seconds)
  done (took 1.828651805 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102334894 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091237392 seconds)
  done (took 1.773937033 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082286611 seconds)
  done (took 1.662554378 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0900233 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098808896 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132524866 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11489292 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137336922 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113937029 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084254289 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085122194 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078727035 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086067298 seconds)
  done (took 2.603506357 seconds)
done (took 21.368417299 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080076897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372032941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360862176 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091433654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669717605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357425363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97051839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092679874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140826814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068674697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085323911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649769875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961403823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325905837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947558012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331432187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651251313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069183035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068500919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06866272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955411043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068508524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068274691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069662923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650133259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372492314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069190711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330574793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06852963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071159819 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356804308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069580364 seconds)
  done (took 16.074575706 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071426375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121375043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073721508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085994288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071614948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070140505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071858349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069688604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120650353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068680377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086240626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068563112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072608995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069059149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088236822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069246221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069969933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070607361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069845783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070018751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088365909 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069420827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072325825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070123552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069478613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081458898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070167651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069615436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070069668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071719654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072480094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070636252 seconds)
  done (took 4.031346934 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117507061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125455734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074437599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107150984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112239279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071628119 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14659554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093842798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127037683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068764991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086120912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069562728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103168428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069487712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089406796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070197093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070622464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07073799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069646026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070348065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089006487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07005284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069610123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07051153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070009983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083642393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070524862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06975614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070274041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071656702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073467353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070310165 seconds)
  done (took 4.289727022 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072027802 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073986887 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081153727 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081655714 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068279334 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070713822 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071184527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067615712 seconds)
  done (took 2.185500395 seconds)
done (took 28.172556265 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07909006 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068833912 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072164699 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087230973 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074482174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079582779 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06568278 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074918801 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072793566 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072414384 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073966328 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067893352 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07066898 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065659956 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073074002 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066553913 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081421317 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070988758 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080425704 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081386283 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070415173 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073142884 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075815159 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080786762 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080995683 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080572614 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076504752 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073413293 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068674461 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07071143 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07082414 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079645336 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081374586 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081041919 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067585073 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067634834 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071666884 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069315553 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081790598 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07702165 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069511203 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076771433 seconds)
  done (took 4.692538495 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086173218 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09039965 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083139198 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080839972 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09018735 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082991089 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086344827 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078159672 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077993946 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086402109 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0745995 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081181172 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078636263 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073045524 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078015467 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074772928 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07953605 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074363767 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077752369 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077927311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086671345 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072825876 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087630837 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08052854 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075173183 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080658251 seconds)
  done (took 3.703176124 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074863188 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086334147 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092911211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143100496 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111350634 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080272676 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081570319 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091691634 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096772185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068376302 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07343556 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093215151 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093071925 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074841263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069027628 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084572141 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08416362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070496263 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075269042 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096829251 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08935576 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085892729 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094596451 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084986761 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068559948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071544091 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073515175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087220891 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070843358 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07980098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071607579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072589396 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070188056 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078997356 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071210361 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068116952 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093408788 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079733484 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080993727 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069011783 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077876759 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069290566 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09365039 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1282722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067840545 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072242866 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07227561 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079543408 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067928823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095609089 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080180466 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068240178 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069058871 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067526853 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068010206 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070711384 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070074245 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071493979 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078248467 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074727422 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08954396 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073151364 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085617562 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068400378 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078266819 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067443956 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069605539 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067125619 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09669491 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06951277 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111984946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069458253 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0666872 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079513824 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078562752 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074372918 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068374508 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085599155 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079703608 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072349128 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076815937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071545839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071490633 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098300861 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06901283 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06827308 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067063329 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071665046 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071633684 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068839634 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080573362 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068080031 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071984635 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086111695 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068135807 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068942504 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071768729 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070259498 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067305099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078781855 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071859427 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069420901 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078159926 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06896255 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071654016 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081358912 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074868301 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066798071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070219326 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071448667 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069428003 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069592381 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071497563 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070206696 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074969584 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074801325 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073791445 seconds)
  done (took 10.702480203 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164416729 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156402915 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07057211 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147158448 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076960539 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080685707 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151281724 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094934892 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06878155 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070058522 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069202365 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109515288 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106359607 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115780768 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081171329 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069287028 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091270984 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114283241 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152234117 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147067216 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090701401 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076632994 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072032766 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070452656 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070619562 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078373826 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085920439 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077634225 seconds)
  done (took 4.402844914 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079145805 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102720768 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07348034 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090837215 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088136252 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069472659 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070712408 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070651715 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084793665 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077774784 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069028255 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073983441 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072819517 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071997857 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069552766 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075552841 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075983089 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068421921 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072915387 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074095551 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078831534 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093975838 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072639827 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068676612 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071480629 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068633511 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077235455 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083524849 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068979735 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102988008 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066581047 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07376143 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083053936 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069201668 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068419687 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069009303 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068730642 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069023458 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0703 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067457304 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067475571 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072266489 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068152083 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076918584 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08145387 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070884443 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071060602 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071855401 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071862591 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066550709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071622415 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071994154 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072026398 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076080465 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073241509 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071525706 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069374195 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095506499 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074889234 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068540097 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06772767 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067361324 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071176432 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078464026 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08448805 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071001187 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067641021 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069053863 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08216628 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081475751 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068425343 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073747598 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066604474 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070538648 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071499758 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071173441 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070102857 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067556677 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068857871 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069178233 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069754366 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068422447 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067884614 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074868905 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067556298 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067720047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069290413 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070920868 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07722832 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068223265 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072581562 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069817915 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067925616 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071405252 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074659636 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071702882 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079646994 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079507074 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069411105 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067640197 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081958847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071396774 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068753642 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074664892 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073414135 seconds)
  done (took 9.357335041 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091638692 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069041341 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084949803 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091768247 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079006674 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074683748 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07899228 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06899542 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08448239 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073435357 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076279828 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067263397 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079857519 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078374111 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069247697 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078875435 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071826916 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085918366 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083405706 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067304236 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077554571 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080676149 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08037254 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082719295 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081868426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083350812 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080533508 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079235077 seconds)
  done (took 3.848803454 seconds)
done (took 38.299512054 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.68432654 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.923792211 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.671637145 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.890027911 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.728432025 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.901776698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.757338116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.682929776 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.863980128 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.713076947 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.987860118 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.903372817 seconds)
done (took 64.454446632 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.703693181 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.821963642 seconds)
    (2/2) benchmarking "String"...
    done (took 1.926410829 seconds)
  done (took 5.355183397 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.856544334 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.336183379 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.900428611 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.668596388 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.672960041 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.921565295 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.440351045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.111766188 seconds)
  done (took 29.659592965 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.860361867 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.891849515 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.370915452 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404094168 seconds)
  done (took 15.179640938 seconds)
done (took 61.455921931 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.689423699 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.679616514 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.673347469 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.665841527 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.761100643 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.688408236 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.752323878 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.897183402 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.669279691 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.667609491 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.670193665 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.153215109 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.676368357 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.811447407 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.668350596 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.671269799 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.679646949 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.106472797 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.822121393 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.679408228 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.676053026 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.710657934 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.670136315 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.677501867 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.688122737 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.66837112 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.054287454 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.682367775 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.287860895 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.671736427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.701530551 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.938725384 seconds)
  done (took 201.115390056 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.669347443 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.63654638 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.725897766 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.673122842 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.093143351 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.846722535 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.782859628 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.14653584 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.672589457 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.699238451 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.907704177 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.668863847 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.920760206 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.606327112 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.692963014 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.695912905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.778903923 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.92219876 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.695236363 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.834509944 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.676390422 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.73312104 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.691117232 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.891167536 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.696764424 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.686659509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.814963865 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.678424714 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.859664796 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.777736444 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.713619925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.695770866 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.884210117 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.539953385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.685984274 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.689105502 seconds)
  done (took 165.994061461 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.854070761 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.672492068 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.671596637 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671607298 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.684659214 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.672015107 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792998597 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794011815 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.333978799 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.201576177 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.672154029 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725707508 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.67280299 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438035878 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.670710587 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735935904 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.683135651 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.672030327 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.687619185 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.697655 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673439345 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.674123012 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795323955 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.68539327 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.670678281 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.68214567 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.67359744 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.677694319 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.060863473 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.671631908 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.714013013 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673814021 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.677590656 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.929407593 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.672885811 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672991472 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503542911 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.262556042 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761335453 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673079238 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67801047 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.672704465 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.891479942 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.672995794 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.674612729 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.671473072 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.673709104 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.67651887 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.793492699 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.67195633 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.79956522 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.67222694 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151921684 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.670955212 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.674268565 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.609570337 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.257698261 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.674528118 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.677805766 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.67336999 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.676289882 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.679107563 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.38068661 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.746208924 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.675096482 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.677561483 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.679527133 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.673763154 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.690646071 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.672556459 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.054339731 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.731935507 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.901345983 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796784342 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.676443698 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738046126 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766230476 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.674571763 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.674322804 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673949982 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.674671791 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.756137062 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674715895 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.674794972 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.827050959 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.685526001 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.678589009 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728489733 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.742807086 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.675257283 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494704676 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.673329125 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.674450626 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915950499 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738897788 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.674901968 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677235324 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.675525726 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.822047208 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795923826 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378824766 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.676145175 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.338865209 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.815223708 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675992177 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.798193883 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.678964267 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757596174 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.683553052 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.678791946 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.712728389 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.675144747 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.730863521 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.674400888 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.051550422 seconds)
  done (took 390.35299148 seconds)
done (took 760.986575313 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.282067713 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.251310153 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.348409253 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.269826589 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.246565767 seconds)
  done (took 13.011486381 seconds)
done (took 14.627364244 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.753478484 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.75999817 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.696167922 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.759404787 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.689796147 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.758771001 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.743696915 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.700249199 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.727194708 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.698626624 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.729530811 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.70084569 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685505071 seconds)
  done (took 24.017182305 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.905802542 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.910712184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742169505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907108528 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719105961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.919383668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828854408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.820406545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.83121816 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689911717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685381217 seconds)
  done (took 21.577413996 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.91472257 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.907993984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749862891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.910647288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.721308275 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.90809636 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.833029951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822122997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.835380999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.68884284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684950087 seconds)
  done (took 21.591220692 seconds)
done (took 68.805323967 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.681699253 seconds)
  done (took 3.295092976 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.702666179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.857855928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.681153007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.681733245 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.680503692 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.682422673 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.682737898 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.680502272 seconds)
  done (took 15.264575724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.681831243 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.682209852 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.683046702 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.681586789 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.680213998 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.680656982 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681263625 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.684938592 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.682124403 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.682625935 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.684082324 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.679650392 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.682065736 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.681573138 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.681649648 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.682603093 seconds)
  done (took 28.528502887 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.682085873 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.681886929 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.68017197 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.682528346 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.681769981 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.682875353 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683230779 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.683862953 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.681610945 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.68235332 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.682850445 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.681445356 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.682638612 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.682300415 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.681698252 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.681993226 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.683590788 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.68355464 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.687306542 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.682741603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.683165249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.683249284 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.684208513 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.682021944 seconds)
  done (took 42.002976399 seconds)
done (took 90.7090506 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.387353306 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.395267631 seconds)
  done (took 9.399023785 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.685572325 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.684446919 seconds)
  done (took 4.994744258 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.682735751 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.683676447 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.686125139 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.684371379 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.684887222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.684638716 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.683647153 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.684419853 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.685215171 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.685819818 seconds)
  done (took 18.4637536 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.68525128 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.683681681 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.681938514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.685029941 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.683295819 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.683261065 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.684605506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.685063003 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.684979696 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.68499479 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.683770732 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.683649646 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.685088246 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.682471475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.685769086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.684159458 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.685424261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.686085462 seconds)
  done (took 31.937778491 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.685973623 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.68476058 seconds)
  done (took 4.989605735 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.685143772 seconds)
    (2/7) benchmarking "second"...
    done (took 1.685745576 seconds)
    (3/7) benchmarking "month"...
    done (took 1.685490464 seconds)
    (4/7) benchmarking "year"...
    done (took 1.683955945 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.683271616 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.685180021 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.683838904 seconds)
  done (took 13.412184273 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.68535073 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.835445676 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.904255724 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.339459927 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.686585872 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.691305784 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.596686313 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.688298411 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.691324409 seconds)
  done (took 18.737185682 seconds)
done (took 103.555354188 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.520381692 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.683591812 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.936010343 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.734955262 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.713042442 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.979687593 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.686333882 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.944865264 seconds)
done (took 41.822559873 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.702232315 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.40829003 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.443024173 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.750715357 seconds)
  done (took 15.221281124 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.68513228 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.113637279 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.707073681 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.528596401 seconds)
  done (took 21.828832776 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.046251617 seconds)
    (2/2) benchmarking "read"...
    done (took 2.033837364 seconds)
  done (took 5.705631185 seconds)
done (took 51.085157877 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68659037 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.684954146 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.685363367 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.686807201 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.686196296 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.686297601 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.687975741 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.686654393 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.68642418 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.69004495 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.688523522 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.685635076 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68746936 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687367329 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68690187 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.687406667 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686508353 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.686805067 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687980041 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.688817484 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.687881539 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68637559 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.686094271 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.686805384 seconds)
  done (took 42.108177752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.687760946 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.688781724 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.688779904 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.688378828 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.687394041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.689016922 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.689244588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.688638301 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.688247242 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.686878779 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687801643 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.686430318 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.688298297 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.688456533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688331062 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.689014858 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.689085625 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687975631 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.688218352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.688524625 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.68864303 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687711424 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.687414599 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689297335 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.688991797 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.688326671 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.688602989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.689006561 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688864406 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.687920157 seconds)
  done (took 52.272030788 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.693210602 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.698758929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.689849556 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.690245803 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.688241636 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.689666829 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.689044126 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.689908785 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.689072946 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.688790032 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.689250586 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.690926566 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.690105631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.692584623 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.69061889 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.689575675 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.690096755 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.693832878 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.689157034 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.689236043 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.690062833 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.692466035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.691207171 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.690357042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.68964925 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.692058408 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.69124822 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.69047672 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.689921724 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.691716985 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.689926182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.690818536 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.692076081 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.691449139 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.689335883 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.690763173 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.69292159 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.700434937 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.691121672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.692062568 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.692392705 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.691107495 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.690557365 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.69107251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.692178211 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.691591657 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.691459257 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.690638964 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.691269254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.691872981 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.691676586 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.692379259 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.690677665 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.691726126 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.692007513 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.692935756 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.692201723 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.6916468 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.69341762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.692274233 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.692527246 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.691854474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.694196825 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.691895947 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.692200049 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.692230666 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693050751 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.692228478 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.693061801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.693482316 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.693206175 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.693667368 seconds)
  done (took 123.415566194 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.692500977 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.69276472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.691385263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.69347252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.693966049 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.694289451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.693268983 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692637368 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69251152 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.694033835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693246167 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.694967433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694097855 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.69430549 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691805923 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.69350458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694244395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69332485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.692833304 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.694959586 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693657227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.693275881 seconds)
  done (took 38.882509823 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694112242 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695249758 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.694587162 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.694704517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694046838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694485033 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.693372497 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693349806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694974663 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694027045 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694584958 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696016592 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.694556602 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694315359 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695644413 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.695079192 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694486375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695535285 seconds)
  done (took 32.131145088 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.694599522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.694696463 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.694803748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.693187401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.69490018 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.695264612 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694809551 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.69502268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.693425862 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.695270138 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695876783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696121317 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.695735229 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695257608 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696191172 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.695273956 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.69505956 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695352906 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695514352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694333527 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.695877833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695809166 seconds)
  done (took 38.921790098 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696449431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696030835 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.696633258 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.696402913 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.695209439 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.696023088 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.695350696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.696082049 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.695658667 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.6943976 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695579244 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.69447609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.695961228 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.696024038 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.696385627 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695242602 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.6956183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.696876456 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697928448 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.697359891 seconds)
  done (took 35.549000922 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695292511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696476759 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.696484519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696881902 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.696612439 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.697160626 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.696814966 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.696747341 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696995788 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.696950427 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.697786248 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.697405036 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.696271261 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.697247778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698520973 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698231706 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698222808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697177257 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.698304381 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698495287 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.696584953 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.697297243 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698220263 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698447762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.696959603 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697304544 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699314183 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.696477382 seconds)
  done (took 49.154218285 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697108294 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697230009 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.698434743 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.696714588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.69859687 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.697414114 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.69867712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.698465243 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.699372867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.698372746 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.698070744 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.698380353 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.697795872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.699847547 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.699336421 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.697091296 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698940848 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.699139845 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698628928 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697231886 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.699533767 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697679648 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.698227075 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.699602728 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698337057 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.699823921 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698722575 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.698672291 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699630351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.698892568 seconds)
  done (took 52.586241078 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.719951099 seconds)
    (2/2) benchmarking "in"...
    done (took 1.720828113 seconds)
  done (took 5.074159373 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.699282134 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.70031822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.700039466 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.699980957 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.699371281 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.698482504 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.700922943 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699033095 seconds)
  done (took 15.23019114 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.700890131 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.699794563 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.699568901 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.700392692 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.701391615 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.701324404 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709220061 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.701876438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.70091544 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.702064182 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.709253356 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.710173902 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.703444471 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.701731009 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.702266809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702646669 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.700199314 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.700766929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.701582394 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.701539976 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.701684427 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703600852 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705084483 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.701549408 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.70421307 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.712334824 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.707537382 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.701949661 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.703487129 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.706077323 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.702987344 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.702682772 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.700948433 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.701893042 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.700983249 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.70252562 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712249259 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705393194 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.709254654 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.701284051 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701955684 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.701296941 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.704422321 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.70403947 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.705439265 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.703021243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.702002675 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.702341479 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.703167028 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.705489561 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.713440561 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704387439 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.70097179 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706983386 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.705538055 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.71112125 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.702882703 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.706971589 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.713984003 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.714537034 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.715738764 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.713636797 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705155192 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.704641713 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712601076 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.734845414 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.709788423 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.704885051 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.703825469 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.703385117 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.710792474 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717866191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.7154867 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.703850782 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70450252 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.702348689 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705355833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703501992 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.711230432 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.708715768 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.706063576 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705207211 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.714550965 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732830641 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.706468318 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.705508967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.70445355 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.704351069 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.707252948 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717738471 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.70710784 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.705261011 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.705466807 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.70702139 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.706689348 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.705747713 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.70580723 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706846906 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.706928414 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.70541873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703594447 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.708857751 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.716416815 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705158373 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.704847021 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.712340651 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.704638516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.705564167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.713033524 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.70545702 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704966427 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.705370705 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.713660991 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.706576506 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710591347 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.717938914 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.707177311 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.708033404 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.70746241 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.706518828 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717089246 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.735317049 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.707493392 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.706503282 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.71343433 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.719634087 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705593364 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.711338831 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.706153805 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.705442239 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.706067688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.710140839 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.706115413 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.70875554 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707828662 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709275828 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.70743098 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.706593886 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.706301311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.70996308 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.710064989 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.709012234 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.710335582 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.709387402 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.706404633 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.710863462 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.718793619 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.710389882 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.709040225 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.710331883 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.708905564 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.707420675 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.710699285 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.70942951 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.708970885 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.708193433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.709363973 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.707446365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708104274 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.70979021 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708137018 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.709550386 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.714851533 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.709072317 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.712881293 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.709583642 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706902113 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.707967845 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.710241095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.709100802 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.709559209 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.708574581 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.711160743 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.718094907 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.708566594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.710013935 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.710572127 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.70972951 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.708480897 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.707901409 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.711929334 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.721433173 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.708302271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.715384698 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.709642092 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709534874 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.709640628 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.709258345 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.709655062 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710080014 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.713841984 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.718612886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.72165657 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721732395 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.7132611 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.714272316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.712017938 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.716107999 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.714812529 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.711174967 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.710891733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711399348 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71180781 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711520686 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.712708043 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.709793888 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.710147849 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.710992673 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.709830961 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.709977336 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711165367 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.712911752 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712877822 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.710900431 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710232678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.711551185 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.711286281 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.710707475 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.710967546 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.71120317 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.712173859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.712862423 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.719680482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.710325119 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712600464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713869468 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.712808239 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.710688368 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.710130633 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714844169 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.712703799 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720122756 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.713290508 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.714250025 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.720427438 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.712731007 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.711432793 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.716263119 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.713585817 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.711784943 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.715573477 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.721893931 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.711300768 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.712867195 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.712709785 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712658508 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711936976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.720054448 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.712264468 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.713550097 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.712931165 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.71454278 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.711729493 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.715520315 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714759679 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.713303753 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.716116764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.71460437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.712524765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715917943 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.710996669 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.714349312 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.714782112 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717113321 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.724064669 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.720803382 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.715457017 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.7176788 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.715620101 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.719149037 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.716608398 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.716032935 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.714788503 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.727587422 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.723990892 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721094924 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.716630939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.713099549 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71952312 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.713834833 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719726516 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713639258 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.713616852 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.716411322 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.715583152 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.71534248 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715979664 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.712653298 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716048419 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.716195344 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.717188697 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.713463023 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.713922732 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.714715012 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.713226561 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.713976865 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715536569 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.714728083 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.716930149 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717371451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.715135244 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.714682005 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722779753 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718427044 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.716721111 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.717208028 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.715849008 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.714013112 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.717973423 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.715562834 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.718728084 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.72584285 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720078753 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.72720678 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.719087899 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727904278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.715374718 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.71951424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.725256897 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.716220895 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.714449235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.716988149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.715200555 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725638737 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.718057799 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.717417802 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.720834317 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.717192773 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.715818906 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.71740856 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.71660004 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.715590596 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.715966087 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725736386 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.717896766 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.722415459 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719747841 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.716693969 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.716836241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.716745709 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.714558922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722786115 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.717401284 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.71828988 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.71774155 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.716214492 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.717601046 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.716891955 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.716974081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.715777409 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.714447448 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725170233 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.718992128 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721625374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.715741898 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.726039882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717025553 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724608233 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.7184757 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.719187334 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.718109225 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.717160319 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.71846255 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.718876706 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.718947572 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.718757972 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.718725333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.721963235 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.718986516 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.719923379 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.719598388 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.718285732 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.720821325 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728697529 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.745497545 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.721892785 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.721314333 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.717949579 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.722433765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.72267149 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.718278587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.717860646 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.722930025 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732639377 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727930297 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.721067672 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.718393385 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72050971 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.718372709 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.719682473 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.719619721 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.719208734 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.719704731 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.720291732 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.719452454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723728144 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.720228407 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.720749955 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720392699 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.720670753 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.730853132 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.720890093 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.720486229 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720401776 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.720476011 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.722750092 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.721340077 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.719765025 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722832502 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721438334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.721542232 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730045126 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.727362355 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.724890233 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.721978781 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.720405472 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.721538636 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.722184322 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720788114 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.720448176 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.722780243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.72283336 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.720214677 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.722706606 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.721116119 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.720441297 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.722571463 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.720640444 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725054958 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.733784059 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722135927 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.720163955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.71966033 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722349582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.721631038 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.723879018 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.730025692 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.735709955 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.730465152 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.72777288 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.722832204 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725210568 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.731779705 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.722224943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.725645528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.723621039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.72535751 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.723376423 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.729192485 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.722608279 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.73038118 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.72603099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.72231128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731135894 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.725618747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721834576 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.725255518 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.731117452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.723662187 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.720560691 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.721301103 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.724027352 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730850214 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.726014216 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722294469 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.724933153 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.721934001 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.725069577 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.728593507 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.721956844 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.726117034 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.723025623 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.725181415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721891821 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72252285 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.72279273 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.724684091 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.723158255 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.727412503 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.732811032 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.722165907 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726297431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.725149909 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.72422112 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723430392 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.721741583 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.723200504 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.724060912 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.724953757 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.725084838 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.725783722 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.727647381 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.723152147 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.727176892 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.728182035 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724797817 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731147669 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.739211083 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.731318973 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.723962627 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.725332306 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.725937725 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.727745063 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725351229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.723568358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726289614 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.726107761 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.726074921 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725293619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.725745036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.729263753 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742622394 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.725467207 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.726014491 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.72698684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729185956 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.726384344 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.72510421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.724401765 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.728099365 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.727447862 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.734058836 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.725593213 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.732751935 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.72597344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.72699602 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.730237448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.728682914 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.734453155 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.729189506 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726267302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.724911433 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.730909398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.747189096 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726464108 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736127573 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.760627736 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.72836199 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.728724212 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.725922204 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727325867 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.726592927 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.728200858 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.726764507 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.726569357 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727108775 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.726525199 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.728110021 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733865766 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.728166717 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.72659035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.726906417 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.726853965 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.728485937 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.727087305 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.726610342 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.728068773 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.728245724 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.7276586 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.728052661 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.728457489 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741304357 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.739090627 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.726880593 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.728935422 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.727332032 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.733535813 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.732169918 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742572827 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.736234711 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.72694841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.728744364 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.730945542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.726996012 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.727860445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.728287669 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.729374164 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729089761 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.727799981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.73971517 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738294444 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.733462044 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.729532944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728788736 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.728656082 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730373183 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727695894 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727923851 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.731485003 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.729462882 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.732642592 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.729672855 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.728417418 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.732518263 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.737271327 seconds)
  done (took 1025.243204281 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729069104 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728635805 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729012484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729315324 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728807113 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72823581 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728143721 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.728943127 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729133414 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.728800698 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729068201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729243159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.73015402 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730308331 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728382862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729911683 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73074827 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.730060018 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729884594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731590938 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.729235071 seconds)
  done (took 37.97837151 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.730609886 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.727973203 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730988157 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731648116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729477297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.729721002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731079743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729980502 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72979931 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729466287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.728763969 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72890546 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.731751364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.730652325 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728924156 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73172708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.729829057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729447222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.729598581 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730770383 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730159138 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730421224 seconds)
  done (took 39.723336894 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.732347847 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.731323485 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.730573638 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.730531571 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.730548818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.730701588 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.731936398 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.731191428 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.731582966 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.732027317 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.730716747 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.732785735 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.738189597 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.738997144 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.732727659 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.731777496 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.875855483 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.732641304 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.734448289 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.732265874 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.73193341 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738778105 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732317779 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.730326739 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.732769943 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.733608397 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.731668489 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.730959848 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.732434807 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.73534966 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.736847563 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.733019008 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.734451731 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.736403226 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.733423809 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.733225116 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.737833941 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.732671545 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.733836497 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.732433013 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.743140995 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.760130751 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.734543489 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.73851989 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.733548225 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.732207853 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.735797263 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.742248516 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.73285816 seconds)
  done (took 86.784438621 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.732751572 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.731339139 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.731332855 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.732415513 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.732735503 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.731904814 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.735814852 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.731535517 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.73236251 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.729386823 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.729928823 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.729841658 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729787238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.727540833 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.729155427 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.730056165 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730311327 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.732484775 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.72865612 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728725125 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.728080849 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.729795781 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.729116848 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.731927032 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.729897316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.731251662 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729332667 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.729608256 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.728086138 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.731240632 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.728046192 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.729778476 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.731109954 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.730831304 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.729162589 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.729777669 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.730733513 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.730973273 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.72794004 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.728280421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.733505434 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.728081291 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.727796446 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.728341487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728284309 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.727260475 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731090124 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.732702283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.731553814 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.730672097 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.733376089 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.731543764 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.729391194 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.727244943 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.725015583 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.727361616 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.726421565 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728272781 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.729392651 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.726463497 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.724955379 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.725100864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.726069359 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.726160582 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.724074217 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.727087079 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.72588191 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.725944326 seconds)
  done (took 119.268408646 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.726112182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.726262069 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.727561303 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727441384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726562972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.727403294 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72727911 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.72868526 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.726740862 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725685788 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725068454 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726499979 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.727286639 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.727195871 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.728350427 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727476013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727166617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727676642 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728206478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726139184 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.72901095 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.728477531 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.730258639 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.729466988 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730170903 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.727417704 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727250867 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.727284933 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727776452 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728698854 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.726143452 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.726684809 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.726021381 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.727806859 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.730155141 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.726788415 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727039038 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726629144 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.728420089 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.728647318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730325912 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730326697 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.728335824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.726926469 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.727573579 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.727416366 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725216736 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.730501088 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.728326496 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.728863858 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.727785014 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729404312 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731008645 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729038065 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.727749834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.729537318 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729071697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729011571 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730614944 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727374398 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.7272705 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.728422723 seconds)
  done (took 108.79117348 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72805262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.726959782 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.729345793 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.728505322 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.72684356 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.728112717 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.72872591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.729502504 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.727506079 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.726292249 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72629049 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726836639 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729314752 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726556797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.727738511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728883907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727694235 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.728287287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728965457 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726618419 seconds)
  done (took 36.219307254 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.725617512 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.727632505 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.726516692 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730824503 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.726370748 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.729208453 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.72710381 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726671159 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728240598 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729648165 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.729291314 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724788344 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725106626 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.724948664 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.724749527 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.724841119 seconds)
  done (took 29.292992414 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.725776299 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.725905223 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.725458033 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724704718 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.72736451 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.724332263 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.724922131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.725160788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.724575045 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.725772692 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.724690679 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.727057262 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.726423927 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.726671722 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.72566141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.726896962 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.725364585 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.727469837 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.727018997 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.727219321 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.728315502 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.726891233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.726270907 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.7260388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.725720844 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.727797983 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.727770522 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.72585789 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.726760367 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.726321837 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.726023989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.723454618 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.723373692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.727362696 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.726543899 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.72754579 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.723816774 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.725398528 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.728167297 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.726340024 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.724918882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.724487865 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.72579244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.726514598 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.724863843 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.72465674 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.724414758 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.72503272 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.726607258 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.725106597 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.724961794 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.724496283 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.724051376 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.726037118 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.724504699 seconds)
  done (took 96.582567925 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724984131 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.724430004 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.722799731 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.724442493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.724278873 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.721757169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.724977131 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.725330368 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724754081 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.723419517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.726005451 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.724474088 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721796851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724691604 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.724765536 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724202038 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.724940235 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.725482454 seconds)
  done (took 32.697001405 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.720012862 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.722791748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.723260734 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.721699128 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.722325105 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.721713935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718994275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.720937854 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721068347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.725761702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718809321 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.720366405 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717900755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.722523838 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.721642261 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723168032 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.718918815 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716498804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.71971227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719430413 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.721499522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719274576 seconds)
  done (took 39.51512214 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.720435938 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.718300133 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.733907183 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.741699303 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.741199261 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.750125049 seconds)
  done (took 12.064115864 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717607259 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716414069 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.714870424 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71839294 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715194363 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714563376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716952198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716385034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716420808 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717093287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71462412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716008951 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714733948 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715317321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714180349 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715439421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714113911 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716322794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717324758 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714921739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716766091 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716866754 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714182188 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71379251 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716238644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715953201 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715291532 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712744206 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716111599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713915274 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714543414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715287013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715163353 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713829292 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714406904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71375635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714078568 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714655153 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715023658 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714454689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.715630035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715488889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714082086 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713175623 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714074296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71516486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713412975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716336494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715259756 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713093336 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716047155 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714946469 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715572121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713856276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71602376 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714130523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715537372 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713426726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712610759 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71222181 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714134954 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713872108 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714700204 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712641331 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71504541 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712007687 seconds)
  done (took 114.838000199 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714424125 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.713606769 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711989455 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711810315 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712614371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712950206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713533055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710155009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709471904 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71079829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711989184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712462255 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714167195 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712781569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712109768 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712219921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711360529 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71183621 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713062607 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711847633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712089606 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713314624 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712476845 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71124113 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713882664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712418757 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712434884 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711072245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713269639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711359341 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712555273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712125051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711264902 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711413889 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711916349 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711608793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710065935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7126969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712787475 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711916789 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711578844 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713776491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711752075 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70883713 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711078332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710372911 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711025073 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714215759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711806854 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710941347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710533383 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712462602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713986828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712667664 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709624782 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710484395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713406731 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711086382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710536027 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710951215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708908998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711008957 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710788347 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711748416 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710697343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71174195 seconds)
  done (took 114.634303531 seconds)
done (took 2380.584565486 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.769315318 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.720257152 seconds)
  done (took 15.133651102 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.874961363 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.825659941 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.714677143 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.764488542 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.714764815 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.741701432 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.736171233 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.714890533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.717076156 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.716314904 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.717708197 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.901472831 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.716166144 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.71576146 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.716528615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.807550132 seconds)
  done (took 49.7455982 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.719443029 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.719261612 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.727047363 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.719669956 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.718186609 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.734056384 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.768164232 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.720886588 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.751616896 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.732353251 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.783453513 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.728769265 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.714195468 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.761897754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727367672 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.728122794 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.807020556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.789633857 seconds)
  done (took 32.999358508 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789958449 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.719922904 seconds)
  done (took 10.162634528 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.744459234 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.742474354 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.716248791 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.716761766 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.726862177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.715227604 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.749620921 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.751876531 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.711413659 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.720633466 seconds)
  done (took 68.944096297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.716604546 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.715792036 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.713482094 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.711417103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.710312854 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.713114057 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.711444984 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.711975994 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.368197965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.7503338 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.720352373 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.717982302 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.712137812 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.714966562 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.710535357 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.731731048 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.831066884 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.709955744 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.708989426 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.718975195 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.711706822 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.7636583 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.725381618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.712764929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.743529189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.36783807 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.721797209 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.719506505 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.818338962 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.710594962 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.714088176 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.898628669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.715800207 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.169134574 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.99174091 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.721086543 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.726205927 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.719257681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.713546576 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.825699349 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.714409173 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.719696849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.653613038 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.968551904 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.820099142 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.756061461 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.019889858 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.730107889 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.714673314 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.742409458 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.715853543 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.714984889 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.727825606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.227606872 seconds)
  done (took 124.162053026 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.711165423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.05734266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.878673751 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.711496845 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993083442 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922854545 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.713248977 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.757032954 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.71505144 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939707897 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967993609 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819046489 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714599464 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.710797984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.710262686 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.711826203 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.866272103 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.782813912 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.717357871 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.709381098 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738925565 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950898081 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.834301327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.715833201 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.737651031 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921746854 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.832134064 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.812941497 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.49731713 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.711147439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773586671 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.71350978 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.715283408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.714268164 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.866122378 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805238724 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793948581 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.714951118 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.710675959 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.713504203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.45888967 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915975617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806509334 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.841937511 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964380317 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915809605 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492200193 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.711573758 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.448484147 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877579519 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939467911 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.944884842 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.83432106 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.714691043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.235891314 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.711125673 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71247038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963710707 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934027832 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.807873046 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71453922 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.713381663 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.710858984 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000787654 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.71592319 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.807028973 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715135202 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.714928465 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810148604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809733418 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.942215245 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924734273 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742213777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.070595756 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.221192176 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95591825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.777239741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96413812 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.716405928 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.715174931 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.791111203 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.551942122 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964818363 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992549677 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956185251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746566457 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430082361 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.713647425 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936843268 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935441742 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.972361735 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960893893 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.952556808 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.031566373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.712478589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.717686507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.943034724 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841109113 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.716989859 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.061516759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942485788 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.245469562 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.740250129 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014696495 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.846104389 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.718485259 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.342522139 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.716606841 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940402998 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.753341052 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.715801725 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71331945 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931110512 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.699223851 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717646025 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.63706654 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.774675231 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.715101472 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94394736 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.716563971 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98191434 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717218908 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946007844 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.171982756 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.943605225 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.963933701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.717776004 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953102376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95905603 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.828857467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.985052778 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.623312873 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.71672418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999326115 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.71647658 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.712718292 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.882379636 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.716398378 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.854865507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.716179544 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.004016446 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735222444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944912729 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717161187 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966093859 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746134624 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765189278 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.718264289 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.844352609 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715663086 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.549131766 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.870510359 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716347349 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.716648607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.547009576 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.714360468 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863112475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.939280937 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735493933 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786515024 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.374234336 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.71478735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79727565 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.737293011 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.106912942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.716092705 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.966309214 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.718502109 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.715397952 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.71726631 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.000756122 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.948008281 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720673361 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714566999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.621389215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.71583524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71408388 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.898949276 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.111127018 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.717293113 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915445978 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718131299 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.844668599 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.132732088 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.790243105 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.053820674 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.715736505 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.717228303 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.716260114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.715765168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.717292648 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.978104321 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.741476211 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.206790581 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.85453223 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988304679 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.024682922 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.954785814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758632145 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.719936616 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.970303113 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.72001379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.777522718 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.718845021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.737297148 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941822581 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720656518 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.925111902 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.985932839 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.720773895 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765648383 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.720539409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719105 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.717936594 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.865067587 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799252087 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.719890602 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.718696992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.83180027 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.840183305 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9240729 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.720436984 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.764241755 seconds)
  done (took 869.535934229 seconds)
done (took 1172.330054943 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.717349907 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.720454589 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.722397036 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.721574078 seconds)
  done (took 28.537398583 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.721518607 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.720240684 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.722382736 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.718557092 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.720625044 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.719608126 seconds)
  done (took 11.977933233 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.784068636 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.719489193 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.72319439 seconds)
  done (took 20.883107519 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.793671203 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.109613568 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.852016374 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.135285201 seconds)
  done (took 9.546964998 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.726836173 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.723718457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.721099933 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.720549478 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.723917137 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.721913013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.721308761 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.724912451 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.722918953 seconds)
  done (took 17.165318575 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.775063168 seconds)
done (took 93.543356061 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.901097004 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.755863915 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.787665698 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.720203506 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.871691652 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.819479917 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.393078118 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.040386638 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.747123462 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.745574497 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.722713893 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.566875707 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.722380161 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.845514625 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.818427066 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.879420982 seconds)
    (17/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.862133295 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.750237196 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.719603527 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.076634471 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.908687388 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.727925252 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.812637446 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.07895159 seconds)
    (25/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.972204252 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.851717654 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.382007567 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.822206879 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.85494797 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.852212085 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.85546185 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.875543385 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.819342062 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.743361986 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.035701485 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.803900635 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.097681087 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926681386 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.723373274 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.052977905 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.896792535 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.869833221 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.054562722 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.831764001 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.859253984 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.117233164 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.724294308 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.34756477 seconds)
    (49/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.984553403 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.211005978 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.072881361 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.634907568 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.725119271 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.017002097 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.807132323 seconds)
    (56/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.727024962 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 1.939260495 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.236289752 seconds)
    (59/309) benchmarking ("sort", Float64, false)...
    done (took 5.441280126 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.514207545 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.725866211 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 7.012759468 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.727645528 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.404812218 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.977469482 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.952957081 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.884675308 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.743022727 seconds)
    (69/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.725883239 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.920691056 seconds)
    (71/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.582234658 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.916528117 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.086197579 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.753127576 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.742296462 seconds)
    (76/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.831581693 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.04141587 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.7282606 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.839686302 seconds)
    (80/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.825625129 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 4.587822086 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.805400408 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.09309733 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.741408783 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.586954897 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.988560933 seconds)
    (87/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.965054354 seconds)
    (88/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.860282659 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.043652317 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.547308002 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.497321864 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.842056022 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.730576315 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.042758787 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.727778928 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.978184687 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.834458653 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.938146009 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.110338949 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.042675148 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.864452965 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.686696064 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.729551605 seconds)
    (104/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.819866238 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.818445412 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.008189153 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.729293738 seconds)
    (108/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.4720889 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.465075406 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.745151194 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.726241281 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.884909215 seconds)
    (113/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.859792986 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.988590107 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.829765026 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.729828768 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.087062905 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.027557781 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.808969841 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.038696576 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.828954468 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.728443866 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.142049133 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.973367719 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.734378973 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.137510637 seconds)
    (127/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.02849122 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.855448971 seconds)
    (129/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.803437065 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.692438872 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.084912584 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.952114861 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.087331107 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.101751398 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.755320651 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.72660333 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.771304624 seconds)
    (138/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.908380002 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.189479872 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.737461706 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.146216897 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.511453051 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.734813031 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.957559132 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.831704357 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.864956806 seconds)
    (147/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.759754478 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.808342915 seconds)
    (149/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.966918156 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.969531743 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.732014571 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.500805392 seconds)
    (153/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.777432576 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970842524 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.869565752 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.121910626 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.979509167 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.935158829 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.849741133 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.734827998 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.735698656 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.759730087 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.85824646 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.897173041 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.733251231 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.82552071 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.752499265 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.216237048 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.057108524 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.770958648 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.695850414 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.897520537 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.748724281 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.833319912 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.069457067 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.793922412 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.857899746 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.736159056 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.039956448 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.654412045 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.695005709 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.622191298 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.113407121 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.897757958 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.13294376 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.930259935 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.74367284 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.66825026 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.918875135 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.774319767 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.039733912 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.745503896 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.233656564 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.769922483 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.060549378 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.748527476 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.232794243 seconds)
    (198/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.770146376 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.740972931 seconds)
    (200/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.292673216 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.839452131 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.048731227 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.750421696 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.880194206 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.75183772 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.959519565 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.875190892 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.764609821 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.087386185 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.744943815 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.142325044 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.748476563 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.068590615 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.747876563 seconds)
    (215/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.142882609 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.750753271 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.117906863 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.814286682 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.929040093 seconds)
    (220/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.796743756 seconds)
    (221/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.849449842 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.807026373 seconds)
    (223/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.859785055 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.899388042 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.974631486 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.746949519 seconds)
    (227/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.84696897 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.215887338 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.960487829 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.948885771 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.4471002 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.746594467 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.766996418 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.742839317 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.750717605 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.546398909 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.804864585 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.744275661 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.674797679 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.009813982 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.768000363 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.743320407 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.979747043 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.304591067 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.780536351 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.060443102 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.927051662 seconds)
    (248/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.08817524 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.083377279 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.935972306 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.999425376 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.752468408 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.743202809 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.771950355 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.837990244 seconds)
    (256/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.745524179 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.806339461 seconds)
    (258/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.822432502 seconds)
    (259/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.850479303 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.081433385 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.886520515 seconds)
    (262/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.000181475 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.124414645 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.83048994 seconds)
    (265/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.89841097 seconds)
    (266/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.919210096 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.057093732 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 6.749669674 seconds)
    (269/309) benchmarking ("sort", Float32, false)...
    done (took 5.465547778 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.749456369 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.155695897 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.745789301 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.84624837 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.997589534 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.771868787 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.080348688 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.889495302 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.79805381 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.965935829 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.924739943 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.830839801 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.892124608 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.877178773 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.830243818 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.141013125 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.747423536 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.475397451 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.782213766 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.776095676 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.08306577 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.754009464 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.296793437 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.534326498 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.759625889 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.994031346 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.371299647 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.670428897 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.958060712 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.757420624 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.96984212 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.749415473 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.204401484 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.808426633 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.362822142 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.845973483 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.748689431 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.924902271 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.747665922 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.319813806 seconds)
  done (took 964.131619259 seconds)
done (took 965.857067127 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.775474695 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768287134 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.751514469 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.775495009 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.864847657 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.796578153 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.764325873 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.754361879 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.802883311 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.800770844 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.749114612 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.795594871 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.752691669 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.751435944 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.751475271 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767225458 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.063698146 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.790183583 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.770384064 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.764211331 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.770387377 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.749852988 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.803103029 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.798078277 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.756428006 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.757970286 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.755695812 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.772104223 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.865133547 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.757614795 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.757865956 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.765883583 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.064118119 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.783587613 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.750414281 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.773329852 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.7652982 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.765143149 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.757019627 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.785775258 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.152402739 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.796920445 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75449932 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.752744057 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.751301519 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.760041613 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.754709867 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.759959838 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.768844124 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76915966 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.144344999 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.813421781 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.758677478 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.755119134 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.7676453 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.75293579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.757401491 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769798485 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.773212083 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.76860972 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.050476836 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.794449764 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.75664131 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.770086337 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.762254491 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.178413162 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.797232848 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.760563233 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.15058915 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.80608166 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.180543767 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.807875463 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.756888773 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.768861368 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.786743551 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.065681541 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.787413548 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.753344363 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.764644881 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.753446326 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.767660649 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770774985 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.759003293 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.757302819 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77161784 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.801627848 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.770078753 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.754792564 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.767539827 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.774416347 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.765208327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.767449269 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.75723517 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.754002081 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.768059792 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.760945893 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.759352261 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.760638115 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.760742474 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.768356486 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.150553567 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.81732438 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.753612018 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.752965937 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.75675844 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.770327179 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.150037655 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.79984288 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.779036261 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.804999523 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.757481243 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.050723911 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.795046038 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.773247443 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.769338877 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.758442879 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.755427414 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.053049733 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.183904016 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.815407073 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.758613829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.754695643 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.773742003 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.759276976 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.754625766 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.069323343 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.793997937 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771890899 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.880893478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.771128095 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.788463624 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.756481592 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.761159687 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.806398887 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77566728 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.790462788 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.761151474 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773070169 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.774261182 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.755039382 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.770426209 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.77206221 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.758664427 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.76545653 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.756615926 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.807004141 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.772875666 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.773735808 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.780444251 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.880507021 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.755843852 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.054622648 seconds)
done (took 276.633892317 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.835996711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.757394665 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.861992137 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.756770937 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.848175684 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.829246848 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.755885917 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.754726433 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.755704415 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.302104432 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.755996656 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.761134698 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.755852845 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.756792723 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.830446917 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.755949052 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.757200942 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.20094511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.757152484 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.845215116 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.753884651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.755158342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.756680723 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.303538588 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.758969434 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.755758153 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.851403885 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.757611423 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.270355751 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.755584377 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.755762664 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.250756402 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.850994977 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.784777495 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.763811925 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.761559964 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.844603052 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.768629818 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.824191943 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.830486822 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.870497134 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.790041933 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.756963775 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.757280187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.760920794 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.759337149 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.757189667 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.789854836 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.755351089 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.762810786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.246526505 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.76361864 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.76313038 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.758665521 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.759020975 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.785351329 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.75686247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.760003709 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.847384432 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.759214359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.825896916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.327856892 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.256053425 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.758368399 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.760906172 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.758499232 seconds)
  done (took 178.129213774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.82393759 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.839037092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.823563022 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.764082155 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.807709082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.824711386 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.764791755 seconds)
  done (took 14.339353988 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.764032045 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.758233049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.809700615 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.808787951 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.759298709 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.916063569 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.760861728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.77028674 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.764476702 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.786396075 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.759632793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759776393 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.765115337 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.760379022 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.807437667 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.772048422 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.876168316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.761229667 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.761339065 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906513707 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764904985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.766601657 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.785639596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.771576161 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.759941281 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.768501614 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.322826859 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.761860879 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.758491647 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.759320731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760372587 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.801681679 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.758613684 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.760402009 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.759362476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874831924 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.761432903 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.76167192 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.75904756 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.759696911 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.760329933 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.763137739 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.761306753 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.76136909 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.761369084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.784916928 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.76223946 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.761254471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.761586301 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.761494582 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.787158548 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.760895716 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.762253712 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.765957852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.804913904 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.768993943 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.762247062 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.761303756 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.762779172 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.761320421 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.91141556 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.811349325 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.762649115 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.811965429 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.763536596 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.762760015 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.761910356 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.762489721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849976563 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.761472463 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811013683 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.761994316 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.92446993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.785675124 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.762726026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.766020432 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.766363276 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.762692877 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.761368411 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.772295275 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.7641974 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.765693817 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.77052433 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.767282294 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.763296265 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874687133 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904276481 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.763950457 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.765040432 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.772602978 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.763640624 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.807294575 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.763876028 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.763411615 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819706214 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.880688669 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.790796405 seconds)
  done (took 195.170934021 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.772502348 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.771108279 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.766071411 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.780153738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.763645582 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.765589602 seconds)
  done (took 12.316464255 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.766365001 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.770098946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.764380712 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.764822038 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.764979358 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.76354562 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.764331476 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765103526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.768219646 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.764923786 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.765281163 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.76418893 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.764780406 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.763704575 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.765666832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.763754065 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.76553873 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.764078177 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.764074525 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766115541 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.015973602 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.76564642 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.764784255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.770179181 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.76907045 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.763157717 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.779000595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.764951914 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765695813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.77365207 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.770645349 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.76461973 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.769293735 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.77144918 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.769274646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.770372722 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.767980609 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.768693504 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.766212402 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.766039457 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.767084017 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.766526697 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.76608842 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.766699146 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.769441667 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.774397575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.771560949 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.779756929 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.767255364 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.767883574 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.76678329 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.766616318 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.769223865 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.767547597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.772856696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772612119 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.772075216 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.766676944 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.767325872 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.770339656 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.770718528 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.768370076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767530402 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.770933302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.773701548 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.770090685 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.770981841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.770802977 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768416872 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.767112611 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.768826245 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.766821529 seconds)
  done (took 130.242478321 seconds)
done (took 531.908892181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.049691239 seconds)
  done (took 8.749093225 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.904742073 seconds)
  done (took 8.664555416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.318456025 seconds)
  done (took 10.021604567 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.795473893 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.815493989 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.786986 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.777818566 seconds)
  done (took 28.905892624 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.007125885 seconds)
  done (took 8.711169038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.794797163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.769186274 seconds)
  done (took 15.338251046 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.844595871 seconds)
  done (took 8.548517595 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.816866572 seconds)
  done (took 8.530401709 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.785840933 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.782998035 seconds)
  done (took 15.299315225 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.771987273 seconds)
  done (took 8.476234682 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.956221918 seconds)
  done (took 9.767639376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.795381912 seconds)
  done (took 8.570848687 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.832631297 seconds)
  done (took 8.53649268 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.854131001 seconds)
  done (took 8.558427701 seconds)
done (took 158.380403835 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.774638435 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.772360376 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.771202692 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.770531807 seconds)
  done (took 28.793041708 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.804365333 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.802474381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.806433502 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.817601769 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.807446595 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.804211339 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.798726986 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.797216926 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.815900193 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.808390495 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.807923808 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.807304567 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.8051467 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.798230912 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.807631943 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.809647866 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.816974412 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.807051243 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.7972509 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.808516986 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.773279093 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.818273851 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.807740964 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.772629871 seconds)
  done (took 45.004924564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.964143853 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.842333447 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.926586293 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.826101334 seconds)
  done (took 9.264645103 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.825184736 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.824792907 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.837209948 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.876543234 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.89824238 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.83559478 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.798657552 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.796728996 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.782662025 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.826333454 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.902747977 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.821922596 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.917171754 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.776142588 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.960892319 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.772646992 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.773131623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.825534279 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.876881023 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.890403684 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.774036707 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.824763799 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.828402166 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.823829619 seconds)
  done (took 45.776645335 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.774595214 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.78325211 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.781063148 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.777620576 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.776860666 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.776387462 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.782994029 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.778058621 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.798610069 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.776138168 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.777124477 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.776666034 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.782509655 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.775089747 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.775194257 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.790882525 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.788670761 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.776412698 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.779099523 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.78203771 seconds)
  done (took 37.316903613 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.775260198 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.619745017 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.119476919 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.026097797 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.773611638 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.775373495 seconds)
  done (took 30.797863802 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.788759165 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.782033926 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.773873858 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.835316211 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91547526 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.783032903 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.776538253 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.787587791 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.822113829 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840367367 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.795179208 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.805830626 seconds)
  done (took 23.41365673 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.775368763 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.778370789 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.779853255 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.790505077 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.786478657 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.782727825 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.784795576 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.775089114 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.790044257 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.794966461 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.784925929 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.787984564 seconds)
  done (took 43.12351218 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854560184 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650166443 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217888147 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237963292 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299192833 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979624386 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.774405034 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.861791041 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.777698331 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048623119 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.133529663 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985715209 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019602304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.526542898 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.783962212 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.25187313 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06706922 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991196956 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808707529 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417644095 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886100191 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28300669 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.483451434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889416404 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980934221 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897836492 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.033788322 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.735331763 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824880226 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78046061 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781999568 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777024633 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050106955 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898171518 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847914961 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782481435 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189772085 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.482788669 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.789304879 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.424531393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.303484171 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90144241 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781060531 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77823543 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70386372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280005836 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86968705 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.780858857 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.478423541 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.777585313 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784247661 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852792212 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.779942516 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.585187094 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473213209 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045197454 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.780680655 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77905414 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340025243 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809676713 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391708803 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.715229601 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.871978733 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487067434 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238159048 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.934247897 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.778503535 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779235256 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704452652 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.423627431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895302134 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915293068 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.79739255 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419582133 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069757352 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.223648395 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837302128 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052495151 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.566011387 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.715512112 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997356302 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.727903716 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705656827 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.625243864 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706391253 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000082829 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814844566 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.383350757 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816630428 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.861882344 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.785409394 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794387104 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782262025 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994161596 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.675196093 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78205252 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.1034182 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042257049 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798417605 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86656146 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708702759 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.782826318 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024514276 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.983623831 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.015741967 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.266083916 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869843734 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.713297535 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.799994062 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.699574378 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.793851229 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.054137542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841906437 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812230507 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899491845 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.718120966 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027619153 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748910121 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.88574933 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.163859756 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022920839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.125372825 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025434771 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842588695 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783890078 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782042199 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.494434663 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393937284 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.998083859 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.795681276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271491344 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793516705 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.783213694 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709760297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.433412531 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.164415646 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.867884358 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995941312 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.72756189 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063284002 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709075054 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920099986 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.771351923 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.996784206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.431370727 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.869136679 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030590614 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018883527 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.013973671 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795574283 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796441595 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875935892 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801135829 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.207322306 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034413757 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.785477805 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.786583409 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.499653204 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.849240703 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793363537 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.786886464 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309139721 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05877317 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.807395517 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.789750772 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658353391 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.79414594 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845716715 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786924451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787540796 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.299577685 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287744876 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.789842083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.424452991 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002379835 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787718315 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.43906533 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970709114 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.797878865 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055040289 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851247814 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.710594798 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.485107213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.48516242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784944705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.713937297 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.784697513 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788296908 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791192675 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.972871114 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062139716 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838809251 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.489964289 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.892414239 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791050941 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.787734868 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787244992 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.276244648 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822559796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396115482 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.79649812 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914365666 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.797381227 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710518632 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.787704965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787981468 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.785674775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731390435 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837673556 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.436362761 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989543445 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034791395 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.191558421 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795978481 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.446973764 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.905694284 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.802745573 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108634803 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440433791 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.800485265 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854673715 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.793698776 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.488532293 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.523089931 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350171246 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080906814 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104130601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135632816 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.288796119 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.005058157 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871441063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013709089 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306931984 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84280519 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876129218 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722725977 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801918169 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.442004093 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142862563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799954558 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003945001 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075288735 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.179628444 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924577109 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989573862 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81776079 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.70148308 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71040486 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.324751994 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804068221 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.214037879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995686456 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868720247 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.13451462 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871810036 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.788172878 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124734956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830222734 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.494214043 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141634947 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295369545 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.179661484 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016323122 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.795206153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226616765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138138011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.079640641 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.804919269 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716486794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795042884 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79458347 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.802014167 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.759679067 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.619187999 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.033327765 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793831983 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015156017 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.021040806 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05194096 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.696393047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.792680504 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789089551 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0415838 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.64915569 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83973457 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.208777531 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.253233427 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796374849 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71590232 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717863264 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.49124132 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.797444889 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.754408982 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000512074 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.894542301 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468552818 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28403411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993874276 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033926989 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.802252754 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061959863 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065270724 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.280325134 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810346495 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.888927707 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120405797 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.479851281 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.004453636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016488252 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32371779 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008409351 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236617658 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.760939995 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.789995209 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99740172 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.005664059 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.244980379 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969208464 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.500823831 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.796476124 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149109025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85062346 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.180812608 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97945504 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.876302571 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798443468 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866464337 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794551024 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.797970844 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.797698892 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802107785 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184838859 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913525537 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.803904774 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868995824 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82827142 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.359351585 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.799850234 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065555028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142441151 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126915842 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856921439 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.794794086 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802932067 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71981286 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921218741 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231832426 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063535025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.910877354 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.926583689 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81231859 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.132268071 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.033386599 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102984679 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065708474 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.674078832 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40995338 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.914999574 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.008926809 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798488559 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.99522983 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010154777 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096775607 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261026304 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.907099134 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985494515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065187166 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.151614126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793956497 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376888987 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.804107676 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185916532 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.829170258 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.175442774 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052875475 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798648665 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914446301 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798234271 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.992406153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.243939894 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454040496 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141914194 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653386215 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800580337 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072294507 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130727564 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102661496 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874908373 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800764915 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.507964387 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92599442 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.638104837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.013424486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.79542042 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998810636 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.506128042 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799288811 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068188338 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101030517 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.797205283 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.691175572 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803250349 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.800584264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009504949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009123407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043943716 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800063655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.804907007 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.60351032 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07040479 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858761734 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721682645 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.79773801 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841600518 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022669178 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813779607 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.311519953 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.498794316 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076240709 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.704533343 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813386867 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.189799072 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17904967 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129513469 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.316625643 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015272593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351551478 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.637774656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174950719 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.800411139 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.189873372 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178052681 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.799627927 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290882118 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9075582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.068134091 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122792839 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.821086668 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558958512 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.829183041 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012428257 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154836526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728492005 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800705379 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.846700859 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.796737314 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781544218 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805441552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.703355082 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227295583 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.642994847 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280467302 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.800367072 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.835438186 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.169912641 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315604783 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907834374 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81521482 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803503995 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.490330557 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.085016544 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041645432 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.290119568 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.89425923 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.799784046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798395247 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717186343 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981062113 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.986548901 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083108971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.121172733 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907426679 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801420594 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.005260865 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002272892 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.197897795 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93388836 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.916087424 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913040153 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.737856549 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.504659702 seconds)
  done (took 1622.014574784 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.803549728 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.858103368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.80788401 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.857227517 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82573168 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83478147 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.874786726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.835982185 seconds)
  done (took 56.431198675 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.79762974 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.956902545 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.801162539 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.798967428 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.801393678 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.798613811 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.95711634 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.809996486 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.801429278 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.804223181 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.807105318 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.804080049 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.613118253 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.82316072 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.800342194 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.803925828 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.806033622 seconds)
  done (took 73.535588706 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.801172698 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.239438469 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.830316027 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.798657276 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.869193501 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.814352619 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.935124309 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.855555937 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.802620712 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.056878211 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.094904588 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.827285746 seconds)
  done (took 89.655832344 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.813251596 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.801787623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.801417622 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.801828141 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.802288444 seconds)
  done (took 10.758531002 seconds)
done (took 2117.615890433 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.032053822 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.991404915 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.035818687 seconds)
  done (took 5.758052077 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.938500043 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.99182366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.104723779 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.10723173 seconds)
  done (took 9.874976067 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.081282416 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.177639467 seconds)
  done (took 5.987039567 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.120699752 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.819833795 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.181908658 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.801004625 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.801378666 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.80202809 seconds)
  done (took 22.138942892 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.799370097 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.800184609 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.801073641 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.799038422 seconds)
  done (took 8.929208078 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.798083524 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.501513437 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.802785906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.811561813 seconds)
  done (took 20.643686222 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.946990271 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.917722152 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.94410958 seconds)
  done (took 7.538844909 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.940974214 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.031469668 seconds)
  done (took 6.70202009 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.958134412 seconds)
  done (took 3.68878108 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.829042063 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.069514509 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.290485674 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.320671795 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.377802089 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.618082918 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.135540259 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.027165892 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.237858953 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.252373657 seconds)
  done (took 23.888553347 seconds)
done (took 130.03625321 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.146730506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.834558608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.005640775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.153936201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.041297067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.007405205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.022440497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.146387141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.849613092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.830936636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.159525144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.038359442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963054151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819901233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.97491599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820101443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.0526584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.167129422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.84636848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.089270297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.032996888 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.800107542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.999276309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.823906952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.03622626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.958618737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.345421001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.827221097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.979531023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.363338035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.963120279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.223540721 seconds)
  done (took 166.054325576 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.802261171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.803338137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.803754664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.803631887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.357486131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.806423829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.804229345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.80225793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.246090664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.224649926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.804117582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.338966471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.80404653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.803936338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.802413101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.803681992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.41486144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.803246137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.80315498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.804414562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.802426785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.175452339 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802527705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.193809614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.418319816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.804066918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.804078065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.804218873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.804463402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.805027308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.804986461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.802463447 seconds)
  done (took 207.393987253 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.701480664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.804985158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.804146871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.804902341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.805760634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.802460897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.803732895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.803826946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.558442254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.557557069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.822991078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.803703131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.804418465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.804186826 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.807192038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.804448667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.804705083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.746224 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.80456218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.806036372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.807710291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410007544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.805963303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414791333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.804877209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.806944912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.805158593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.806712451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.806948412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.807860234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.808421027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.805295115 seconds)
  done (took 218.083139056 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.047854686 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.806186886 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.806663256 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.795760657 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.806527208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.805302542 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.79083073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056987454 seconds)
  done (took 18.652788422 seconds)
done (took 611.924414935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.165701044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.007844765 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.984119043 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830255881 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.077218488 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.878256888 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.825738193 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.888933995 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.632321947 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.898964176 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.469523951 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.852203073 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.56581784 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.855730786 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.95170636 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.886265144 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.379274685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.480685229 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.007110245 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93310848 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.003965192 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.732039797 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.906450432 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.669188618 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.58385826 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.79143534 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.823965419 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.383154006 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.835726193 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.984018701 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.506524164 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.095310109 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.840228377 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.826610169 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.879810396 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.859143875 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.011594433 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.838684265 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.954320158 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.536618868 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.891378652 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.53756049 seconds)
  done (took 99.798959378 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.818043135 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.813680175 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.814535321 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.813887834 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.823181088 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.813855997 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.81369559 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.814649391 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.814624544 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.816027213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.813991594 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.824286712 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.813201475 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.823492282 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.813266254 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.814508777 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.814195602 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.823595584 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.814374232 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.815737944 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.815940328 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.814476896 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.809271373 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.814878529 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.8159385 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.814105708 seconds)
  done (took 48.962929729 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.810209138 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.979237892 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.052025084 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.82943631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.811347239 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.81184108 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.828583646 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.81558026 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.812266225 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.812991776 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.900005201 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.815238848 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.82689059 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.05215812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.828206259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.809972125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.808756189 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.811443395 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988577601 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.825493303 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.828786137 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.815329322 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.829633958 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.824118078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.813469141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.810915544 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.813188097 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.301758952 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.821452075 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.901097606 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.856018205 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.834853744 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.248433886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.061689689 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.865786743 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.819324797 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.812290038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903161353 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.818076769 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.81228486 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.829773345 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.816513006 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.055412232 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.339876559 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.825702589 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.811607855 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.314589302 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.915280197 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.854074328 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.82179369 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.057932882 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.830885687 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.815712688 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.814602 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.849347397 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.816313157 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.813065629 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.172211164 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.825114998 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.830457113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.819270486 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.816389695 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99209619 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.822048152 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.982841272 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.823763058 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.820167278 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.814071749 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.058832932 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829649771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.353286596 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.828480991 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.813347829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902033236 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.988033557 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33740462 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.826084691 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.994188799 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.264715313 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.839426723 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.82243221 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.296110728 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.840750976 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.821158524 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.814810345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.8150218 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.813979839 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.857843852 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.830169682 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.267259203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.354993123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.189722144 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.842071271 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.829160644 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.812975347 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.172348995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.822936376 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.81408214 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.050392281 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.358251987 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.829972486 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.822427851 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.332171445 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.830687928 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.834695112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.823893389 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.062620862 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.831044736 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.859023738 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.815624406 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.820515598 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.818327053 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.832918601 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.823229869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.814855933 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.32514493 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.92418773 seconds)
  done (took 225.928449146 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.817510342 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.817962621 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.816691581 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.81871512 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.813366806 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.815645504 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.812931209 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.813640488 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.815308504 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.812677852 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.813112559 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.81491004 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.816709204 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.81967696 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.820153653 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.816967053 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.420814733 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.81631337 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.81675653 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.815505422 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.457685537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.819331737 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.815708744 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.816266026 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.817061476 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.818243779 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.818824743 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.819033918 seconds)
  done (took 165.856711253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.816184019 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927491646 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.840467696 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.845385808 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.825548295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.819365381 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.913971254 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.833790435 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.822875568 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.818466102 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.819063248 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.877133247 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.828023628 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.916474188 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.847639063 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.924871072 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920198234 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.824220239 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.817955478 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.818736733 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.845281597 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.826268795 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.878699475 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940498348 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.838814531 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.931003488 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.837253503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.81953879 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.818694583 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.930104189 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.84013639 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.879863189 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.847696541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.836919918 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934722723 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.934835496 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.922407917 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.924262194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.823374407 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.819203206 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.820330537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.820110422 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.931184687 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.838186839 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.819805742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.933040213 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.841248117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.819181739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.821172125 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.820722751 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.832041775 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.837346591 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.881317804 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.947171579 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.857380982 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.845263298 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.917654028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.94090686 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.822567782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.917414694 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.825763129 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933254804 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.841807988 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.82081162 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.8226794 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.824670274 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.849836399 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.926857233 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.924134334 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.827573353 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.91659584 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.857458933 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.829381044 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.823925987 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.821468325 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.931322507 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.937609548 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.856200331 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.85584816 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.850884369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.828201069 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.820466604 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.822693858 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.838067629 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.826328097 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.935387206 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.93691339 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.828363742 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.822776371 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.822695636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.822104131 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.845466383 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.941675375 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.857949834 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925303865 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.885989035 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.895982905 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.838322331 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.836710806 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.826635142 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.882198912 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.836662983 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.835743213 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.110857042 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.880483344 seconds)
  done (took 197.483985715 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.183983361 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.867868126 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.876675868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.139723435 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.176561936 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745623803 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.865117685 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.867410828 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.891519223 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.053610362 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.943429696 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.887193807 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.856364933 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.843350734 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.868683969 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.889961162 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.877357379 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.195077034 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.082278519 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.012414847 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.856651659 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150388102 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.178350297 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.440209026 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.916512349 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.284396364 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.439942745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.999483344 seconds)
  done (took 60.147240734 seconds)
done (took 799.915574876 seconds)
SAVING RESULT...
DONE!
