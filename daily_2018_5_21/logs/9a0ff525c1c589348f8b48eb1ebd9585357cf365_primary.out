cset: moving following pidspec: 7177
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.750668784 seconds)
loading group "string"... done (took 0.580472004 seconds)
loading group "linalg"... done (took 9.788901007 seconds)
loading group "parallel"... done (took 0.185003144 seconds)
loading group "find"... done (took 1.671600331 seconds)
loading group "tuple"... done (took 2.207731663 seconds)
loading group "dates"... done (took 1.514263346 seconds)
loading group "micro"... done (took 0.217357323 seconds)
loading group "io"... done (took 0.622373027 seconds)
loading group "scalar"... done (took 49.481338329 seconds)
loading group "sparse"... done (took 15.6578171 seconds)
loading group "broadcast"... done (took 1.341496137 seconds)
loading group "union"... done (took 12.129373663 seconds)
loading group "simd"... done (took 3.10977924 seconds)
loading group "random"... done (took 11.9327683 seconds)
loading group "problem"... done (took 1832.911269418 seconds)
loading group "array"... done (took 28.678657634 seconds)
loading group "misc"... done (took 1.312526593 seconds)
loading group "sort"... done (took 4.558421384 seconds)
loading group "collection"... done (took 21.931481811 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.757065777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.151933138 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.239648125 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.383431516 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241859604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166189202 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.170349454 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.591030139 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048168224 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227903607 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151742052 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.60339114 seconds)
done (took 6.411132112 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258531883 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.399452257 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17796972 seconds)
  done (took 1.192826574 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072251687 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.183056131 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110568815 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097493489 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11157586 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111110966 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110580234 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110059987 seconds)
  done (took 1.453174487 seconds)
done (took 3.605373549 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.544907511 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.879605583 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.57114304 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16688876 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.324628313 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.434702186 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.346099789 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204841509 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105823477 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.104920949 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17810522 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.412460184 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.487483034 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.021265742 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.10768781 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094037389 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132182389 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.779229125 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077816866 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132246705 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.588079562 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.220255639 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.110128708 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.115665256 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195850856 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116155768 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17812753 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101995727 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660351694 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12931863 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.200533597 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096213609 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162774214 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.246555938 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.225463369 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105887501 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67615114 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198878697 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099674219 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100275892 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676786305 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.130055232 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166274376 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103519079 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092607927 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189933896 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116843451 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092353367 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112506959 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087391812 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164109459 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.479769745 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.09112759 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171849603 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.089319049 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695489801 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098245476 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284793041 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134185222 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103471467 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073531835 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.102972588 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158375957 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.105724663 seconds)
  done (took 20.875168658 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.158803938 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.173754506 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09022955 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141748099 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143596909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094661279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081663024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091552983 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127302014 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.24026399 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141187123 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172153673 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087554535 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084552073 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144575679 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252500241 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121999847 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106807879 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099341962 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103245783 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125922137 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111776178 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108118636 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093318716 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.184315615 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203065466 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107678202 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121304683 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098320411 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115397626 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137511433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147669816 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.08924152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082391135 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187820032 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119829199 seconds)
  done (took 5.330568308 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.229869737 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123420951 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.240553209 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179700557 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150380797 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167869087 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16215134 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303682868 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.327605049 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177119777 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111504473 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11178361 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091870649 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083680546 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093665425 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.69650553 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186660375 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150675716 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.150741512 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101080144 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085735714 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380600992 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097536072 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077988006 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101118532 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072989526 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224021824 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100550955 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.229719409 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083592153 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108321102 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129233212 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196065177 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133190434 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12613494 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101623532 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097099776 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221304946 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.212034229 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089713735 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102279309 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073925491 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134656282 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133385667 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13507639 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095639383 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094342655 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240981278 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080744498 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120725777 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.150841224 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210192751 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118097529 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096407476 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336557 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114136126 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08691324 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096875277 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.311786186 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129378231 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079033875 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093915843 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084654853 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092823739 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.427789272 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108075274 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.971625312 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096084519 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16659666 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098508361 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105036446 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08180143 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101159826 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116029124 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077718909 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092144304 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07760544 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09351985 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081666769 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11917063 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099756465 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077362927 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097454757 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154639183 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094009964 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114653806 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120543378 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083545709 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094336241 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124308228 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077916647 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098680722 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.174219127 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102486201 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102863895 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099334254 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1431954 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094389866 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.215107038 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079072418 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122577366 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096918727 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110203592 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114312682 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09520511 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081402569 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09221849 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075611168 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161927367 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078128086 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095719711 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099193919 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079951457 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11044845 seconds)
  done (took 24.195450762 seconds)
done (took 51.016685726 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.536282452 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.122680586 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121987308 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102828376 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.122572907 seconds)
  done (took 1.705040861 seconds)
done (took 2.374526154 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.395623799 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190862732 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127590981 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190086347 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105548091 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19592445 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.197177904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101401284 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.228275229 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098194552 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190140361 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097757783 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087898454 seconds)
  done (took 2.90572662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095904307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126511668 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096401554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113399773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07466524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113508635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109698026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111176538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110350585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087682277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093272961 seconds)
  done (took 1.801506639 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092411514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121887775 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083425314 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109311252 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076046435 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109554054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091891766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125860294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10743085 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089462108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093613873 seconds)
  done (took 1.768749537 seconds)
done (took 7.138338099 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.20966756 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.586559683 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146314275 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203636554 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.390880382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250749084 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.62157484 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167900876 seconds)
  done (took 12.461121347 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.120037003 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099441587 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099989434 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083609654 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.146585168 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097524786 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084136114 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099766194 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083827633 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100679453 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085183852 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100558002 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084119045 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098750839 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098034126 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084038078 seconds)
  done (took 2.309047578 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123130403 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12284039 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107976422 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.1100311 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088335792 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107133472 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10664502 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091669995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104011362 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089476312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109033894 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107433413 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091884077 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102484807 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106785104 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096365975 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103579548 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106442862 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093192328 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106676188 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094209946 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105502462 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109115972 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093157019 seconds)
  done (took 3.269067746 seconds)
done (took 18.707344511 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178084959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098223499 seconds)
  done (took 0.955040272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14945942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151309987 seconds)
  done (took 0.98533386 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111703042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097427638 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142018242 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118698524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08281347 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097922361 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136547975 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083183838 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09781231 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083718288 seconds)
  done (took 1.739725455 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086664406 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10235413 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.096637551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.147703047 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112942696 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10171665 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087834381 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103934461 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088510463 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.098892851 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106816406 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121901175 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09065141 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125532616 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103093389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093498225 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112277033 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105930333 seconds)
  done (took 2.576145055 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080520226 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098416472 seconds)
  done (took 0.864428493 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087831161 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098846697 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087531812 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102332977 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098559478 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083864641 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098385112 seconds)
  done (took 1.341991458 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.576266589 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.282316823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.388830215 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12262826 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144201624 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.40890129 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148530518 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116394284 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099103759 seconds)
  done (took 3.017753677 seconds)
done (took 12.167954943 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08820797 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22570195 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.656352208 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124404604 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.098908831 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142632517 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.327798314 seconds)
done (took 2.355447726 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351120682 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.160305015 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089545273 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096200526 seconds)
  done (took 1.383352807 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076125239 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107129522 seconds)
  done (took 0.874541394 seconds)
done (took 2.954121982 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079144632 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.134314993 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078695589 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097740836 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079062839 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097385374 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078703454 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096748572 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079305361 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095668517 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079764087 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.096008397 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.079837409 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095153055 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079592475 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096220791 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080508244 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095152258 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080600286 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094618825 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080223736 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09527214 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079085655 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094590056 seconds)
  done (took 2.87648995 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103439037 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10139924 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102408539 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088064885 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104530608 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086606402 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102862357 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098874776 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088142165 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098106098 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087449679 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103838627 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099833644 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089626695 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099242395 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087433657 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104513457 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100959918 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08411388 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105779944 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087490845 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100120049 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104565738 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088242553 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104566175 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102831674 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085035706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099072127 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088185588 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104801855 seconds)
  done (took 3.599426023 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090154405 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093168741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08258348 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102674117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078213683 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098611575 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078663212 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095231694 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083203526 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096523565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0834265 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096122204 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078564694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099561328 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082909206 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101501779 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092080998 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095044436 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077552253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099535934 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083556141 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093734186 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080126912 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097516692 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08152187 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094333329 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081609797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097328453 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081872864 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096183115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084167992 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102204098 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080939645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107459607 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083233346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09611604 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085079837 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095222033 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082072014 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093700781 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077763431 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097728332 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077599528 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105605142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081392971 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10008552 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078539927 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101096566 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081195909 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101871078 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.092464086 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078552297 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099789899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084048287 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100031423 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078205966 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097580017 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077742435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098600444 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081413244 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093164895 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07857943 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101271864 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082758948 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115899428 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089677326 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095650831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0839397 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098935688 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086347085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100756076 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109842609 seconds)
  done (took 7.233711471 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095808598 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110278123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083626706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099554042 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081860461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098982161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088833152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098963216 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098852479 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092037714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097834357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083946691 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099477293 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084261212 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097544759 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082789175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107241451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099163055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082548969 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099069771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082493028 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105626796 seconds)
  done (took 2.776142075 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.263783338 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090310499 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153135531 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117088826 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121777804 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09964212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.1030021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104582721 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086530398 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111478218 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109295444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088654659 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122785862 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108965456 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093994598 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113898919 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104332897 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097081882 seconds)
  done (took 2.796964027 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100450076 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102685154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109535148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103154218 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103968982 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08674912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111371202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116170707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085253032 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101046908 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095516573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101907796 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085222904 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102375324 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102016459 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085672938 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101760786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085478578 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114449385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113458109 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094658394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112148173 seconds)
  done (took 2.926058101 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100369609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1019563 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136952889 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090205332 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101561334 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085003102 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108965654 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085493701 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109357156 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100678832 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.207737511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099725772 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.094521206 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103110055 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108048149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0869302 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101468625 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085542978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101510595 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083606377 seconds)
  done (took 2.802556735 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177919863 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100060254 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11759543 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130839858 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100295332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118045467 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130783634 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100563432 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116808028 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134457093 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100518054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117647436 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130550139 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126316638 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102545936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131309936 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131480756 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131222693 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10113098 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118242462 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134470267 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102275141 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12925445 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117805714 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101271454 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116768194 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100493264 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127720143 seconds)
  done (took 4.063022152 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080953779 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080908174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09998255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081467042 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09824997 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080564795 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09900163 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080727074 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099105715 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081632012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.099470157 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081854168 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098881466 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081889394 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099281278 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081938074 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098260116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08136707 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099568259 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082360512 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099292872 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081844457 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099879801 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082272181 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099458008 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082079926 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099612375 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082450236 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098640091 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082104641 seconds)
  done (took 3.411253333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094992836 seconds)
    (2/2) benchmarking "in"...
    done (took 0.125997918 seconds)
  done (took 0.936623553 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.090171737 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11981672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082678138 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101985909 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0929059 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101259873 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111683825 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093308327 seconds)
  done (took 1.509132934 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15058609 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.153198695 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090855721 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116036988 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.15297911 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147007042 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149003482 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090546287 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103769339 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077186442 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.145372272 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096859915 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087545785 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10344979 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087483529 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111494157 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100958098 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09539886 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109675258 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086818671 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107134969 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096858218 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107689028 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.113667266 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080940883 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108933277 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094327732 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113739966 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101596277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094291589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.104088855 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084830804 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105319231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09059531 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102823644 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.152719258 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114893955 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086691089 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106441151 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091466455 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112490993 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084143902 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109688597 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102705351 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092386179 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10685636 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091099647 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102257432 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080256881 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099253936 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085945076 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102051661 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083123521 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108368978 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107000072 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096751277 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104478483 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081522982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101562188 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08410837 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106780976 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084556441 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1110774 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105930786 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086075414 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10668426 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088749016 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.104050355 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.085715942 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103173122 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089059207 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124205899 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109723322 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08969378 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108331971 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085214484 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103667714 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109343335 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088390794 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109226062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088607356 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113056908 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086794264 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102274533 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101251901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091692151 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.104409134 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088810427 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095186825 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098975244 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.105088781 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08495398 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099385216 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087019851 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102541412 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105471193 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080944602 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106853189 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.083660476 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109639819 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090829867 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100301357 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091460465 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107956867 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109126505 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090661134 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.147916227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103585073 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085131415 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.105396572 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090296387 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100736031 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0877393 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100537229 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081815447 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103047567 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.091194643 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107129878 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.105371376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090525787 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105066959 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092705008 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106217673 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083269872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102097636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089909687 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114014577 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110613339 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087526307 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.103120667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086848066 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107598822 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090936188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105051382 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091433422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10454508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.083864294 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.104899151 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109468531 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092340867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102803681 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088574327 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110335813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106122275 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088922306 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110337577 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084609853 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099682022 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091536385 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103034296 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086452039 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116621968 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104264855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087665629 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102387112 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096963459 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104464935 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091088609 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105291567 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089681925 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110958311 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07916483 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106280288 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.105856851 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092824694 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104548213 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086463832 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102641441 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09301171 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100715357 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08940829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098971287 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082559551 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10967103 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104747214 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088872285 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102955663 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104244546 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119400146 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091545931 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107977454 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107849529 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090264674 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106093566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090779277 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110979225 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091317231 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105603101 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08861149 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111445394 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100232338 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091531161 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106420292 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091075703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097473153 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086847282 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098015802 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090374738 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111373707 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090901045 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110822625 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087426173 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106247657 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115561466 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086392749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.108508336 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082256737 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108743476 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096477535 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111469881 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091615543 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109910649 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107892622 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086024735 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114010006 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087415676 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107304254 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.087860076 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100661656 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082758644 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111982924 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105586995 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086576836 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.102894078 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092641027 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11136801 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09703741 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100965149 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089602454 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113867856 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103575053 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090900521 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103560366 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088962071 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118055493 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081405481 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105101253 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11068711 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091333465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.103132131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087187134 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.107121367 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09217759 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10722908 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087849005 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107847621 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094234737 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105971504 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.083987469 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105177381 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105550857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083430974 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114210989 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092818808 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105309318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085546133 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114661585 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093094235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112460267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108259578 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090798675 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111118701 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.092719124 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102502499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093077309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105395427 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08225107 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105320645 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079695777 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.106446097 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103972274 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091693538 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105779512 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089681818 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108731146 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091007787 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106001596 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109189836 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1033967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101073278 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082013755 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107109359 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108033225 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088990317 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104235438 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087670126 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110226598 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090367087 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112584955 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082527633 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.105126526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091797769 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105598664 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110507435 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093749683 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112365054 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086391535 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109951951 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086876892 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115022818 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083779454 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109004736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108413105 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089781089 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105643902 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087923012 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105305708 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081943531 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105444773 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093045459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103518072 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108455038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089045369 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106871417 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084628515 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104705387 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.094501701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102903987 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094303381 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.105464528 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083393025 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102607711 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091879457 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110131113 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1127829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085529511 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107913553 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093850786 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108541524 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085421991 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115828447 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095128367 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112190562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115638507 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081850483 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107284942 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097452109 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.10450156 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.089051419 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107126909 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084045828 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113404868 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093514329 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112240822 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107024719 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084149848 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104833333 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093460733 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109352321 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090150305 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.106826769 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092003831 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104542726 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08969978 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111932168 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090746613 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113741304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109973975 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090765309 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106512489 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.093140488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.106514507 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084419845 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103360286 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087475248 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.112807349 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082008115 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.109562706 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090486072 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108387215 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107116646 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091994949 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105523401 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089153662 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111382075 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08702574 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117724417 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08662394 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105805403 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090826216 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.113252598 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102292606 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087914939 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104519818 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094616325 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10955494 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092460429 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110386225 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092723069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.108289081 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091167212 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.111902861 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111216388 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084732973 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113309565 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09738472 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107992723 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087787226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10854185 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083199369 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108860645 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.113615402 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089264558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114856786 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094006485 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107686112 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089274428 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11199836 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090107924 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115077129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103820527 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091137729 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.1024977 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094140834 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109354066 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094968983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106740106 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083948724 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11142673 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090922554 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109998865 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114675445 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094280539 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103153682 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084009706 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109736759 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088965653 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118938658 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088544157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109311901 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108507431 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090340462 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106076772 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095346315 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103480157 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088100646 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112171282 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092011571 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105415627 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084007827 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.110505305 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090468992 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112075188 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109949871 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086253414 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109958655 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.096732145 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109785203 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083182127 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108681619 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095496011 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110793611 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106389749 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084554849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118239498 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094367348 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114575758 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085498055 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112104986 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10759043 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090139058 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.114064622 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08949358 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111729786 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089780821 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113233708 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117259024 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083991428 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103830219 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099339054 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111695155 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094061395 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.108832918 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089796241 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115394581 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116275164 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090106892 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103504569 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085982739 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104573731 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084984257 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.109143814 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098706425 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110481592 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089215841 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110749633 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090756075 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.108674276 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089433331 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104049738 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114981647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089021288 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116172634 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085126034 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102640558 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089553522 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113113286 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086364023 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107072397 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.088247046 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.109753899 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084809533 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109365384 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115501031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091553237 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.112963105 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090972719 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10938513 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089760994 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119644899 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087725591 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109525884 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120121287 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095753039 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111621786 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092372151 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115603103 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.094750602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.109872179 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.114745102 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089846681 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105725185 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.096556027 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.116368464 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104186185 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110795837 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083591594 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111406236 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085788982 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104798822 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11599138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096259543 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114749387 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092066653 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108285088 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096595704 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110155699 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112381629 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090151895 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109785995 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.093628873 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109320396 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09187807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107943709 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095577875 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.117000822 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094303659 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116607732 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084649396 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12046341 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115844098 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.096613752 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.108413522 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085654048 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105603351 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091369839 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.116630145 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095408635 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.111243728 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.090618043 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.113532832 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094219573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112063789 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109410816 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.096066571 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.113359343 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088601229 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114353272 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086644974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106814124 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.088721374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.114913141 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.096459516 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113972061 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119803196 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09559442 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111227494 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089053569 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113673378 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090699068 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113521483 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092062896 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111628568 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104576633 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095597136 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.116504933 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09364542 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115871415 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097948557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111698483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094346365 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119419569 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.112879796 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.089182987 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112975212 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.091789545 seconds)
  done (took 60.780464559 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163977211 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099278086 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111296315 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09114416 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140913066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112332133 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090260093 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111613609 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09194764 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124810732 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109526561 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091481092 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135482425 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142810964 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138338698 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125466514 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091509074 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11301022 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089908637 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112613627 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113388943 seconds)
  done (took 3.169098172 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110180085 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129800993 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129575851 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.132127051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101333518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127214473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.129117363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12643657 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111365363 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122498807 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132504363 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.128369998 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103739095 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12271195 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123442796 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122922066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1120111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121060774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128331692 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128501937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103765897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129855608 seconds)
  done (took 3.445596672 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095889291 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112994204 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095075298 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109236995 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.094660897 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109301447 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.100895784 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.11029454 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10042719 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.110966936 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.087153226 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.108399284 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09208688 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.110186563 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.088177316 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.11040568 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119938647 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094835224 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.116360357 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089734851 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128410179 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.089993079 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.111912596 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086960269 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124598019 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.115844242 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091215484 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.114550824 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085736497 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.113703049 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.089653065 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.11313478 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093996542 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10855285 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.08577912 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.115217713 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.094088252 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.110706643 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.090286009 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108829757 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.090334828 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.11583309 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11719031 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.090749752 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.109962572 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089638468 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114327495 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.090394426 seconds)
  done (took 5.717894373 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12618621 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.17290439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095854547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.160859325 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13326959 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.128193545 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094840184 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13827075 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.11577288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118471801 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11424091 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.137166817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118405883 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.122332287 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099143497 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120276799 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100061513 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.118314137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125498082 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096719733 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124994511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120831803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.132477422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113924202 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12102022 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.116581867 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097263456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123309253 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132044599 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106579146 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122477624 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124790012 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134369029 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09648672 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118442147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09755362 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136005986 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119456424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.100077745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.115693951 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11834784 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101350586 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.121177216 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13599567 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099921732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.121502155 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119050746 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095342878 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.133675097 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118173952 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108264297 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135470155 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12305082 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098769312 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122978641 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133715404 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119076137 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096280468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.121549187 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132980684 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095751462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121955237 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134780686 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097891602 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127228572 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136065256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101564037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121045375 seconds)
  done (took 9.040971053 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122113857 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120940861 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138005184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137704015 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105519095 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12363221 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122553048 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103629857 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123564454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131154784 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103140689 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.233985133 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.098039966 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131257237 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123737672 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103262457 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123802682 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123595897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102865796 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123969882 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.123622511 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117337107 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.123474859 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136793505 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140468791 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098650726 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12381032 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123888727 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116432949 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124009993 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1392608 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123404266 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103166346 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137010366 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138851141 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.124473424 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09476593 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124499697 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.123028467 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104288188 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119726897 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138669846 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104287193 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121538076 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102829449 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12541906 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137655606 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140886856 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131375835 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111151757 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124094572 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137055449 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122425299 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103701469 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13770827 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148820227 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139067129 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137587199 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103068831 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.138104761 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137604569 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14977903 seconds)
  done (took 8.529334373 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08650384 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089340921 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115088195 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.091817904 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11463365 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091008548 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113073312 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092326211 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112913741 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091729713 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113567034 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092458126 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11281435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09173192 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112801706 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091108902 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113124044 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091867536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114066761 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092013288 seconds)
  done (took 2.804392904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100175384 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136920102 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.096182818 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.126836421 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.118699047 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105467042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.116431453 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096087726 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118086721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116786372 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108592973 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129073574 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117378214 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105291843 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129830958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.125925355 seconds)
  done (took 2.631424316 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114641053 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136134261 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.177200472 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.120728472 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.096530349 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.127115035 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.096040639 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122296915 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.115010585 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103403052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.121723744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.100566542 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.117888518 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096911527 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.117385841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.122281478 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095433892 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121710854 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.096406929 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.176571168 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123775314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099215094 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.119004438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.122291612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099613151 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12472258 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.103896588 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119027631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.119265984 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.097318169 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.121720441 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106706683 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.116759785 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.122658519 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097955803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119021265 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.096670798 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.118151052 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.102118498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.118801378 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.09773725 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.120303299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.117972017 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100232035 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.114874146 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.097860701 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.116067409 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103824542 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12078641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.121210477 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097520888 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.125328661 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.103440011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.12971262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126922958 seconds)
  done (took 7.102883508 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104199815 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11520929 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.111436922 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115123547 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097318672 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.121945494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118681128 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101193533 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.120375911 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093406181 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.120126384 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099016866 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120955436 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118480061 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100456626 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119035117 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094671108 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119827538 seconds)
  done (took 2.777185243 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097896617 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.117310288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103548515 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.117455693 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.096529332 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118869474 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094913042 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.116805669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093781524 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.118055063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096999017 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.118207767 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09376726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.117594795 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117921769 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096907478 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117519254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095480196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.118854258 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095168575 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118906212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095210953 seconds)
  done (took 3.146048454 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104534712 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.177907538 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.129032824 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189164728 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.118748199 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094288634 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130001122 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118898307 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116740254 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11704502 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.093801397 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.117215933 seconds)
  done (took 2.300808184 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120501633 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157266842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120251023 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098592322 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132325686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103137001 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125359437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125312271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137656714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120476027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127014742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13805799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136023042 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138909865 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110265709 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131936931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125060976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104880943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121385511 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147758696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106023448 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136733174 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125895601 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125283683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105158019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139919477 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137397303 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143005747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10536245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137474321 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131008658 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125929408 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117007652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142238461 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119480114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136062518 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104483925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148542159 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131965657 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139627663 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098780021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131859348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137578459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132864519 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116306105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126325262 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135504733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104159678 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124872335 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15575486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132326079 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140150028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108490992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137302795 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138027413 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158875125 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142125478 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140679949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132633016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120130667 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1410781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13134764 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140323951 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142802063 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110091847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141910478 seconds)
  done (took 9.298963443 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13730563 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116533198 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124469927 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142824433 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118435344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126990167 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126291586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105521007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126191478 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121426053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178070362 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103112028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138156077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139811361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125111356 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10476931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128880569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140031617 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101121311 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157216214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126903872 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13963839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141504211 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138473112 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121046581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132023682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12737521 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105400245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127714526 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12698192 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113561333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130042863 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139863585 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120520953 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118389359 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126633742 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127046135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114622234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127328443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133240974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139029852 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149496928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104959666 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126429972 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144422368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105282112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126703101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121636897 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106272929 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122246953 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144910016 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144344129 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12114331 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141530452 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127341879 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126649126 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105891494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127115313 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125658944 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113075003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140888003 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126184381 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158135752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105741326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129173653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1407541 seconds)
  done (took 9.227991213 seconds)
done (took 165.597065423 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152156508 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.183466802 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.160031905 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157699041 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105972959 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125687125 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14150906 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153474378 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092661251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113382903 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.090986809 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.117610551 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158699923 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107101995 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086062949 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113114183 seconds)
  done (took 2.852342605 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207436149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332660877 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136411858 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123776944 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101911082 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117335389 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.101805577 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.124583984 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117414452 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108809295 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11741403 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095255816 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130012911 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.116757989 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097715404 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.116903119 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12934744 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097437952 seconds)
  done (took 3.175845898 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113651603 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157094326 seconds)
  done (took 1.077185034 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125308503 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198174749 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.337844017 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168996628 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.146883318 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121289022 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.171663281 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13869647 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.207598869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136951347 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140611347 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.12016804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.129611749 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.128730307 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.132723256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101049869 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.15223697 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13266488 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108764977 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.124822831 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147235171 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102350263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12907655 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109064011 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.225651102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120062307 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.123216727 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.122529826 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102846997 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.129350643 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101961701 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.143559648 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135011792 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.215043595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106789322 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.210392854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108135229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122580392 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.130162562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099075184 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.128668587 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124857926 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.118171974 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122775251 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.123258013 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110201853 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123997826 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101357295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126643837 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1334225 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125997626 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103578529 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.20526802 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112335603 seconds)
  done (took 8.270292864 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.937604671 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169427312 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097054403 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.064519695 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139945229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131474965 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.94047623 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115765107 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.28593632 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.935981013 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1297481 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112655218 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26704765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.302630925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.189192983 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375660272 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.797510226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132041115 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.121898083 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163170426 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13094115 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147725182 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141401571 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.457258776 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112751452 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091720124 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1237342 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104860096 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207136743 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095241847 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121164088 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231086227 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295002803 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234186661 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121268933 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098405226 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115772156 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.197760593 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.317184509 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.253010169 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190196165 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11586695 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096373079 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131805849 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143555606 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092092698 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.214510799 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.202981688 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.224043856 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124819473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113194153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13204202 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126619422 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.191253154 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.116169305 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.389029251 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386338495 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116536842 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1110744 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136408175 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.309881264 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115653511 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.270717931 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145734528 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.251577757 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098566109 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868582292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.211675856 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098602515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123794658 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104914406 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126813072 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122761443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187449248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40407561 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133019556 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104247079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119044222 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280497819 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096388577 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116370155 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19765057 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122529984 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109566001 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13320351 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131330267 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.197228364 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.297595568 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106248143 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125770531 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124611199 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112974906 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122189409 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.261728653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.262353537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1858372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.262827154 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102249884 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.209142486 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.196137744 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129273018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.199809496 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130950414 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135545475 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108923767 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.281833849 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.162990694 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098695959 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127383622 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108961234 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.187692705 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10220208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13243164 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.198818895 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.521800887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193988288 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115505252 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100951596 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1297177 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21209417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109988815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304647093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126678564 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193533101 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130486599 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.1153018 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110444614 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.214082735 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107377604 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130453433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129930106 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106363244 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.301071632 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.257237891 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131812941 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.276207463 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.196781261 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099880945 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.219030657 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103703421 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21473863 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129145267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106556199 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119764866 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.856925895 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128205393 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102909535 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122178856 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.213154428 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113040107 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098927238 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113511116 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09420793 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849497114 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120114219 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095062852 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.117881042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100187943 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125806741 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129676515 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10651956 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.208413161 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.27623123 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13191077 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104258776 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116671934 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.188736326 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124638168 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.097030152 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122215365 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093747791 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134112637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120622916 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094926104 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217191073 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187167246 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.264089161 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58944182 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1188036 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095827502 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.290760922 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092226032 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346070449 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130682495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.270412348 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.217126408 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093207717 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37876709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.219275371 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.214821499 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10085929 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.224573679 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092253903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129425543 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.211022556 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098098399 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126930856 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184439667 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138429428 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131917383 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.201348043 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089430167 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279157915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089940286 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.216180935 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093895877 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123288559 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.356870566 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11764463 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131576177 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191664264 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119659692 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093772094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.802144473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089451924 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129633261 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124319703 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.26307753 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.191991025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128036555 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12790183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127568224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188872098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.262216028 seconds)
  done (took 49.058809124 seconds)
done (took 65.234496135 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.333668315 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.291955463 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.342178093 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24027155 seconds)
  done (took 2.115542886 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.230697512 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164916954 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.194196599 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113570885 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.202787346 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115178406 seconds)
  done (took 1.847528948 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.552426579 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.42199438 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.37469832 seconds)
  done (took 2.177111543 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287559707 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283618204 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367490942 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.504090683 seconds)
  done (took 2.410576366 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.26730154 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139990259 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131938298 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.189698936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.233322037 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.232853891 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158523556 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175879648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.117923374 seconds)
  done (took 2.528324995 seconds)
done (took 11.909250321 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.142840937 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.374809739 seconds)
    (3/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.18705015 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.171447463 seconds)
    (5/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127835245 seconds)
    (6/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.166206169 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.248895682 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.17161861 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.295496047 seconds)
    (10/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.361025992 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.350495611 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.127079086 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.255551977 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.317463648 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.238822363 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.270205142 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.249498005 seconds)
    (18/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.201510406 seconds)
    (19/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234741059 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.194616091 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.230216272 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129085465 seconds)
    (23/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.096930584 seconds)
    (24/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.231477477 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199625778 seconds)
    (26/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163434236 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.316220615 seconds)
    (28/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.265460134 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.124077808 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.165141754 seconds)
    (31/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.331421692 seconds)
    (32/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.193977493 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.101651758 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134156827 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.122805267 seconds)
    (36/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.196390526 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.149475654 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131883434 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120933293 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080236775 seconds)
    (41/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.105662415 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.176372462 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081918691 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097088067 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.155310172 seconds)
    (46/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200018053 seconds)
    (47/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122437629 seconds)
    (48/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.267706768 seconds)
    (49/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.167444944 seconds)
    (50/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.203132408 seconds)
    (51/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103284018 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100154292 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112010191 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082363124 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.26119072 seconds)
    (56/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199764182 seconds)
    (57/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.219369764 seconds)
    (58/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123495867 seconds)
    (59/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097031938 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118905156 seconds)
    (61/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.219694892 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088971976 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.198053486 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080727885 seconds)
    (65/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.186795418 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.17399717 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.237199717 seconds)
    (68/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.216051395 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128394895 seconds)
    (70/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.103510593 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.152049978 seconds)
    (72/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174960945 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133532257 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.27660287 seconds)
    (75/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.082482002 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.176401875 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.157079137 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080863658 seconds)
    (79/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.185061666 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118841486 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097340208 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.115876728 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099586572 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135707933 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087170947 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.12106037 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114680306 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.223894143 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.103308203 seconds)
    (90/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082088077 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121543909 seconds)
    (92/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099591993 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115941582 seconds)
    (94/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081248789 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111503746 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100336432 seconds)
    (97/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.101538921 seconds)
    (98/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082856972 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079299325 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.104989809 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104722762 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104389013 seconds)
    (103/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099390364 seconds)
    (104/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126038977 seconds)
    (105/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078982889 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.200685605 seconds)
    (107/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.115986236 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11127364 seconds)
    (109/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.104410872 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.149562226 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1328709 seconds)
    (112/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.2209017 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081615417 seconds)
    (114/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115581282 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097399717 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131593166 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098381232 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124238984 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12177702 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100415777 seconds)
    (121/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104203647 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081841425 seconds)
    (123/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080006465 seconds)
    (124/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120989577 seconds)
    (125/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197407233 seconds)
    (126/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083876258 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.08448742 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122448158 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137054718 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114349261 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123144039 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080624741 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.105171497 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097868018 seconds)
    (135/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132221079 seconds)
    (136/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122025814 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098139538 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103099415 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098002577 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.103352151 seconds)
    (141/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099214808 seconds)
    (142/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.187718831 seconds)
    (143/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.179127645 seconds)
    (144/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082593555 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095869126 seconds)
    (146/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113852008 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081635473 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105429075 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100070807 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113810654 seconds)
    (151/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088463828 seconds)
    (152/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.105967745 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081704868 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082393547 seconds)
    (155/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104700957 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096578059 seconds)
    (157/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.106822261 seconds)
    (158/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.181583968 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098983914 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12046893 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114917216 seconds)
    (162/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105254624 seconds)
    (163/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100611299 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112438924 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.091161655 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.08950885 seconds)
    (167/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.12817102 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083668165 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114277032 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120176077 seconds)
    (171/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08383071 seconds)
    (172/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.185450792 seconds)
    (173/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196524766 seconds)
    (174/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116072858 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09094302 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.105540439 seconds)
    (177/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081162313 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106247346 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114739424 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104298904 seconds)
    (181/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08046551 seconds)
    (182/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087383208 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.106133471 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083122299 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104497185 seconds)
    (186/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.08078211 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121067278 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088692063 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084215393 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123241699 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122278242 seconds)
    (192/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.091015474 seconds)
  done (took 27.924746306 seconds)
done (took 28.76540475 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237476999 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.113007035 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.12602764 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125112469 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.186036032 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107017723 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.136672114 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.127491811 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106785662 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.12045558 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091697397 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132288365 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099984772 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.208910011 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.108610448 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118981501 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093685183 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130948025 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136370826 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.116549223 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.186035497 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126208396 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109764737 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118552154 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188395097 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100597477 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132956208 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12789668 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.350020758 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.122430064 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10231513 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118798621 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134692559 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111454106 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114597904 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099088515 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115454262 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.092540645 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.124037457 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099869192 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.13391847 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.124679466 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.104899465 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116063044 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099357181 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124639569 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094420545 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131388287 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115050841 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10295272 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116872607 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11301857 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.123347579 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092770749 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116424556 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119290477 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107093429 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11308134 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109385359 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114359028 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095117502 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116824428 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104341045 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116427865 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.098959897 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118523737 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122362108 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103448605 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.121151535 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094617272 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114982778 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09868003 seconds)
done (took 9.755081862 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098226749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180870503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.186557464 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192792944 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151803093 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136972064 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137576918 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122521606 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.135439974 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143592257 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13186071 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.150807381 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.197762977 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.133609264 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136304045 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.102746778 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13316751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10273855 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.215168458 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123679946 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154309772 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.130053515 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.153821492 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113745582 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123869625 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147057751 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102429446 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126101521 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101340886 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140795329 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142374527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100671108 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12764904 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138859856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110570577 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128908081 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136712366 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101050266 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123021894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.098331985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140456935 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133394539 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097498942 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.137447734 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12362551 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107733817 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133124441 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105813605 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127148082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123862542 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101956838 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154165312 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.129660288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109755337 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.132324918 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128907423 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107203589 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129089845 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.101316375 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.130312416 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119848458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.100724101 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124852154 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.148862644 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100631046 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130220949 seconds)
  done (took 9.467008833 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121302706 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161408561 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134702872 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107562873 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.13056792 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112081304 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090552743 seconds)
  done (took 1.740240549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090209367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19041746 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188410139 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188911239 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.188946716 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.223589535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11618462 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116364219 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.152400652 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102978141 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188525582 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24591479 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.100538586 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132530806 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190416003 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089309838 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216781969 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095644635 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128370028 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189816346 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1080572 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.149531866 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132528671 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0914728 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.182573784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.122357525 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.245307933 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135851984 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124468099 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103262062 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128005427 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20567392 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183485035 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132275499 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098321627 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185227882 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.184992447 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132531627 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.197341357 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119413382 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.182301106 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.104407187 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131297462 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.129762744 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.105259915 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168740024 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.135154716 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104650887 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.128674139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190109108 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128956669 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181895819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.102407864 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.126654158 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.10203365 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.132485683 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133824223 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.109228941 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188528238 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132338611 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183384822 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184266571 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181195675 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183178104 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140803774 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182488705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180064209 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100374787 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127587129 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127776655 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183436449 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104448312 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129949727 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170533999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131274518 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18349773 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183689302 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100887189 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129829247 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095995816 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.126734526 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089979659 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174164333 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129252654 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.101050517 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138057694 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130865857 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.103122567 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.125444596 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144009008 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.103361214 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133469899 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.133971945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.102391368 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135734325 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185893096 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129502102 seconds)
  done (took 14.89983394 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093056729 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116453738 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101145718 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118470891 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097098036 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118702584 seconds)
  done (took 1.543854487 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122962715 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.130533314 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.140870417 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.107337775 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193395009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.18949537 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.192529511 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128177127 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.147641702 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114388587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191503868 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.220177843 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.190532716 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.1083365 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.191859744 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135318627 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.191954022 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127517697 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114330216 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127209021 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135341565 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.107426564 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126515517 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.180647664 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131197123 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.106181493 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130190151 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.113708647 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.139051265 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126128565 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.1074007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.13256805 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122052519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101954839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.193339388 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124492753 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124465414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11061508 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133685376 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130462839 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19346554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104688892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138637586 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.134430655 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102028917 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122773577 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.110186945 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130348411 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.188618285 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.136289353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.136228319 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.107672193 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.132417176 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.109918469 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123222986 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12627089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.109605618 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.237042505 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111667658 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123742992 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.105785762 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.135158607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125396985 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.110140904 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133780746 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134395478 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100266636 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132553775 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101401457 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.134843456 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.138560719 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106250521 seconds)
  done (took 10.684108135 seconds)
done (took 39.21462002 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.122706689 seconds)
  done (took 2.021573072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.929744269 seconds)
  done (took 1.830499028 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.2804143 seconds)
  done (took 18.218269875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.575265086 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.662138879 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98066868 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173475951 seconds)
  done (took 3.294071403 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.011102209 seconds)
  done (took 1.932788237 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.381423684 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259513176 seconds)
  done (took 1.550054204 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.70794072 seconds)
  done (took 1.624706779 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.157643908 seconds)
  done (took 3.065475992 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.381536697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197045273 seconds)
  done (took 1.501046042 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.707865751 seconds)
  done (took 1.626686009 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.341242499 seconds)
  done (took 31.26274098 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245251356 seconds)
  done (took 1.178998953 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.317841636 seconds)
  done (took 1.242029971 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.623180968 seconds)
  done (took 4.55023907 seconds)
done (took 75.811163154 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104630668 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132406471 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10757922 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131394062 seconds)
  done (took 1.393886639 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112894903 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130714092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108434474 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130567413 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.140280148 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106859606 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1297233 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.113901713 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130910871 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130043359 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.105429169 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.132601203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.108349038 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.128636974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126779553 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107889532 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.135518043 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10582873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130923103 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130372594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.10504095 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.132529208 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.132937591 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.108053652 seconds)
  done (took 3.849832646 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102652364 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121833855 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099994162 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122086949 seconds)
  done (took 1.375923249 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112620081 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14831512 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145661716 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.115567249 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149878446 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145875461 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102983789 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.124722497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.103168389 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13824205 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.154028069 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124307949 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.147339963 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.131629832 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114241675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.123434493 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.108241488 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.150559332 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13856927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.113780575 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.131042431 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137976954 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104323227 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.143166935 seconds)
  done (took 4.036748247 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.215712806 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.117104725 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.156780431 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.186217037 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.162690269 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.100551071 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.158553519 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134382981 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.109773651 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.133040243 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.130637123 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.191479297 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106521811 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130041716 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105229533 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.135715712 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.142754751 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.134013224 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.178321099 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.108901479 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133121302 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.142296601 seconds)
  done (took 4.042845386 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104791571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121582323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092580089 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120972476 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103973909 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125245936 seconds)
  done (took 1.600536133 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098884162 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115086556 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096570407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117511748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095775786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114143207 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091120926 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114832628 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09091825 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113266334 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092816786 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087869659 seconds)
  done (took 2.160709514 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.313207492 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096851871 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125274112 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120084274 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104219656 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121094361 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138573496 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096843309 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266159367 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.094056338 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140107414 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.201711391 seconds)
  done (took 2.756109592 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232249463 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105336957 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326030394 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396062793 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180937349 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181971762 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28743124 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184152213 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209192971 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15154971 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241338919 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143529705 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170629601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195237481 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154566059 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.230774373 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194020045 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222369144 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162265303 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254132954 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177488015 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180793078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196215172 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164118261 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121674945 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17578122 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.134102436 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135865473 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188964606 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186631139 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193520056 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161792391 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153848084 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221958958 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256850679 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200524459 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.333888287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144123117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209060651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.200930535 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296746549 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149768931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216701906 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168779404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140970719 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195167309 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168234278 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.19748393 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115266408 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152171578 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228230017 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191197651 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203621605 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147307995 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309601169 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167234473 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.161468632 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192133731 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205440549 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205561066 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181921266 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.131608375 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197035335 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196809054 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22171764 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.131691141 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186788275 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136404393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187201171 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211311707 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227576999 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181561429 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204237866 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143284092 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174548746 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184837147 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165909276 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193400596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172246719 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100975061 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16392677 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14655324 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13450209 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172830524 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13152313 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224089478 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146159161 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.40415054 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219362423 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171165836 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174794854 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178422745 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177891534 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158225353 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130702809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158380276 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175118953 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14344784 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14357109 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170300496 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152531931 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.137903261 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164075207 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105527171 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169666803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163204478 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182507877 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175368556 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.114126449 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175771498 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163590445 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170087324 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186222833 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200164762 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143758207 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140860437 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208514792 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168328404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143675843 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190313987 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203622206 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178718269 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119201349 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20695009 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210200318 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151117023 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204362268 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155260843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116537694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168140916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170637204 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170109898 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164116519 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110238654 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166405968 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240041608 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.108564429 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147116378 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187691225 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137504652 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109491088 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152043 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14612902 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151756124 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.134740474 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147532545 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168816574 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171537932 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163884605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172258058 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155136601 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212101036 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142288748 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171506277 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158358599 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.103186851 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199389458 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197920746 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139024336 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214167921 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.211387555 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208494138 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177485317 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139229538 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192407718 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113454691 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.132335299 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179179262 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174654688 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176316904 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199339758 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204436796 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211176293 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.138795042 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159624699 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182840846 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187855112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170814744 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155683134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173944949 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181796755 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130346201 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.107339826 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138525011 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150057752 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138963691 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114075547 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197329883 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206133796 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198794343 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172865411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147412037 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197018361 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109008338 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177799058 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.214442559 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120580739 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200994132 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222048484 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180248003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12622469 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182660364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131300839 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132264313 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118911037 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184006466 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14297491 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142904759 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156148877 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198569104 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192186422 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159937167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216171258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18341909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234624694 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104302614 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175604738 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186148904 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169330617 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.195294908 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11842873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172665016 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194327271 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156650804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206755015 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173437244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179602982 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246400191 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168146873 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112179134 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16117209 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178190058 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151846098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178154476 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157872084 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143767681 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140117402 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.148608525 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136708726 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198534543 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154326683 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198285116 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170338941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191179725 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13478661 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154619775 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174485557 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155473108 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102203767 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18578081 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232777974 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13107262 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171594451 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190602075 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142182066 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.331837649 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233140689 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202548122 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146689423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125864649 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174253682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172532207 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1795087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192821831 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154571695 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194779777 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170814268 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.154377446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14504011 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131285751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161303257 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168622769 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146353304 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.167348163 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.151584249 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203265406 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150590793 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169162336 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176713286 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.13192324 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.167646876 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150633663 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216364464 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169627869 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192862159 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166017192 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18311513 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215456338 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132780259 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107599196 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138519686 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194415456 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140241929 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170161369 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193164856 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210358049 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170916509 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180668077 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147728037 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133709517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171891554 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133028781 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2379125 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154542583 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.121308546 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23820684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137041135 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140598985 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176132561 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293938214 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159012537 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189246168 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131017416 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282931742 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1115444 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141113686 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174468514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187032902 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159935447 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191488787 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177718955 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128013572 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174647674 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148183572 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200367014 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248168574 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184047952 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191628868 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154669429 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174390505 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177510448 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193955712 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153411759 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.130781214 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175800841 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196286263 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22682183 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116722813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173153971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176469712 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171580229 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192968067 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144338469 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214632491 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140097897 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176788673 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151717841 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106353577 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171124595 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.220422325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115728294 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217131489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140624223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140433671 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138565745 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162294014 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169124024 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128465431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139191532 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196957603 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136936982 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1743622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194078087 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111451911 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167087801 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156699501 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142873355 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127342689 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154308164 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145773586 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.153695407 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224872878 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.114603923 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218567125 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18532052 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180574299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173733019 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154950579 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646374763 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138811992 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197485045 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158222296 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205197075 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161051034 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182163229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173771295 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133788665 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180273845 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162051249 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236053315 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176615342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176893143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140651846 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156072802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124741583 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14271421 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165544756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174777145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150468291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121621769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172248021 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156702957 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156439939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148056697 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199975121 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131654937 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22997748 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196633989 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120521494 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177643541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222464619 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109904909 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177841227 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216472715 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124264584 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166195082 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.144845295 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.119348315 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193865627 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134103479 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1753775 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172695094 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17294921 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176309053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146632785 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145828806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153496881 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174927592 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137795309 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16956615 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170156323 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115131715 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138906965 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167852205 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174324272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168698159 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109246151 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181661129 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198014866 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103194175 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144287014 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291834661 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172174447 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206156326 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167375776 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146037864 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15435888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169382778 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166902052 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144564298 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141591868 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14062262 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115824748 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195617786 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171732401 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168307123 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194138345 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174590869 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21693128 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.157720908 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280276722 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147682877 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138887245 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144319698 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140618665 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15068895 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117440926 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157832749 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203044989 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192348262 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16627185 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160416813 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138526708 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10463189 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14348585 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174935949 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168173677 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169495773 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13022737 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129862795 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155686344 seconds)
  done (took 83.756110024 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150663339 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142654874 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152311649 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201813454 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170684922 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264777635 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210396552 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233464642 seconds)
  done (took 2.546071784 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106897796 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142393401 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149119174 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131258014 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129799075 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.434137214 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146627865 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129617695 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191363559 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146808922 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.125484145 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.605011178 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131994804 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129603576 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121262587 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128564334 seconds)
  done (took 3.9629287 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.477182792 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546463102 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.984705591 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.259153049 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.240672279 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189998967 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74628798 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178525228 seconds)
  done (took 12.637910497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135514595 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149174481 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.357204974 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.221621264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168613547 seconds)
  done (took 2.059020872 seconds)
done (took 127.097903907 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107127555 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.148958482 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106617446 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153727327 seconds)
  done (took 1.530670344 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.15384353 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.120044478 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092680765 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115738839 seconds)
  done (took 1.506474841 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.534456651 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.087495904 seconds)
  done (took 1.679381762 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132620815 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.154057603 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154144776 seconds)
  done (took 1.474655272 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114013488 seconds)
  done (took 1.14094411 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113917429 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13015727 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.197312648 seconds)
  done (took 1.473646534 seconds)
done (took 9.831271642 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128829639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.532714281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.425718696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115570954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735813745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382002348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044101455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164910912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213582778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123043539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114681389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703200359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031157744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.446168489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.014612968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.440792354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705384703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093179906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129340091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123685086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994460711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122220931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097265676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122322207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675846468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4447587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120736717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.450511029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121390611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102764765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.409452588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094540908 seconds)
  done (took 17.444287228 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142694193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191031453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135939273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097044198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132858084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097677001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135735559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136787602 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203718801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097827717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145478976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09754454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129979356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121605982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120052023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122461624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096532498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122270899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103081893 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125311173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143711384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097325382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125213394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095439434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123093543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128669871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122873853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136070257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096317229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129905027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099067553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123193438 seconds)
  done (took 5.012748315 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147145971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201968227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137878108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130273467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186557476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126153295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215383559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16797908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207015258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124887454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118410546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122579677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139055351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127065876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149240088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098772558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122981756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095586481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131816207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097244051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145107853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124051956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099081528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122699357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096443987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156717568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095432895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137431506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121944784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104512147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125817644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09563888 seconds)
  done (took 5.30743345 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109242136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136374079 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120404208 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14945999 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104103969 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.137173989 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.136662125 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102048203 seconds)
  done (took 2.037921763 seconds)
done (took 30.830104116 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122314044 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144846886 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.119863587 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136183915 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203070206 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097988932 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.141296248 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099481131 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136944633 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117628993 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126488962 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101914499 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14352322 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.107354305 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.182715506 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140368563 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.193781093 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186503816 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.100400232 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.139155216 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101839155 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.189592023 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.135991574 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.129659225 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.167093074 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128996671 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.178799458 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10389731 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132731123 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130792074 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.157906913 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.137743964 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.128683823 seconds)
  done (took 5.594097684 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.20368096 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.211198807 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103948139 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128775484 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.2148187 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103328798 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.203265135 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.132654928 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.101797895 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.129040906 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.10002928 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203474182 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.215805527 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225962462 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.24146769 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212166719 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.201558668 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.211416491 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.196626927 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.221425481 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.206313953 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.130098874 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.215448478 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.214704775 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099570598 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130599281 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.240255896 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.212389466 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.236585522 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19827068 seconds)
  done (took 6.488004948 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110628628 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145042997 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122975632 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199504487 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162951751 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.104088357 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142675412 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147855803 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.123116591 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124396459 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112471563 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162451531 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141436836 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107471471 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130051202 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116899479 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.150636505 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097247963 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134597439 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116767933 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145795846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143483577 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113730273 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136651598 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096105492 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134939955 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100184258 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13817048 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135162907 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111220556 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13174617 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102241997 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129087471 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105753281 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132461676 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.134294729 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124791306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136435501 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.109595527 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.155411275 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105389223 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131662555 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149279512 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.151559457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128164953 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.108375698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.139405572 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142121318 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099138199 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146066908 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113414903 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12607516 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.116840149 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126151101 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097072174 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137077507 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126733804 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102967491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138515931 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102849809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152170014 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103769337 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13571732 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097874362 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133333085 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096861664 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125564802 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128015639 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124992871 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133145253 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.132195463 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.126294973 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.107056851 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.136458504 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102686375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13811188 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.126903429 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104723175 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134043567 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104126144 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137140909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10010094 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131060917 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115480817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145837878 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136527943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108007908 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137904363 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100886937 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128126637 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138974207 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099241943 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129946479 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111072524 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126380572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101134655 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138009626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.106068985 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126328508 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11802583 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133243889 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096796545 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145719932 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12581103 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104289981 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136802466 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.109914042 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126310487 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106816235 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1395181 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096400824 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131024611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100721915 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125525823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142905693 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110468021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130626821 seconds)
  done (took 15.659565264 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.303541858 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.313364833 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205877626 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.371125495 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154220012 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.205194232 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310798056 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.323632018 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.107416084 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171847461 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187689281 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27745498 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098016478 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.160678649 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307811035 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.378001882 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.129850835 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.203380792 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142694192 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.153551734 seconds)
  done (took 5.564640656 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120472606 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172435988 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159406296 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.160130929 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104440826 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141303878 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097736268 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.151586759 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.134587403 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106340959 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.125610274 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.113123058 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.136839258 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.106740687 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.14680799 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174586409 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102787896 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134598896 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151207036 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104957627 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137022967 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157918915 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.10927942 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156745705 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143124171 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.113893584 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126121754 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105550032 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.129890865 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.102447419 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.13338025 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148206686 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10399135 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132961813 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.107142198 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13950078 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.100052677 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130047313 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099616462 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131256768 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.11452667 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.137403925 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129355338 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095989321 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.110886798 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.130245502 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110605605 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139168194 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138058441 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112738748 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13876734 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.110183909 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133546257 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.145349596 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.101901202 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.144527066 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.111058905 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1393227 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.13423644 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097695525 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12355406 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.103258086 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13105343 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111374048 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136309906 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151134689 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114534331 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126083525 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104939312 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131548474 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10158334 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145716383 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152334136 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102756765 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.13036263 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115144568 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.131572236 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090393613 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.137762868 seconds)
  done (took 11.043818888 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128732632 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13264458 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119259415 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.165986534 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.142019761 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105391888 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.13257214 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119351544 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.143243397 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.110430213 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.140965677 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14076543 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124206404 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.14450971 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106134739 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143221475 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109746304 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172540888 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148480581 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164299686 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.111349379 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133863615 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113204615 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143723507 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.165856612 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.111211212 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162604774 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140314593 seconds)
  done (took 4.852254213 seconds)
done (took 50.243616823 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.219254013 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.368111013 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.142162831 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.137596213 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.157711576 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.162327315 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.139823194 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.33026711 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.883842742 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.140576187 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.138135556 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.136332254 seconds)
done (took 27.019786995 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.415224933 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.636994258 seconds)
    (2/2) benchmarking "String"...
    done (took 1.433824255 seconds)
  done (took 4.13196138 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.131522727 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.132439822 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.383803789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.132742364 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.151191377 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.15718148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.146742195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.147062868 seconds)
  done (took 15.311643228 seconds)
done (took 25.053571937 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.173482612 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.32894344 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.400411107 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.150413065 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.161228819 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.143998462 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.136920329 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.1553649 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.134088159 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.16309278 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.544009708 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.422808711 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.163634209 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.535153375 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.142592015 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.163153296 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.133741037 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.3718102 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.136195995 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.180492602 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.125810415 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.128371783 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.162524389 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.145351756 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.140140199 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.151237778 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.183794903 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.140858743 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.329511626 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.159063116 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.177533916 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.138817166 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.176588931 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.136197404 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.134620625 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.155679077 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.322874476 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.141619604 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.128477042 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.138669824 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.323411442 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.146572989 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.13573632 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.141473759 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.148133617 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.170626673 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.129910721 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.24525683 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.157420842 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.138372473 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.185882512 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.530175035 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.13902001 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.165344102 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.149488058 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.356955545 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.151992976 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.191667781 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.162536195 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.135779409 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.152205066 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.140722535 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.198192404 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.137164851 seconds)
  done (took 139.656360445 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.136213335 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.139482635 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.143224243 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.16124246 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.140882785 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.142671123 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.138015881 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.13644642 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.14121507 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.169462797 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.144725424 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.138321004 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.144675661 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.129904178 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.143112797 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.159066132 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.142338382 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.14367845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.161590105 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.139424534 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.150078551 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.145247491 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.141205757 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.137764953 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.182919168 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.231894203 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.185861797 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.170927471 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.149669884 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.137962884 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.187764386 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.165262998 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.743598273 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.007928091 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.14845592 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.160052121 seconds)
  done (took 78.008378395 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.139034071 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.13886029 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13909051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.172564382 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.141577113 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.711186245 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716772859 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.861313674 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.580819236 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.499587582 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.392997909 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.14027139 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232122525 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.153002416 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.147987247 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.156335638 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.185018584 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140814968 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140260105 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71308575 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.15723283 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.163678548 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.315520545 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.155740189 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.172965695 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.542169343 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139416645 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.17362046 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.47274109 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.188447128 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139549682 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523981705 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.235625058 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25603319 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.14440284 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.174443004 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.143080868 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.422646188 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.142840414 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.141750944 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.141937497 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.142874199 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.146666318 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.793259409 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.142797161 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.712385843 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.14482833 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.085957704 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.142057192 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.141871772 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.355304373 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.787277338 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.15892767 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.142101073 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.14454487 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.141150957 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.141318996 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.174557219 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.299452982 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.2582459 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.159464081 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.145927259 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.17472565 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.143411119 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.370558078 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.14509074 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.640637969 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.219551428 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.363233067 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717136042 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.151062518 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239881591 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262694193 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.143746083 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.142214916 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.143644633 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.142435524 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.25289575 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.143670178 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.556277444 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.318356124 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.16042481 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.142815629 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.502140851 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.249036457 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.143439225 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.529832781 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.147970895 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.144256354 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878256763 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240690307 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.14350634 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.144645034 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.144395409 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.558588171 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717756851 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.394785588 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.150187402 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.723270436 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.148219834 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.56333081 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.691675051 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821826715 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.149519756 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259066395 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.320976334 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.162256846 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.144873902 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.50643779 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.152899536 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.202175863 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.153722957 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.144968331 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.54402586 seconds)
  done (took 359.238024827 seconds)
done (took 577.964861147 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.875914296 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.830497501 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966137975 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.861215738 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.823975022 seconds)
  done (took 10.429279718 seconds)
done (took 11.501481862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.336664095 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.33959653 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.209930728 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.346821413 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.183709568 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.361803795 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.32278342 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.172754224 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.251568296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.23005083 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.255352163 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204091489 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186695435 seconds)
  done (took 17.474984065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.424892291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.155835232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214790277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398651766 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195744521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.427235713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476478293 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.158253981 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305196604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16453338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163295698 seconds)
  done (took 17.15840102 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407808149 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.155622262 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.234147408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429196239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195035859 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429872262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456281037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.155820198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292609087 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16435409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.164085403 seconds)
  done (took 17.157171856 seconds)
done (took 52.863439162 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.190977041 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.317549999 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.184900664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.165909685 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.159866136 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.162215914 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.166462671 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.161783055 seconds)
  done (took 10.583719652 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.159585855 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.159149875 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.159276073 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.158474081 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.158124135 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.157542899 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.158958228 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.159462112 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.159433345 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.158742887 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.160475366 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.159554554 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.158273059 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.159797587 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.160139704 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.15924322 seconds)
  done (took 19.621776645 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.161210969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.160115213 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.159353826 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.160284906 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.16106191 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.161159633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.161108705 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.16005874 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.161985727 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.159244009 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.160238988 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.161869455 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.161522204 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.159961427 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.160584026 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.161725111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.160734214 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.160676466 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.164024299 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.160745121 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.160979212 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.161424532 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.160860583 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.160717366 seconds)
  done (took 28.938456201 seconds)
done (took 60.21740795 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.150728158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.157393766 seconds)
  done (took 5.385135068 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221454845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222708259 seconds)
  done (took 3.522389486 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.162604669 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.160310188 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.162218144 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.161861309 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.162328104 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.161969272 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.161371058 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.161502806 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.162334711 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.161684405 seconds)
  done (took 12.695268919 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.16218828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.16163815 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.162789367 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.163638354 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.160586375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.16056808 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.162563728 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.163558167 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.163854271 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.162157924 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.162980789 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.162498557 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.162323797 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.162358614 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.162809004 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.162862872 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.161846893 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.162268509 seconds)
  done (took 22.001056214 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.175470343 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.185342235 seconds)
  done (took 3.438443596 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.30481238 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204882728 seconds)
    (3/7) benchmarking "month"...
    done (took 1.279158355 seconds)
    (4/7) benchmarking "year"...
    done (took 1.26920963 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.204979888 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.185882644 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.204269006 seconds)
  done (took 9.730859779 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.164917655 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.371162127 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.480484863 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.723456271 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.163758615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.189225289 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.962989961 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.18844364 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.184293114 seconds)
  done (took 13.508197623 seconds)
done (took 71.357593552 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.152156072 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.180786027 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.173127458 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.197818572 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.501123748 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.168794162 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.159568667 seconds)
done (took 15.612090627 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.147045906 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.157952425 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.154261617 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.180733732 seconds)
  done (took 9.71798413 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.161746054 seconds)
    (2/2) benchmarking "read"...
    done (took 1.447635087 seconds)
  done (took 4.688479626 seconds)
done (took 15.485955463 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164973907 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.164173511 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.163816295 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.162455348 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.164239669 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.165234869 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.163119545 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.163619582 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.164157676 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.163324532 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.162893141 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.163714347 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.163101883 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16491864 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164955557 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163895002 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163503939 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.165061806 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165334988 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.164094367 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165285967 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163801345 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.163485295 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.16561789 seconds)
  done (took 29.017874345 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.166261089 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.164639415 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.165596287 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.164440008 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.163784347 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.163649879 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.161864513 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.165829388 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.163984993 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.164251961 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163274904 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.165059409 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.166338396 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.164679657 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164581635 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.163712501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.165923587 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163913572 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164895153 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.165143385 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.165200436 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164041448 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.16489007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.164351036 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.165526001 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166466436 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.165754266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.166735785 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163933558 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.165014523 seconds)
  done (took 36.024012414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.170088082 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.170027833 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.165694119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.16567597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.165054313 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.165497011 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.164096578 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.164480064 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.165002376 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.16557078 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.165029044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.166377925 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165760322 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.1654772 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.166245609 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.165368598 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.164608913 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.165620597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.166182621 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.164681232 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.165066955 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.16518012 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.165713634 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.164496465 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.164963935 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.163384726 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.164597954 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.164937244 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.164107158 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.164698509 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.16513885 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.165047021 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.165160909 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.166385261 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.165900522 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.164779288 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.169822389 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.1721474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.165903053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.165902379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.164995831 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.165993689 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165143114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.165644532 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.16580262 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.165911904 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.1663014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.166055421 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.167577749 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.166928207 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.167076794 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.166306197 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.166912663 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.16687711 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.166568341 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.166977485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.166548232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.166503214 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.167608007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.165463016 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.166944749 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.168011389 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.166660668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.166428103 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.167373325 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.167213922 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.166563589 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167160218 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.167069975 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.167378364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.168287992 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.167674263 seconds)
  done (took 85.047848232 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.168073478 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.168518372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.167996005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168396867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168070637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.168892419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.168580442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169325992 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168975976 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.169174157 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168770012 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.170148441 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168584612 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169991899 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169642095 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.168196632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.168668537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.167998191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.169682781 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.170162012 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169338604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.168677903 seconds)
  done (took 26.798622081 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170531587 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169094556 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.169394102 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.170400223 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.171531035 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170625424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169800708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170598249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1683407 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168198118 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170272681 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16991953 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17183664 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169733415 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170616796 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171998972 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170645972 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171601628 seconds)
  done (took 22.150210966 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.171336869 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.169890122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.170087535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.169888053 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.169671897 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.171226872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171688524 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.170064949 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.169709064 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.169221947 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.17063268 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171506638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.171030786 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170723187 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171111758 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170154089 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17036871 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170283387 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171055172 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.171436285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.172067865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170828397 seconds)
  done (took 26.839465533 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17087927 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.170682271 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.170515383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.169653425 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.170614339 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.170940391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.171940286 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.171035982 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.17256268 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.171982669 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172203349 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.171785136 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.173306625 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.171590272 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.17192878 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172466423 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171566702 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172021772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171951998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.173023143 seconds)
  done (took 24.519007163 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173793087 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1739969 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173432432 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174745831 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173797435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.173957645 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174419669 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.174978355 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17429946 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176325882 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.176215961 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.175303818 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176174951 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.1751421 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175892372 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175798589 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.176312534 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.17384902 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.175134077 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174884774 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.175773607 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.17507139 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.174729726 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174801022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.1761808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.177159158 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175842236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.175622959 seconds)
  done (took 33.989910553 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176113369 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.176397976 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.173772751 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.173657262 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.173756208 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.17550079 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.175126101 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.175034181 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.175225157 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.17459723 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.175097388 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.176326551 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.175269067 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.1751382 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.176537396 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.176012504 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175048674 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.176061168 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174473824 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175066786 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.176408652 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175236419 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.175546975 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1756554 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175779981 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.174883348 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175941147 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176296957 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176033546 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.175967915 seconds)
  done (took 36.352062912 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.223707837 seconds)
    (2/2) benchmarking "in"...
    done (took 1.217159253 seconds)
  done (took 3.530665246 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.177407345 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176416993 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.175738605 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.175481632 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.17658582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.177188896 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.176983724 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176372759 seconds)
  done (took 10.502218549 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.174528991 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.178335485 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.177892713 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.176836046 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.177046476 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.174171534 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18261163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.182861308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.173687114 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.175346009 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.178198104 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.178060747 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.17719662 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176432386 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.176035933 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176363478 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.180712269 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.177219973 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.178956398 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.178203117 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177806584 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17814795 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180892146 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.184234123 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.177412893 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.183754754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.182041884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.181121252 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174158539 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.178901512 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.177161194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.17927288 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.176582816 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.177317292 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.175806515 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.177045672 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18292083 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198817557 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.181027664 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.183836692 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.178184414 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.177872803 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.174807461 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.176163402 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177588244 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.181143855 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.17739431 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.177891332 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.173730492 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.177523147 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.183676132 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.173578147 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.178404668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177332204 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.178552334 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183571077 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.201381879 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.176083241 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.18050064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.182910108 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.190815225 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.188086866 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177317103 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.181680119 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184472454 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.195576356 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185284208 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.18442696 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.180011932 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.179613025 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.181816712 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192459423 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.191386892 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.180603164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179631006 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.178777215 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175298323 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179540767 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182545829 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.184492678 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.18234355 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180683851 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184841013 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192512903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.176459345 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.179769364 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.181939918 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.179029197 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.17672849 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187855488 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.205163004 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.180012488 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.174813579 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.175890603 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.177759721 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.180659644 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.176372153 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.17755464 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.182212442 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.179748224 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179079079 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178058144 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.184527125 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181664147 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181581268 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.184067246 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.18405955 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177562367 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.1835787 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.18489394 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180142166 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.178259142 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.180744922 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.181571749 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179483188 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.183212391 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.181249404 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.179128314 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.183040718 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.180592458 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18453706 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.197173968 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.182912538 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.179633165 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.180719158 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.187893734 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181008579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.17980737 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.183345312 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.181027132 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.179224958 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.178810376 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.184524104 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.177110576 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181165392 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.17968477 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.1816788 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.180942246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.178724534 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.177881047 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.178987584 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.17861142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.179213378 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.181093502 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.18279646 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.178648877 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.18625942 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.18023586 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.177839716 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.180162754 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.181370761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1821397 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.177201389 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.182859929 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.178063622 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181862162 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.178764159 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.180802766 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.182210327 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.183482545 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183254022 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.180250635 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18383357 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.185732689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.184628242 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.184382628 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.18594978 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.18361835 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.184391367 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.180645102 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.185403054 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.178308086 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.181609906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.187477998 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.183711386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.181126657 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.181622888 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184072078 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184404671 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182319082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.180718908 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.184314189 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.184654 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.186677922 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.186689097 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182064511 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.184860743 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.179285918 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.180379662 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183123936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.182477049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.190839221 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191134285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194734717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.179902553 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.187171648 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.17985133 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.185731352 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.184068331 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.185855155 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.184573103 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183941972 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179695453 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185429948 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.182078291 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.184055524 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.178920674 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.183485031 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.185871269 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.183760718 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186251244 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.181288275 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181319823 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.185374492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185700327 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183672925 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.180878159 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.185797741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.179970264 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.18158543 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.185583305 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.184305422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.18762884 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.188193246 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182653552 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185958415 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.184626468 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.182158914 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.186878105 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184657191 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.183783754 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190056718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.188533664 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.183171863 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190929449 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.206361775 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.18339271 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.185156727 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.18928315 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.186250186 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.184473795 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.191076133 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.186680003 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.185709264 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.18575454 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183520044 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186624173 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.189247872 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.190831649 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.184184128 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.189030643 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.183414365 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.187196108 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.183868237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.186016691 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.184857516 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187602664 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188573739 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.186969263 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184838655 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.187052789 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.18741208 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.187139231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184808476 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.191509856 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.190103905 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.186968268 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.187036877 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.185225085 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.189568974 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.182429286 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.187780935 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.183238806 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197154915 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.200079109 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190699945 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.190880928 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.18743432 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188964062 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.188179912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.187056032 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.184926229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.185631231 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.184783907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.186114446 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.187338786 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183502778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.187559786 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184677629 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.188236718 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.189807469 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.18593542 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.182727965 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.188239361 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.186219957 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.187026551 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.181351986 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.188113969 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.18481202 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186769729 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.185007954 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.18409756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192383226 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189147012 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.185321901 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.18439378 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.18432175 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.183985089 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185609259 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.188471922 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.184931073 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.19333191 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.184344915 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.189575844 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.184840266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19290837 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.190305229 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.186980978 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.192744579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.187262259 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.181928131 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.184361678 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.187470281 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.192468986 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.192286913 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.183457325 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.191296532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186909455 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.187572822 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.187771961 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.186534021 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187753733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.187405239 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192720253 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.208120285 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.187236664 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186721076 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.190258784 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.185789059 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.187087593 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.184672803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187630638 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.189711359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.184929829 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.185672328 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.185152786 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.18890543 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.187465631 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.187893557 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188354897 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.187031686 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192165541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.18990496 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190961118 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.187576868 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.191442086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191235216 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193526362 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.194040796 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.185596764 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.190078845 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.187403926 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.18460813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.184739202 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.185360283 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.188590058 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.187108608 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.190368068 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.189136408 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.186280888 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.186461103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.189220248 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.185286245 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193771814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203990866 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.185442387 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191920849 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.189676129 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.185038159 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.190812594 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.188483849 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.184452135 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.186426478 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191545784 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.194829595 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.186566669 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.190177626 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185771913 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189452503 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.189238304 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.18754897 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.187857298 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.190621868 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.184449276 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.190821768 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.187838517 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.190535684 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.185094735 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.186669545 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.186427271 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.194958017 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.192384972 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.186203838 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.1890313 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.190346853 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.184459329 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.187085736 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.189033577 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185632829 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189852803 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.186026825 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188537916 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.188015449 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.187888309 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.187236034 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.189214921 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.185492648 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.186329979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.189487978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.189541237 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.188719646 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.187568425 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.189501913 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.185434884 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.185027364 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.188302501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.185029813 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192353296 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187195535 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189814502 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186462891 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.189414814 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.189682405 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189222505 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.183722356 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.186738709 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.194273829 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19161096 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191665146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.19078885 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.192283275 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.186906519 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189593437 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.192003294 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.187254291 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.187695534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.191262412 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.187686749 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.187578901 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.188032049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191402083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.193182915 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.191540802 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.187034147 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197471832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.211219098 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.193553002 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.187839163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.190621025 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.188961752 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.191478752 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.192646722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.187087865 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19672478 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.193640241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.191102966 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189415005 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.18843662 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.186844296 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193222584 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189250177 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.188074877 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.191861637 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.188153359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192509757 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191630038 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.19126483 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.185431551 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.188442849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190852953 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.192144025 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.191054929 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190384486 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.189306096 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.188813778 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193071193 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.192237556 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.19160451 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.191027494 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.186152439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191490986 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.187720504 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.192221905 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.191059529 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.188762717 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.194044705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191845406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190904656 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.193875502 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.197046527 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.192885012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.188355562 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.189822275 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.193794796 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194602152 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.194012944 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.189934853 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.190145832 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.194578631 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19307519 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.192657142 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.190326689 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202995846 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.217136399 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188957726 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.191410995 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194182477 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.195945303 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.193335089 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.192894494 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.19339451 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.193997509 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.198963748 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.193959748 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198356384 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214757713 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192114513 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.197384783 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.19050653 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.194316367 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.193949417 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.197115089 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.192969913 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.191765122 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.201452735 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197448104 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197032755 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211726601 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.197264836 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.19435761 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.198096416 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190568528 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.196604938 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.193468634 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.196945636 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.195426882 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196413807 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.194335879 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.190607905 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19640386 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.197533491 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.19900792 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.196492291 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.191157916 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.192323934 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.195487887 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.195648956 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.196928754 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.194951093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.195846934 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.195037604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.1923805 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205509558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.206541285 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.198398619 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.195992233 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.196028009 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.198148212 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.197220273 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197670443 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.20131067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.196549654 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.197024392 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.195487979 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199210824 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.199578835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.193596071 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.193708013 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195378193 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.198621066 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.204996883 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.207965702 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.199947395 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.197172085 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.199170209 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.19864813 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194220112 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199674374 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196996931 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.195259435 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.19635064 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20028137 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.199837171 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.199284463 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.196412972 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.202170923 seconds)
  done (took 708.743634788 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.197858438 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197682381 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198575145 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197614225 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197160604 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196844155 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198219333 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.197586081 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.197985114 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.198434002 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.198481386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198626614 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.199167058 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.199291418 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198280863 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198425697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199599962 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198839372 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.197784014 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1988743 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.198536075 seconds)
  done (took 26.27257702 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.199534523 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.199868022 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200064415 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.199272312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198504613 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.198739288 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.199760925 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198989091 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199297081 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199288839 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198981313 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201436738 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.199502566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.200029103 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200369594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200469249 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200487996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200034895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.201945883 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201230868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198661651 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200703882 seconds)
  done (took 27.505728673 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.201380584 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201276028 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.197504291 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.203355487 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.201546384 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.200095779 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.202010596 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.200737947 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.200873829 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.19803 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.197855969 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.198920358 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.201304933 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.206075541 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.200422365 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.202340161 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.200657359 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202185161 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.201754821 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.202671406 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.204615994 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.206440788 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.202509827 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.197897014 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.202837715 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.202500913 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.203390997 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202836068 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.198444389 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.203994721 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.201886548 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.199332708 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.203058079 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.200585711 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.20065125 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.205795257 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.202540382 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.202587468 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.202528136 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.206327779 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.21693404 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.201993916 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.206841829 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.209653174 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.203945226 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.201714268 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.208799565 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.203267983 seconds)
  done (took 58.837697596 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.20303578 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.202989068 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.203409513 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20345114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.204051995 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.204852954 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.204216328 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.204189056 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.203805826 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.203569705 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.205299619 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.204289352 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205919079 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.204416533 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.204072318 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.205088033 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.204983887 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.206437837 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.20584822 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.206821002 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.205264011 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.204590283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.205929734 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.205151153 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.205689921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.204503095 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.203940624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.205259812 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.204917646 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.205875618 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.204534505 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.205178985 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.205717687 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.206314678 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.20514928 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.205440771 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.206069086 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.205730199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.205617207 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.205777142 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.206225998 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.205830855 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.206443667 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.207623067 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.205590311 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.206319964 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207805341 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.205967904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.207450667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.207514559 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.206843629 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.207944648 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.207168498 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.206046368 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.207005645 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.207476349 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.207110049 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.206805503 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.206137272 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.207779538 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.206273922 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.208220602 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.209211286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20767775 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.207855068 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.208051995 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.207121577 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.208310186 seconds)
  done (took 83.112794917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208306433 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.208197366 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209547392 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20782158 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208484014 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.208589143 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208145735 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.207632631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.209946781 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208477272 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208257653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.209451971 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.207921769 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.208912967 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208984265 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208197295 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.209130144 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208387626 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.209952608 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210007921 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.2091602 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20919525 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.209719811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.209847556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210175105 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208676979 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21042852 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.209154282 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209242191 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.209386112 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212223592 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.210870316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.209293505 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.209497036 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.209714795 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.21030356 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.210941692 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210172725 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.209777675 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.210183813 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.210141473 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210895342 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210603195 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.210876011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210825487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.211437581 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210134165 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2110997 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.210469713 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.210775441 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.211391116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210686763 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211229648 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21072083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.212101985 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.211703914 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21248902 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211934313 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212015792 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211404881 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211034987 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.212315592 seconds)
  done (took 76.13774972 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212766674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212431736 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.211977767 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.211974902 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21182686 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2122276 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2104124 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.211625612 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211676221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.212785932 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21295305 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211794083 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213298686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212856724 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213578542 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213131983 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212159645 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212048726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212815004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21336287 seconds)
  done (took 25.36723616 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.212544956 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.213000757 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.211462094 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211525997 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.212443468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213621498 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.211708868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213141472 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211457866 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212566117 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212878257 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21253246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21272195 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213760766 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.212931973 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.212582646 seconds)
  done (took 20.522069007 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.214599986 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.213776533 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.214290452 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.214522644 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.213866155 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.213596414 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.214782876 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.2136675 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.21492956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.21483994 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.214713953 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.21578031 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.214220418 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.215078404 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.214711683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.214859651 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.21528859 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.214573145 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.215647045 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.21469328 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.216190799 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.214367528 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.215404466 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.21616043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.214911201 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.215765627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.216120697 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.214554932 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.214734942 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.216155872 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.215073893 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.216008286 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.216448567 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.210691147 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.211370617 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.210399879 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.210569848 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.211133837 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.210398851 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.211700166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211839215 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.207800233 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.203246182 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.203192673 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.2026978 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.203050317 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.20338666 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.203801554 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.202713389 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.204542331 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.195797427 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.196247726 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.196382778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.197043066 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.196256356 seconds)
  done (took 67.723157607 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196131367 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.196625484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.191302931 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.189172473 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.189963279 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.18829798 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.189401815 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.191083591 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189918788 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.190100384 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.190556699 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.187108075 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.185720981 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.18535288 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.18602431 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185123648 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.185902418 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.186203194 seconds)
  done (took 22.510152198 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.182496404 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.183423291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.182766506 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.182278977 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.182945201 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183064254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182864745 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.182997084 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184118705 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.181905593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.180527566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.180497225 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180121451 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.180541397 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.18116462 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179806767 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.181365303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176758777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.178325007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177258986 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178481425 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178866441 seconds)
  done (took 27.083031151 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.172786204 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.172738474 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.173075147 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.182628151 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.181539985 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.168181185 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.168283592 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.168303158 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.188031384 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.210392827 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.206370267 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.179432763 seconds)
  done (took 15.26177111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172743362 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17186959 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.171948998 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171990035 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171780957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172304909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173313194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169824577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17098487 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171348207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170860221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171591669 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170909609 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170986819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169886683 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169628579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169079909 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168727247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169314858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167949375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169178386 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168444961 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169208435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169474812 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168358469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169175996 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169278616 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169960906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168566342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169043297 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170004718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169487746 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169123687 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170052611 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169249986 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169657405 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169097934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16947993 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169088799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169966735 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.16976284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169444756 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16981483 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169533319 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169479659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170095129 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170725359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17009062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170264241 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171069856 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169979491 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170583149 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170330992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170466247 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171689165 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171273654 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171248113 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171625282 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171041586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17079378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170807034 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171107905 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171163968 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170474066 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171537523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171541639 seconds)
  done (took 78.327967316 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170682345 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.171408575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170718835 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17220171 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171598741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172089242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171715317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172273439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171238263 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172665877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172160661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171930092 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172764056 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171905013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172350453 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172056713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172970605 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172923228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171819245 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172923527 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171391119 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172918801 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172780517 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171764239 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173855503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172126515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172539295 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172099815 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172805661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172483602 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171619881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17330058 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173348363 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.173102351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172386305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172950514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172209438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173456576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173829332 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172633969 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173510146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173550107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17369348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173080747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173389742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17451095 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172782601 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174451625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173725733 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17307243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173714885 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174173307 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173891638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174074914 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173182658 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175943659 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176143722 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176507888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173681902 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174746342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174305732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173740466 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174165826 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174126268 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175391228 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174225842 seconds)
  done (took 78.510276049 seconds)
done (took 1651.766106635 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.335900193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.288382195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.167926519 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.184734807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.16922433 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.195132329 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.183289351 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.169852995 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.170225293 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.170047911 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.169800852 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.359222298 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.167237381 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.170974527 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.169528391 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.266350475 seconds)
  done (took 24.425866999 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.193626312 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.182991235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.284972793 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.196712716 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.204033119 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.356309054 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.235555787 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.18273015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.336877917 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.203618937 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.184803715 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.207870332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.182342906 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.173217856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.201989513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.357850569 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.410525611 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.189435535 seconds)
  done (took 26.3740575 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.586091318 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.199879039 seconds)
  done (took 4.879230155 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.199188518 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.180645198 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.180963574 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.180549842 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.172244083 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.172027324 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.178214485 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.176932285 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.173790675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.289141076 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.183964574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.191494802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.195697825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.17881218 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.18205342 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.21931187 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.318560518 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.183428194 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.182652411 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.184314265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.179476101 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.278484101 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.218449598 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.185224302 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.290974325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.179796535 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.181433884 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.188124232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.351608001 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.184954682 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.179009702 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.179632473 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.181635738 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.175242317 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.649120859 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.187360951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.201708272 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.20348207 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.184439476 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.328369866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.183475186 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.186429186 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.173991318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.612073691 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.33127386 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.288918593 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.187675905 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.182717502 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.183047077 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.240434333 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.179491635 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.182881416 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.238089387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.957678599 seconds)
  done (took 76.85883518 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.179969405 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.175833457 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.351706285 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.193612698 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174673187 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174401854 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.189397519 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.435758161 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.187081588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.18462482 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.44957914 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.723021468 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.19646132 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.242109415 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.089345121 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.248395761 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.176721121 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.174518111 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.175420138 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.178678336 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706688026 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180720486 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.176451101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.372738754 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.211610281 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.665411166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.175404376 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.192199902 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.178052703 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.176895117 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.6791988 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.196166829 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.244281202 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.175947043 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.436080189 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.526415415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.491496975 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.182910011 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.179704206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.180294765 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.188755705 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.649362304 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.510223679 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.178345904 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.193628528 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.674749922 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.178260787 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.187599828 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.179812216 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.422714082 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.17923748 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.180134512 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.177323011 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.196935519 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.178268423 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.29676839 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.261987048 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669130903 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.177647457 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.203757882 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.213142727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.179733276 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.188080631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178321458 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.197599916 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.513759016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.417431434 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.18113028 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.511328455 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.673544937 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.193420418 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743913519 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.193836486 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.207680711 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.395577711 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.180889079 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.17867841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.675941673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.181317676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.178578062 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.495177558 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.180987264 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.45659461 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.19511228 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.193474805 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74026348 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.192256001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.184207879 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.180497275 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.180006231 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.181194343 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.18408532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.444033158 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.228980518 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.179450458 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.179817436 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.210422487 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.189350195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.181158058 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.182613418 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743581195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.197777796 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.181933242 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182183574 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.188811929 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.181224618 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.182083316 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.180448163 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453163222 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.181282302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.185122771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.183394658 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.180907034 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.183713684 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3624899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.189280116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.465867971 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.183338145 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.181268158 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.185301525 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181746676 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.235470036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182610097 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.185151003 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.0611632 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.439360942 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.195635468 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.182185767 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181916094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.182900309 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183600286 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182525389 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.221528184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.185796603 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950432214 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.199836818 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.203331872 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.18315979 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.188634076 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.182988967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.184227206 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183333835 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.46691861 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.445937724 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.411010263 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.183311222 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.183308958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934122209 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.211258648 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.362302755 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.199165471 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.184528077 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430443696 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.413805376 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.185323638 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.183374753 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.186861902 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439082311 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.185124746 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.479365588 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.712383711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.199786486 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.184156638 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955966016 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863054389 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.193004528 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.190612223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.458802092 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.201749131 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.188300804 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.186370152 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.184984312 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.199806132 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.204595825 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.187529822 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.185808665 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.184841056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.230632127 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373939042 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.200671666 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.186979834 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.671552272 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.250198676 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.186259157 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.20516968 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.189993352 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.186277981 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.26398463 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.189014658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.207386894 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.186284137 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.191794417 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.686182736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.186389799 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.186644019 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375270233 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860363686 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.205383834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.186141391 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.186810806 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.088509786 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697678488 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.212801702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.474613639 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.192847139 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.224681641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.186164608 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.279794204 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.700495004 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.19138473 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.186429073 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82966294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.200846134 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.762404115 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.187460005 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.188105606 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.760052694 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.201848125 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.191797401 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.187589022 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.197914359 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483931159 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.188304537 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.238742093 seconds)
  done (took 464.035288816 seconds)
done (took 597.660104316 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.186420793 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.187601274 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.184719269 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.194257627 seconds)
  done (took 9.860596974 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.204659659 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.196081523 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.201721704 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.194803913 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.202479672 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.196748335 seconds)
  done (took 8.307812139 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.189350007 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.191289265 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.194639407 seconds)
  done (took 7.685020323 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.385374776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.210068302 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.502180021 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.208837866 seconds)
  done (took 8.417467361 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.202647082 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.202917045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.202340256 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.202733303 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.205898982 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.206527214 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.204145361 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.204632458 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.206598853 seconds)
  done (took 11.949547921 seconds)
done (took 47.328444418 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.220486434 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.184039069 seconds)
    (3/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.257415261 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.257136122 seconds)
    (5/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.225415964 seconds)
    (6/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.248265061 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.183751861 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.254190018 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.327203224 seconds)
    (10/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184547943 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.01879091 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.224447983 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.850854355 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.325705009 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.385804648 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.336867599 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.326209583 seconds)
    (18/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.33727032 seconds)
    (19/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.189830867 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.859294573 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.251427977 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.233688035 seconds)
    (23/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.896862886 seconds)
    (24/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.298563459 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.184304367 seconds)
    (26/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.341473622 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.971960265 seconds)
    (28/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.212414201 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.22475939 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.18416356 seconds)
    (31/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.09442155 seconds)
    (32/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.09974779 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.264681785 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.283833554 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.22750486 seconds)
    (36/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.848201598 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.288646499 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.201528628 seconds)
    (39/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.281190809 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.096696543 seconds)
    (41/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.984909518 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.264804125 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.897420447 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.287556008 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.39025712 seconds)
    (46/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.185409086 seconds)
    (47/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.235822063 seconds)
    (48/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.18595628 seconds)
    (49/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.278525824 seconds)
    (50/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.944273939 seconds)
    (51/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.976479453 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.244559542 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.28735386 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.187045044 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.420527292 seconds)
    (56/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.34054455 seconds)
    (57/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.186708138 seconds)
    (58/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.251986008 seconds)
    (59/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.2991928 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.334983141 seconds)
    (61/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.19653706 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.270482885 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.341100189 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.380008967 seconds)
    (65/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.255058567 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.281794787 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.368201294 seconds)
    (68/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.855260029 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.332724829 seconds)
    (70/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.953180209 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.225589269 seconds)
    (72/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.904243945 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.245250757 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.190803141 seconds)
    (75/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.186386964 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.234186274 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.274000261 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.204099165 seconds)
    (79/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.256523224 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.324974615 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.195904223 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.362456879 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.41507665 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.27876952 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.254220589 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.294865937 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.272224866 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.36162144 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.299187154 seconds)
    (90/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.210365087 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.224012158 seconds)
    (92/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.23418704 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.198769019 seconds)
    (94/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.207494282 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.302849539 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.227839745 seconds)
    (97/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.278920879 seconds)
    (98/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.189748563 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.946282154 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.192495878 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.244130157 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.338730968 seconds)
    (103/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.258186709 seconds)
    (104/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.213170779 seconds)
    (105/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.236521092 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.950241117 seconds)
    (107/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.191118338 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.307271877 seconds)
    (109/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189398587 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.2881462 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.294963721 seconds)
    (112/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.190164357 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.068400837 seconds)
    (114/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.22130007 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.309372347 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.2366419 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.238160748 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.231474251 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.298060446 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.240762056 seconds)
    (121/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.190854735 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.886574359 seconds)
    (123/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.303433603 seconds)
    (124/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.257621018 seconds)
    (125/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.011205742 seconds)
    (126/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.207113258 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.195258183 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.406084989 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.329324883 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.28604353 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.199278675 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.450590494 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.217986815 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.236983823 seconds)
    (135/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.241631578 seconds)
    (136/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.237142884 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.228701827 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.939912302 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.294268149 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.356127387 seconds)
    (141/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.248601858 seconds)
    (142/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.198623999 seconds)
    (143/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.371986651 seconds)
    (144/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.345803162 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.368372714 seconds)
    (146/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.262282703 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.192474487 seconds)
    (148/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.195910515 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.28444155 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.251683274 seconds)
    (151/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.350095469 seconds)
    (152/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.197010735 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.337646883 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.194490396 seconds)
    (155/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.215340827 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.346524204 seconds)
    (157/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.236238798 seconds)
    (158/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.338095057 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.237997294 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.230418914 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.306403643 seconds)
    (162/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.19291801 seconds)
    (163/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.251171219 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.359443601 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.448607335 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.197674005 seconds)
    (167/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.235775109 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.944713084 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.301136205 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.292159637 seconds)
    (171/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.985980672 seconds)
    (172/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.367051845 seconds)
    (173/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.198073419 seconds)
    (174/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.385790584 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.309813118 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.193631387 seconds)
    (177/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.291190415 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.195484182 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.448745522 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.887064539 seconds)
    (181/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.296670125 seconds)
    (182/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.396330622 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.339564373 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.197616213 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.885362122 seconds)
    (186/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.243475379 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.21798575 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.350835028 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.412913491 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.355131684 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.293623618 seconds)
    (192/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.308874075 seconds)
  done (took 310.740759123 seconds)
done (took 311.853172322 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.227771619 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.393390343 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.211065906 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.212228821 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.21187553 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.202867292 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.228637385 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.211805578 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.22161298 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.220724571 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.202580214 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.216813146 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.226040002 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.218519352 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.24447059 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.213025736 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.211873825 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.217971417 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.22197691 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.224608495 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.212572215 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.213982842 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.231507636 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.212144201 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.221928414 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.221399574 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.219739256 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.215605201 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.217812831 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.223584158 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.218088606 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.218979649 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.226218957 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.220561333 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.215222277 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.21875578 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.214376676 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.395926721 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.229702734 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.219413101 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.218477872 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.226088314 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.218439841 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.219359002 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.222144122 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.233568998 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.222107788 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.228983367 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.219882835 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.198332561 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.232235902 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.223196652 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.217993459 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.198129721 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.210662247 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.229287517 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.220574494 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.230500596 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.217942688 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216251697 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.247935809 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.230765485 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.22320289 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.223853082 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.219292217 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.227171815 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.220509563 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.227173012 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.217434328 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217966385 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218037634 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.220305313 seconds)
done (took 97.330639332 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.338147462 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.215950579 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.352928491 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.22006154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.374604026 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.354473057 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.218759782 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.219796129 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.218307908 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.026076917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.21942773 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.220515274 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.216134304 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.219699582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.34127527 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.221375872 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.220285474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.92681247 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.22170098 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.3548156 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.213959573 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.221152533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.220616568 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.043548445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.216195673 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.211925834 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.355445172 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.221510939 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.944735294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.211171184 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.213121569 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.944375113 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.35727181 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.239843826 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.231077946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.230504212 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.376794032 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.237016001 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.337708451 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.338368441 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.357558077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.260568492 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.211499615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.219149834 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.228778861 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.230162504 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.227216041 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.253616356 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.220287022 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.223177962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.932149197 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.232568536 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.232387732 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.222974249 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.222342595 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.242055873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.224646426 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.223748705 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.35756412 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.225051685 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.342542086 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.051487198 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.030542644 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.223514639 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.216708349 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.224873464 seconds)
  done (took 100.834705763 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.28461382 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.298100505 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.327625506 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.218470796 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.270112079 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.332747137 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.219016869 seconds)
  done (took 10.081454044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.224171237 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.223790706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.268109233 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.267793832 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.223275714 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.375756023 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.223842897 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.23086384 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.223533205 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.271344616 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.225725444 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.224088574 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.2319366 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.218582267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.267013618 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.231532073 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33494997 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.22098974 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.224687284 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371455615 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.224524521 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.234051731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.272811944 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.231661021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.226226456 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.226011016 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.986474995 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.225175435 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.224595685 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.225414225 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.224109754 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.273505537 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.225670227 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.220967265 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.223757886 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336885459 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.226823729 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.225541616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.225713427 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.223018138 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.226691433 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.225825951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.226388466 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.226131237 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.226754559 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.2459659 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.226921967 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.226640937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.226265769 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.226813183 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.272466775 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.228310221 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.226310601 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.226261932 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.276659466 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.237513429 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.226103457 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.226663871 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.227816889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.226496937 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376754687 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.271364632 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.228120602 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.269385287 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.227191335 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.227069265 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.227645652 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.226975751 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.314311 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.228156917 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.271140134 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.228929529 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.401796419 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.248104787 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.229464589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.227502254 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.227488071 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.228571175 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.22080865 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.229591766 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.228716491 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.224934614 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.229838721 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.22943587 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.227901154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387507756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333395845 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.229482267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.237359186 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.231828133 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.229270562 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.27713776 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.23064221 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.229342965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.275935233 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.340122763 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.277937412 seconds)
  done (took 126.89200604 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.237387565 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.237407279 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.228677387 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.252112052 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.226452695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.225681097 seconds)
  done (took 8.544670107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.226480546 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.233266131 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.229770706 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.229336479 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.230045449 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.231280381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.232122494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.226737844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.233225412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.230368342 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.232320312 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.23175584 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.234124167 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.231639024 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.231842402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.231522266 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.232286145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.231974047 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.231595646 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.232050918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.226100739 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.232868965 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.232943268 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.228512235 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.23637294 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.233146137 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.248028099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.233332072 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.233335418 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.236709979 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.252921148 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.233759828 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.229642374 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.232432743 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.236267451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.229302675 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.235028869 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.234223394 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.23295595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.233718751 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.234834877 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234240845 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.234058938 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.235292246 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.231485009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.233604447 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.236831191 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.248780438 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.23607205 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.236012411 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.236103846 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.233825429 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.234102438 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.236027594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.23345655 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249883378 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.238297413 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.234786948 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.234148515 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.230610907 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.236794538 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.235556894 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.232270159 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.237741724 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.234222388 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.234894654 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.231479898 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.23796252 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.234991328 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.235635401 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.236620608 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.235189918 seconds)
  done (took 91.002028561 seconds)
done (took 338.482691568 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.005606477 seconds)
  done (took 4.146992082 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.494924952 seconds)
  done (took 3.639025741 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.383638147 seconds)
  done (took 21.765540776 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.232479918 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.328131695 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.230592015 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.236059561 seconds)
  done (took 10.170449179 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.460653582 seconds)
  done (took 3.603746882 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.234317644 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.232756608 seconds)
  done (took 5.612159187 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.378336102 seconds)
  done (took 3.522371708 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.376997204 seconds)
  done (took 3.521280451 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.235103818 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.248679675 seconds)
  done (took 5.63399195 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.218158733 seconds)
  done (took 3.361487391 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.557227096 seconds)
  done (took 30.701636826 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.238019518 seconds)
  done (took 3.384706789 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.253067387 seconds)
  done (took 3.397407313 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.66682654 seconds)
  done (took 5.811018854 seconds)
done (took 109.413097996 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.227716083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.233072855 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.233112971 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.232845337 seconds)
  done (took 10.071016135 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.292024788 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.290314046 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.291335628 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.291403723 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.290219613 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.291419807 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.273170217 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.265298593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.291420691 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.290750589 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.292299543 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.291736604 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.291980093 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.266502391 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.291271044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.292778034 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.291972178 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.292724033 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.265858993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.290370975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.241088333 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.29185395 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.291602413 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.241601502 seconds)
  done (took 31.946906783 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.753537508 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.306564375 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.390261221 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.290468692 seconds)
  done (took 6.88555634 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.318548295 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.319851963 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.331195236 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.369056301 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.381752943 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.330908251 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.263424193 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.262618233 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.248059239 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.318400247 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.370696703 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.309597695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.395819202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.241338458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.446829018 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.241947786 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.242165824 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.320221165 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.370486778 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.382753154 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.241630927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.318790086 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.319455388 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.315670937 seconds)
  done (took 32.808281274 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.2510901 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.257680365 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.243670358 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.260248836 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.243630612 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.244268368 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.244978363 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.248838516 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.243578079 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.243594893 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.244493457 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.257094747 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.247460981 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.244134784 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.252029828 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.245575812 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.246614982 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.250517594 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.252076499 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.244945578 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.24726086 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.250693632 seconds)
  done (took 28.612699541 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.232164052 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.232410976 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.583607025 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.488681986 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.232839727 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.238213254 seconds)
  done (took 13.157910607 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.306159689 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.451526899 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.239222654 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.570876181 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.652299379 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.240189621 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.239386856 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.476809514 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.771895869 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.745346586 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.30022646 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.307865988 seconds)
  done (took 18.450762254 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.247940025 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.238340276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.250993652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.252473785 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.291066242 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.243089183 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.247067527 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.234373962 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.295099377 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.295077069 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.245582755 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.292227352 seconds)
  done (took 20.284007494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332463284 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238701324 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24026519 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283281683 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26129959 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086398087 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284518968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945567623 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.262524717 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515422796 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239417678 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331135364 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492838962 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240319889 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245397969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.196410649 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472291214 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697635503 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241548186 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240565027 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289308321 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246585779 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255919803 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442630264 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087786244 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240970146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.50359501 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2405924 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504752679 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.258556994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252847749 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241839858 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517336508 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878985531 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35820751 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441492279 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252782318 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24423856 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.252938794 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.247158165 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244103955 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244780792 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252504918 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243811328 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242885244 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249641759 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941624687 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.269072558 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.243308563 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24317543 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48079302 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350989347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.248076065 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243739852 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241438126 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245898017 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.25078063 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361510329 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831597073 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24393681 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259100481 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.249309153 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243743077 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244936305 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856661095 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.252542922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.250314338 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.250411303 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244499456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246138138 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280023083 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245962128 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.271000243 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246757312 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926211407 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253275351 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247270826 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76286365 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252187798 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.250906043 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476350532 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24793243 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246056573 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.245877027 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24676551 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905976296 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254412084 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.237693444 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.287146647 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951190557 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.465891218 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266606256 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277040296 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469304565 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.233416609 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247518355 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.257492092 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24949754 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.268254933 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938675484 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26572144 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.255157001 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505859272 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.457459947 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256658677 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.220645439 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701374565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270766252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.269391912 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256930054 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45418392 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.803250249 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267621242 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249234475 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270453709 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249001609 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93796496 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254395082 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.259052013 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248695798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506546695 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.989120901 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250167512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315968279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2524457 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250886459 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249808894 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251098279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249690459 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.441779088 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276913342 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.26273248 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.250648591 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250241592 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.254118255 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259694763 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.251045798 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472668545 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255078088 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531572375 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251314811 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250179501 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25177098 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.473168261 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.256098829 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.262085854 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512160134 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263910622 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266992021 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265658396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269463792 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353630315 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272434576 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.263197867 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509274397 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.257004446 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.258223899 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251205769 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252721663 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258930802 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.259224645 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247589639 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813786068 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234040363 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255543425 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139259011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.268171273 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319242563 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259105835 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.453990256 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.251984889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255347379 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.260957047 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.259335718 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481859711 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.263349103 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.253086783 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332721642 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.70428611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.829574454 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273480769 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.254449128 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.253441496 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.25263355 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253271826 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254101688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255290452 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454959004 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268127332 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255504786 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.814488638 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261023317 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254877095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.261574273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265555237 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.262190431 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254964022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.254335608 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277177078 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273507822 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.268920767 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39853415 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.271067851 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25452084 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.774302526 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262031255 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256573918 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254815789 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289466777 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255106245 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04019529 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51691856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25503634 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.497374507 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262114403 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.273922934 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.256304149 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271018328 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25766823 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.262252009 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285983758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.266948112 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257347041 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261749543 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819973243 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953314361 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779408109 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275336755 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.258285305 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261194006 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952484837 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275231871 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257468647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48242099 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955483636 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275014704 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712760247 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.28427735 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993780188 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504146198 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494411851 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269776613 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.259182483 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51890428 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478170745 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293424771 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258377456 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263737464 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.245797674 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793318202 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288358314 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339720523 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954836222 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275524245 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276201955 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.318984546 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265309909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645056339 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276473703 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259245681 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259164439 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267449895 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048284639 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262082286 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259539578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847328158 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270547619 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.718127099 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27763002 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.462170235 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.271842208 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.264652119 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.26036802 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.278516423 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.516499955 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502109102 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266550582 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27392794 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778190062 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.130957009 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.26773162 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262111441 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952537825 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276747145 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535093682 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.270167707 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.266094863 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268044911 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261495628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2608256 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.262213049 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264700094 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234244132 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732772887 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.262173872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262759979 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284608943 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266086967 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516165836 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.278835571 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.826644333 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492872905 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269024415 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284364017 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.268014825 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26437773 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.251561131 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262818711 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262836866 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293608603 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.489411338 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271499911 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.249253466 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278130753 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476870427 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264048166 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269109395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494195857 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.264977308 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.271093589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985388212 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300605168 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269371736 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264482566 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258557531 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317487176 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333248792 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469592395 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.275121146 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.27476819 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651612172 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287634369 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267432575 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.279744808 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358409867 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267849244 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.271896306 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.043327453 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83492063 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969898592 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.83993909 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508539014 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271656403 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268786737 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264794516 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426969339 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266366481 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541049146 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266106131 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.260692378 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304129938 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268573591 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272226077 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479671694 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54359611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266540729 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265698573 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272231444 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.266295793 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276416182 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.476039067 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737032396 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802186385 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268959388 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271864021 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969025291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560139822 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266887649 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266615856 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267903684 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.277939344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296883196 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.274419359 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26762901 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430356228 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50775657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914840886 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294062355 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.300180192 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.785697506 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268478414 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521758116 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26814334 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495523356 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839247684 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953503222 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532996981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336986845 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473908919 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.269661434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429374939 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.278428391 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272754158 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268981604 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268600867 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.268492926 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.277376813 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838490973 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539099125 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.274307712 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.279695087 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3039835 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.277409055 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.491967655 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937459532 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491894908 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278336518 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273028543 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269705909 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83819167 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520195146 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276556572 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.276434303 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499558674 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270951302 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293637364 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.789709124 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.270693253 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79165218 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.2416587 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291538026 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28161913 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.953183631 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838468073 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.2824174 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740487753 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27358177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274873563 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551665284 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.277680073 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282314853 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551888351 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.277108378 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284002994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482789206 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.839132931 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013645536 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.286762319 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299962101 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.274663487 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272590836 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267900785 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278176354 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272229134 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.67257538 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.291244752 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273819009 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284568839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.285703533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290185994 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.277359358 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273740221 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.280129667 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.271876732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.268020053 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289231365 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396573543 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814514225 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29660812 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.949300145 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.597382792 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.527231199 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286607122 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.264907726 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.279121985 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274904956 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27461531 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27402297 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274186324 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80533546 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.291003265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.288653063 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279490941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.274124694 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48364139 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287924771 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482167517 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289887319 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295809621 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.261869119 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274486649 seconds)
  done (took 918.252669561 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.296622797 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.288708556 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.290465086 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.286477801 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.280660962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38456702 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.341532717 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.278681912 seconds)
  done (took 19.630064946 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.278718869 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.282948613 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.278268045 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.27970053 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.276236526 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.728437711 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.292906093 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.279501963 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.291687066 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.277563862 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.282935715 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.921000039 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.295401066 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.275767644 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.270341754 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.285534584 seconds)
  done (took 30.779815665 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.167928333 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.387887103 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.048708621 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.283980721 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.291405121 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.275638665 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.46621708 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.292580593 seconds)
  done (took 25.397781419 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.281658547 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.282312764 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.283065774 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.282820662 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.282286522 seconds)
  done (took 7.59494124 seconds)
done (took 1165.018322137 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.282589613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.283748538 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.28233692 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.282817171 seconds)
  done (took 6.314587432 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.263885558 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.264134472 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.266913988 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.275694664 seconds)
  done (took 9.254577235 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.937836601 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.900020214 seconds)
  done (took 5.021821167 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.752175969 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.751675609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.748901319 seconds)
  done (took 6.436419749 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.554575163 seconds)
  done (took 2.738003046 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.16431795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.275106117 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.926774889 seconds)
  done (took 7.550398962 seconds)
done (took 38.500521726 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.276196828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.6119247 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.429861498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.273714098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.44940791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.429870859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.013628873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.277086162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.278034666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.285518299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.274066049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.449118989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.993970117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.618727277 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.993678391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.617887907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435227059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.284515008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.281964531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.278597062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.015556741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.284041095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.285415275 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.275864706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.440030197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420014266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.286888531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.617990004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.28105135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.281146129 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424788238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.278891914 seconds)
  done (took 79.62951777 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.277134996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.274674621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.282700481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.280486779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.276832175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.285679712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27580964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.275235407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.275086404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.30027628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.276856955 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.277296452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.278438511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.288770728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.276686951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.276679872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.299451858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.28795106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.276765901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.292309898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.278647649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.277991135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.291703159 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.27751189 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.28248988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.289463203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.277233721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.292952466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.277203496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.277688194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.296057951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.284596906 seconds)
  done (took 74.227681513 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.283198381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.282227182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.277731108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.288142182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.286247543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.283448474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.280649058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.277458786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.289785308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.286246831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.291763753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.279979663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.278736023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.278745226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.29653838 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.278860596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.294056046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.291138865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.27970737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.277084599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.29861368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.278662488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.277773546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.281077487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.282560985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.279633696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.286777242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.280084339 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.29838836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.278992495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.3001958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.28357025 seconds)
  done (took 74.299305686 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.562005603 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.289276223 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.292820541 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.284735393 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.29263725 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.290577495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.28469921 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56787415 seconds)
  done (took 14.054957211 seconds)
done (took 243.394453795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.297679588 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.766834879 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.331911665 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.285376727 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.30947778 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.310785098 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.50246609 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.330558754 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.504417571 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.305581167 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.306669537 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.299583172 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.057333956 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.435905762 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.125578041 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.243116188 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.136021414 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.286001693 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.840820728 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.562612779 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.314402457 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.285331997 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.124017828 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.163855228 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.272871206 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.363327194 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.382685065 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.503291246 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.441924411 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.363655132 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.789872115 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.295142282 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.285704805 seconds)
  done (took 61.016040679 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.285943451 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.391050887 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.292718633 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.29268811 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.392438862 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.292880023 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.287349088 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.291361211 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.293045985 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.293870608 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.294240292 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.295187415 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.29539342 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.321416281 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.394419933 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.287632651 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.288719521 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.387959949 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.288226559 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.286885049 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.318758101 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.294957788 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.296810668 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.320751806 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.294403185 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.29451295 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.390833413 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.295744431 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.296643901 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.390974962 seconds)
  done (took 40.641397175 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.29454354 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.856378846 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.021179545 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.300725742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.291139465 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.295049425 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.563318157 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.300520647 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.294800074 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.294149401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.772745461 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.302032125 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.325168688 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.051525727 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.299876661 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.296849655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.295511332 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.292110462 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.873109549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305748446 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.584276412 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.302397712 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.565449533 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.305990508 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.313862092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.292604776 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.296538299 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.113090647 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.317994387 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.771113857 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.04480443 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.564113008 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.055147321 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.055296461 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.045446447 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.302288182 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.297393486 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.775690769 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.299423748 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.293152269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.563752663 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.298435458 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.029234321 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.987072736 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.315963832 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.296991696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.125458795 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.792415194 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.528453044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.306683321 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054080364 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.302279547 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.298849023 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.296527803 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.524676929 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.300558634 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.294582146 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.141878179 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.322980754 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.568718426 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.303698099 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.296097651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.869365719 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.30144545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.868541367 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.296633976 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.302854649 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.31521267 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.033154807 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.303570192 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.009976192 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.317073217 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.300623218 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.774604876 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.86554019 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.194505872 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.297211748 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.872723174 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.084845377 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.584703843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.305598831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.096941004 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.586497243 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.303221936 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.302897728 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.303210032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.301484327 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.381193869 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.565267139 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.938830284 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.004870727 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.158594217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.595366461 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.308473615 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.298014944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.136846722 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.321232558 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.301532332 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.032755561 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.005867313 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.315397227 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.305687962 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.003631744 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.316606122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.57327597 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.306901271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.040010712 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.303285742 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.381907083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.302521161 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.305714936 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.3215647 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.573259581 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.307141212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.303451064 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.99595376 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.80940546 seconds)
  done (took 183.379974844 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.29142084 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.308969553 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.304883654 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.293645431 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.292727277 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.300675938 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.293823714 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.293391242 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.298156118 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.29314588 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.293470905 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.301550573 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.299426657 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.292747594 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.293886458 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.293812914 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.294314307 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.303715051 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.29500097 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.292235855 seconds)
  done (took 43.132796659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.304206525 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.840296677 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.809444439 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.31058208 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.304273324 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.300458643 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.353561493 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.309760198 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.305061603 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.588499347 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.469193411 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.310089074 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304717503 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.305817307 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.805062781 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.299783769 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.58944636 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.846379216 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.310960156 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.840999316 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.299219257 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.30684357 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.300519612 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.84241034 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.60119943 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.578708055 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.360832174 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.843186086 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.310526836 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.304962318 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.842614279 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.310502061 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.302345112 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.841442328 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.327122386 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.319699916 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.30748124 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.358314338 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.358661935 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592336769 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.854198343 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.584973246 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.323764789 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.480208318 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.308277384 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.295928737 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.850867588 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.329101402 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.297247597 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309288414 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.313301917 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.815555641 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.324752785 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.815810426 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.329792373 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.308758511 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.845606882 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.822319696 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.831776678 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.471255284 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306356961 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.576198781 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.311920961 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.853352182 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.330014408 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.307691708 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.309019102 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.470719878 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.862508226 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.582153135 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.599254289 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.599076073 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.313354579 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.366087177 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.326089013 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.595804391 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.368086625 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.706682665 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.597963997 seconds)
  done (took 118.919383645 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.564747992 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.414230416 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.695212162 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.910571428 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.308602441 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.439350673 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.412447038 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.555501772 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.315235731 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.386769355 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.938403516 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.443653229 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.077654477 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.391329898 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.406232795 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.444517397 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.682903581 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.276996683 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.99568404 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.913035835 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.324249097 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.410436611 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.853793749 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.532473151 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.305764133 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.85129804 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.255941341 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.94834725 seconds)
  done (took 51.263304144 seconds)
done (took 499.543492119 seconds)
SAVING RESULT...
DONE!
