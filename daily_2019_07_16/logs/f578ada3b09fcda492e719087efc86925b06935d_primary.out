cset: moving following pidspec: 31210
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.200298519 seconds)
loading group "string"... done (took 0.530316592 seconds)
loading group "linalg"... done (took 6.701094653 seconds)
loading group "parallel"... done (took 0.155262581 seconds)
loading group "find"... done (took 1.168952211 seconds)
loading group "tuple"... done (took 1.753649517 seconds)
loading group "dates"... done (took 1.183553874 seconds)
loading group "micro"... done (took 0.221076246 seconds)
loading group "io"... done (took 0.975334582 seconds)
loading group "scalar"... done (took 36.351553722 seconds)
loading group "sparse"... done (took 10.876638968 seconds)
loading group "broadcast"... done (took 0.90430236 seconds)
loading group "union"... done (took 11.909597255 seconds)
loading group "simd"... done (took 4.223968208 seconds)
loading group "random"... done (took 8.48286548 seconds)
loading group "problem"... done (took 1.728832134 seconds)
loading group "array"... done (took 19.987476614 seconds)
loading group "misc"... done (took 1.671655645 seconds)
loading group "sort"... done (took 3.102132224 seconds)
loading group "collection"... done (took 16.624337412 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.475306168 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121276172 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113183627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11627779 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137489267 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113270269 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121802477 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082407967 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.813862824 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139659964 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116461175 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407421742 seconds)
done (took 4.8597062 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173147786 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08276424 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081004788 seconds)
  done (took 1.217352933 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065299915 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120531027 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066242871 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06705453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066239577 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066045423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065779184 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065843127 seconds)
  done (took 1.572571356 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072216218 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06861688 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067719098 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067151164 seconds)
  done (took 1.328436558 seconds)
done (took 5.42104626 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.755680941 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201810937 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185972404 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391087863 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131457597 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162043611 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649868767 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306025809 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180686603 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080359438 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101795687 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318432911 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106067452 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63646547 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079927821 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089568495 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136786572 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438797569 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068155841 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082053145 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089002277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128196748 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087680532 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075281557 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144348917 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067677301 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128053872 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080422126 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06648413 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20584447 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172338166 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664100529 seconds)
  done (took 10.102279455 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095891419 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09638243 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069113786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122858421 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097290884 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068972895 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070664854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067096863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086380502 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126690646 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087574158 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100101067 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065325356 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06884396 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083622368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203989609 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082342477 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082620768 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072131986 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077394566 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107956647 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080719549 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079710251 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079620372 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129941784 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179257648 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096137484 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096800929 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068762348 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081223562 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115635479 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128430327 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067622729 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067777833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123350456 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094879212 seconds)
  done (took 4.512190823 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.896336918 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138063639 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089280146 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159717478 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068716256 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107689567 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065360711 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086583269 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200695495 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.057442282 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.116342569 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.425157105 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110131331 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084160955 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067407876 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068275195 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064122906 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066325446 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340469774 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108912305 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11261526 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083334918 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07373355 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069203775 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.345021933 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06661244 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066244628 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067684905 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058115421 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110684492 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067799164 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.966505696 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087738278 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067293065 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100719138 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164097726 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090242722 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132445967 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065674878 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065051451 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145739438 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072910249 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065275344 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080440389 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065800044 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062302263 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100529137 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.233709496 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070148681 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067593219 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161567846 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06729638 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083112571 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.735099349 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154921052 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079397427 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068753305 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24767887 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085335691 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067291259 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064869038 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179456338 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128660702 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068673118 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0666421 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066254367 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06816803 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373055268 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067236142 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723158755 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070676884 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077012269 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068827453 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066549503 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072771787 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072108235 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085748225 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066692967 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068435866 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066356576 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066081458 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068878588 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084324434 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190443055 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066771915 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066906309 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06488567 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08610657 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096769055 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069288078 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065368516 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099953838 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067876516 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067135491 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101200161 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066820016 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083461249 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068812039 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117569471 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067611572 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.096053199 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064587114 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09498205 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070057095 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098915666 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.170615198 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068410872 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.225992344 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065124265 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065544523 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067672548 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065847306 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068015565 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069177386 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079470807 seconds)
  done (took 19.781106791 seconds)
done (took 36.344637157 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272990967 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074739198 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074601839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074735255 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074486737 seconds)
  done (took 1.716814853 seconds)
done (took 2.842497552 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119927292 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09834942 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064143254 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095123979 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064179935 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099416745 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098664327 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081266945 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098848818 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063963539 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095549216 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06481298 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064046337 seconds)
  done (took 2.252102852 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082734348 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083003249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069634413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082046732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063649786 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081957236 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080431032 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087759133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080545821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071713544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063837507 seconds)
  done (took 1.9654792 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081630122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083765441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069827393 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081631306 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063330114 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081366872 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080943756 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085705218 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080948113 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073221648 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063834719 seconds)
  done (took 1.963533477 seconds)
done (took 7.294278745 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077021729 seconds)
  done (took 1.185314994 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583531911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.037046484 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08086546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110658895 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181499552 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115853586 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.264442149 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084777301 seconds)
  done (took 8.747314229 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088121539 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081637135 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069081808 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072431257 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069195878 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068192163 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071247544 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070507919 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069491745 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071973959 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068907151 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070805881 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069313533 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071546765 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072252032 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068071842 seconds)
  done (took 2.344625904 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091381217 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090025732 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072839014 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074292162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071541386 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071750631 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074350064 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073043555 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070936694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071981944 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074204024 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073288302 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071046643 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065245555 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073927655 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075239656 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070659228 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073425856 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075269598 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074652238 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074314907 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064318909 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070958156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073467931 seconds)
  done (took 2.989772221 seconds)
done (took 16.383250671 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111693344 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071994461 seconds)
  done (took 1.303572562 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081272796 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081813515 seconds)
  done (took 1.287704603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081322228 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065555596 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088782335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077668737 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06605439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065774235 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08643856 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066150336 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065919806 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066496758 seconds)
  done (took 1.855259914 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068037816 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078016693 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069251129 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080046314 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072916371 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063962263 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072163633 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067694244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077077201 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063155197 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070733547 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081721281 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070582933 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083443208 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071899649 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068050695 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070123459 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06707635 seconds)
  done (took 2.425214719 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066786849 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067727276 seconds)
  done (took 1.266260296 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066505123 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064052992 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066020054 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066132586 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063303222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062538252 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063063114 seconds)
  done (took 1.580140455 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.373225164 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110416292 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292817517 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071326755 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081335136 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247376986 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06591086 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070345539 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070646396 seconds)
  done (took 2.553964832 seconds)
done (took 13.405999803 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079283243 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085455653 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093677024 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.337046833 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091040292 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065876462 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116074315 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189198106 seconds)
done (took 2.198492731 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127490657 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.55625713 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.365856504 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193056432 seconds)
  done (took 2.248798385 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311370437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091448322 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058729591 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06635449 seconds)
  done (took 1.669514255 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066396294 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06876235 seconds)
  done (took 1.276576057 seconds)
done (took 6.462585733 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084877889 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065659136 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063871504 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065626952 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063493244 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065559075 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063445814 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063451048 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065643655 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065523886 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065893622 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068571143 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065842868 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063513276 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063578979 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065573928 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065707748 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06373734 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063386768 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063402367 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065968502 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063335937 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063588034 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063187003 seconds)
  done (took 2.748170617 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082839505 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066013408 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072003106 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070704727 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072622096 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070995433 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071111312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066066364 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070908051 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068105664 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069273686 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069597888 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067611281 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070041759 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067764681 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070126962 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07110207 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066180849 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067945712 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069756131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070626398 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066196358 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069479381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070931297 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070826306 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070858632 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069463971 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06744168 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071144178 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069623508 seconds)
  done (took 3.246834786 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069038659 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063564878 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063677156 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070712554 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064203222 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065050974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063148624 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064580684 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064494129 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063600302 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064633306 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063072382 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064805564 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064295243 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064165944 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066986223 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079072798 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064110928 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063678952 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064322325 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067390151 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063629724 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063420499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063375819 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063241251 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062900513 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063806939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063305976 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064370779 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063228388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066168751 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066720119 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063067724 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069720008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066525218 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063534807 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067091706 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063078987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064274159 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063255645 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062875072 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063261213 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063470346 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069822645 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063753086 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064826018 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064019763 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064138031 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063906003 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065892257 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063111516 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063752671 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066631679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066827687 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068988206 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065144324 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06636903 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064177239 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065040465 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063414632 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062944472 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063155868 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066365971 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063967382 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07762067 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069818353 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063392277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064827535 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064188645 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065899592 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06536286 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07631303 seconds)
  done (took 5.858486641 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089704179 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08672485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065092793 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064824303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061795647 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063958479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067057055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06414013 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065352567 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069303115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064015072 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065262848 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065692861 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076444724 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064590744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065165414 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069388169 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061722917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063762363 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.178944596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06427519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066754995 seconds)
  done (took 2.765819265 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153065461 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070102452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10419773 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072410703 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067175615 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072368434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069342103 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069134462 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069720733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068274393 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068405422 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069748521 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067260207 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067476224 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067887496 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068078954 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069677013 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067556112 seconds)
  done (took 2.518067469 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076850337 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066095932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08608674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066219506 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065558208 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06820021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070365056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073776283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067942507 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066178919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074138272 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068357909 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068122139 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06609626 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068071568 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065600765 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068353924 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066132062 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073769878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070173315 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070432525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074459732 seconds)
  done (took 2.69821938 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080130853 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067445108 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082639637 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068650615 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061815975 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064420059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069923229 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06610158 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069826233 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069718089 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065801704 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064389838 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068976478 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066016944 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068947862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065631714 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067468377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065812478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068043794 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061830619 seconds)
  done (took 2.522247815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086492611 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068208857 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067291544 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074947322 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067531204 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067430813 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074971055 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067590942 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067024681 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087259566 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067507864 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067264419 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074415654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072043543 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067182081 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074808133 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074263729 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074885432 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067411393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067072671 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086046194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067313861 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074722194 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067353793 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068223679 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067268581 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067221961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071939526 seconds)
  done (took 3.166036144 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066178476 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066010951 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063793747 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063604344 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063548532 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063535754 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063117684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063675049 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065673817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064045687 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065586101 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065926359 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065544088 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065785594 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065685794 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065623773 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065755122 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063183119 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063417475 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063441917 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065458966 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066038449 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065635695 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063391274 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063224158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065581083 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063788794 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063363594 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065992347 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063032668 seconds)
  done (took 3.102160863 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075211852 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072299857 seconds)
  done (took 1.312283565 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063098221 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079730818 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063271715 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069982446 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069376708 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066269605 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072814794 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069346251 seconds)
  done (took 1.715231701 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080760924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077270778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067347694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079615902 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075987143 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082972515 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13529687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066627684 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072610432 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0639284 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079642424 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065480465 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072321874 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066042237 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071206065 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072160811 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063898176 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071901742 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068517904 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064758308 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067124515 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074377319 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06819167 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061643687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067441045 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087175257 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076267204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065329944 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068601468 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072918967 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071738301 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060021849 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066480429 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066405526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0642096 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075638609 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080576824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068756519 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074922771 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066928315 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076475876 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062094641 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070946064 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07250318 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076451428 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066697833 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066999899 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061646215 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064585117 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068695257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061814574 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066717609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061109657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073235594 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069912278 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079205689 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064964399 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067749877 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069195654 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069617835 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072587198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068479079 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068861794 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066014659 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075750393 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070683977 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074772398 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062310915 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060464602 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064336158 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076134033 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088027997 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071932713 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066893513 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066934461 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063917383 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068893683 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067047698 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071418145 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071671023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065685891 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071296969 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072494273 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065736251 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068148739 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073435931 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063882758 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068574969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063622065 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080546525 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064080059 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063567642 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062774408 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074771061 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068524893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064699177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063574206 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071835995 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05916003 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065659515 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065608705 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065947411 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075075929 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069387618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070121858 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073794505 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072243304 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065148213 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067845889 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061717148 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06547293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063924669 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071851151 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059153785 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067497407 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065636751 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.191839297 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075230315 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065889246 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067942405 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074442132 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073307721 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065463698 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064000102 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069679884 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066702822 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069536426 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07444822 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065127084 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061963723 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062334188 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069494855 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066203242 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070365238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071087454 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069250711 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061308346 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064761856 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071870236 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07474713 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067943099 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067679814 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072241195 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067567779 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065711036 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073026206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069054576 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065868085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072202922 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067275801 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062945106 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069309319 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069077529 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065534453 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07025204 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069805872 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069086156 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066940407 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065063082 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07417332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06719054 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066558722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066950696 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065393828 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077193526 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068338541 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06195417 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064056597 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07635146 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064806763 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066991756 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065773732 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068838522 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067115865 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064778928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066585212 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068563932 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077167939 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069963689 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067049429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071226431 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077757556 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066385443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068906645 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065986017 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066772602 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067251035 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075080998 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071814511 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070871443 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068307691 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063268167 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071409356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07333638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065780672 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063963195 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064986585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069923672 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071627583 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070192196 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066728562 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064344581 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066928395 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068926469 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068385128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06536581 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064957931 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072149021 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064075096 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072706364 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06675576 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075007851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06825151 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060646949 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067439133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063098935 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070437127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060456289 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063642065 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064305151 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065781846 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063792178 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067542723 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059546092 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071716602 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072207318 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065491389 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064979155 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064835444 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071835608 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066648569 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069115886 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068522108 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070681319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075368387 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064691009 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068598736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.205543835 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067809206 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062028169 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072733858 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065753297 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066574596 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066036487 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065107573 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07002184 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076301043 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073090137 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061278376 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06973925 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065413305 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065838495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062805151 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071740689 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069148165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067278036 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073737693 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067579467 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067503037 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070370932 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066696289 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067477995 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067662638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069276433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067659459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069019741 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065927519 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069849327 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066063455 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064950942 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068750717 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066914688 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066733049 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072635946 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066716041 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067492078 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069180686 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067236689 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067727673 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067718703 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065835473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069845782 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067262164 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067390212 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069407462 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062219566 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073365748 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066042956 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073683044 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067058254 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063484184 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074098776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069625635 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072186099 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067643311 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067814545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068733514 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066279992 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06964204 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073054748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065034653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076992935 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073699683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067250458 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06938219 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066700994 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068434882 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065398772 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067148829 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066898689 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066533344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066404701 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070418736 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068925032 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066674972 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068113093 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067064124 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066398016 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067116496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060544586 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065446876 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066154066 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065894231 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075270535 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066571485 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065744589 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065085237 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066755708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065256725 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063514544 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073616664 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074834683 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066615188 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072828125 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065630908 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068068017 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075930995 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060279838 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063367059 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062852276 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063261859 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071841642 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065567911 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074047082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064878943 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064306397 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062250741 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065534339 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064046435 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059454104 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063150175 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068433724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064337187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064151028 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064842977 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067267636 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065693124 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073757698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064275493 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066013763 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.198559729 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065260822 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067395808 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066566807 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070375125 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068304432 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065161778 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064323329 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066279175 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068033352 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068186744 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06693785 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06874522 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073040836 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066737217 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069329321 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069640976 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065052529 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069177093 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067061594 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066958906 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066429197 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069822405 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07075513 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067508391 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075179696 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066617333 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067415791 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066626185 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06508051 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066309211 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066208385 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067018453 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065966917 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067643243 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075212517 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064199696 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069410465 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066307471 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067062765 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072916274 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067463769 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069206467 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07366115 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067056298 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068891993 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074144653 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071213048 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069737737 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068068077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068867397 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072507396 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066102504 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072607836 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067116899 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067249918 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068453458 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065235491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066232992 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066526766 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065527397 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073375521 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068184782 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065958178 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065952339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064710407 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06797878 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069484669 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074106484 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068698951 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069048419 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061446094 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06467405 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067176552 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064309911 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068114047 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068723366 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072008077 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068973984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066625923 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065566669 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075033713 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071742164 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069738753 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064274212 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069655524 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066613179 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068415642 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067226815 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066168917 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066983001 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069281967 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067223429 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065645054 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072688546 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069333478 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066797452 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067928299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06674613 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066396153 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061516627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066443187 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067888622 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070797973 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067746324 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065462659 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074845372 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063390202 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065900762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067969662 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064390643 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.06939208 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060638383 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066738084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066062209 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065689194 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060657371 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064619407 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063308173 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06678206 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064215939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0604744 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074748957 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073319631 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.201170033 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066291671 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065864157 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062920359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062678602 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066798862 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068236278 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068989747 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076776635 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06578539 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066063903 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062294789 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066127999 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069630387 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06982886 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063849979 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062846998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066326311 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069628205 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072572666 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06500175 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066130834 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069562363 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069561318 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064870639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069968057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06371332 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070422246 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07953536 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06744933 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067195856 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072169554 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074071073 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067072916 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061975797 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067326619 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070009357 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067123848 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0673493 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067379265 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081157886 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069915012 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066338604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065842707 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069270539 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06630117 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074321369 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067514707 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067344737 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071409035 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069196867 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076223854 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069399556 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074280331 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069400618 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069551258 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06549782 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067203196 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064878223 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065518709 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067696588 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066794426 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071427659 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074020697 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065660356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076029002 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074624907 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068831839 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06313693 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065454477 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066445112 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061978491 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067217543 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064948217 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064318301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064448739 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065732518 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068108039 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071254518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067514606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067225561 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065911332 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060609333 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068656056 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069113415 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066995058 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062817208 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066308042 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066359303 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069842146 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069385097 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063782676 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06806393 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067658968 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066395427 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061717094 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072416754 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064776537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067894009 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065134171 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066135802 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066931367 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069220606 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070869139 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066714593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068379157 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069330543 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067238668 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062910221 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062514865 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069917241 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062968046 seconds)
  done (took 42.377600817 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101989858 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06512039 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063349094 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06307373 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073729381 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063631818 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062317381 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063263932 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063675919 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065401717 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062747875 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06217304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070730968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078099618 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073628715 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06719802 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062714536 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063863211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062457915 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063282327 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071685151 seconds)
  done (took 2.721273323 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074330845 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070911217 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073546818 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076199719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067470739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07076189 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072682301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071011516 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076737225 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067499953 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076380968 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071072607 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067746301 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067350851 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067720336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071717255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076502082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067912964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070964738 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07282988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071460759 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072597242 seconds)
  done (took 2.828351324 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067595868 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066241681 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068010298 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06221556 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066471416 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070694395 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069891272 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064441226 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069595319 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065599631 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065810674 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065836829 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068675248 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061894257 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066840052 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064452977 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107974307 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069665085 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066265754 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067562422 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061886536 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06806907 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062114641 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06232495 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065477354 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06978632 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066930825 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064348099 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065781153 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065367547 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06599341 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064519787 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068069523 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066732307 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065374031 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065180617 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065958291 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06649193 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062010828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06479065 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067367632 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062395207 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067266863 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067912564 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065017877 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064205516 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068025477 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066095921 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061638669 seconds)
  done (took 4.527763037 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079241682 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109548052 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068188618 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088621089 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079875075 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072755438 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069667283 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089106143 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063873118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06468923 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08137681 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082260069 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065922277 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070250473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072749467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066041763 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067214029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065289284 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069709282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065665297 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07024982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072667406 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079631627 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078815385 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069724452 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065563421 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065543179 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070436646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078061353 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070681316 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070794528 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071469485 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080570099 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071740022 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065808702 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068360263 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081681281 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066257064 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068621432 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064309774 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0679133 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069992427 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072372714 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082078379 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066431743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071285049 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065875672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063443377 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078342831 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068284518 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073627693 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079539639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069032771 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065546104 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069736596 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079929593 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065192034 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063835583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06862482 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077215893 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063311643 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068915449 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078217436 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067767583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072402374 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078838303 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070556431 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069413592 seconds)
  done (took 6.302142693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075701214 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072602856 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079414862 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079331361 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072291056 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072354924 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072381578 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072458635 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071628367 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076254277 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071898008 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092292386 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067553784 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074289485 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072334405 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072761152 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072291272 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072578456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072220548 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071943954 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072082853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07929239 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072205551 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079484519 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097530456 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067616977 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07179506 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071982169 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079805611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072738701 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079366879 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072631836 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072230473 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080157951 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079327263 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071996826 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065646074 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071979903 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07196082 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072369018 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067709477 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079465956 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07208065 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067517454 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072683513 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072258782 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079548848 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078900883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074602801 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076516443 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071933903 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079306722 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071535883 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071811879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079448105 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103560977 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079189202 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07916512 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071980912 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079145963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079260628 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085163255 seconds)
  done (took 5.958506542 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08302946 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0748199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075672174 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061525857 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063992494 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069722149 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06410766 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064173859 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073783296 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074037586 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076244499 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069695102 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07264356 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076415821 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069491135 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072292779 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069639961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069311788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074046404 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070154881 seconds)
  done (took 2.703082937 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074397699 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082638225 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067231652 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071695848 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069418802 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071402419 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068407203 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069155623 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067188748 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0695337 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07581053 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075671515 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067130125 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071898627 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075951473 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071880109 seconds)
  done (took 2.419320095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074067214 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072237617 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079654106 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06567023 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064378033 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062890701 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065610068 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061771647 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062611674 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078109021 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065977316 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068679217 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066316057 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064651052 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063235629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068505644 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062821298 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063596225 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066311714 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078014889 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076619699 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06485761 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066532302 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066099261 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066145343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070941277 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065261738 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063734196 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063481186 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066664476 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066335061 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069763108 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063596757 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06393904 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064741486 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064018827 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06619559 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066212445 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068446104 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065884834 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064147631 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065114149 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066041447 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066909463 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06223699 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065974591 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061983906 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067824728 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063753729 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065887346 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06588322 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068467068 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066440404 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07216003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06849994 seconds)
  done (took 4.947138425 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079459769 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069673553 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062120255 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064696473 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068490833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067517341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069127723 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067353979 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067881845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064302954 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067339878 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068481301 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067557722 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069441742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067674895 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069823437 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062265142 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067733584 seconds)
  done (took 2.504404489 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071154089 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066312478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073505768 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066508663 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066022822 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06826251 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062218513 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064426273 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064557801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066151626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065870199 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068401667 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064842462 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068233205 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06594001 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065679606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068119426 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064506622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065983425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062317506 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068222809 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065150463 seconds)
  done (took 2.737849254 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072254123 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091415178 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137196374 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083512103 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080954357 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078353039 seconds)
  done (took 1.820955322 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089673494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078488312 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066836939 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087796679 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073629063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067003565 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067091032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067477422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075851434 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075838266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067282611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075777 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075791785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07524977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07317524 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07279826 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067723385 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067360949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067141946 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083858914 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067702527 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07562694 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067370317 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066895691 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067338422 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075075659 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075468739 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076251244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067428313 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07508507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072358954 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067326192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075268749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075459345 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068948091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075857754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067467892 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083736004 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072796715 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074800567 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069056431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073271699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076739761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071593921 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076041275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067998897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072192856 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067214883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067405504 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085616326 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072811077 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074462564 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073112428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075950553 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07599831 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08612846 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076257595 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074838928 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073036303 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075794565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075342509 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072699344 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074332596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076348841 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073307508 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077362539 seconds)
  done (took 6.138738013 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080965792 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086448769 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067720019 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075839372 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074720563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067299368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067799126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067386338 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067699509 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067219821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106778199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067892396 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075234127 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075574466 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067867113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0675444 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067612161 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075236147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067571604 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085335476 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067263962 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074660568 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074596842 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074971651 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076316897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072823286 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067657529 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067543009 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067451246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067263021 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072285729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067651852 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07507416 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067511882 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074665026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06753249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06768978 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072075569 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067636939 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073036224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075033361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083858628 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067326053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06704313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076628616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067258348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06744876 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067352758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06766725 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067233359 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076055287 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076369609 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075889506 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075075763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06754634 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067272403 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06746508 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06749481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067281753 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072820956 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074788352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067155864 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086051644 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067339725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067399899 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074692588 seconds)
  done (took 6.049290402 seconds)
done (took 126.829404546 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184222976 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170141243 seconds)
  done (took 1.628081853 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068087134 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095642464 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076750086 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127040661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066271155 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099831507 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098646065 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077807155 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066240997 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066330719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066097555 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068197593 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130726975 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066486042 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066113581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068251584 seconds)
  done (took 2.594721206 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096652739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172952224 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099447862 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064929496 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09668445 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072668449 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065191976 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074521895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071009279 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065347985 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072832994 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070398805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065491685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07071877 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07082661 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073102541 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065381018 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072484296 seconds)
  done (took 2.729557366 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100233156 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090491898 seconds)
  done (took 1.481512725 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158220103 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107024503 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150579399 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332193527 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.160023812 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231387655 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129376123 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130307947 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119167451 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123066239 seconds)
  done (took 2.92874672 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097091794 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146074761 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25592642 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11683904 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072262257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09075885 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116139069 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078223124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077644622 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077697485 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077169894 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075956639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095628937 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073553686 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073581366 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07599359 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099479462 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072353938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075579883 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073799204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096721206 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066252967 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073141642 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072558651 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074524056 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074526663 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065999435 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065787085 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07410426 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074478529 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076795748 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089329257 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074554318 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104244467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070107972 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105329016 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076451832 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071364178 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073756186 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071467867 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07578883 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075575922 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072120523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075842583 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065659526 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075933641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065609101 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066154435 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077785239 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067092041 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077794039 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077079614 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104146906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066797806 seconds)
  done (took 5.833787755 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.664249395 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103210919 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070315784 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108013211 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096419663 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071817375 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.688080365 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090233347 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.173658525 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091739657 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088362208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070293026 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080554504 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083350874 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108202354 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100972042 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093439487 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071566417 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100405635 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.098318743 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068187759 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093411557 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089946266 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.405910375 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067572239 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069843149 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068356125 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070337793 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109742656 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077861187 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07182164 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120856642 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084222818 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.12074241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067379094 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06779767 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068516821 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079272779 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177449199 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.132968757 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129888297 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067461584 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067857424 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069039014 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089622953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067197227 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108637881 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079145354 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116892363 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069653055 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069651488 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067928698 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068615193 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079156866 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076687346 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079810697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227585673 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067660233 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067584117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070450069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177945217 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078008981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078372813 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091441239 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127396449 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067396609 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.688914866 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082230284 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066808673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068218236 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066450403 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068342498 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197114353 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.117968934 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342729486 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07113139 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070865917 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069052688 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174435453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078613541 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069168416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.112882469 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068403218 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068812548 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070142249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069958027 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.118141966 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080855874 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069925934 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068404278 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070178193 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068597142 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067421847 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.161563379 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080227027 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079306989 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.157830707 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070368075 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111960889 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079441203 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071064415 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079950282 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068259398 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07087709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069541714 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078410146 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095574497 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07947384 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070291127 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068936761 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099203105 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081250611 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068913106 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.0786495 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.425176066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08055011 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067540254 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08074377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068334897 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.111007292 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070154905 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175444396 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068827179 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078810676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068694902 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067737975 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068327239 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.110074447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070165345 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068448949 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069168897 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0699251 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078934331 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131041238 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070676906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.158096455 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132956108 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069639073 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118058459 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068414 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.11496982 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069635747 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068529752 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069278544 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.70911453 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066926327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067406649 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068277125 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14773663 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06679732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077786506 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075572261 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065635355 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.693725006 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077921462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.208141189 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080839539 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071197936 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069088561 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068513915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070891408 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.110556673 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143300838 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070284109 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069103483 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077865285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110393538 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068148655 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078518131 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078223397 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077777966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069624645 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070299155 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08130312 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116351569 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07789961 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.133289877 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.513422758 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068558352 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078002523 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143505379 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069096486 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085130974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068183504 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082618417 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.113075341 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076895364 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226254661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.114522166 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.149370339 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079965701 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08253491 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068447509 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068381139 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079378381 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068642317 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070068191 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077845336 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069678174 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069897336 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083312649 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068623388 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.174092061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067307956 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07889747 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067856223 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069942426 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083586805 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068475603 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069859778 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079494451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069660766 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076772573 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.63869014 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077680308 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067636693 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069617895 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133009706 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.111387294 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06780027 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067800443 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06989377 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107400678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.154789389 seconds)
  done (took 28.065490882 seconds)
done (took 46.560882601 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206688915 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149104863 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199561195 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116671422 seconds)
  done (took 2.063758692 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12030981 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100029315 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094287024 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065028041 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101035477 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064938157 seconds)
  done (took 1.873581441 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303717231 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206715271 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178789404 seconds)
  done (took 2.017111249 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194460251 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184225617 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.388260137 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249469579 seconds)
  done (took 2.449677559 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141332355 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088050724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073291044 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083198749 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132145637 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15842964 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100306222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124015713 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077741362 seconds)
  done (took 2.356430038 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142811849 seconds)
done (took 12.247802734 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126761676 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093116657 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089834308 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.167441104 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213629407 seconds)
    (6/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081298999 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.217594087 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108235395 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133224655 seconds)
    (10/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.208262376 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071323138 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.189562007 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203976507 seconds)
    (14/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177449144 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077049129 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190227967 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169037881 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072834236 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200896096 seconds)
    (20/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106235769 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127688315 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179441747 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142531299 seconds)
    (24/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169048742 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.141596948 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065701843 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169258104 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069487547 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.170302877 seconds)
    (30/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.130982632 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071474817 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098157815 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11961558 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093537881 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09761182 seconds)
    (36/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076585818 seconds)
    (37/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072414123 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156103699 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072692617 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073735306 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182180768 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095249775 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09827252 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102039975 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.136867204 seconds)
    (46/309) benchmarking ("sort", Float64, false)...
    done (took 0.124751799 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072294732 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051675495 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090277839 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086895296 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181413324 seconds)
    (52/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.145223484 seconds)
    (53/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080830182 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 0.126748892 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193774033 seconds)
    (56/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150888611 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078965495 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067188463 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138189701 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065184259 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052014972 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075691091 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132576498 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088291822 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.0939599 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074157213 seconds)
    (67/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.163503978 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136289593 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06335255 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068455124 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05156325 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050803768 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.137643345 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.160610374 seconds)
    (75/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113302551 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053399581 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121752634 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050886419 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.192137025 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093027363 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.286250264 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.068170591 seconds)
    (83/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151923365 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052152297 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077198836 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074642606 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072959566 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135835058 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077937503 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.143197562 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090533296 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.164097944 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077410668 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076420322 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073050468 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113032131 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070824028 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052654415 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124915891 seconds)
    (100/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080536053 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071120466 seconds)
    (102/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098477217 seconds)
    (103/309) benchmarking ("sort", Int8, false)...
    done (took 0.139845375 seconds)
    (104/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067503878 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071852879 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079447093 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067762736 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053735363 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065284681 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165515084 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090519737 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091831966 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066291291 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052180354 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072709161 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078472325 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072258825 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097248088 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075983874 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.164024007 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053156287 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097300071 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069978007 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143272259 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110781182 seconds)
    (126/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.295761249 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18350767 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100573247 seconds)
    (129/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07314523 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087614245 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051313355 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.132634481 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073904263 seconds)
    (134/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148511126 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07203124 seconds)
    (136/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075256954 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087093324 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072911212 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072809888 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071024489 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071415804 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113893628 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066811515 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088907471 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072577155 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068861362 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068362483 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073965862 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072001912 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065738515 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052226463 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088999932 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074890831 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110444262 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066192577 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05103145 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064670218 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075062358 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072355611 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088087689 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052457489 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.155411143 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06517275 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070653574 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073276261 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105212326 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050927141 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075225193 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132386743 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09935791 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066085203 seconds)
    (172/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051957091 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086025147 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.1119454 seconds)
    (175/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.148047721 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075603238 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051282983 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069041552 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065005748 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052459423 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130942977 seconds)
    (182/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076055168 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.144870662 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090578232 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051646085 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077359952 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143072655 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166351786 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065652639 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051508726 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.214026323 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066718881 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053975585 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141986825 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082234772 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052190273 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07244801 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072878669 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067011031 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066368982 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074365409 seconds)
    (202/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063019183 seconds)
    (203/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051423371 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.137850054 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065893469 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110348226 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052071634 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051463518 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17749468 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052320352 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125563592 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103137147 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064827273 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067870659 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051902031 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05211667 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072340668 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067344994 seconds)
    (219/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071801903 seconds)
    (220/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073566092 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05156127 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080104086 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072612617 seconds)
    (224/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052601602 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074797561 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073169691 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052495366 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054340708 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07139781 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052837499 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066441444 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140719083 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096402865 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072240492 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.137210508 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165924753 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072436805 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068891237 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065349271 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065593632 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065802954 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051966271 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051576069 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137839189 seconds)
    (245/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052938403 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081006274 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089283845 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167886972 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05269795 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051267806 seconds)
    (251/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052551243 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065415352 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06627024 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05150905 seconds)
    (255/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052179606 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064705274 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051982638 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052534667 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064918711 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05279351 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05282014 seconds)
    (262/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170495589 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05376842 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051222922 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052614562 seconds)
    (266/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061451624 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096739864 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065936499 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073203213 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071884683 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073754566 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052710872 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086884865 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088208697 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075768212 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050931511 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052646135 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065431445 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065007621 seconds)
    (280/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071447073 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065410552 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051212793 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066796794 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052386423 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066917824 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072218991 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06405275 seconds)
    (288/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061524353 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063717605 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085550818 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072268004 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065724806 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089589358 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068696369 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051223173 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066216179 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089042354 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093079534 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070761927 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070651616 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067133358 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065586354 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066642545 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070961794 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065127013 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08488669 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065171108 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073476956 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051397888 seconds)
  done (took 30.153423195 seconds)
done (took 31.492554645 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084525414 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092137528 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075191444 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093073007 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080275956 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076492116 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071999245 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077590034 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078903729 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080975453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077581991 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055011507 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073832251 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073864441 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073774999 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090307968 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078201344 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072406657 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072377799 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064752337 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072355769 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065614327 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067017108 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055050044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077807263 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071211252 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07238186 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074052756 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066090711 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065602936 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069054157 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073193941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065481745 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077815614 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072033045 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072583806 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07486119 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075837785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067400388 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065960051 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073840788 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065613627 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072661678 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073235471 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071282424 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07100556 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072933049 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077657937 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090801073 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06799123 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074249022 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076051551 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075706114 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071997211 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069157894 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073269918 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07086902 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090826957 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073268577 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067856013 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073403575 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073659042 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070934798 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072370783 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072572866 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075151782 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074899195 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071142077 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074708561 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07069317 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065752515 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072649584 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068543313 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065552421 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07524751 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076432329 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064354569 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071344191 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072364334 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071110767 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064748116 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067343852 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068017903 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071818353 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067568081 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055144133 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069432618 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072042976 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064717488 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072975126 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071690041 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071754881 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067060881 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07479398 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064572169 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070669639 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065281531 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065363649 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067036198 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068697463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065001335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067243825 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073687315 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066952149 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071275506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078212973 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065062537 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071436536 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064070226 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064933792 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078848154 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073987743 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065098796 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067140429 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064394427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072238714 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064148998 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064091106 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06450451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064112102 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070369384 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064235724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065984533 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07094433 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07580307 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063751577 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067199587 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065849304 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06433458 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069376826 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064756916 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201541866 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068317723 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063209834 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068813805 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066476388 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073171754 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068126041 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072329081 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067086116 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073436426 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070137186 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07233319 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071151448 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065051146 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059675463 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067675243 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067971278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067334483 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065985376 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067266421 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065688314 seconds)
done (took 12.365342085 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066659103 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142617805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097842503 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094844721 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085018576 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066038488 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075522523 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100694203 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067181155 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101771611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086359703 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084549253 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111400981 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064670486 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065548475 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06945279 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066713864 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086480215 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100634183 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086041563 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108627365 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065313756 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093621065 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089177745 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086829896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101692053 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066690737 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069643253 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069456346 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090801046 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085952503 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069740595 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066529716 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097469848 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092448879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083101858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066350122 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082591361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065938148 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066003871 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086824282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097584929 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080641938 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080323088 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072290961 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068465867 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067321615 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083268088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088583822 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078538061 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085769012 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102607431 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068927856 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080330774 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064919157 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085233825 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080067433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06803671 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066238406 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068566806 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065332277 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069546867 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086037724 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088298685 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069729737 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080104463 seconds)
  done (took 6.786328054 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083656044 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089492866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082961815 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084069201 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065594865 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066325419 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066370322 seconds)
  done (took 1.985177912 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067392655 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087806382 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087569272 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08912163 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084571821 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086974456 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075622854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066603288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082248925 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067217234 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087084151 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100616647 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068211394 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072552783 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090039912 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066410363 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089642683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066327458 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069254157 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089344177 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068798621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08584211 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068367778 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066486791 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080641591 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067280644 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112108765 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071063961 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067903458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069660932 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06473263 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105388792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079860553 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073434855 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06648617 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0807466 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081134241 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064258634 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082605843 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071522063 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080070582 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067122821 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067687943 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06544479 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071085283 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077152845 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067775284 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067007635 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069378019 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086141444 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067271918 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079933717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06663829 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070065778 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06778554 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070943386 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076171206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067417082 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085910221 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068085117 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082615078 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082287217 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080052689 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082439964 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069170299 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080325959 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08038431 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069194204 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068243147 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069897593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082401965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064345619 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068459489 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076968737 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067992627 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088814017 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088132688 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067525236 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076505297 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066466736 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066796137 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066320936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088518624 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069601968 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066317439 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070381678 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069217233 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063917929 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065082591 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069968224 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064654589 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06795506 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069453203 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067151885 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069113813 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082574571 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067386037 seconds)
  done (took 8.695130044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069042155 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06794994 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069835521 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06809877 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068187812 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067708187 seconds)
  done (took 1.883395174 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093676035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069364107 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08025474 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072411776 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10421947 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081064438 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081201872 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078471825 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083901798 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078759327 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080912979 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081453434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086040771 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072959353 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08062805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072309004 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081198965 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075851142 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078106632 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072874524 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086260558 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072659626 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072761953 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080930585 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070365103 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071901365 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07600621 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078332203 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078177459 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079124152 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072557243 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070043932 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070191426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078005828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081571686 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070218553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071863202 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071503976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076111852 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07039553 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081629563 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072536042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074607353 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070696885 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078410009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070499092 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070693326 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075812178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080835617 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070725523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070902985 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071880329 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070124073 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071007861 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069986116 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078167937 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071193808 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081019773 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072660125 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069679055 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069180544 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069930788 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077313228 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069565458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078499437 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070449997 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069710351 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072323946 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072709844 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071683026 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070637259 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068785593 seconds)
  done (took 6.886664418 seconds)
done (took 27.670905088 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540227738 seconds)
  done (took 1.975894986 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611448703 seconds)
  done (took 2.070560549 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.569452618 seconds)
  done (took 8.0271589 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389020826 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502611901 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705487041 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129288351 seconds)
  done (took 3.229304601 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.671753533 seconds)
  done (took 2.1380407 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208724045 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19500406 seconds)
  done (took 1.884293249 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365976549 seconds)
  done (took 1.82442084 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.090540723 seconds)
  done (took 2.549610634 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258826756 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.148466547 seconds)
  done (took 1.872160422 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458041074 seconds)
  done (took 1.922666118 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.832272011 seconds)
  done (took 6.298068034 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204503546 seconds)
  done (took 1.718899181 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237643673 seconds)
  done (took 1.70367973 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72063693 seconds)
  done (took 3.186127609 seconds)
done (took 41.865626481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08075265 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081405494 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081346541 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07801627 seconds)
  done (took 1.774587334 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077438719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073217679 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07730084 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073279869 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077140534 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072741952 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074549859 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076948019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072986245 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073395678 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072744778 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072662582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075078402 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074547977 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071379456 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07519699 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076814526 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072941856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075672454 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073096604 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071483042 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07498559 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0752653 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072352629 seconds)
  done (took 3.251239169 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078606638 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073093999 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074668437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072777325 seconds)
  done (took 1.773737025 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077841746 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092587472 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089995425 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077998869 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092050141 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085941796 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069807849 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069258586 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071119877 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077194902 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068261438 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095835306 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087864438 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077202934 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079795636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066160452 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068650419 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086891003 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077643272 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07778861 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072630648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077771444 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068744014 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088224812 seconds)
  done (took 3.36763505 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077577313 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103026669 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077455132 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087269324 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090002807 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065925552 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074788693 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089252229 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123466645 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065759769 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070232692 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066007526 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073300426 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065820721 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076562423 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105298588 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108325911 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068517359 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095767679 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066056418 seconds)
  done (took 3.131099146 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073134724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070856585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066573867 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070003467 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077510664 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073380368 seconds)
  done (took 1.913211968 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068218323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068255158 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067700517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067839162 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072330049 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067211296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066225833 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067569318 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067653269 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06730144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066755621 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066066451 seconds)
  done (took 2.291356446 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334340388 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069032521 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069067253 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066637256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070995758 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066911142 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080000332 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068479163 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090677519 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066681625 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067087885 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069215262 seconds)
  done (took 2.598952822 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203829119 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076533883 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233574403 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136604529 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110991706 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115011494 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10434662 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112307755 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142123215 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101488372 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16632062 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164318791 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106497402 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135919995 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089993183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098206239 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15369812 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160988643 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103262298 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163980131 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142783501 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124864772 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146307045 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101382258 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10607136 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12158805 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071685235 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080700565 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168527159 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130455455 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144594747 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110142111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092761199 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173145246 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167500608 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139902918 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133483814 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083463979 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102617527 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131692232 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195647388 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087891249 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159710863 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247630086 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081825003 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140985113 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119691078 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119273636 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107224884 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090700426 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145371626 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180351838 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139031158 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087879135 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112352208 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11494717 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115226412 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102788712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180035438 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160276203 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126710567 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071940086 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098998557 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153512697 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131008485 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109051788 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125641767 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093614821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133180972 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153538768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117820568 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141748309 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128545052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088801238 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118398476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139376134 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126504425 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167589535 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123457421 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073066802 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123012058 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102497708 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081068519 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142319135 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075338685 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172499243 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098382046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105891808 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112828385 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107627963 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108660217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156750059 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283456874 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105132574 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066745162 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104242044 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120794115 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146443396 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087720533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107409999 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11550176 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077974746 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137594281 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07564702 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123763514 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07579505 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124730746 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129505742 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076105562 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124373624 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101148705 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100126864 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132320794 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15966059 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088840523 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082631117 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164970326 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122847332 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104519701 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142731821 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155086764 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098492001 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102277841 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148309671 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178446912 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089676741 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16144319 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107206459 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083726335 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087622311 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123055813 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111564422 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120968324 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08169565 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117237706 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164877532 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074757494 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094251413 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131688703 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078639656 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080779927 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102298422 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099690629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094721428 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099754558 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103508997 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136764556 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120058659 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249808091 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127214206 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099188322 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169358175 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089308698 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101853873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104203224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0703404 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135214593 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15551968 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080135591 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161632955 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121512335 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10513475 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118547265 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083538554 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139429081 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079276279 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070579692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142761912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109524064 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109519575 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149137175 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104318718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12561015 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118067566 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13449223 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13160451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128263154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105329579 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087772748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110281624 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124843582 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073580267 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091071662 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080301475 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103684797 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095253967 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083224945 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140751572 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122996937 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099311771 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110483989 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095936846 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145258084 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076219311 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126711657 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117581557 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093825539 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150051801 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150791377 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129973356 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098707498 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141123635 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069516509 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219311731 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091110966 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124572314 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083901897 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085388477 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118552712 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146044082 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128610202 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138286625 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111883934 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120686114 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154474191 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070497643 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115265852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146341491 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12065167 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104636475 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090934311 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098752032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141382891 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107950031 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18000895 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113070526 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122488555 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152467016 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100017497 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080586879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105028512 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134407511 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104658561 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143130474 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099609072 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088539279 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109173874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074756339 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099482168 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126002483 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118710559 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133618096 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113505627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130202698 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07688403 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121335269 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119154323 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120528925 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064311072 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117968138 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159282603 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093842235 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116945815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150659967 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078891334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.269653509 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176028126 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145070951 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08526907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110026537 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118890809 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127085114 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119881861 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140639125 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110008791 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134717788 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108918992 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086231748 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087546554 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098114272 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104070642 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095239497 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107887568 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114996455 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095255483 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131250442 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102653049 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109531121 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117194854 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097247444 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089912739 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096606005 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173096204 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11914281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169280595 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09875981 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143266192 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161670514 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075213429 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079460879 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07843365 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138532428 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084261749 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130265867 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097682556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105393037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12309917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139483436 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094450152 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068517006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107379182 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131993003 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11133558 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097250868 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103270386 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160176075 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100063883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079176245 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112297507 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102441511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09989111 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317652177 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063850192 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09947347 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076922866 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081523738 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127932871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153506677 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081223839 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103573437 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11871525 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11056942 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126295438 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100866029 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098808565 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114603262 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148500616 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131045391 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089948731 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112570381 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128623208 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154298403 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105473729 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095553336 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170165007 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151596311 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159655199 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089003962 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113830079 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11400317 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107642973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137773789 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083564665 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161994763 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082427563 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135099044 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103709804 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107371583 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128145922 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098296583 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087882287 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145405874 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116472365 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082652565 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077278884 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116475234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118621944 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106155107 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075527874 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137310326 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073135832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130666432 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164266699 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228873678 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10558662 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097590407 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08115856 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10905614 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102964437 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088472414 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098809112 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171489082 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088041434 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149110339 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14077443 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113166487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136100788 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099607965 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635723615 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07836442 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154653993 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115626294 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171223633 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09714774 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116284043 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108304268 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123794289 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144572668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105331496 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178100314 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131270977 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11616664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080102636 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102212494 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102076914 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088848441 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105042939 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112775153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115062433 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093159353 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114950219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12252466 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081791659 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094405928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15352757 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11502218 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14121139 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13824384 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084228526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115777577 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136738977 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079748087 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120634986 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147425318 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25162278 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09949003 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081306443 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102104416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168234885 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073945684 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160809255 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119332559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110361515 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113789355 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113138409 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131979833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108142109 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122217987 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093545972 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110010344 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111922974 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082199275 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077978976 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104527868 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111342874 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097325895 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097785948 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09875547 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150102724 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07185166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096187252 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103357063 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143483068 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172730426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08765535 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082547467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117907048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112108021 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112938394 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119895843 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079603062 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082292578 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081741151 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077537878 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108150535 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111685206 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104107613 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110104962 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16123299 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081952355 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22392744 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094370274 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103693924 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06998443 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077812947 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09489756 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095816524 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106415367 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099273602 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16634642 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093880176 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088823082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237753571 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074946171 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083969682 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128505073 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11061303 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118841378 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09746968 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063495199 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109369881 seconds)
  done (took 58.569925086 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108781359 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083330684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097200631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149963414 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122235129 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212253722 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157465156 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199109945 seconds)
  done (took 2.731908566 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069676291 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093895462 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099827541 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082868914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067593747 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06902148 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221308096 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080564259 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06687075 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088880271 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080647204 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071153004 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.402214932 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066427991 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068977747 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063618876 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067703779 seconds)
  done (took 3.353041818 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37548234 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36769459 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37349146 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073693601 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.672767148 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089360619 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.097451427 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096858964 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071421285 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268660047 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.699703914 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092967097 seconds)
  done (took 13.880562767 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075906147 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069877861 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083749351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083176444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072530357 seconds)
  done (took 1.979629572 seconds)
done (took 102.149070353 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080666885 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.292785825 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053777487 seconds)
  done (took 1.971492856 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08459811 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084727119 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085014582 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083393227 seconds)
  done (took 1.943332567 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07632487 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077229445 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.08400201 seconds)
  done (took 1.837969685 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223326429 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140035092 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086880989 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08295501 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078611375 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078601146 seconds)
  done (took 1.84204925 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07226296 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075580624 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072720825 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076888023 seconds)
  done (took 1.893231967 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076272719 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053220311 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05561097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056140579 seconds)
  done (took 1.838176976 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08621937 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079050525 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079268635 seconds)
  done (took 1.842243703 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105956324 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085452462 seconds)
  done (took 1.790048985 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081898038 seconds)
  done (took 1.681857218 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099147804 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11435921 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128218287 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108881431 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135913124 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108053816 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085087081 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086117381 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076929017 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086965694 seconds)
  done (took 2.627779212 seconds)
done (took 21.394702136 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079170436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366411872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360004748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090682793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668299224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35939476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985879943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092166025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120429726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06769529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084062895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648436938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974226724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322805714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959492163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413049451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648630336 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06869697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068168663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06826837 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971214558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06807388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068033981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068493592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648078841 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374961631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068770071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413592843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068533674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07008568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357164775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06908773 seconds)
  done (took 16.278583963 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070488661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118323782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073987475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084271407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070903005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070025699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071873027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069619804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124988378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068485963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084782459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068185881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072184306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069239524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087443414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068953429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069098435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068953305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068766621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068868869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086692795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068830023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068724829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069284769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068563378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080743767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068830279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068828752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06908086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070909784 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072007095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069598035 seconds)
  done (took 4.025785243 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116024112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124845855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073883556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10422257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111976404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070553646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142855595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093052098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127093762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068654019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085010337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06871229 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101582992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069367578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087852421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069652447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069645214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06978894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069101482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069236619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087355135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068850014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068921186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069202932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069185328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082235384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069624578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069724793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069351619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071020656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072383426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069586111 seconds)
  done (took 4.276063758 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072477392 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075280508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083134296 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083923969 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070513764 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072184556 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073293089 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070009647 seconds)
  done (took 2.22057728 seconds)
done (took 28.405374188 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079239224 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069190508 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07279097 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081286999 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073961746 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078718647 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06784063 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0747868 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072594285 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073672402 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075595622 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067890256 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071446494 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06772557 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073931578 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068195006 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079941035 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073002889 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079567738 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079755566 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070325157 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073833499 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074604077 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079323692 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079267669 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079614173 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077669545 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073162319 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069485226 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070850034 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07730917 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083991306 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068943181 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08035567 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068483824 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068148472 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071383356 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068193115 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079335809 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076869694 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069885655 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076195422 seconds)
  done (took 4.716418826 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087844209 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091298335 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085396375 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062771276 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067295689 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065641727 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089072067 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060499074 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060186595 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088645348 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056636066 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060276485 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063171664 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055011975 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06007791 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057639225 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062493074 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056331283 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060119635 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059960265 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058829331 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054662606 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060501133 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063303436 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057068622 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062898766 seconds)
  done (took 3.331872453 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074597519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084779253 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088495292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127923643 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104394278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078047181 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078916101 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087707065 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086500644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06755588 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071516047 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093890952 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088691246 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074348056 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070482922 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084307242 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081989943 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069196569 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073283485 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091248299 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084676935 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077827183 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093079107 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081156847 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067421499 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070053081 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071307467 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081378618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072304792 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07649798 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071620902 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071359504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070048521 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079371361 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071734847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069400704 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089999712 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077093442 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078333127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068426044 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071567835 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0692112 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090193642 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123439451 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067396763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074362622 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075631746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077166804 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068179613 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086428974 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078914462 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067445194 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071037586 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067257821 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067875143 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080601365 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06973877 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070316347 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076951682 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071507041 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080802075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0719677 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083262091 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067446742 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075205206 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067382554 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068870714 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067006948 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093175243 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069528424 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108866269 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069431961 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068876245 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076609223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075506046 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074371539 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068218215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082921597 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07822491 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071196582 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076284222 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071098903 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071082373 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08899457 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070054096 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069415284 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069312993 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074300851 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070883394 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069114238 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081225335 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067988725 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071128496 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084473251 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067418556 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068856188 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073472421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072331546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06697814 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078914102 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072357109 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068860141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07747149 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068141917 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070746448 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077791622 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07420274 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066752953 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07240327 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073504289 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068810831 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069513808 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070883995 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07009236 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077626116 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074538494 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072176561 seconds)
  done (took 10.56118514 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161895091 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153166708 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07104076 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144195737 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077140284 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079516379 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146798687 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094642359 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068666472 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069097227 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069223307 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115212382 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105760598 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.136036176 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078956418 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068236709 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084345624 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11667284 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149310074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142772684 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084846675 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077492958 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070592021 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069887945 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074602349 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082883382 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091349799 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077484509 seconds)
  done (took 4.425281544 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081625101 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101760615 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074491083 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089702872 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091747031 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06832928 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071130126 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070253041 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081595982 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079399759 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068258133 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074396152 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07481686 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074707354 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069737933 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075134815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075564655 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070265992 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071536063 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073700815 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078104934 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080976535 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072413781 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068110817 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074725893 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067906207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064655564 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084554781 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068862877 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090975379 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066721773 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075515554 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082303339 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069618113 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068408453 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06847907 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068632646 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068815957 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070408623 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067136797 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067135365 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058418099 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067876328 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079763111 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074824258 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057154769 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073166653 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073378473 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073654556 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066443243 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071189446 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070857091 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071883971 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076038928 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073668165 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073588944 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070275411 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066631198 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076152519 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068364552 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065293148 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066910736 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072698809 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066819203 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076657083 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073382262 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06684541 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068160747 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070449654 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074465176 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06819373 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071550869 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066329445 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070317512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073055558 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070303623 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069505838 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06682708 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068054339 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068851646 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056296004 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068669136 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054321659 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071603339 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066834928 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066700621 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068646173 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072974943 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080170863 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069848517 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074100225 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069631796 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067682127 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071179965 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061324436 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071343012 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083536305 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082864589 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067998295 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066761789 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082933087 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07335586 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067133639 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057219764 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075597683 seconds)
  done (took 9.196214341 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097251431 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089054679 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070624653 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084349576 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.092274082 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088042208 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075818945 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077783825 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070246218 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082986646 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074163594 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077270678 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069123637 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077821558 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.095276684 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077855746 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070979662 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078021149 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072807781 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102742037 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084108983 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082810558 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075577171 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069086791 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076593701 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081112931 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091074307 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081170366 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079284139 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07647472 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081507218 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091217148 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.075046181 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072944528 seconds)
  done (took 4.408765664 seconds)
done (took 38.253278198 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.695192563 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.963883502 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70327288 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.03916742 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.822984359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.702553924 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.775311742 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.694825147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.976248771 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.7494583 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.956500809 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.783487691 seconds)
done (took 64.504824607 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.757627223 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.838718648 seconds)
    (2/2) benchmarking "String"...
    done (took 1.969352242 seconds)
  done (took 5.441454579 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.987594713 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.227732581 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.938867409 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.694778767 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.699938495 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.998917752 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.514615663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226395118 seconds)
  done (took 29.940123227 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.989183901 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.909907231 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.41581588 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.460706573 seconds)
  done (took 15.476960519 seconds)
done (took 62.336362423 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.730982166 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.739132544 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.721530794 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.679439685 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.753347745 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.700903916 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.862056267 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.874914198 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.695224816 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.686663304 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.69630718 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.126475899 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.697955221 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.872522698 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.695557132 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.70182726 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.745747393 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.16149048 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.850510467 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.708949574 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.706502338 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.709532226 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.695424633 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.706885442 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.694324965 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.696425486 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13755361 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.69752623 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.327256236 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.699508411 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.724999264 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.023733583 seconds)
  done (took 202.157032648 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.696641734 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.751456928 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.790808445 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.731895128 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.207551438 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.897355797 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.836929772 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.236497249 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.701899373 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.714922457 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.901276456 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.695479335 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.916643722 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.683381446 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.703649555 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.697318145 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.86126631 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.940971276 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.695601327 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.977386801 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.723443484 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.782368294 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.747773306 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.892649221 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.71379786 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.751108898 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.713259455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.890921569 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.891081982 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.838967837 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.706536445 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.700002175 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920413292 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.569075242 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.701313001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.719783693 seconds)
  done (took 167.544727025 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.090747018 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.696692303 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.696480576 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.696783891 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.710467611 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.699456847 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.824015603 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825318012 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.179416035 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.995954395 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.69991467 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744608385 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.550242854 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.696984646 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764166543 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.71075723 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.697339337 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.697823738 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.712964856 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.724311605 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.700612619 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.698328649 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827228611 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.711310385 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.978381606 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705068645 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.700281056 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.703617524 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.068619801 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.697177787 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.702121015 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.957874656 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.705474143 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698929819 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606005911 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.60036436 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.793169668 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.701194398 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.704088857 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.6981269 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.918493053 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.699845905 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.699630337 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.700666129 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.698604368 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.697976624 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885723151 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.701444327 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825334075 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.69953122 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21633556 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.698602459 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.700242293 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.754744231 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.41855948 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.702458715 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.700210189 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.7023675 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.699701739 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.699718589 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.706444131 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.696072117 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.774818259 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.701252748 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.702770374 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.706826157 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.700878179 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.845397962 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702121516 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.046144887 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.758042759 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.816221417 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.823939138 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.704452685 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768446973 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794566705 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.700936437 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.699377836 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.6998628 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.699810719 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.783485525 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.700643056 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.824973676 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.709034193 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.702780964 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751299665 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.770182209 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.701354202 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613874095 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.705183607 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.701008053 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.034003133 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768653578 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.701720351 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.70100941 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700881889 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.842471388 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826003229 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503029421 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.705478065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.817234295 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.709888617 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.872182631 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.826760576 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907275332 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.70666518 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784734532 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.70707059 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.70479212 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.704270485 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731782548 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.704168335 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.760166074 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.706484965 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.072428731 seconds)
  done (took 392.269193916 seconds)
done (took 765.766628414 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.375964668 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.339423475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.443829652 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.360082397 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.336224728 seconds)
  done (took 13.502644472 seconds)
done (took 15.149097785 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.790197828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.795742055 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728831732 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.791907226 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.7246967 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.792701267 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.77515017 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.730118673 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.760336929 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.729812251 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.762029004 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728371402 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.715676264 seconds)
  done (took 24.473152201 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943191963 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.941787037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773709363 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940108563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.749583971 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.929665742 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.867818899 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868305276 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.861259622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.720572561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716825456 seconds)
  done (took 21.962225388 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.941228892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.940972741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.776998912 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.943182196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.753252939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.939508918 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.869738892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.859291972 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.861526456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721630524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.717865624 seconds)
  done (took 21.974717995 seconds)
done (took 70.058129614 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.71345431 seconds)
  done (took 3.363814882 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.736444318 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.874342056 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.719332634 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.71780458 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.71227754 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.713425662 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.717755889 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.712160668 seconds)
  done (took 15.554416207 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.710106405 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.711671863 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.710974472 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.712226923 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.71062126 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.710121242 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.711124806 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.713047946 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.710359904 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.713201639 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.710799393 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.713690497 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.709997008 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.714046831 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.714072122 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.71155285 seconds)
  done (took 29.037330316 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.712549105 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.710585044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.710712999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.71154952 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.711180236 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.710855574 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.710956109 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.711551888 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.711212327 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.709810358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.711951514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.711482554 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.713067655 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.710854846 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.711788307 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.712409252 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.712050851 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.712334281 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.715911937 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.710260641 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.711594724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.710938562 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.712072599 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.712525775 seconds)
  done (took 42.732370114 seconds)
done (took 92.337479102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.386314828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.136934412 seconds)
  done (took 8.174512338 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.715959055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.715844321 seconds)
  done (took 5.114591732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.713468722 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.716902113 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.716158503 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.71463925 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.715187917 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.715912581 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.713984133 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.71549873 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.715297143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.716256096 seconds)
  done (took 18.807552779 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.717430788 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.715414448 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.711978094 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.714438106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.715085566 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.712915355 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.715499948 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.713826843 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.713378711 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.712732261 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.714137245 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.71495945 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.717870642 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.713639683 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.715634214 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.713810059 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.714922173 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.713117019 seconds)
  done (took 32.514556611 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.718670939 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.716453358 seconds)
  done (took 5.087904373 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.714137776 seconds)
    (2/7) benchmarking "second"...
    done (took 1.71360149 seconds)
    (3/7) benchmarking "month"...
    done (took 1.712904313 seconds)
    (4/7) benchmarking "year"...
    done (took 1.71371094 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.714663733 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.715948294 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.715330052 seconds)
  done (took 13.653534582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.716332185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.87483013 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.95882763 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.416774118 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.719370851 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.722023391 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.668034109 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.720600745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.722863554 seconds)
  done (took 19.174153243 seconds)
done (took 104.179768758 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.519061996 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.714024798 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.073559896 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.820790923 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.733448334 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.055279623 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.724599153 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.938315431 seconds)
done (took 42.234408781 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.713878481 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.18205248 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.183588466 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.415843041 seconds)
  done (took 11.438408662 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.697425059 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248686834 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.748237258 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31073032 seconds)
  done (took 19.668611744 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.081221681 seconds)
    (2/2) benchmarking "read"...
    done (took 2.066230499 seconds)
  done (took 5.807550881 seconds)
done (took 45.285812047 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.719414272 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719333071 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.718955758 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.719345374 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.715721152 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.720528982 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.716627435 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.717356337 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.715679292 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.720215177 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.717164974 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.716670668 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718862416 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717141888 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717802771 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719950521 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.718367077 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.719037718 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71723953 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71711075 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718950027 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.717851697 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.717431721 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.716839022 seconds)
  done (took 42.889418515 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.718267916 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.718490873 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.721088533 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.720560977 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.719412071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.719310223 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.719688703 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.717039917 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.721128986 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.722277728 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71968721 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.720362518 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.720997801 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.71755332 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719697769 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.719578028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.720062323 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718688655 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720514872 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.717558934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.721888546 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717876567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.720108917 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721209264 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.719103492 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719915902 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.722036608 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.721875035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720954904 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.719898627 seconds)
  done (took 53.25264103 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.725769465 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.730095871 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.721959919 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.721538063 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.721982381 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.720982884 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.723254287 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.722752321 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.721288605 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.723147157 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.720716996 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.722119099 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.722210235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.719919275 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.723379056 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.723674814 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.722247513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.722376507 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.721984724 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.723559841 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.722206447 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.723139947 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.721877136 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.725080371 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.724114578 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.724630063 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.722715823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.722668733 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.722505982 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.723827294 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.726545227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.722335556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.724341083 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.724864299 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.724829211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.721897125 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.730002811 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.732633356 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.725172568 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.723541658 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.723650688 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.72409322 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.72168127 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.722748341 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.72344371 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.724108136 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.724830894 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.723546981 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.723845989 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.725702634 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.724054916 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.725368585 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.723160575 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.725197114 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.725217053 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.723711472 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.725145797 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.726121215 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.724063723 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.725402244 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.726002906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.725323008 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.724727062 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.72309354 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.724942311 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.724926309 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.725692387 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.726192701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.724973801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.72672512 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.725824474 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.727856407 seconds)
  done (took 125.799350705 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.724889215 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.721666967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.721607482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.722595131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724500038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.725563207 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.722724489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724252292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722151149 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.725933931 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726524389 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.722820507 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724161673 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.725560534 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725230111 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.723514297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.724835398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.721846283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.727307515 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.727016652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.725444297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.723741389 seconds)
  done (took 39.59829458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728057347 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.728530254 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.723576832 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.726819188 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.724211536 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.728319009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.725274008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.729832177 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728848755 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724733311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724377475 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72802115 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.726716047 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726686734 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72334991 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724913199 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728561349 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.724474245 seconds)
  done (took 32.740012815 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.725738009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.724176294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.726123948 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.725603117 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.725522627 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.727597779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72593188 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.727753739 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.727331439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.724198431 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.727335291 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727469958 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.728982763 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724920959 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730606491 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728148921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.729151879 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726867805 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728388859 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.724577916 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.725446884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728502376 seconds)
  done (took 39.65597138 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727822103 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.728651769 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.72636079 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.726867894 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.725548683 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.732210917 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.730844121 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.726106319 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.730928698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.730856986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726457763 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.730223759 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.725662051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.726934725 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.728037341 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7294564 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.731135388 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.728310966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729854007 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.728677334 seconds)
  done (took 36.239358282 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.730238505 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731673058 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.732232174 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72991005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730418586 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.731869944 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730510499 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.731383318 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730935491 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730435844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730195723 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.733478601 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731224042 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.72987135 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731945374 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.732416007 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730310341 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731837737 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730327403 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730906949 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.732585512 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.731569623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.733294405 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.732341925 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.731911082 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.732054977 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732289882 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732046815 seconds)
  done (took 50.148519598 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731688727 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.73147 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.728541305 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.729082844 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.730278177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.728752013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.728750357 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.729776069 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.732516381 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729578832 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.731360559 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.731438698 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.731533612 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.733730379 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.732449934 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.732578461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73208831 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.730129649 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729284927 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731125868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.730509576 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731965847 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.732715047 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728251037 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72908628 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.731581467 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728828151 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73300449 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732140354 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.72896507 seconds)
  done (took 53.592625372 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.751530383 seconds)
    (2/2) benchmarking "in"...
    done (took 1.752043571 seconds)
  done (took 5.172371754 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.72963421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732933045 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.733296722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.729418995 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.730937687 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.73387119 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.731584634 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729953675 seconds)
  done (took 15.519832182 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.734744668 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.733398746 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.734297272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.733830416 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.734546678 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.73629259 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743643646 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.733761262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.735784532 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.737304854 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.741880894 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.744516031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.739351366 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734602012 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.736135325 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736901821 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.732010351 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.734286455 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.734465985 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.735470718 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.732804512 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7378361 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739968441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.731174538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.736643053 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.749237386 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.740931544 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.733662198 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737279075 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.740663351 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.735537169 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.732037224 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.736268434 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.735822654 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.734212911 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.736287604 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745906981 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736893737 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.743788965 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.73562209 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735485299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.733597244 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.738557485 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.738478674 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736875421 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.735479221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.737012183 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.734007972 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.73713308 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.740522017 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.741494024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736923656 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.731231693 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744080117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.739005801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745201259 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.737346769 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.739367504 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.746577433 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.748070669 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.752482242 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.744802307 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739215801 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.736508151 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748208935 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.764764034 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746098958 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.733797813 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.735893152 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.738799303 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.74883495 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753315117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.747573684 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.738845201 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.738442747 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.737322371 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739317439 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.737567266 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745813076 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.742479233 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.737483127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.738088632 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.747531758 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762582992 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.737679788 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.738852354 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.738312394 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.73810043 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.739329026 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752938425 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.739325531 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.737861797 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.740649064 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.7402809 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.742054955 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.739972081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.739491522 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741201463 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.735861177 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.738811118 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737005079 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7433602 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.749096746 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739391762 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739065333 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.747735572 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.739111769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738873942 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.750500883 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.741317023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738960678 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.741288354 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.750240382 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.736589573 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744890685 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.750690322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.741305927 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.742356631 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.740766622 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.74058733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752379542 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.767715061 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.740378791 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.741236002 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.74774087 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.754315453 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740506225 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.745606131 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.741563601 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.738000636 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.73651927 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746399452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.74144469 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.743902088 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74282037 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743400448 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.738567674 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.741615195 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.741507482 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.74294352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.744948709 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.741242146 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.742305573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.745266823 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.743802087 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.744701013 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.749893933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.745553776 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.744657708 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.74543335 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.741605996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741420245 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.744740842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.74436335 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.74468016 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.743733769 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.742672987 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.743655993 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74352878 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.743918972 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744988069 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746611963 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74889147 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.744267209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.750258449 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.744192936 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.739938911 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.742512535 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.744173547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.744181691 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.743781551 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.744394228 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747714851 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.751888217 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.743583103 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.743673191 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.748016105 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742833486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744588216 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742247544 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.748718341 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.754978898 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.742887823 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.752901062 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.745153563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745009657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.743582128 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.74711924 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.74561573 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74461251 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.749071664 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.751687514 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.759546412 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753889466 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.745222916 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.748893445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.746085686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.749948158 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.752630628 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.743986633 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.744243626 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.743844287 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74509004 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743730064 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.748236997 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.746089435 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.744957411 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.744866451 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.746655951 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.745732317 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744630395 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.748301676 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74938053 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.742532014 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744491672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745851726 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.745384621 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.742941888 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.745563521 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.745379787 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.744100742 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.747664269 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.758052074 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.743130609 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748857919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746928795 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.745325244 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.744404992 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.74467558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749143753 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.748704995 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754303553 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.748379207 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.747697431 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756604369 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.749428492 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.747567384 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.753497138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.747084243 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.744313308 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.749667905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.756612678 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.747616531 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.747385714 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.74892953 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747531272 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746550462 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.755776833 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.746373059 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.748338424 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.74697343 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.751781548 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.746367073 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.751354482 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.750228002 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.749141604 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75166185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748287882 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.746913971 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751928602 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.749198521 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.747813516 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.747351571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753431372 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.758583301 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.753756291 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.748825164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.753503031 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.750397796 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.753981217 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.749683831 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.749694875 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.749269282 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76525482 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.756066407 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758210232 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.751008171 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.74747933 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755492957 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.74999717 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.757038661 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750674005 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750045037 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.750585137 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.749442867 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.746923583 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752962187 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.749064676 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75331087 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.752495563 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.755379994 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.750485649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.75043473 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.750490401 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.749299821 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.749693946 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.750973888 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.750132116 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.755711852 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753490471 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75021229 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.749313235 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.758806786 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751530392 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.752811033 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.749928978 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.752958108 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.752317785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.754288358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.751806361 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.755554905 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.759815564 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.754042056 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.764571248 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.751499313 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764507424 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.752679231 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.754899479 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.757926136 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.747053355 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.750512632 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.754401081 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.751846472 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761690797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.75291856 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.752588087 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.755889054 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75112872 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.754638207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.751596552 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.7543469 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751206273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.751069492 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762087255 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.752461457 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.758366885 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75343017 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.749147247 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.751013302 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.752077222 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.751049137 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.761373659 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.752789291 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.754777642 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.751888442 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.7539292 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.75415312 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.753218743 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.753382853 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.751589328 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.752673382 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.763086398 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.756357147 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75849065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.754555142 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.768041145 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75276889 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762710713 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.755341199 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.754290293 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.753547053 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.751957895 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.756021036 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.755863754 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.754388215 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.752498853 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.751914195 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.759685139 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.754303221 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.759434159 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.755007258 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.755192657 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.75436269 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.765410105 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779261761 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.757120323 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758693191 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.750878946 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.757425542 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.758685411 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.753492105 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.755089665 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.757294402 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767300731 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763112769 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.754473929 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.75603344 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756835771 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755034594 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.755309892 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.754517825 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.754999827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.754004431 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.756839423 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.75548451 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762362835 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.75492654 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.756830163 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759668537 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.756338387 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.768660486 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.756839816 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.758834973 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757565848 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.754842338 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.758732407 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.75802062 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.757629282 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.760220992 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755555942 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.758909179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765495747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.765778451 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.761576633 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.755322685 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.754750168 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.758398579 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.759063856 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757838084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.757070352 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757810008 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.759174581 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.756444458 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.760610742 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.754513787 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.756536322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.758116145 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758909715 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760631695 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.766913489 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.758962454 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.756192023 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.758280915 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757534119 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.757363152 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.759252073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770200607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761631105 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.770011881 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.768255391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.765344523 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.760231523 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760590815 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.770023185 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.755564022 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.761000131 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.759849266 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.76134511 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.759128021 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.764323852 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.75803661 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.768817241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.760460259 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.760256267 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769451218 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.762488676 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759272984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.762555141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.764041734 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.760391206 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.756951647 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.759273002 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.758263695 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76986827 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.763673258 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758246787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762654173 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.758466068 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.762894089 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764989216 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.759061289 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.761281143 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.75656696 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.761215718 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760029634 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.759930272 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.759273358 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.76235119 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.760457789 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.765481143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.770878046 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.757186867 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764341121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.760340134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.760928421 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761693799 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761356229 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.757703998 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.757426905 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.763582419 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.763319681 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.763059479 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.764907583 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.762070708 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.762844879 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.762199857 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761597513 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76289019 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.773587745 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.771001325 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.760578332 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.762156115 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.762069176 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.766831074 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761330006 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.760448335 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.763061341 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.763542044 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.762349979 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761671075 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.760264159 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.765006734 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7852825 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.761825909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764651947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.763291034 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76723067 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.761418039 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.759776817 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.765291446 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.768969401 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.766322024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.773178327 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.761764642 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771799119 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765325845 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764841027 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.768160103 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.766744484 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.773213777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.770410926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762080956 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.767227039 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.769065841 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.784344011 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761415518 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773907654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79559829 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.765167399 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.763984527 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.76654136 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761734858 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.763886608 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.766445506 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.763935278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.762550125 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765006156 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.763678109 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.766173328 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773463085 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.764739062 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.764312674 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.766328472 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.766841776 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.76908261 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.759550272 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.767297418 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.763542021 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.764167106 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.766191793 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.763861891 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.76598434 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779213796 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.779167426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.765118283 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.767034371 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.762759384 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.771031147 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.768252206 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780000346 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.774115504 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.766719436 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.764780571 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.768583336 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766100345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.764131556 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.768872246 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.768522281 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76697763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.763538815 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.782681385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771381979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.77188644 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.768319585 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767261407 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.765307241 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769623438 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766056664 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765935981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.769964261 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.766537775 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770894004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.765445767 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.765437179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.769275164 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.774519458 seconds)
  done (took 1046.426795665 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7642059 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764638031 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765066514 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763258591 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763596049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763784458 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763702403 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764225654 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.762842316 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.762767914 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.764334858 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766239802 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.766120504 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765366122 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764941386 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.765257892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764188776 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764998255 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.76390903 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76574848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.764672474 seconds)
  done (took 38.755946373 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.764998907 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.764324347 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765504362 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767855653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763320127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767836444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765829931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768437213 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768201474 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765911111 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.764902123 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767009078 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.7661185 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.766312583 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766410952 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769412294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.769681903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765795654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.768027278 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766169406 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76818807 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.762367859 seconds)
  done (took 40.564266999 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.769190516 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.768343076 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.769413758 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.766897859 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.771003792 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.765714849 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.769098578 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.77093805 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.76877613 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.772762366 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.770700544 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.770368972 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.778891478 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.773028536 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.772176635 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.769681489 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.912366436 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.769395939 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.768900229 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.770642521 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.76554336 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.77759042 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.767035838 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.767134268 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.770931006 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.77397955 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.769413069 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.769804295 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.770642261 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.773582164 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.777599086 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.770303903 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.770372795 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.770867862 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.771074215 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.772178251 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.774931345 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.770520721 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.765939929 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.769748271 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.782790066 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.791835809 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.771550078 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.779280538 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.773711145 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.772271904 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.780397186 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.782776434 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.768174335 seconds)
  done (took 88.676879023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.770596008 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.770648352 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.770425372 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772592361 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.770851075 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.772064984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.773286687 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.771298954 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.771931517 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.768696062 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.771426303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.767563003 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.770972527 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.772466597 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.772034073 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768266605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769942618 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768387197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.769282081 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769568712 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.769271555 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.772355462 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.771650906 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.770587308 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.771459714 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768638874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768951256 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.771879238 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.77037828 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.770892333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.772484404 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772449164 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.771980909 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.770192388 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769823275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.772522534 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.772123431 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.770667083 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.771832248 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.769737093 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.771238485 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.774707171 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.774228027 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.771699347 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.7708409 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.77076996 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.771189563 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.770933527 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.772367502 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.773380493 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.77176711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.773792284 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775033526 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.771205236 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775078908 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.776849569 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.772240686 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.770128835 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.772995687 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.772037718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.771106656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.773844963 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.770979347 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.775417556 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.774208957 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.773375955 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.772150825 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.773307317 seconds)
  done (took 122.179220858 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774446797 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.773783714 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774727526 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776373016 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775883368 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.775543103 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775081616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.775886771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.773805498 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774524597 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.7747468 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.775810192 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.776298793 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.773855856 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774532252 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772741089 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.774886514 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775596583 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776082475 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775638208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.774929581 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.77589706 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.775085067 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.775105836 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777013129 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.777794751 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.774450175 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.775321174 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775065223 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.775892486 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775855483 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.775633985 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776558592 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.775017316 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.776731661 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.777696391 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.776266357 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775738918 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.775426064 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.77697561 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.776585038 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776728229 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.778106914 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.779780526 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77683242 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.777598884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777416483 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.778780596 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.776968195 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778705484 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.77786711 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776430885 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776939628 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.77810409 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776917957 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.778174808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778505193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777784575 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776575605 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.777774409 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777497468 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.77652398 seconds)
  done (took 111.839833924 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776066267 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775292428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.772971588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.77394179 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.776203353 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774496433 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777724894 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.778058657 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777229693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.778357491 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778622815 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775212303 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774252525 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778552686 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77720316 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775178714 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774665416 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774356286 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779134113 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776115988 seconds)
  done (took 37.238370477 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.774864663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.778587644 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.775943096 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775580418 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.778406446 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.776680982 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.778856108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781064747 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777633292 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779244795 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780441855 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779182835 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777491647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.775985456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.779401094 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.777672802 seconds)
  done (took 30.161585758 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.777228617 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78004253 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.779758199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.78046168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.77673292 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.778100777 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.779324437 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.777968103 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.777377871 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.780888412 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.781999792 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.780528119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.779838922 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.779947915 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.776341677 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.77934615 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.776927413 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.777076371 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.779980448 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.78152067 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.776513823 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.776235121 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.781022892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.780155946 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.778274524 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.780794512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.778982924 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.775938099 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.776892548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.78026668 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.779543871 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.777680482 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.77739834 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.778517677 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.78153075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.778162625 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.780482576 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.781630441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.780408789 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.7809968 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.780388817 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.777109914 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.780935023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.780623634 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.780532064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.781865123 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.778919984 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.780378028 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.779200109 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.778708204 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.780768858 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.782880434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.782670418 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.782358843 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.783176011 seconds)
  done (took 99.591877669 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781438143 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78169296 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779523736 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78206482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781978508 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.78041815 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.782932468 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780505106 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779646102 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782761839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780135672 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.781128218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78035402 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.782905812 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781545615 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781490874 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.780405841 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.780610472 seconds)
  done (took 33.779933944 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781431938 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779915083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.782259849 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.779413061 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.781640983 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783938575 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781246008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.782110862 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782073981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781425097 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780809597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.783180683 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782250881 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.783278551 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.781242561 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782474243 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.784179864 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783564581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.782240181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780740652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782980087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784439627 seconds)
  done (took 40.926710507 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.783224795 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.782963248 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.802658157 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.830832427 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.817008433 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.784369756 seconds)
  done (took 12.523727901 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782274166 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785346191 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78112313 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783119176 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78578085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783140309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783179447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781493976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783221452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781968393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782507925 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785816278 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786136353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782289875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784288658 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785630132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783048258 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784280048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784976075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785433654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784004595 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785576018 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784631169 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782170168 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781840759 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782893514 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786084046 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783519195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781986639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785839995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785230495 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782591767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785658298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783906636 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785209989 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786271606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784237851 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785716266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785776459 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784063542 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.785107004 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784153765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786010717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783041924 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787387232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783804388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783222566 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783276048 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784314613 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786649677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787009327 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783639592 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787012228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78676021 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786039251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787902488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78421141 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784075734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787485642 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785977256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786073191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788370514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78506261 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785398563 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787710923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785186382 seconds)
  done (took 119.510928036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78444641 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.785583955 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784746391 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786558177 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78519678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785743464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783761375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785875036 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786180239 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785926665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789270431 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78494102 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787639349 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78617529 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785728953 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785980949 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785827978 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788227651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786125216 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788825874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786540052 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786291672 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78588299 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786321412 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787184183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789979248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786461025 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785422291 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786647088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786391595 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787482395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787697217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786927287 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787627961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78805103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787951676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785930359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787261034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786760905 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788676044 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787500812 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789658077 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787724321 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787053786 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787385002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788252494 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78807785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787497759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787908586 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788214049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789098168 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787885465 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788575722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78705547 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788323204 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789674232 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789225836 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787795575 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787400625 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791776568 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789023377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788119736 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79287869 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790195256 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78923326 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787958814 seconds)
  done (took 119.694708894 seconds)
done (took 2438.134413705 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.864621646 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.859079986 seconds)
  done (took 15.449863688 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.954053229 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.905322557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.791936649 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.832645491 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.79160603 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.789287304 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.794574845 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.79079971 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.79230748 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.791810396 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.793301165 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.982020464 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.809167776 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.791559578 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.790413654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.8845015 seconds)
  done (took 51.015734694 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.79643575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.795080382 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.824887743 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.797789738 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.79393515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.828175771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.846205512 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.79873419 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.932149785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.816029599 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.110220685 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.796855775 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.796339684 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.004490789 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.82044079 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.831222002 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.012939916 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.106778305 seconds)
  done (took 35.43918823 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.134504022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.794827606 seconds)
  done (took 10.657859671 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.804079563 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.844107414 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.819288497 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.829686927 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.821937055 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.805847941 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.810453164 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.840150813 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839337926 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.810816238 seconds)
  done (took 69.956015577 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.801219844 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.795046139 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.796861749 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.795755962 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.788613712 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.7891362 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.79626772 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.791288759 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.405385966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.888153558 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.821643823 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.80042555 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.796284198 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.79781001 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.795560576 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.820567472 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.94850374 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.790917603 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.795362258 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.803657768 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.798021536 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.899587664 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.830253417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.797775248 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887676282 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.477258205 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.799930249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.803202844 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.959724111 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.794962509 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.798151823 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.799428145 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.797570777 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.319535732 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.249458485 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.81166051 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.826157933 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.806236469 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.793784832 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.929433589 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.797373602 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.80277177 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.789613052 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.216055775 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.929398913 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.883017978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.746304875 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.797446644 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.797140076 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.850643897 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.798480572 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.798781396 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.810079806 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.481776395 seconds)
  done (took 134.229831485 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815747836 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.281528705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946188979 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817580504 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255139326 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.19576757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.793565871 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000807852 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803250283 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.204000558 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.052691616 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.059437915 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789814244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.7945716 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.794254661 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.791741492 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031968179 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.013900462 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.791800009 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.793204912 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827624995 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236109252 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.002868725 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.842116273 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.817069267 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.170156759 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00042932 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.060631847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.79392998 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.794108369 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.009841306 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.797202768 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.79206486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793829985 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.04357599 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.048713373 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038084721 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.795857735 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805611235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.795885249 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.817831617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163155164 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.049263244 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.015355611 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125350667 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.172330487 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.792452315 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.792867356 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.796650299 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.986061933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037045211 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.225753071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.00340553 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.795549257 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.061776332 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.79570448 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838675563 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.19238969 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103290892 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.054308271 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803977271 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.796743519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.793795434 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262608552 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.798818687 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.052623672 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.186057625 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.797145978 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.051201268 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.053196805 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106263267 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185119515 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822474965 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.809495667 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.837503657 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.231096773 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.013989924 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.195902396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.818446313 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795491712 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.0380835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.799147748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053916704 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.262621009 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.208228824 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834283931 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.828156802 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.797665198 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.194808185 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.193586634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.030029359 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150278085 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.047104541 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.855192071 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.796137445 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.796964727 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.829256102 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015734845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.799093845 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159575305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195401333 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.586646108 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828580765 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267784975 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017328653 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.801282981 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.79901885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.797685176 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001157757 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.866689488 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.826590018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797813409 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.192851948 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.671324764 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.830561923 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.544087039 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.014242117 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.796835088 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.212250778 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.800946297 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194313783 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812058194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258715077 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.078369948 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840970622 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.016289823 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.150669429 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.800406284 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.211263025 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.256916252 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.00331593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196105797 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.640375535 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.80176669 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.241154714 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802077897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.825685016 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.968397199 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.826295266 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038925736 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.80131787 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.218480147 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822429837 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054007883 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.088571624 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.227080781 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8414509 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027694466 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856548026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9330142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827725768 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.822669774 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981581074 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.022422313 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802165441 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.366351775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.799543824 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946620704 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.272471035 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821442161 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.021944067 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.79992709 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801021968 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044279575 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.827611776 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.461849393 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.802368719 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.05864864 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.802057367 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.255762927 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.79963482 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261702592 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.008268167 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825115874 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.806587458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.604556484 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.799522233 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.947895811 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.961577305 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.350976158 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807108985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168383317 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802961046 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019707603 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.807275927 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.802715687 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.154292812 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863259671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.802800615 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.848649786 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.799314838 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801241543 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.181597595 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82875504 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.522839139 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94058425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.225832268 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.109032895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.214250319 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.848497398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829452038 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.219279405 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.819126615 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.022122187 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.801702692 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828242253 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.199398753 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805038032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.225791646 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239437406 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.823616235 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.004103695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.802216168 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854968818 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.802578509 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030258533 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.050711927 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.804110219 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.806641375 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.009278689 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.0146504 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998547424 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.8306682 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.852991711 seconds)
  done (took 949.970726335 seconds)
done (took 1268.447172033 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.801995553 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804043297 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.792006205 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.8080831 seconds)
  done (took 28.951561278 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.813564243 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.811594012 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.810173064 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811902028 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81112458 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812321387 seconds)
  done (took 12.617024928 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.013471666 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804731106 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807010685 seconds)
  done (took 21.371817873 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.98629651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.833068045 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.103946894 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.46968402 seconds)
  done (took 12.142878226 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.812493392 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812245754 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.8157374 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.815807668 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81486827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.818515664 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.81478119 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.812479337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.815636201 seconds)
  done (took 18.080251103 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.913073958 seconds)
done (took 99.82064784 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.855984387 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.831104785 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.739055776 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.052125076 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.792608929 seconds)
    (6/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.861410636 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.946894498 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.91098398 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.880183922 seconds)
    (10/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.314305527 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.054886668 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.369509835 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.814994446 seconds)
    (14/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.015667608 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.848161262 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.583305932 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.996003403 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.854994304 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.792189552 seconds)
    (20/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.087056063 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.810833958 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.875630302 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.943586228 seconds)
    (24/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.999234855 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.233574924 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.125336022 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.950764525 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871563752 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.809798074 seconds)
    (30/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.756211198 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.938249057 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.806895064 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.876035301 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.127469041 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.085431752 seconds)
    (36/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.923660872 seconds)
    (37/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.387802144 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.065471444 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.452455841 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.809895821 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.375438817 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.335816579 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.523472517 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.600723676 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.373555203 seconds)
    (46/309) benchmarking ("sort", Float64, false)...
    done (took 5.943996821 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.917005542 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.791204897 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.064315899 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866942727 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.224962271 seconds)
    (52/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.116542451 seconds)
    (53/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.647217203 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 5.717248859 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.808764615 seconds)
    (56/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.370497215 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.962323263 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.8639791 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.217532695 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.186857625 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.092469597 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.934865446 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.831963992 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.178119061 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.535018245 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.891087403 seconds)
    (67/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.037317191 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929457576 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.123238125 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.797289014 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.022691815 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.035275801 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.53515299 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.825693195 seconds)
    (75/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.590459525 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.826225679 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.889051302 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.834957338 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.095839922 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.543511767 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.806917457 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.834279978 seconds)
    (83/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.903941389 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.029859916 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.870220192 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.933170253 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.834031131 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.810891055 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.852405273 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.682846172 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.342420049 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.853712676 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.148927739 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.904830517 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.836015428 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.798563449 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.853991239 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.293024946 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.810147627 seconds)
    (100/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.770827762 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.890779947 seconds)
    (102/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.265237487 seconds)
    (103/309) benchmarking ("sort", Int8, false)...
    done (took 4.855565397 seconds)
    (104/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.814134963 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.156147653 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.515148384 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.913537098 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.861346046 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.935541482 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.828612122 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.836556457 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.618172033 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.35350159 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.63555414 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.047260646 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.899732051 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.866476463 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.795372327 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.949587044 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.126554984 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.857305815 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.014197777 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.057422513 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.813582227 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.908390008 seconds)
    (126/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.960686479 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 6.812132754 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.815610321 seconds)
    (129/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.838610411 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.748765971 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.611885998 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.326682493 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.83702234 seconds)
    (134/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.795183831 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.12211395 seconds)
    (136/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.933512703 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.827534867 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.837051577 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.884391732 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.374481847 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.070036914 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.816970831 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.812515823 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.85149484 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.454954206 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.875521406 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.875203094 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.835639291 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.914606994 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.538845247 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.798167735 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.63721134 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.812288734 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.748239707 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.896696245 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.114107959 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.38050237 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.850194452 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.83988323 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.746046663 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.050380283 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.69197366 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.186324207 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.020378323 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.836377455 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.101296905 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.839250024 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.943435943 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.814520256 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.268869686 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.831348 seconds)
    (172/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.990456986 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.816828 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.008231843 seconds)
    (175/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266719316 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.816141911 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.234847645 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.899606175 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.873715656 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.940865628 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.941025316 seconds)
    (182/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.823557937 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.078911408 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.090959231 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.01334968 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.927537697 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.815182951 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.815590088 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.898827225 seconds)
    (190/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.819872904 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.356132839 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.187663786 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.135168196 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.818615938 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.485642071 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.468951224 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.840242958 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.840285094 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.82798587 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.16194383 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.858315673 seconds)
    (202/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.784610284 seconds)
    (203/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.484457711 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.222497138 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.186192989 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.383806538 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.752414981 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.011459353 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.816569441 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.469273006 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.921466762 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.888211942 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.871778631 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.94512883 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.184937035 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.966378739 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.859456951 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.819484722 seconds)
    (219/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.907158836 seconds)
    (220/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.825837968 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.483531647 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.48367879 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.842063421 seconds)
    (224/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.274274059 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.353416768 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.036411361 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.80064452 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.852505469 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.403770883 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.813698315 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.822328458 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.841152655 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.802161747 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.844612905 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.723641178 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.858945123 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.843064606 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.879731327 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.858644783 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.393524971 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.989392045 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.861164885 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.965009166 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.835730071 seconds)
    (245/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.067588221 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.67891875 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.213944638 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.817162108 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.103209265 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.193188288 seconds)
    (251/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.460994324 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.293958449 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.816825591 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.085374296 seconds)
    (255/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.988777782 seconds)
    (256/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.899143504 seconds)
    (257/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.240035345 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.346754642 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.991211425 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.684855205 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.57609576 seconds)
    (262/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.818926138 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.803716263 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.801502722 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.816491079 seconds)
    (266/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.106279999 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.8685833 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.819218172 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.940533424 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.845672329 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.204716439 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.311946684 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.125727595 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.614899016 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.82933292 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.780424942 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.967006998 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.52578091 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.495266543 seconds)
    (280/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.907782123 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.193706501 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.318757232 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.954177064 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.083306432 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.928233057 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.900367897 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.902130635 seconds)
    (288/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.762415092 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.926811938 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.775794537 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.965222848 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.918535335 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.863744131 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.901712428 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.130045335 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.816937179 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.688097025 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.867847618 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.857504982 seconds)
    (300/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.833274563 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.92440779 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.376529042 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.818395006 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.841218104 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.550395008 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.834211346 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.386814139 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.826650288 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.483489072 seconds)
  done (took 1043.742881071 seconds)
done (took 1045.493198186 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.85128167 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846453493 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.830018645 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.853148356 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.941785614 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859640224 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.840643037 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.831452447 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.878892972 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.879085439 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.829288369 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.858817393 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.831914542 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.831571672 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.832260092 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845220891 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.608762187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.830618928 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.847741797 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.83951799 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.847546682 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.830009679 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.879214703 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.859236533 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.835411626 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.834461408 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.833968929 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.851880275 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.942770276 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.834814708 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.835751932 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.842825628 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.609331311 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.830040769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.825514928 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.850995448 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.842599984 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.840569709 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.836025789 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.864620359 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.901259216 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.832350848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833781809 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.833122394 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.833756749 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.838825789 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.834037286 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.841905237 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84479594 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846911277 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.895389245 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.848968574 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.835464932 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.833918326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.843677544 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.833126313 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.836531413 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848814241 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.851889689 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848931081 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.602706718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.838365012 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.834855219 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849114407 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.840986077 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.932170625 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.828675 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.83812237 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.904255947 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.841885043 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.935163951 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.842711519 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.835328012 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.8480227 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.867253896 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.613128126 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.828703015 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.833655996 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.842320158 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.832948434 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.845602975 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847566262 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.839392092 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.835596134 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847931946 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.863763814 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.844934524 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.836211864 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.844577977 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.855846262 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.842875907 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.846919684 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.838336522 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.830568605 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.846095689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.838631883 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.838670562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.839486282 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.839763264 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.846858703 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.906362126 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853122001 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.832545608 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.833010226 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.834964288 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.849682825 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.904584695 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.837385016 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.858234343 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.883362029 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.8373689 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.605672486 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.839986967 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.853643667 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.846170576 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.839975405 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8318312 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.607302953 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.904886422 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.852520028 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.837759922 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.835191517 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853155306 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.838376523 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.833484637 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.61831261 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.838030899 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851203689 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.95738009 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.848118634 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.869746557 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.835502312 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.840383911 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.869733276 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853565125 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.870048924 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.84050608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853951599 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.853754178 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.834032405 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.848978025 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.848633752 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.840049154 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.844660052 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.831903376 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.866228347 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851051913 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850825577 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.858768859 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.959760566 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.836059172 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.609286798 seconds)
done (took 297.13092456 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.908970844 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.830761088 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945742086 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.832796785 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.928756928 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.940236321 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.830728456 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.831646435 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.830727616 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.239219138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.830313287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.832302938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.831312378 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.832569974 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.930271896 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.83362143 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.83158967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176747939 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.835600194 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.91726044 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.833358618 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.831624806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.835855521 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239504472 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.833587085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.83042271 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.906076178 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.834268339 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.191339835 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.832770749 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.829946334 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.187765662 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.926696497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.852638346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.845067329 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.842330592 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.922422382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.856704308 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.918975927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.929929305 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.936050988 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.874882393 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.837331834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.835441939 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.837817102 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.836833266 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.834296415 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.861985704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.832624454 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833904821 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.179419719 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.846610017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.83356259 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.834160252 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.833640627 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.865449624 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.834067388 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.837149628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.942115632 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.837732147 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.901149491 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.244335146 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.240773955 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.836519936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.832684902 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.834473248 seconds)
  done (took 182.277544056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.904463025 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.917719336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.926309121 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.839908742 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.890476357 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.932557462 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.839923393 seconds)
  done (took 15.021671912 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.843484552 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836819598 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.888765372 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887856992 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.83710604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.988029574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838084272 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.849039444 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83471882 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.891535441 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.839024032 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.837179547 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.843905485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.832001034 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886483952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.849601935 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.955411497 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.839714006 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.837705312 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.996479102 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835067067 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.84459135 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.890804611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.849632796 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.839161759 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.84508284 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.423506732 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.83901988 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836675133 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.839098004 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83539566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.880884435 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.839309975 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.837301694 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835777634 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.95526485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839187405 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836675486 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.83981914 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.836876147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.838755844 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.837876372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.83929732 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.835588772 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.839568099 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.864063589 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.840956847 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.840061158 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.839562462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.839385834 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.891046879 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.840165601 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.8372301 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837357653 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.895019466 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846953981 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.840724682 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.837374402 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.840081976 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.837929587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.997866468 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.888922463 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.840998703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.888262141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840524484 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.840928491 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.840461801 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.840663863 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896105431 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.840608634 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.8885472 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.837871664 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.997679177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.865052019 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841096512 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.844741431 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.844177245 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841762044 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.836830291 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.848410113 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.83911366 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.843071727 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.848934928 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.839103755 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.840222433 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950816807 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954560429 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.839617411 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.855938672 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.849888026 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.83978983 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.895572204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.842233279 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.839112739 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894849911 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.959963082 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.896052678 seconds)
  done (took 202.875994535 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.848360988 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.850529385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.844331176 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.859947699 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.842665371 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.84266065 seconds)
  done (took 12.865404361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.846217707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.844178468 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.843260558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.842669416 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.844055932 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.843524096 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.843341523 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844951966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.847238681 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.842844119 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.843428426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844382586 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.844695932 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.843712988 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.843449612 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.843546003 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.844253648 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.841264662 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.843331228 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843608959 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.944412122 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.843855875 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845205608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.845499891 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.847489022 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.843902354 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.852521545 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.844002211 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.843941959 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.853745776 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.847512556 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.845345284 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.846604547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.851681033 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.849178586 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.847342927 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848351241 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.316062001 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842365188 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.845327355 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.846170684 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844351073 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.844619336 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.846880677 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.847968526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.85143621 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.851259158 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.853702753 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.846212119 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.846340077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.847539385 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.845091701 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.846277022 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.847103406 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.849331187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851024731 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.850590772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.846807592 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.845874349 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.848197411 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.846250461 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.844774232 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.848695144 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.850613263 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.852074833 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.846976266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.848575101 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.849564941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845918087 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.846263124 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.847450971 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.842384133 seconds)
  done (took 136.28743319 seconds)
done (took 551.094661462 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.136562363 seconds)
  done (took 8.915561501 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.908201975 seconds)
  done (took 8.690644143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.436863603 seconds)
  done (took 18.216496094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.851557458 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.841778062 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.844059631 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.840536318 seconds)
  done (took 29.159179369 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.066975613 seconds)
  done (took 8.846497996 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.84790531 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.83745781 seconds)
  done (took 15.466970655 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.428392833 seconds)
  done (took 9.208216417 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.872554545 seconds)
  done (took 8.652271405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.843116685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.845318828 seconds)
  done (took 15.473676284 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.839623906 seconds)
  done (took 8.619417959 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.989401453 seconds)
  done (took 8.772433874 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.842854228 seconds)
  done (took 8.626257239 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.848702095 seconds)
  done (took 8.631175004 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.150782395 seconds)
  done (took 8.93369115 seconds)
done (took 167.99147635 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.842995014 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.844866128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.846709318 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.845635789 seconds)
  done (took 29.163219221 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.883556157 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.884060145 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.884086041 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.894250842 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.885627237 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.882790078 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.875804207 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.875453747 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.894365066 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.884809379 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.883533979 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.88560617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.883952082 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.874521974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.886168559 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.903343591 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.894337166 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.884867889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.876320498 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.88666283 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.850473696 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.896694324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.888195554 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.849912868 seconds)
  done (took 46.975605319 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.048639407 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.923711282 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.006183302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.90353671 seconds)
  done (took 9.665752779 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.902650921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.903077781 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.918416111 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.956902614 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.980971041 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.915030538 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.879508303 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.873800308 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.858287843 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.905550798 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.980020725 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.920190404 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.992723519 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.850645033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.035012739 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.849946284 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.851190833 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.903067548 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.956335582 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981272789 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.851577453 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.903151095 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.910968848 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.920015949 seconds)
  done (took 47.785532174 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.850032264 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.858921209 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.85529045 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.852361703 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.850037238 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.851141004 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.85627611 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.854470079 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.87133434 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.852632229 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.852055569 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.851093015 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.852729514 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.850886616 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.851139691 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.865033606 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.865512375 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.852161605 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.855535823 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.856593328 seconds)
  done (took 38.890001609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.846146575 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.702325428 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.198095624 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.104539012 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.848329309 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.848333895 seconds)
  done (took 31.337252536 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907739415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.995993349 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.856228089 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.104494839 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.177971893 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.854741149 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856622163 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.025580414 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.251675157 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.232925285 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.911393317 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.898621241 seconds)
  done (took 25.864071206 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.849874482 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.851086481 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.85107715 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.866601223 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.88562446 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.859430018 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.860248724 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.847718269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.890625273 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.890761231 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.859360511 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.886876592 seconds)
  done (took 44.189975459 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936646762 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.898604298 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.431408465 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711617465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230753887 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061500343 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.848422394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253138541 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.853686357 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123797593 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.814294004 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940245788 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108041599 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870013816 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850840156 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.618288898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081326228 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240758252 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847979141 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.111605167 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878266815 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862663405 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.254652338 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866386138 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060338237 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988087181 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.112174234 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8504739 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096057832 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866411422 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860890404 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850505236 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125799898 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381419397 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945445198 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860117091 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718310214 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.561528928 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.846837184 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.178323251 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.528659494 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.846974606 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853787468 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843722523 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777310608 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843296679 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254549389 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.848239959 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.555190997 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8437407 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85458622 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93798512 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.847401568 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.661413024 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89251992 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84368855 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.839436102 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851026731 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412579466 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.543366891 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.851859017 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.778168847 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.993284193 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.185713618 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433708187 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.948257353 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.849059206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848670312 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77911682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.167399785 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864088175 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203150324 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.865963504 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506454274 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505802496 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.815191332 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779181979 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306381081 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864738697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.779702922 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074768179 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845779269 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785893367 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.792854305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780550857 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376818954 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853007015 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.968534993 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853653882 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250588033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857358485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862820503 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869052839 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071879361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.731341849 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847520388 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.520463895 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970312512 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867787368 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255761355 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781900111 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.851139508 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10540683 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.058630728 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.862460804 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.61313871 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010777626 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849632358 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.862839776 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.851354209 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857380731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.402814188 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859663343 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.546237447 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866801934 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848022538 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414846297 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846891627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.95185778 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.814152044 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042372842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.448381509 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847631929 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929804455 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850740818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847646561 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.206065627 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369881282 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.847634244 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.851474949 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866277065 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858619399 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.848938823 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813680468 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.860213947 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.794430922 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.852801892 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074291964 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848341593 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125701753 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782542659 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207552069 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951139164 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.072668228 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.942814213 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.852431227 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113262636 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848098071 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871735796 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860969992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868261147 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948405123 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872188502 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.854426506 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108662607 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.85358426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.853012033 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.215832665 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854109935 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85097387 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.85564992 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747638572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397738599 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.819850089 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857515415 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.744784608 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.863507678 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914394933 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854942711 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859669903 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.269120769 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814561941 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.854147175 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.847010226 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07688977 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862373472 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.129298306 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930188101 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.00802072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392960136 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861691489 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.78490421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.561481786 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.544135242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851731308 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786769084 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852669106 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860863496 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862511779 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.161824369 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392040579 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85175538 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.121758136 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.858859226 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862424477 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.85598788 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85074601 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.237343297 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.557908163 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865790362 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863627202 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996990864 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.866208481 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786592768 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.856004769 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857545426 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852639558 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852978243 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885592487 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.137437665 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286398709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114680394 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.69822632 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863706795 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.212617871 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.871575939 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.857342979 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.560057187 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86614457 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.854728442 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865963845 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.864586118 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.215361928 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53602837 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419884145 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529041094 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349761876 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611850402 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.862132416 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853926666 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265879247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787984186 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41999946 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991064493 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270768858 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810042251 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020762517 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.940190014 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.451721004 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864511903 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083650244 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611794874 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.560454729 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868702345 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067850396 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889923768 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.863695617 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784046902 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.153812381 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08488074 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.57908304 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936451469 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265981345 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.596478596 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859094525 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.85444691 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.919322182 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975484857 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.566878447 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.033445794 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872402053 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.850026495 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284797657 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862282068 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086335341 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442928657 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86174455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.01438766 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796288526 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866333936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86652376 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.858593131 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.732411337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.937148673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.111721622 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867418311 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791001115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857542075 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352875345 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.714714107 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.862519043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856923285 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424451674 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856400663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104612327 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.862565064 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.224676851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861783859 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791866058 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791706387 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.548874566 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863242754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.825499164 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.249622543 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.951190462 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908758193 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862384526 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913427136 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117104609 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.872171061 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423226915 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08937936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.778795411 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880024462 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.958355764 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.61055955 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.847477454 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857758347 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094039854 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748866225 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083277653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.421584865 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.764476928 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857502011 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070575418 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859446853 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.83080675 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058043513 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.568695974 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.862211119 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532173223 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882052796 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.815248252 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.782559648 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.008126165 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86798608 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938963072 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871442068 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.870437104 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869445714 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977505569 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.824437772 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863925736 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.873959698 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953651383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.579599273 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.23048601 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863416449 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436752393 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536909124 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416947972 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87440651 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859174393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85895779 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794850707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009612125 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090119731 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133669432 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.980653447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.063843161 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882447741 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.638109256 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.877302975 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074182442 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135916561 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.759739347 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879591112 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.874601203 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.860080612 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872178834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.072986825 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256593129 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325585574 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.984198629 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876036685 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268865461 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135497392 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.861740414 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861259871 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457097104 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.869646216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.945949946 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.867360888 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870850548 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011969857 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873126325 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408708321 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873779898 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.021979967 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.637036416 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.247708818 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125043793 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.155023015 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872434098 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407534666 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.552793977 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130925921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930486364 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874599377 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.980106945 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009951855 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.963180666 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86418596 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86461065 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086368085 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.574361204 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873347192 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411917148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127477292 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.86132554 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.96740537 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887799716 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.874932159 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088629657 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402821331 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088557788 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873627111 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870864677 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.684384415 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410513722 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875487273 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798503959 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.868367207 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059763896 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100395714 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884549835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316250849 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.57473918 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32348983 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.838742171 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886950493 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864566916 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.574310745 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410490303 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.2377318 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259454913 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432402005 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.867213036 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137946205 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.869567623 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865202383 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143215472 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.869089638 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.874175515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878177567 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.407458968 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.462702987 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.889525706 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.174736334 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.804906584 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214114616 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569663731 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802569546 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875770911 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.999993658 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866983918 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.984538741 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877928749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.978877971 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866283902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.602351621 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154606852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.872132728 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.866426346 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.675515765 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871777629 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874690102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099648386 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874110728 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.541223246 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.220456668 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126758282 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.879077865 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.852994581 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.869717322 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867150052 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864749095 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.140617921 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.177373066 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328864313 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.884789444 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.878189771 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871624895 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.084114857 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079692126 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.880553481 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881832923 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866926512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904955739 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.780990623 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375706954 seconds)
  done (took 1799.323149156 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907515287 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.87053337 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.877457436 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.906926391 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.891553829 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940126988 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.872327996 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931069744 seconds)
  done (took 57.004194044 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.871558318 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.085560281 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.906203972 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.871367536 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.878645343 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.883282318 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.226567549 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.876343854 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.87890829 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.880905551 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.874369943 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.876953988 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.406537935 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.880645136 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.875048743 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.866490156 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.879358369 seconds)
  done (took 74.826454152 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.885444314 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.361644134 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.898198347 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.86914663 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.258622648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.876094254 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.36544261 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.918762865 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.875642556 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.961914144 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.503637229 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.902606861 seconds)
  done (took 89.487629793 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.876521843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.876856584 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.877052665 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.87731163 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.876686689 seconds)
  done (took 11.193968798 seconds)
done (took 2307.493455772 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.127392698 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.423799667 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.332432235 seconds)
  done (took 6.566148449 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.019384449 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.069611468 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.242068522 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.224494301 seconds)
  done (took 10.364589411 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.156872399 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.258011216 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.077009503 seconds)
  done (took 8.301420879 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.955631729 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.881949703 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.948027959 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.871778748 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.870910807 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.870076958 seconds)
  done (took 22.424053638 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.875606025 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.877427279 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.875582267 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.879035028 seconds)
  done (took 9.320101866 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.856733742 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.638794746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.855921383 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.870761851 seconds)
  done (took 21.032550404 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.622814237 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.635345884 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.617905886 seconds)
  done (took 9.686959855 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.870930738 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.717122413 seconds)
  done (took 11.399096982 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.155840211 seconds)
  done (took 3.965562438 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.006316575 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.137684624 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.877848051 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.669662795 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.933688941 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.735701667 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.087147418 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.773084728 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.65661913 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.464888364 seconds)
  done (took 31.154049277 seconds)
done (took 149.937849688 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.903485459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.916949192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.068635924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.913987534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.127663441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.070599108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.207761204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.885583677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.406536132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.394857825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.895877132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.127692422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.147696054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895068428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.144989907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.275393427 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.099512028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.955209573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.59184938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.791099549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.235202213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.51294532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.729359748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.559243601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.128106491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.028814243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.092480334 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.298099935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.734903929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.138927247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.052221712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.931630614 seconds)
  done (took 196.07504001 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88277198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872715764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873871646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.893211874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.874414267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873299428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895530721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.898574319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.79665872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.787112064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.899316531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.874604231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87365812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893530627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.874617744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.874407271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.874724724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874709293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.875209207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.875992755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.876573099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.790183536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.899363564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.79635132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.888739148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.901165097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.879394975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.875456443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.875802598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89270883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876721702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87567207 seconds)
  done (took 221.680642412 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.875746101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.875826579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877128117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882044201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.896105356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.876115289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.878185079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.876685539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.876402125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.87554965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.876211513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.885710304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.878175846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.876256985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878172178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.876490019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.876343737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.878173452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.876568775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.876011611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877999159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.876359862 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914209162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.877082017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.87700986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878259046 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.896291539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.876702663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.875938596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.878388124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.877631241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.895843813 seconds)
  done (took 221.984955702 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.074312888 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.886464198 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.885044245 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.825485015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.885063733 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.884516483 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.884514808 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.083755257 seconds)
  done (took 19.226768924 seconds)
done (took 660.778676849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.908223598 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.649532344 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.060848375 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.90708499 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.534471651 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.908747789 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.904653145 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.029510585 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.301674894 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.018813335 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.926709447 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.902326858 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.049621385 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.9033932 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.121013819 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.978325895 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.675119635 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.771644434 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.173712748 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.287052513 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.111225927 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.254129503 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.029639119 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.386197742 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.053012216 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.279903937 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.428022511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.671976565 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.904482668 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.173556295 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.226532735 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.656658005 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.920188238 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.921657428 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977582978 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.960452446 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.660050855 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.92009732 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.071893462 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 3.038598316 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.318822367 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.12893798 seconds)
  done (took 112.925157622 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.87523537 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.875794609 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.873196385 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.875572713 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.876824297 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.875322392 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.874938396 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.874310717 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.875311424 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.874976378 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.875586184 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.877158388 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.875804257 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.878062772 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.875649409 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.87574035 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.876781269 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.878151591 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.875742693 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.875545827 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.876314245 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.875108339 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.876265181 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875509687 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.876610389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.876462075 seconds)
  done (took 50.593318516 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.888071419 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097106725 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.228077165 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.895325919 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.88826251 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.892084071 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.947638949 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.889910436 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.890996754 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.890909416 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.023668563 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891294854 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.906610813 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.236893242 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.892218567 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.889405344 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.888751816 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.889777496 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.101459391 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896713364 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.949912356 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.889640593 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.94810956 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.899626513 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.890526784 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890128789 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.893568273 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.411543325 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.890898099 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.025048293 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.485943029 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.946776266 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.36223016 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.239925332 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.485467085 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.890333447 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.890593161 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033287771 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.892293058 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.890406109 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.950432376 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890899711 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.237959226 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.461425194 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.913719192 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.890374893 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.420344196 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.029764801 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.069637623 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897362338 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.244145274 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.894632425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.8927488 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.890962915 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.069079207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897435371 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.891628197 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.289865021 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.894876035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.950443234 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.893516482 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.892395137 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110247897 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.892492085 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.099836331 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.89390588 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.899781516 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.891931833 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.24064706 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894825579 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.47111821 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.914941543 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.893897886 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.028419789 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.101007321 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.46441159 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.895626294 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113593343 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.381385662 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.951015947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.896272897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.404208547 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.953696639 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.896001066 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.894294764 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.89497462 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.893400447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.93816939 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.951688024 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.408324649 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.469169068 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.318596344 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.954609194 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.90529289 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.893360688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294183871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.894461123 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.894619816 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.237455406 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.479054376 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.916131146 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.901921418 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.463067639 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.919477121 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.955512142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.899770196 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.248532787 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.896303899 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.938998372 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.894646884 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.901870855 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.898351385 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.954412433 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.899077829 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895007637 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.453458596 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.057015578 seconds)
  done (took 238.924692625 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.889342952 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.908607019 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.890253246 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.908317807 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.887755018 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893783911 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.890669261 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.889695991 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.896862641 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.88835873 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.89019542 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.89471541 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.892483151 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.905167609 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.899166437 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.897371937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.502621482 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.892845605 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.889409014 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.890686304 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.648411734 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.890947432 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.891056306 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.891166541 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.891390032 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.891577527 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.898928778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.892312498 seconds)
  done (took 168.225056447 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.897855993 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.322446456 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.899930776 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.985858662 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.925313211 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.895861593 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.98428226 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.930571026 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.900864768 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.895175924 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.894801032 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.123883437 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.898223744 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.275796232 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.026606551 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.98415051 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.277456465 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.898788462 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.895880995 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.89516998 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.98662753 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.913299167 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.124436749 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.321172524 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.898732237 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.32237031 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.887796437 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898113924 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898201652 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.324481986 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.896491725 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.123600931 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.956439595 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.933724088 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.325153537 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.277179625 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.279382219 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.985984768 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.898193517 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.895138051 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.894012088 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.887035907 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.321723757 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.899699419 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898866998 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.314469998 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.898803705 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.899808088 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.906808602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.896981833 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.933918197 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.935909749 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.128373489 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.328991284 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.956112653 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.91922074 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.984357723 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.257804245 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.901215687 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.280136424 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.886342596 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.32549101 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.902724454 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.888223125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.898081407 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.90392433 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.010965487 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984695671 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.282376654 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.900441138 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.281006209 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.011834547 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.899363417 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.898492422 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.900720299 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.324847135 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.282914678 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.011124285 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.992090378 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.05415424 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.891163916 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.901453091 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.889420392 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.958180656 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.900913661 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.324557179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.282863858 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.902905062 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.901672611 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.90128259 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.901313529 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.030847189 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.328960431 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.960527925 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.27665957 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.130635694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.128728127 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.903751482 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.935318488 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.901711422 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.13176926 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.903519501 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.933971496 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.309960446 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.133053224 seconds)
  done (took 214.638929397 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.099950025 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.79688033 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.965359138 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.998427224 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.360053798 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.422838513 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.91855037 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.954865195 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.971457325 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.995385909 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.420225069 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.989942024 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.047357271 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.953700228 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.533508384 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946203555 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.970155723 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.991150222 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.995927007 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.754451761 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.412938159 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.147875235 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.006164159 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.537405277 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.93727839 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.515660339 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.617411511 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.380498617 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.04055115 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.759025064 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.349063412 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.894527866 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.454342396 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.42823123 seconds)
  done (took 80.402936531 seconds)
done (took 867.527377114 seconds)
SAVING RESULT...
DONE!
