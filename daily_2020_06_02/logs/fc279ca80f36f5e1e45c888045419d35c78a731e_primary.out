cset: moving following pidspec: 21202
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.344304765 seconds)
loading group "string"... done (took 0.586057148 seconds)
loading group "linalg"... done (took 8.12442086 seconds)
loading group "parallel"... done (took 0.171688604 seconds)
loading group "find"... done (took 1.234047384 seconds)
loading group "tuple"... done (took 1.906791842 seconds)
loading group "dates"... done (took 1.305013671 seconds)
loading group "micro"... done (took 0.200896358 seconds)
loading group "io"... done (took 1.000225399 seconds)
loading group "scalar"... done (took 40.859634285 seconds)
loading group "sparse"... done (took 12.953839035 seconds)
loading group "broadcast"... done (took 1.040077882 seconds)
loading group "union"... done (took 14.80383646 seconds)
loading group "simd"... done (took 5.22568571 seconds)
loading group "random"... done (took 10.122631365 seconds)
loading group "problem"... done (took 1.631267094 seconds)
loading group "array"... done (took 23.410607298 seconds)
loading group "misc"... done (took 1.758455494 seconds)
loading group "sort"... done (took 3.709386158 seconds)
loading group "collection"... done (took 20.158537441 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54826341 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129359796 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140977637 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123935567 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153336015 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.186908971 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124858675 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085036021 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.880381786 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154381304 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116796653 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423413566 seconds)
done (took 67.457675918 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174203488 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089054002 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080803164 seconds)
  done (took 1.219729197 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067819903 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127888324 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068184925 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069445409 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068983887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069219866 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068684976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069045894 seconds)
  done (took 1.592756899 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07344656 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068784405 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067916614 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069964741 seconds)
  done (took 1.332016857 seconds)
done (took 5.460901249 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.80224063 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215668278 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193468683 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.422984532 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140663229 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184544561 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642294878 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327900029 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208717887 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098829436 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116824775 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.368863494 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127745985 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64957697 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080850093 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099812666 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141454259 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426488626 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071907039 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086685927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093304467 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132023242 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092022418 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079250338 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.154922292 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071253849 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143367229 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083490669 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069018523 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222629366 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177839751 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660738347 seconds)
  done (took 10.476092533 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101742162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101691732 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070852611 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128213272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101181963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072544103 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078123385 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070135938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095527826 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132759562 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094706337 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111828561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068968938 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072451676 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086035487 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201189422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083650677 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083921019 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075220631 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080883534 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110923987 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081529834 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082593457 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083157205 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132110711 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173048652 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097202084 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098374965 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067624263 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084341563 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117863253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13092584 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069346689 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068364706 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12887014 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097566449 seconds)
  done (took 4.622505267 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022415947 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153487538 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092654886 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13913161 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067123219 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113789995 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07069571 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086397572 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243487982 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.464289916 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638059609 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152318226 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120357849 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106773684 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073014167 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072124915 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09633214 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069831673 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.265982177 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102244415 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111634545 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086060356 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073006193 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072942587 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067211032 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074069856 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066301311 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071002083 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091237274 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078519195 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332979703 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128730576 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070256661 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.843964306 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171477036 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070244716 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108305283 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168905694 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097282076 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143919106 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069430417 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065346165 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16163247 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.208204677 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074443031 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069602228 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087840953 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112046257 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124199675 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067542609 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068704935 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171243795 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06769853 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084202244 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.240579284 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152828213 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069102621 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301269835 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095604684 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074323593 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067557787 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.201271466 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117858594 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070489206 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070265234 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071102664 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07111522 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376876717 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069383784 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918547349 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071273921 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080624695 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073029997 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073988396 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066771998 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081477704 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081801381 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094032311 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069700269 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077616477 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069310102 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069197996 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071707517 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09621166 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.396814366 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067618302 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072811965 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06553849 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092834527 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098829516 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067478507 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065934585 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103806223 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070872241 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066634815 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070176329 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122633631 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065501035 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070676217 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112694278 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066555661 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197845088 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097540726 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070552694 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10126197 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076700408 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071040887 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.468155359 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066236676 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07481815 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068247685 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069865052 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068983337 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065886732 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080688999 seconds)
  done (took 22.054966908 seconds)
done (took 39.227816007 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242787361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08652356 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085675115 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086602229 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08599833 seconds)
  done (took 1.722510658 seconds)
done (took 2.84198728 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125758393 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100789462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066497765 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103922144 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066349816 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10385633 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103350645 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085872695 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10285057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066851235 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100303504 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066629483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06659539 seconds)
  done (took 2.296417953 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082198675 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082950885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071180028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083521233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064558355 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083957999 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082891274 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090339187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083490119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074093382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064547568 seconds)
  done (took 1.976365267 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081877764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083830449 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070730786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083351438 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064333303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083502799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083023851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090019237 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083603595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075297335 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064840599 seconds)
  done (took 1.973259954 seconds)
done (took 7.35609724 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076255975 seconds)
  done (took 1.173630173 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.539859305 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.701317274 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078848084 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100694457 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19680296 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112115776 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237011804 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085394744 seconds)
  done (took 8.325673752 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096378987 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083050292 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072663421 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072621177 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07122436 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070874881 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072132341 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072319314 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071182931 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071656881 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071059707 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071276058 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07215677 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071737133 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072670797 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072070724 seconds)
  done (took 2.37427794 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098486554 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09791654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075924819 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077715732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074736996 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074727207 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07684999 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076268138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073304483 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074686731 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078337856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07587361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075792106 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066335934 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076624364 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078858222 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07367437 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076364693 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077343439 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078124603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078365786 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066133898 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075708585 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076757584 seconds)
  done (took 3.069360864 seconds)
done (took 16.052976886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115268409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078005807 seconds)
  done (took 1.300576048 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078881116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079937461 seconds)
  done (took 1.274977804 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077270411 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062900522 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085192814 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076189063 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065369088 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065220166 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085259552 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065384344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065688827 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066297404 seconds)
  done (took 1.832381087 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065470731 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073356822 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069319351 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07916171 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071092936 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065922137 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069147491 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06574194 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073772914 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063687239 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068793725 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083972205 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070318659 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087343869 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071146591 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069769459 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072244683 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069199963 seconds)
  done (took 2.409972292 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063297592 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064359999 seconds)
  done (took 1.251950053 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066584026 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063625504 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066624221 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06802422 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065591197 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064277728 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065833975 seconds)
  done (took 1.578664199 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408550713 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125903538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337270195 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072617269 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082685908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263831574 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066177191 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071354016 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071619167 seconds)
  done (took 2.662944348 seconds)
done (took 13.438225844 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080381113 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08628169 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099803086 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416978975 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095469578 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070531775 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115987266 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184704656 seconds)
done (took 2.285794359 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217938055 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.07680353 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.489955394 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213966199 seconds)
  done (took 2.899894314 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347232547 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082075401 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079660407 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069302272 seconds)
  done (took 1.710905615 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.181190179 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070762583 seconds)
  done (took 1.381961673 seconds)
done (took 7.341162392 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064809554 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090391744 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066191988 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066159487 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066259241 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066427395 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06630353 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066971399 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066142171 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066299735 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066184564 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066132248 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066411951 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066048977 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066619362 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066480344 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066405995 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06668597 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066487836 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066449629 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066146304 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066550569 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066705064 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066522715 seconds)
  done (took 2.778346049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081645019 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066750807 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068886183 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070248838 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071400323 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07035893 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070548676 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068850726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070873921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068251557 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070831449 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071148231 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068869761 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071031944 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068469207 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07146592 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070343902 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068921841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069165952 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070845574 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070475826 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069126107 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070928336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070665441 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071622024 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071150536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068530658 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06942253 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070511304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070918038 seconds)
  done (took 3.252057718 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065860849 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061043279 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06257246 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071787045 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062801222 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063796067 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062828237 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063086956 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063431355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063091164 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064127935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062847327 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063197539 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063522363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063633894 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067564794 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080779518 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062958762 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06303824 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064266927 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067325966 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06270157 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063011318 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063752313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065671283 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062328052 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063549179 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062866675 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063567146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062705278 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066642938 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067426999 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062704534 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071463273 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067185791 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062415985 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066526198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062617341 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063057318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062349033 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062451644 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062769725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06268826 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072289857 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063145468 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06389487 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062964156 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064395928 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063009182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064875482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062311224 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062513868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065114221 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063935362 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068062173 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062868336 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063674277 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062837823 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063812827 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063110231 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06227685 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062580687 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066149299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063742688 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080394326 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07179283 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062578237 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064188548 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063357416 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066017339 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064253957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078178186 seconds)
  done (took 5.811453993 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084789748 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087363115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068147851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068420999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063843881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063736341 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07223588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06355436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068192729 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083072877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063734206 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068539581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068446179 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067727849 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063972869 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068841235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072495008 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063905789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063544357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067595795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063639506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07154129 seconds)
  done (took 2.680131367 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146270666 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068939961 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108697715 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074249254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072884603 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074444649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06979466 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069645633 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06960074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070064778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070114505 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069695688 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07292786 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070333009 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070064401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070271527 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070130858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069908804 seconds)
  done (took 2.53243611 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078207029 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067726601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087950215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069279384 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068935037 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068632379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073022393 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07416396 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068863043 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068821552 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073704959 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068802652 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068588237 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068777467 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069179504 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069388861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069057336 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06923966 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074057892 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073158254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082756928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073903331 seconds)
  done (took 2.732430558 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07790845 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067022821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081736963 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070255479 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063608753 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063782518 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069741404 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068186024 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069518979 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067649802 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068113489 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063704245 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070551167 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068288901 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071265756 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0686484 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068132101 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068803938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068548772 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063848644 seconds)
  done (took 2.527245423 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083252864 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065382044 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066143455 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073278687 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066375563 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066695217 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073306633 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066934557 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066965032 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08807556 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067283928 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067505113 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073806395 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070874532 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066636996 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073495876 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07568215 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072969532 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066818745 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066836266 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088045971 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06759204 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073644146 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067249394 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066973284 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066739179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067041722 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070962269 seconds)
  done (took 3.135081333 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065054874 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064911523 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065144459 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06506722 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066283914 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066927119 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066875265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066647612 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06602433 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066696751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066649261 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065901219 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066292428 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066234895 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066168508 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066253164 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066753847 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067008854 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066653577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066537567 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066075699 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066455731 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066325506 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066325632 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066149639 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066053739 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067072884 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066493837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065849743 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06619455 seconds)
  done (took 3.140891401 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075178127 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073392913 seconds)
  done (took 1.302259223 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063291808 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078836988 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062113933 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073981321 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072617635 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066692963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073049169 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072623061 seconds)
  done (took 1.71114184 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085777834 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076198355 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065866162 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078122375 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076710562 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087165248 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128952975 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065606686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07588112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066495603 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084351858 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067532308 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076231327 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070796985 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075775619 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07930274 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063967671 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070790538 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067405545 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06399153 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066418224 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079919764 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075225234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064074669 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07109736 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093979021 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082196986 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065610489 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07256915 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077796703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075723039 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062792965 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065822546 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065715942 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063286366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077246487 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084672836 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072728125 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078931148 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065991821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073804892 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062829625 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073666548 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076120712 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081512652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066048705 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065429877 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062873131 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065977409 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071872321 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063447101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069754825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062657583 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077475254 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073161518 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080780378 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064015015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070991298 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07173633 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072468148 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076618947 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072382378 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074723745 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06475341 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081259088 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0747795 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077394872 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063350476 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06248869 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063594755 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079565912 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094781789 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074890698 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065715937 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066056566 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06298299 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07260813 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065945176 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074821534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076646218 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065035833 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069825676 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077503449 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069660831 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071958278 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071799315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063439953 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069040554 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06629269 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085491172 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063916598 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063217612 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066035036 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0809272 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074534847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064518048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066382878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076987927 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062375827 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065353207 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065885017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070991586 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078620115 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069682578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069415235 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078737913 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074027479 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069768753 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070956624 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06163222 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064774416 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066143885 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075291789 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061607552 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071199237 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068279435 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063948379 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075746801 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06262321 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063558266 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076278112 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075441735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062540708 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061486728 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070934295 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063650261 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066572452 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077294562 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062687457 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062181667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06271118 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071616056 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063915095 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072059254 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067653691 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07142983 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.192673411 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062983702 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070032429 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078922678 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070310021 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071772811 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07674342 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071961053 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064748799 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078143194 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073150182 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068250313 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075201488 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069244614 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063036794 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067886778 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071783696 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06441147 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072954735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067919277 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072412175 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06571167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063901512 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071617476 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066363611 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067583271 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070415464 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064091548 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080796644 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072278139 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062986666 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06284872 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072376576 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066636911 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0651547 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068122861 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071695076 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065363626 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063685306 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065488149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071297296 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074095163 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068130741 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065682724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075569174 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082925096 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064758711 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072497878 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064996875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066495979 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06624744 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081120287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075897506 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069813681 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072935109 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062786198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075104798 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077713448 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06809205 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063508176 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068187513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069438913 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077577723 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069043626 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064551369 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062292692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069548276 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066168549 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070387004 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063671524 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067806674 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070514683 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064384714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071568941 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066031753 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079881318 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072856746 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063363592 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067745353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063724138 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076443534 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063220531 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066664039 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06802731 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065766083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064639995 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071971966 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062353172 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077631551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078130581 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07055331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067518039 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06502011 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077717318 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071329304 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073563544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072347858 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07524334 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081103344 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068150901 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072195871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079955695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064867937 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062265753 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.0750221 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066422483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064084926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064541262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064293393 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072523443 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072578647 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075506879 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062015281 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071591573 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062952919 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06736339 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062995769 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072750265 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071129178 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068403513 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076113551 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064372574 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064299531 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071801184 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064146564 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064756725 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06513098 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070948031 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064493783 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07028835 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066184242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0699973 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066013406 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062112558 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069693205 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064238586 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069375706 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072924541 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063944777 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070153168 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07080538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064154972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070587371 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067598149 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067552325 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071250784 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07054484 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069576791 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071310097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062559839 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077061621 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064253792 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076929303 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069142216 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061669499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069206144 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070623095 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06824372 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064422195 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064767328 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07024336 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063336681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070424917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076034617 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065657484 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079326586 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075009566 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070313852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070253328 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066674985 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066657173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064139721 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065368809 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061764473 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066419867 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061538951 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069075399 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06886528 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067516317 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068196556 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061933504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066562144 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062530413 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059034161 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065040781 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06444147 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06129471 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073212486 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.061960111 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063867677 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060822678 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062324224 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061405152 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059241903 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067131088 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067416436 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06138528 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071131348 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06422282 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067013117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076201322 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059626193 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.060581603 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059669623 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063077518 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072917907 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.061565657 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074497694 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066494242 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065182034 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059798115 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061651251 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.060458439 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059427882 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059763609 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069463131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064055022 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060872927 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062076399 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068065614 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.062263896 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073263666 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06077594 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065636866 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.061465394 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059127265 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063924723 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063762916 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068317025 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061393142 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062762893 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059619195 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.060895638 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066519266 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067428122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061906831 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068307944 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073413007 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061729197 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068406486 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063619008 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059372921 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067794277 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060964618 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.061460052 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063902517 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069049198 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06804802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.061958306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074725358 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.060757933 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070112149 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061482707 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060135112 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06069062 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.061718596 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.060777088 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063981127 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.061680822 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073579958 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059868248 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067169677 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067058151 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065266224 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07152865 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.061707033 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067778417 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066708952 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063695535 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068571893 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075402789 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06437135 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069177923 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062001729 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066750556 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070792585 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064370059 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072342684 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067066837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062429117 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066992455 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063706116 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06177802 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061569179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060727344 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070796021 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.300681499 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06844621 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069327417 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065853382 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072478584 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070471036 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081655887 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074257406 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075267411 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066086946 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065771132 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068901153 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070805452 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074339237 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076493741 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079307939 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075953835 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072343471 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067071149 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082631993 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078187777 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075914399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068878014 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075358105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067712719 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07446043 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0721149 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072396539 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068388323 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075895837 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073387249 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069737227 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078308203 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074627407 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068039825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073240726 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073468402 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072597101 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065255082 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067811786 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073709267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076092901 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073724561 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066473762 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082706777 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067618741 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071692146 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069212744 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065641527 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074935638 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064317726 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072758476 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066727184 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066749301 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064576382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068624204 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067553863 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072766953 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068235263 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064520973 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082473248 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081626325 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072942968 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065580812 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065389582 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064323258 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064317887 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069187545 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067707946 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072822441 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082450704 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068850683 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068358452 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064914236 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066311812 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07387666 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074492665 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063902461 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064595613 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069089911 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072418754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078334743 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065368037 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065602808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074104146 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072961035 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064212333 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069123945 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063114132 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073993227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083494074 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066848062 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072308975 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076994633 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079561501 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06578318 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062461816 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065722108 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072374953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071904426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066802984 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067670003 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086197237 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073551785 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068892621 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065537232 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072814909 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069426033 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080083209 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067072758 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066373703 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075180085 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075051128 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073560407 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07628435 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077212184 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072282549 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072156936 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065036029 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07120833 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064895552 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068197646 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06734358 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066665651 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06962075 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073377885 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068876036 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079367883 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077238725 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066075515 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060971762 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065907048 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065684219 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061458923 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06478159 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063521662 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064215159 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064070783 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064241922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071522874 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074146543 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069792521 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065662008 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064558731 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.202876957 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075566103 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072763093 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07214406 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063213506 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065992222 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066113557 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074005719 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068575964 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067727806 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072166167 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071743597 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071557929 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064189702 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077318714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06445581 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072006604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068375876 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065693303 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066435456 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073702743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070064912 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067543806 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073153099 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073712661 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067929872 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06448356 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063797695 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076069689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064198531 seconds)
  done (took 42.929918962 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101137677 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06443235 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064909209 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064690158 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075242409 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065475745 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064869075 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065702338 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065678437 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067984673 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06480816 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064873393 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072800518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079809853 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075088336 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069097027 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064742291 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066114218 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065117673 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065950094 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072964588 seconds)
  done (took 2.757720915 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070869745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078308245 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07718016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082629034 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073982144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070428439 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07823202 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070232008 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07882315 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076060782 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078576949 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070764107 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076020427 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075499179 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075923609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070451233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07868873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074630587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071029765 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07865984 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071024877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078518748 seconds)
  done (took 2.930095022 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065336755 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063988216 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070934076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064710374 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065343423 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064258501 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068899931 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065103232 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069861 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068495277 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068770348 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068999043 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073177505 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06489164 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069822225 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064138491 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115796149 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069301142 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066509263 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067197303 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064400333 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092394517 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064279973 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064596901 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067863856 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068699678 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066020487 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064116733 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065997526 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06787861 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065913608 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063724677 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072413797 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071707923 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067729498 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067738515 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065088536 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065645492 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06400577 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064124263 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071602249 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064565888 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068730624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072605176 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064306761 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06389557 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072062217 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065433934 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063875402 seconds)
  done (took 4.63261222 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07524571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113583799 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07090679 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094638498 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079605724 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072204594 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070381274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094741662 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065709115 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067226147 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080486896 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080692067 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068275153 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070210257 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072204914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068004846 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068653099 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067001518 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071404583 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067510317 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071321852 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072734225 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079503725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080015783 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068795041 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066959325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06755567 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069644881 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079457295 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071840304 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06960141 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070324597 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080320918 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073295706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067377575 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067605805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080756115 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068322705 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067769383 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066228225 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067526574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069253557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071903056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.0805178 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067658526 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073073488 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067913885 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065183405 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079299761 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067199339 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072819328 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080748162 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068894921 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068139468 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068895182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079511532 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068228234 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066648919 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068456097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079502953 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065605622 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068643392 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080067015 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066742156 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071675328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080305941 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072902455 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068937794 seconds)
  done (took 6.397946931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073027845 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095059251 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080137422 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081338359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075214095 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076217826 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075576884 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075427842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075811264 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079466392 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075956532 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11794328 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07182777 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077355985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075885475 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075697373 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075827182 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075924724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075508553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075460008 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075631956 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080258931 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073530171 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080545369 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076859332 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069255721 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073210651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073415183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080128339 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074409999 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077078248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073718279 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073724596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080026421 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076920631 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074005451 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064121916 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07361839 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073743329 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073552398 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071039095 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082685218 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075418335 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072078689 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075814431 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075565187 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081913135 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078870688 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077642411 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079441695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075993801 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082245726 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075971604 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075675173 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081975637 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084897657 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082273709 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082551607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076008681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082499442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082222127 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08488425 seconds)
  done (took 6.136985339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078427553 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070757033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082193786 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062287548 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062219872 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074514993 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064275558 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064290867 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073198682 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076013087 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07482263 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074563771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078023444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074890408 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074709325 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077744387 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07526664 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074555625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073262441 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074851874 seconds)
  done (took 2.77797253 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076730966 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081409566 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068014823 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072405116 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067712162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072777814 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067999522 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07002265 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070434613 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069904676 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076139143 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076489019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070701305 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074856543 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075671933 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074439361 seconds)
  done (took 2.469347121 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083777435 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070729171 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077729842 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064652911 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068063533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063309689 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063730275 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0618568 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062934392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076832514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063528646 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075657876 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065433042 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064513694 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064694548 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071591163 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064645663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06572142 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065327817 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078900832 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072464939 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066660445 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069482006 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065216882 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072086567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073172678 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067357788 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06935815 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065603581 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065531492 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071358049 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072793322 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063630241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06439089 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06310508 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0637476 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063751236 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082902859 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06991297 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063785312 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062178519 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069051416 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063826597 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064664063 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062837286 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063985203 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062953347 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069701119 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063919862 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070078727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063474302 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06593728 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064148666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071123346 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066809078 seconds)
  done (took 5.028636249 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078887045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067794506 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062152612 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061940844 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068727681 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07027817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069284754 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070029116 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07077536 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064064083 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070680032 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069256192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070485064 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069541272 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070560298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069921915 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063830872 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069557465 seconds)
  done (took 2.554764967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07282412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066827277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071673502 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067552414 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068280517 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068795114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064184484 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063853827 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064506687 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068887057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069058333 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068470108 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063914942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068294185 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069098504 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068739269 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068379663 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063929288 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068828717 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064214147 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068561806 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064149331 seconds)
  done (took 2.79343244 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096421512 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083515446 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140840449 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079613726 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087389837 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072799471 seconds)
  done (took 1.872934089 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092741474 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098734122 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067046872 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067269849 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072785955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070678401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070544201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071148105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075226994 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076069354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070933051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07518574 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076244968 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079420362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074899614 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074070098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07438975 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073381924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070095931 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082900351 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073274887 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077829496 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073017897 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0728794 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072999749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079749102 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077664645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078088247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073050464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077884373 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074832583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073248777 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07801695 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0765674 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068416955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075952254 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073053843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082489794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075445554 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079642476 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068629759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074719586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075190299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074899509 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075948192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071645346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076940964 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072881747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073168981 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084708905 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0756491 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079193063 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07534559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07768565 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077634039 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084468139 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07857239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079922906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075934721 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078273099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079615243 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076223256 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079737009 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078314922 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075420657 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079688636 seconds)
  done (took 6.341579944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104813015 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068216954 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072836063 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077757587 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07954448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073586849 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073372315 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07322991 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07270815 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069967309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109301031 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073767481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080850801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080000485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073458794 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073010455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073053834 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079869596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070531016 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084364727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073016342 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079429215 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07959738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079550488 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077761395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075128036 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072945617 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072665893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072852689 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072775238 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076768541 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073303324 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079103488 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069521677 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079844581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073140046 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073018565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076620093 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072878506 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07534495 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079551744 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082933581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072923768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072986081 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077882068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072848758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073004549 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070075804 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07317206 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070050263 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078228263 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078116238 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077923769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07998288 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073057127 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073341607 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073417931 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072964599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073485996 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07719105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079478055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0731323 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084794983 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073360423 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073415205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079566986 seconds)
  done (took 6.371615719 seconds)
done (took 128.731148551 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209985945 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184465646 seconds)
  done (took 1.69399007 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074328068 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104807564 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085283924 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136026358 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072124461 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105402166 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104809934 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084080957 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071783203 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071616324 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073121862 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076450856 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139859313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07185377 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071837642 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074171276 seconds)
  done (took 2.736428899 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104686217 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169845957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111777583 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072026955 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106762665 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079993118 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071350974 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08506297 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078575041 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073461349 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079982955 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078200397 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07323262 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080253864 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078266929 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079586978 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073096325 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079295579 seconds)
  done (took 2.897480395 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103435341 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094102341 seconds)
  done (took 1.525084136 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.176860215 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135586302 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205023328 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341072466 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157336745 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.440262093 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139990018 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139845242 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119962769 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13624417 seconds)
  done (took 3.314487999 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104892537 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191698305 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297382977 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124753758 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078901793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11512913 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126347094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084293671 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083561658 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082154862 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082383067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080748659 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103402842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079977676 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078836787 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081025458 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107219533 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077709061 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078488204 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079503593 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107992982 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072310572 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079476399 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077758566 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081026443 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.0807153 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073582488 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072581393 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079649574 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078661241 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08269809 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.110981046 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078394314 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104462201 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074985963 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105530035 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07928249 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074771023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076088032 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074856459 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078038566 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078988445 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080717248 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081012055 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073372627 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08125713 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074163314 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072162944 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083510768 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073570789 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083392308 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082177706 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107177661 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073606042 seconds)
  done (took 6.275869949 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108720544 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107516921 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07143252 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116545479 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108194435 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073033378 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109465757 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102904655 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111563264 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073970931 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072089375 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073915137 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082094236 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085869524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116847896 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108274305 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073525148 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071079374 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111704906 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111380394 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072247649 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105311156 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101230823 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110590675 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069176921 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071228272 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069736503 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07254367 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079376491 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080726082 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072804895 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081915927 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088201643 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078229128 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069154254 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071383309 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071570543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081336445 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08102961 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081439876 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078173091 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071028264 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071109092 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07213885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072414455 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070613155 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079780629 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081329496 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080250165 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071554244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07283926 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071144314 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072253238 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080671129 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078544806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082200387 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082166559 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071822229 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071111567 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074210315 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082360186 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081368168 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08153574 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072575839 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081736931 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071457988 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083203948 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085180253 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074914839 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072598526 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071447497 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071790135 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072733263 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079596308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079762109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073095113 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071559575 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07149584 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081381476 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079118144 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071190923 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078354747 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070465255 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07130576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072385134 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072327104 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079064815 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080952044 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072927774 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071158572 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07168216 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071458077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07001138 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078225437 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078243082 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077987818 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078706607 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070557638 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079360109 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07968128 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073327556 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080432828 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071971382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073155586 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071802038 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079343602 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078073662 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080153954 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07136509 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071239377 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078574376 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080813181 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071048331 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078505988 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081164049 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078537092 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070479615 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081232001 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070431207 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078051767 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068902935 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214384244 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072377512 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078531994 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071110801 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072388039 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072249797 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080777603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073654712 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071777869 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072911111 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07211884 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08018786 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084037075 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073941543 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078173153 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077539021 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07135785 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077280353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069726727 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077717429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070243026 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070786283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070901539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083439844 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0720099 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071932905 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071757721 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08236058 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072345857 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081289795 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077736359 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068902934 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081944417 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07953267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076328868 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07888694 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072063962 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070202928 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070061494 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07194185 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079313795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081454237 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07325428 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071763331 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07939973 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082765637 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07090586 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079305712 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077646987 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0777782 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06990097 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070922337 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080435991 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079909968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077336697 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078166509 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077696898 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070233627 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077220364 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079736766 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072177167 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085525201 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072494607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084242192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08085301 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079279499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081570404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081759169 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082329173 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082423917 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08497407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071503623 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071624813 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080021708 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071632356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071925674 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079190211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072766554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072847563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085274885 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070384174 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079723337 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069247078 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07804556 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069310523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071065494 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081906906 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070014758 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070834657 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077952103 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070153068 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077332726 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0793769 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077414217 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072080619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071138821 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078432334 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077878616 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069487841 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069651993 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071573036 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076817212 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076600042 seconds)
  done (took 18.922923044 seconds)
done (took 38.704451347 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210403664 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15413592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185566937 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115264455 seconds)
  done (took 2.087702154 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107920444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098163664 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087677197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066018137 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094749297 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066713577 seconds)
  done (took 1.882372637 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.337274626 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213637 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197831177 seconds)
  done (took 2.106571253 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223065058 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208150369 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466733977 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288723487 seconds)
  done (took 2.642387254 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145418492 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085518224 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066976183 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080699155 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126799729 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178262452 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09603346 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130290208 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074892776 seconds)
  done (took 2.399242443 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150410414 seconds)
done (took 12.644373955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227816319 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132999286 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.1005625 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.211881251 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074974674 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.214503194 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083205772 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071808994 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080754783 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103503949 seconds)
    (11/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.187125238 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.209972938 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079176614 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.209033755 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157098468 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078215473 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.150888928 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108207704 seconds)
    (19/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.405383976 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106248542 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.235395721 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.131184409 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121092116 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077448146 seconds)
    (25/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094699466 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076844705 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180566503 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074465341 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076843795 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068253559 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.180078529 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076487089 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184016418 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103199047 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.17456966 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073434835 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.174790272 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138230734 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067205371 seconds)
    (40/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069515518 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.226224394 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103479005 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139539321 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075961295 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080234031 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.141087843 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198256983 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078508335 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17401438 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067127616 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12955337 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086955188 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172650521 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.149692518 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069056688 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141185109 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.215177156 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.068927856 seconds)
    (59/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.163945331 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086263824 seconds)
    (61/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130540104 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068676935 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.168031186 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067760385 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076852952 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119428346 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199150178 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07213804 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.177769761 seconds)
    (70/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.142256278 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066610601 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.239496686 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180602352 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075626403 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216703523 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090089465 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21759791 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101026616 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076410785 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133561872 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125572758 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078334237 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076850485 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079678611 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067261696 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.106170533 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067714483 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.362129608 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076793763 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068365849 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089959988 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073682716 seconds)
    (93/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13784866 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078505426 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.18093541 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07104013 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082556618 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107921086 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134709625 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076319119 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067839446 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.179945221 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076535919 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172634077 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131541914 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074779931 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068562409 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127323962 seconds)
    (109/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.130217732 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068813964 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110964598 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217417469 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077731188 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092322875 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.199128614 seconds)
    (116/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069475806 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07924487 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06770216 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093923281 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136970343 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07683048 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077143388 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090993111 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067812388 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068455911 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090507283 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085830556 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094118155 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081446665 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081971904 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096501103 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069029969 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067660248 seconds)
    (134/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.071060135 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098069173 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078336627 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.069622505 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07621663 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069273395 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069971119 seconds)
    (141/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075526638 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186145593 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076528198 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07706691 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075355674 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076048434 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090273812 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070666708 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06813305 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095479999 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068818514 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176643971 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076545947 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076438637 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184880568 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136488787 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093044798 seconds)
    (158/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077173822 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075195516 seconds)
    (160/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09682522 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091531122 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066937361 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175904394 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.068403506 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069841657 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184079444 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121222973 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067177484 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074096966 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069556411 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06828459 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072306916 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14292982 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06858621 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068583647 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068343776 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06738564 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074345042 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067965414 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071561905 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074678861 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089762295 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076172908 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067852426 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067997894 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196798891 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079526972 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068742921 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06970211 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067367133 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068444242 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.128805705 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084291891 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080715185 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123764926 seconds)
    (196/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138119356 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075626162 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07915357 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092433395 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198048909 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.23157872 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076756843 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079854118 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075438784 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080256035 seconds)
    (206/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080840185 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067876845 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068627741 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088825937 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071027318 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091532933 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.2326221 seconds)
    (213/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072346729 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077662831 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075729928 seconds)
    (216/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222284069 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07523089 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090246984 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069265832 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079295738 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.069698081 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077499528 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140428216 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069483359 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06839683 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115582395 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 0.149718368 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077485989 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069010131 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069512893 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070026974 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076777791 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068941821 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17599771 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176840074 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072684543 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112683304 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135942159 seconds)
    (239/309) benchmarking ("sort", Float64, false)...
    done (took 0.134636266 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070063909 seconds)
    (241/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.081118379 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085572645 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071996915 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.143094898 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075323029 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068935602 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123489838 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068997118 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067827067 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068638354 seconds)
    (251/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196408229 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067668514 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069280812 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068518778 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131286634 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068808282 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068826908 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067485513 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069587127 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148010409 seconds)
    (261/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070813215 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.136661031 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081299641 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069454731 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077953468 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069821642 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090695593 seconds)
    (268/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068429285 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075186893 seconds)
    (270/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069519963 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075449485 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081691896 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068719198 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089485119 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068996374 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07963307 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069585159 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068152067 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173749591 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068310434 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141773988 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068476687 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068495198 seconds)
    (284/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070167171 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070501479 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06752109 seconds)
    (287/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071456146 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076355888 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071990577 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068167594 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082984617 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073433181 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068671242 seconds)
    (294/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069042211 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069505306 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075090092 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07513327 seconds)
    (298/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068585318 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14611603 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069826247 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068579206 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.0708708 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069001349 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068661484 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074206097 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067477732 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092844072 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121189904 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068159561 seconds)
  done (took 33.761765683 seconds)
done (took 35.137435704 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084947886 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097809917 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073362294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093301222 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083215512 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098863198 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076368147 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080976796 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084304399 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082937493 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081736597 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075059264 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07766112 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077667044 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075570287 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100650764 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082589515 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076651772 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076352238 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067751839 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076372164 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068298134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068233389 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075171313 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080236643 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076312112 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078831197 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078141761 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068582095 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068604772 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073054411 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077378512 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068054015 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081096389 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077475239 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077170587 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078974393 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081153443 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068177442 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068554689 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078636091 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068856202 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076378535 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074675042 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073311516 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074957899 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076793842 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081411448 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100566146 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073403385 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078370256 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079335833 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080626214 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07416291 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073495276 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076049347 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07432918 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100566139 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076838589 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07361748 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078032761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077950947 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074434573 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07603928 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076812513 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078755619 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08050921 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07463621 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078556073 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075210543 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068169938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076257146 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072638905 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068203281 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079232314 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080870868 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067347432 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072802614 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076525828 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076728598 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070445511 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073302094 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067620914 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073150279 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073165628 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074729412 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073869675 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075543461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067624145 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076386043 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07534542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076387336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067777061 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081064414 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06879393 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074676511 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068758563 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0682075 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067645522 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073198629 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068069096 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073588089 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076783755 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067482298 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072498201 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081385848 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06753124 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074828571 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067162887 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067809083 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079256482 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07836306 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067594646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073316967 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067367388 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073490408 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067865735 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067715525 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067729297 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068611026 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072938774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068435334 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072835694 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073700597 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081285575 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067633703 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072115098 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071741443 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067083363 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074494474 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068085486 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067828146 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067379763 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082297146 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072693841 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067423314 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07287737 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073280378 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075534126 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066562253 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075865375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073054505 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071414379 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073729348 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066552121 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078668407 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073141103 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072041309 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066550057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066927739 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066242943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067148907 seconds)
done (took 12.858880594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070173725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116925999 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092814615 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093762576 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082127728 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067354231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074059743 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091705146 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068550916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096099802 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088026811 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088525745 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110413205 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068383526 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069106628 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070048103 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070606509 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081415367 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097002781 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092354256 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109095345 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06882299 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089132332 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090069349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087278437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091569643 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0700132 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070752673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072150859 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093054892 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095070838 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072283673 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070583255 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093780404 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085405171 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08025996 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067490231 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075973644 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067570706 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066606349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068241648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087847739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075153253 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074841883 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067638573 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076171162 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070421213 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084372179 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087279909 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075031651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081877813 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091655574 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070406825 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084235379 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068357219 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085385936 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077577859 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069216852 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069622122 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074208243 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069578837 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072136088 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080993406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.077874453 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072068735 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081904898 seconds)
  done (took 6.723316428 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084568138 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094373613 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084353481 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086296255 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068304515 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069249585 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06894308 seconds)
  done (took 2.018308393 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069725316 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087386491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090356417 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090207343 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083488934 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091358334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075283258 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067831183 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095668988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067017388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08688786 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097512013 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070832722 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079389588 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092136231 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067192698 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091518396 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067145578 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068287102 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091205016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0721155 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094163833 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078413449 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067802507 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079960327 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067966628 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102094565 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076395015 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068922734 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069390437 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069864661 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.095819872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079338044 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081618217 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071285329 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083783016 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081612661 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070671185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078934867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0803424 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082879393 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070725169 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068659613 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070836523 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072695488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08153208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068344641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070911549 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070742451 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089675694 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068571086 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082174326 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073536303 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075849319 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075313112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074582625 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077914001 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070988162 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089598131 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070524576 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087096678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086418298 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082987857 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086623883 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069350043 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080083592 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081432714 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06840228 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069591388 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069722995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083798228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070625123 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069477982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079568258 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067487649 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091523157 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091374974 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067219476 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083829903 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070511711 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071015434 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081635241 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093945977 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07567419 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070564981 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074452101 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071521367 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072705853 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068774661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074034005 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070672925 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075284873 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07102604 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074109884 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072530062 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0863968 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068812246 seconds)
  done (took 8.98804516 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069577882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068894659 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069669654 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068255174 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070839547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070846796 seconds)
  done (took 1.910105823 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099940755 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068741777 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08093177 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070707137 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105602157 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086555394 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086760808 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089026432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084928394 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082549931 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086861632 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089740541 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091616183 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073111248 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086319457 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071624444 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087028019 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075725254 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08193749 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073689165 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084479586 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07313671 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073617852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090978986 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075112038 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071916992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080244468 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082318848 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081808978 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095859068 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072784291 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074754409 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079191533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.089185791 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087025658 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079063872 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070536581 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077213586 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074151802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074870249 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089262055 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07400437 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073499186 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077061645 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.087999014 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076274408 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074531265 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078103697 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083647891 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075264861 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077138025 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072049548 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074580713 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077536164 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078574515 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088074308 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077069193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086333909 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07258164 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07929175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070577843 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074824942 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091106373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074393398 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078798519 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077544097 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078801006 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070961469 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071038901 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068564526 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075733363 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069357619 seconds)
  done (took 7.197993443 seconds)
done (took 28.320558898 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515787446 seconds)
  done (took 1.95703898 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622603311 seconds)
  done (took 2.092657781 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.544945129 seconds)
  done (took 8.014503189 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.415457809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.646798497 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756204222 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13552237 seconds)
  done (took 3.458236324 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706670949 seconds)
  done (took 2.187035403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2364132 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230203071 seconds)
  done (took 1.954593825 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34774938 seconds)
  done (took 1.815654088 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06538754 seconds)
  done (took 2.53709505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251099612 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.171921987 seconds)
  done (took 1.899238247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450630644 seconds)
  done (took 1.925198922 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.256292839 seconds)
  done (took 5.732975119 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218805299 seconds)
  done (took 1.727635444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234261823 seconds)
  done (took 1.709637735 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.719324541 seconds)
  done (took 3.194440137 seconds)
done (took 41.68960307 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083022634 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085379252 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085050491 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0815389 seconds)
  done (took 1.790854992 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074668901 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070937958 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077154233 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072836581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076845666 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073436593 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074574262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075573015 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073023303 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073339985 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073051502 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073407574 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076047158 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074712696 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072174283 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076292997 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077478784 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073445872 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076030203 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073151877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071319874 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075871787 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07565829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072225216 seconds)
  done (took 3.259792484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078177747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073376256 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075920879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071973585 seconds)
  done (took 1.785207546 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076455748 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087519414 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087123803 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079607212 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091287225 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086784666 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069328174 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06959401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070656592 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079139175 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068403343 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09640644 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089009351 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078985429 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081511755 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066158324 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06796658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087933519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080025797 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079842409 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07107025 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079226625 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069312221 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089968309 seconds)
  done (took 3.383330284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087072864 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06628971 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088091265 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095286682 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095971366 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068346721 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088282381 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096386879 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145203434 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06923179 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074455158 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069010264 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107524332 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068458944 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089254452 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112511657 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115854083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072417687 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.1018849 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071853671 seconds)
  done (took 3.273393447 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083524317 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071981432 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0728329 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068303269 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078299773 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075594167 seconds)
  done (took 1.94646832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068918104 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0699615 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069689489 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069466991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074606484 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069586712 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068620119 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06987535 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070391734 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069856083 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069032247 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068792422 seconds)
  done (took 2.329945629 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193202806 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073130103 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072581425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069215863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075379208 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069210643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084928229 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071881013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097681222 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06927552 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069665931 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072277088 seconds)
  done (took 2.510863269 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190591769 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075535392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223441952 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147737689 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106028319 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112576971 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113154704 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111277547 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136111301 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100957228 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156193043 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162194053 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106842271 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13037339 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088619651 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120664207 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14460303 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154713929 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099020905 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153119306 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136038749 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12480796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144723329 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099438807 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104138959 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116282895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074164768 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079616335 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161810918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125527893 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138807867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107483217 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092879265 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174306105 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160207688 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134703993 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143779756 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082266293 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.119743302 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128631608 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191971715 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087572077 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153040338 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105288556 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080105821 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126044062 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111684615 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116540611 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101860338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088640293 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277941843 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176562458 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131006556 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086440889 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119763854 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108144411 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112144588 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11555068 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220307224 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152128625 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123927148 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071720646 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110138739 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145877895 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12865309 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107603533 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120202568 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092566308 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12780237 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153781778 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137262107 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135304334 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.139667075 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087399358 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118436393 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133180894 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125445902 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164965087 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121076585 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073726168 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118266831 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098723359 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080214257 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145281846 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076130424 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168052275 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0982238 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123456929 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12667563 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107843522 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107385068 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151207958 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135483965 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102497458 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086473574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102445056 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116817428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143401383 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086525875 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105713891 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111251822 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079121095 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127712823 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07345683 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116860448 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095676632 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114978087 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272148351 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080902247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121576033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102921735 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102623807 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128351482 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152062478 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08836762 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081887098 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158827292 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119358261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102919387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137991498 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152371426 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120653567 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096932832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140175435 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164321711 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087326591 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15139557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102287164 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08458627 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105421391 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121144752 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107780434 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119377833 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081061453 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116617398 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159777347 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074328936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097388219 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129320548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081946429 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080744697 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104163267 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10333294 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096869365 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101208901 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103717902 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13320849 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12051814 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104407601 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121140689 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099865569 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159851478 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086497437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099795278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100783067 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07098964 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127305072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145781631 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076753801 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149405916 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114653774 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110041345 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11193054 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08089654 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128907821 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077912 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072628063 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13438932 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26142456 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108483646 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14568429 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112921652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121661116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117860155 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127489119 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124171 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126026666 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113423182 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088470218 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113171928 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162627374 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073505701 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091562454 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081888714 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10214455 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094324431 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084453461 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133182235 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119755923 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108717989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113305505 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096707724 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145234439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079219605 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120430982 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117853307 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091494104 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144580518 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145941231 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128610848 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100791203 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132464815 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073965164 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075594265 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090120092 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1207767 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084149311 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08424727 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111543814 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143281403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126276054 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131792637 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121424376 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118171196 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150880192 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073254081 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119707801 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137388952 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116404248 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100747511 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090101741 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098343113 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136283251 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101738408 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19828164 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109231502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11941374 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150096295 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099889294 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078757954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101512881 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12470314 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09884563 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133487521 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094652455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084332881 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103108452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076916436 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095275333 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12718703 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111276721 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126455015 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104880307 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118382795 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073888756 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105203535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113564995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113170381 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.079867063 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109815377 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149301381 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096983287 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106859942 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135194554 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074793759 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.130275886 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154660473 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12924428 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079678727 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098246375 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112670181 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116387172 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113006292 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129561394 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100011588 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127917201 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106486741 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082827103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083911999 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092213214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099114779 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109067477 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098938675 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.108907274 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09318448 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127205803 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098863186 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10659935 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112024904 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097324739 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093598949 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092247478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159746014 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111965839 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147751779 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094248776 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.123973027 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.406549815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078137786 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081169263 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081850789 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135786251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085591566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125397386 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109730261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112920751 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122116999 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134552695 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098544417 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073747409 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110677127 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131805496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126577122 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098750416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104971395 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158007361 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11986861 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081080733 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111511559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11374758 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100823663 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162726742 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07995912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105955929 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075470373 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077969933 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120603851 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142609436 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080828169 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100201425 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114613473 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106413257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119912665 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094500289 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10652975 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124993526 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138042903 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120182064 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087024364 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105932623 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121372806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145479921 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099978902 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096754547 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163074541 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142162849 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151381487 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084705385 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108975488 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108351492 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10499072 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127440712 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081504255 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149416223 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078720419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124879033 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096472145 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239263727 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123614453 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108041365 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084950516 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138720773 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110620318 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08029098 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080222473 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109738046 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115818172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101463274 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075175168 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138580075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073996111 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13020148 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16238565 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08020721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104231527 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09533079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082521622 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103031672 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101022899 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086049645 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099380381 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16183475 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08503881 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143043011 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125593533 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108843796 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129807035 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10004496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64208115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077739693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142410024 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110735377 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168917 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095065747 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112909354 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105940429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115228555 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136986635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097412424 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173713472 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122154547 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112150166 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076423166 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098019774 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098471859 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08542024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102406434 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108306723 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107481097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091037964 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112820181 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115478448 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.07991202 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092948805 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143937406 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108828081 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138115708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.281816969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082204526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112024438 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125857876 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077463996 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11248727 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140274293 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100611502 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118715013 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080055554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095774254 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161187073 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071178686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148243724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113463683 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105521866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110878206 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106161955 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123682897 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099468137 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115841983 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089683499 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140147096 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108929218 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081556971 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077011153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100994093 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105657921 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094646553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09395039 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095725414 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141520458 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070315729 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094016479 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109650263 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140105416 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1596784 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101976392 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080998768 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115476493 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151406097 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108705475 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114663408 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07902403 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078245969 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079018319 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097883196 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119138914 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108352282 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113520362 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107536682 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150531263 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081105892 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221778206 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09211669 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100485628 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089748235 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079671873 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095219114 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095475693 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100852424 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108243898 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312870414 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092021094 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087197769 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088821697 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072621474 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08078295 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118349414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105264165 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11103578 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115504455 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079574254 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099196699 seconds)
  done (took 57.447773558 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.102529644 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076840346 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096656805 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.142354564 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120450147 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198531903 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15025399 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18782118 seconds)
  done (took 2.690809652 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067943796 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093626663 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104080371 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084191081 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066532888 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068086657 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223339088 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080841594 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066392083 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09033655 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076544997 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068596632 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.458772024 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068489794 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069455974 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079779993 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069874117 seconds)
  done (took 3.441995495 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378253136 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611489545 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353094686 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075936253 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.00499259 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088167527 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.238694769 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136897285 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08095843 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536139654 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368065018 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135621182 seconds)
  done (took 18.627269707 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080586916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074787619 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089249769 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089199862 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077055348 seconds)
  done (took 2.025936847 seconds)
done (took 106.012986489 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080969949 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.435732169 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068961034 seconds)
  done (took 2.145414725 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09052661 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08890065 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088037306 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086106039 seconds)
  done (took 1.976554102 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074319238 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076103666 seconds)
  done (took 1.764715109 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.20529856 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17257908 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096467121 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082854561 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079751177 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080606825 seconds)
  done (took 1.861387315 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07224188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072189012 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072760675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074178621 seconds)
  done (took 1.90652703 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067572726 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066910711 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069447412 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073534918 seconds)
  done (took 1.89463482 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083919861 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084021426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080842574 seconds)
  done (took 1.865367752 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100410721 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090116046 seconds)
  done (took 1.807849263 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080972141 seconds)
  done (took 1.698661527 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08998643 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099642962 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129308789 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114005863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135000617 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115386133 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090572714 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087865382 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081724013 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094542941 seconds)
  done (took 2.655135657 seconds)
done (took 21.745004768 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078288267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374441149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360765547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094027518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670038329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359673425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993775509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09630801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146140786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071786928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088196123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651749749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.9834675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329762343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970116807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332920994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655684077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071457071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070890461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07186731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977642426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071603016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072743091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072588048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653647114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378081541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073910041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327802597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071068671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073619307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35914419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070689421 seconds)
  done (took 16.272055527 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069807036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121074862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075366944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088444259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073256962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072446682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074580389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072420286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125726214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071916893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090293039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071080759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075847308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07305228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092261453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071400963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074046578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072520257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073394547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072827683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088549531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068847133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070112384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072757102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070289046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082441252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071249103 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069908489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070203675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074147886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074699447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07112262 seconds)
  done (took 4.126637654 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116214761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125394044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074351188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106548529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11555933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073705265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150445514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097337388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132737319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072704389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090508887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071617837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107164423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073920827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093820669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072711795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075782841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072605521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071958358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073546536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092731591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072678616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073034201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072998447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073824375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087782521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074118146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072520681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072919053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077296211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077206936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071151443 seconds)
  done (took 4.41748143 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070183211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07364848 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083068567 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084145453 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070315314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072051554 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07324091 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070916519 seconds)
  done (took 2.228324146 seconds)
done (took 28.672018345 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077678391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069124682 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071491979 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08634458 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074287023 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081623548 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067629045 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077472616 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074012977 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074254078 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076082355 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069195708 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073201852 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067837912 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074508762 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068725306 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083455545 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073295815 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082507736 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083397823 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072232477 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074593355 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075578795 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080401782 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080646295 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081023432 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076688094 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072667171 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067899159 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070345889 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070628619 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079615736 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080696235 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080786971 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067911316 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067367745 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071692095 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068745894 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08162423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07624529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068915912 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076890541 seconds)
  done (took 4.751073882 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08357256 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088701934 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082101674 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079079636 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090067976 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0822185 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086415199 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077807934 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077538594 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085459994 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073877553 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08082651 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078822414 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072367507 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077203151 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075336039 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080087855 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073935637 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077538995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07804952 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087011775 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072521842 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086820221 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078987805 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074398177 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080012355 seconds)
  done (took 3.715416297 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073405315 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085155978 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09180489 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141451587 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111138384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079632147 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082025801 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091355215 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09579288 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068298649 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072546834 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092002716 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092475416 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074119248 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068076211 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083969414 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083825947 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069944971 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074696377 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097061093 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088602425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084505553 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093395482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083809356 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067479642 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07033823 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072167565 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085424649 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070531479 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07853746 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070641463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071563287 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068831041 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078015201 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070783137 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067102485 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091941173 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078665827 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08030339 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068689332 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077689223 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068926418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092812224 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127641815 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067927041 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071862345 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07283219 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08030928 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068053513 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095301973 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079320559 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067415078 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068730945 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067148129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067301 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070441374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069476716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070078842 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077745956 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074326308 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089503415 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072650122 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085267701 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067992066 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078590655 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067553499 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06884813 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066790881 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095862759 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069279267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111250185 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068484842 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06667491 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078587376 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077784644 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073477673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067514809 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085304385 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079478115 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072236148 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075944068 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071612124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071039714 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098196476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069822508 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069480133 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069301794 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074470384 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07246538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068523304 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080719208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067390713 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073312261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088606969 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070135998 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071190882 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073903032 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073153897 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069902018 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08165296 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074264243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071384952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081077955 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070526152 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073633667 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08381968 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077061527 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068949717 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07225816 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07331949 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071103633 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071061883 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073437232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071541101 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076466549 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076390633 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075526284 seconds)
  done (took 10.737356241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161599542 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155047878 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070363176 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146950145 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076449298 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080703479 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149762086 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094358605 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068366516 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06960117 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068441871 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109039505 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104631968 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114904805 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081160459 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069247304 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090893778 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1144597 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152223921 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146577577 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090655804 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076382223 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070951881 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070090886 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069994427 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078160405 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085878807 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076811865 seconds)
  done (took 4.411062243 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077489623 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102991336 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072487561 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090335285 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087850596 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06876041 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070321267 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070556728 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084634866 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077409026 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068568477 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073320363 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072647401 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071667658 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069477641 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076972882 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077354425 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067895997 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072262661 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07380294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078326787 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093040511 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072131765 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068055896 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071093935 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068756446 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077108227 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08122658 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071517998 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104584074 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066035569 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073258536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082505119 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069478292 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068076824 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069544983 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070759669 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070966223 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072544371 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069535325 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069169717 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074432751 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069814345 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079143513 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083286025 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072093198 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070987041 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072026926 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071944677 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066704509 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072031869 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071147519 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071543917 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075971927 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072639512 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071452826 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06964892 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095197825 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074557058 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068141234 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067411224 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067095906 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070646734 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078122959 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083562779 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070926116 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067508442 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068975091 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081771524 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0830108 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070495144 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076412009 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068303683 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07301791 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073068664 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071894102 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070413437 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068860516 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071910768 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069597376 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071763264 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070520839 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069768858 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073726395 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069073442 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069541183 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070198557 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07009996 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076777762 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068100263 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07279487 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069255445 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067391506 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071385658 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073942042 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071320786 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079388213 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079107625 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068779357 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067033249 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082226145 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071001249 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067821437 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073677063 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073279749 seconds)
  done (took 9.40478846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090186345 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068971575 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085260728 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091471323 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08070022 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076597918 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08136324 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070313798 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086419854 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075245533 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078498876 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069628351 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081405707 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08065614 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07167047 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081371109 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074687729 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088196462 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085768489 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069477436 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079645935 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083849456 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082244875 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084553184 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083253913 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08539142 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082379117 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07954 seconds)
  done (took 3.919740718 seconds)
done (took 38.567847375 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.721097729 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.953821042 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70178756 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.909488474 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.753832766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 80.076926128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.788414023 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.68809116 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.931244377 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.737087019 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022071925 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.935446237 seconds)
done (took 137.986361215 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.734594973 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.841254125 seconds)
    (2/2) benchmarking "String"...
    done (took 1.939262088 seconds)
  done (took 5.409172443 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.872225956 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.353903958 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.918200187 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.683358223 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.691064103 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.938527519 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.465546765 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.129509552 seconds)
  done (took 29.80756488 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.918635127 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.909307107 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.408610126 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441300176 seconds)
  done (took 15.349464908 seconds)
done (took 61.896660407 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.713891555 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.685722345 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.691677779 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.683734239 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.776837372 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.697897179 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.828504862 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.717832358 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.685029529 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.690436102 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.68658389 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.105992994 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.69539367 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.918812855 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.685094595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.68269444 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.686055978 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.158796126 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.834709453 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.688234548 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.699441896 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.743095198 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.683844018 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.835928842 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.721952307 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.680741542 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.08562805 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.67984371 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.282631941 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.680314347 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.71781083 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.103839402 seconds)
  done (took 200.855672977 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.674473043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.521656944 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.602644114 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.726045576 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.837681123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.869118999 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.772581252 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.029320398 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.680086411 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.691834056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.852524501 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.673536358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.880607203 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.621364505 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.709473443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.765751582 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.825585255 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.877365052 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.714783842 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.819941907 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.695179373 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.66182845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.612810278 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.838973618 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.704414915 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.776370194 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.694559573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.691229185 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.85529818 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.803445287 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.679979759 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.691127919 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.865973827 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.54417976 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.673652937 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.682776462 seconds)
  done (took 165.237338185 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.857541748 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.673946883 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.671732481 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671901663 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.676194329 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.670910827 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.794870959 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800504087 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342311578 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.443664477 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7273084 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.669010078 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.436878169 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.668270632 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733107398 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.680324946 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.669828417 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.669196187 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683024722 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.695564197 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.672815181 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.669455706 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79260291 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.68537027 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.668307474 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67841696 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.670140823 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.674820305 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.056713974 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.668466462 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.904344303 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.674382275 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674815509 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.908758615 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.669889319 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.667894273 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.486234323 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.774213639 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751174084 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.668438584 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.672438176 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.665540236 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.883050651 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.666976699 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.668310989 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.666181641 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.666181939 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.783042867 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.66972172 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788842555 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669512229 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14655186 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.667756448 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66788262 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.965824038 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.251133638 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.670042233 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.668775134 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.665467523 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.668634524 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.671479936 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.904293563 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.739343838 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.667640124 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.666601784 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.672812603 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.666236248 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.70880343 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669210857 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.202938546 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.683116224 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.900430141 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787809623 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671108804 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.665827763 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730995533 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758085536 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.667333289 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.665693345 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.666929189 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.665996166 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.748230039 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.668007469 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.747449296 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.677374788 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.668505824 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.723175593 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.735288752 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.668568121 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487534755 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.67253593 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.666324236 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932378712 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733442656 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.668630828 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668102049 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.746140164 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.668947031 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79132586 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.404744939 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.670332873 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.940098515 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.745311038 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.668087862 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788214308 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.672675001 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746939314 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.676040689 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.6691933 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704510191 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.668215604 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.68074718 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.668104082 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.667995672 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.039790185 seconds)
  done (took 389.11635329 seconds)
done (took 758.751568853 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.28494171 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.250010015 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.337974007 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.265015123 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.238426422 seconds)
  done (took 12.986898268 seconds)
done (took 14.595616175 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.744429254 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.7480175 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.685133208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.747383356 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683246745 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.746704063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.728471729 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.688983246 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.717542697 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.690867209 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.717027964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689810002 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.67566611 seconds)
  done (took 23.873988895 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.895510553 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.905177143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734514083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.897473021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.710800956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.895048989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824614317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812706668 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.807048907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.680864864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.676544034 seconds)
  done (took 21.452256377 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89839146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901634131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740995174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895964837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713597111 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902220505 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822854371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815416675 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811398573 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.681639983 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.677693717 seconds)
  done (took 21.472916312 seconds)
done (took 68.409362933 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.672550149 seconds)
  done (took 3.283805026 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.692962565 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.844901689 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.674483276 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.674092637 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.673207685 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.67389681 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.67413827 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.674456012 seconds)
  done (took 15.194257497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.673554868 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.672799995 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.673604678 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.673325751 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.673269904 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.674056708 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.673540284 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.67383931 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.673128858 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.673627756 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.672921705 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.674031227 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.673306367 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.6721428 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.673341085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.673127239 seconds)
  done (took 28.386858532 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.677533499 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.672912628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.67406352 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.673011357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.673580003 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.674468403 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.675778712 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.673983937 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.672781607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.674217056 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.673149152 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.673618834 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.675845258 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.674731078 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.673150722 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.673896828 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.674874016 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.674371949 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.680200328 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.673989551 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.674309335 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.673261861 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.67369032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.674017842 seconds)
  done (took 41.800510614 seconds)
done (took 90.277175228 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.429156836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.58880024 seconds)
  done (took 9.631800714 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.68496608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.681994985 seconds)
  done (took 5.068647546 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.682386792 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.681840288 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.68102506 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.680943173 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.680990473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.681769773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.681162344 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.682561096 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.681313976 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.681629704 seconds)
  done (took 18.436066619 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.680907558 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681376116 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.682345794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.681551594 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.682518832 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.682349983 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.681866042 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.682448394 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.684197333 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682398385 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.682628549 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.682066478 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.682104994 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.682679616 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.683867034 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.682316012 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.682202835 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.683484014 seconds)
  done (took 31.90409509 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.682834974 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.683010538 seconds)
  done (took 4.988076752 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.6821629 seconds)
    (2/7) benchmarking "second"...
    done (took 1.682941286 seconds)
    (3/7) benchmarking "month"...
    done (took 1.68281034 seconds)
    (4/7) benchmarking "year"...
    done (took 1.68290821 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.683007216 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.683381342 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.682352598 seconds)
  done (took 13.401555498 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.683372175 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.833097912 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.896930246 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.301711732 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.684912108 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.68696608 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.612719397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.686048194 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.688484016 seconds)
  done (took 18.696051865 seconds)
done (took 103.741442126 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.584535017 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.686349482 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.947155918 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.781316047 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.705695443 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.684475265 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.710669575 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.952353916 seconds)
done (took 41.674070821 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.77546804 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.38044054 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.434898519 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.719362876 seconds)
  done (took 15.157762176 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.683502759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.018111371 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.709681978 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.544872692 seconds)
  done (took 21.584370599 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.04555314 seconds)
    (2/2) benchmarking "read"...
    done (took 2.037285447 seconds)
  done (took 5.709617113 seconds)
done (took 50.851955939 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685860647 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.683548094 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.683500083 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.684056016 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.684607805 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.684812795 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.685827278 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.684552794 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.684532375 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.685277064 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.686154558 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.683777958 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.685200463 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684976534 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684727344 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685257941 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684395313 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.685229033 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686646308 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685305081 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68506775 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.684757338 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.684263084 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.684770083 seconds)
  done (took 42.061718831 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.685704179 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.685400617 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.68585987 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.685110009 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.685081793 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.68669747 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.685783016 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.685678037 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.685747704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.68477304 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685553481 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685830313 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.686335824 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.686848111 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686259208 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.68657682 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.68784263 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685944261 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687244227 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.687249026 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.685825468 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686489033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.685813126 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686089939 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.685795469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685618479 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.686268384 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.686738235 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686200754 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.686314198 seconds)
  done (took 52.208647577 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.685730306 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.686129704 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.68618393 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.686841294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.686061035 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.68683 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.686741315 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.686788061 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.686800478 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.687754926 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.687085943 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.688714415 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.686876025 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.6869576 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.686456589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.688007025 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.687902115 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.68685485 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.688623065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.687031196 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.689297437 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.688633398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.686874106 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.686739996 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.688063232 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.688322403 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.688305782 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.687946765 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.688302416 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.688999157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.68802972 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.687817239 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.687505684 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.688734004 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.688503498 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.688011705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.688624657 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.687910357 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.688397135 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.689371548 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.689210555 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.688688382 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.689078067 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688453432 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.688067751 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.690645734 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.688629402 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.688939571 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.689198362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.68853901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.688043514 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.689020336 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.688506544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.68877938 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.689223511 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.688272624 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.689213725 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.690413857 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.688806521 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.688602232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.688794856 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.689241857 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.688869426 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.688999919 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.689756981 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.689627345 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.689617002 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.689445662 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.691071138 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.689597348 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.688959697 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.690044328 seconds)
  done (took 123.18512814 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.68880229 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691144071 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.689233979 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.689667864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688929209 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.689804825 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.68945167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690582296 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689694045 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.69007262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690342851 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.689794416 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690146902 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.69152268 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690162179 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.690952289 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.690681253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690608911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.690590508 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.691748865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690361525 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.69102104 seconds)
  done (took 38.814304226 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690694093 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.689886716 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.69367973 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.691557781 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.691046172 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.68986339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.692240987 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.691663312 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693359243 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.691403034 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691332469 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692292038 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.690802482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692542424 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692499134 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692615443 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.692653689 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692035319 seconds)
  done (took 32.082206783 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.691225932 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.692473304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.691809146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.692201879 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.692808952 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691832688 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691939262 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.692242882 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.691344931 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692588495 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.692059992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692084113 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.69204558 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692657561 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692520492 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.69207884 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.692811854 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692135101 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.69278502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693871545 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693458513 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.692715643 seconds)
  done (took 38.863288235 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69310775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.693181031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.695868142 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.692792281 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.692945026 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.693655627 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.693263518 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.693386587 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.693444704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.692923521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694117718 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.69414503 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.69390019 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.694440411 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.692885801 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.694387951 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.693917043 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694375196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693792025 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.694604873 seconds)
  done (took 35.507276408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695289265 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.695537872 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.694791156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.694791149 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69473929 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.694176612 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695802231 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694774596 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.694413923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.695145144 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.696497309 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.694344441 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.695681225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.694773401 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695404954 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.695510485 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695041824 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.695956103 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.694732135 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.695883665 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.695722389 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.696097176 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696338093 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.69559675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.695943413 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.696088098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694946546 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.695493983 seconds)
  done (took 49.102457275 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694869355 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695442905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.694515413 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.694895303 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.69559127 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.695920064 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.696041901 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.69593342 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695048996 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.695228655 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.69588162 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.696318236 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695543565 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.695958584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.694523143 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.695847553 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69552414 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696277468 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69599931 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69611159 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.695740369 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696548774 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.697427626 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.697052772 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697409241 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.697150133 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698198054 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.697056414 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697625411 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695980543 seconds)
  done (took 52.516954189 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.71723136 seconds)
    (2/2) benchmarking "in"...
    done (took 1.717975613 seconds)
  done (took 5.070717227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.69632041 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696984868 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.696734808 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697339082 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696434236 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697039201 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.697545507 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.696726439 seconds)
  done (took 15.210723759 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.698446232 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.697520103 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.697389775 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.697696929 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.696879844 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.698191731 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705144584 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.698206158 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.700122775 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.700126365 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.705410454 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.705650083 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.701761705 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.700145373 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.700083967 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700818741 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.697525268 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.697991853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.69832706 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.698252684 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697668927 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702745888 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702326055 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.698810049 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.701207362 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.708521202 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.704546372 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.698844858 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70124931 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.703765687 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.699588173 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.698976203 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.700516238 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699052211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.699019415 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.700198337 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706919169 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.70109106 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.707559076 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.700726292 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700392582 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.699057999 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.702178381 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.703166657 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.703924828 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.700058656 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.698840055 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.699778509 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.700689045 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.704080252 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.708036376 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699597091 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.700428029 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704187169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.702989161 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.708658352 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.700337664 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.703033899 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.709307323 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.710054986 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.711992666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.707614898 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703154799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.700803869 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710322452 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.723892372 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.70749539 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.700550961 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700964947 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.700343746 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.70709999 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713991346 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.710546061 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.70134005 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701249569 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.701020969 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703824616 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701326925 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709142939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.706640123 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.701805201 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701222072 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.710328895 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724264364 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.702123053 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.701919172 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.701508583 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.702276562 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.702755595 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.713771077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.701834223 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.702191835 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.70166843 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.704614376 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.703805077 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.702714775 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.702115015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704252224 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.702809287 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.703033999 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703319549 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705487762 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.713151142 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702634306 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.703064535 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.709545367 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.702751743 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.70400936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.710016428 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.703857452 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703496353 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.703418932 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.710007099 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.702026872 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.707125349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.711974643 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.7029816 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.705620007 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.703576799 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.703161017 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713222645 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.730182728 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.702770168 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.703149317 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.708227171 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.714372296 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704166985 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.707247624 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.703410482 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.703548385 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.701944981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.706320287 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.703334478 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.705743556 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703391879 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705797157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.704285908 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.70352519 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.704508012 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.706235177 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.706433406 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.70595985 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.706272836 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.707446774 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.704745821 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.707697868 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.711517489 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.704563591 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.707284315 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.709154986 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.705875226 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.704752413 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.707219632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.705425229 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.705134035 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703549148 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.706829039 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.705575151 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.704793768 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.705093312 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704589085 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.706243842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710509254 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.705313367 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.710567521 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.705665032 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.705555213 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.705463027 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.706256437 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.705247085 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.705764568 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.705032174 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.708295319 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.712293487 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.70558844 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.706130417 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.709131016 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706467238 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.705804098 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706414573 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.7096863 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.71377773 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.707211093 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.71311701 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.706996995 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.708177279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.707182047 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.708834337 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.707193406 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.70602242 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.711298345 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.714402508 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.719329044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.716462294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.707853944 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.709742705 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.707782662 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.710864182 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.710865644 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.707139031 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.706315386 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706525535 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.708566141 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707568007 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.708801684 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.707505852 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.70646635 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.706182697 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.70606633 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.708083507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.707016536 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.710380936 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709745703 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.708158751 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.70809555 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.707605559 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.707726378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.70737767 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.707696217 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.707704999 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.708070559 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.708305305 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.715900481 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.708259973 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.710835819 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710841644 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.711768397 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.707288138 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.707729555 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.712034039 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.710681251 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716589996 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.710770571 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.709357809 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715838321 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.709700418 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.708709733 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.71239193 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.709300251 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.708175609 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.712527494 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.715137078 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.70809428 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.709587048 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.708454195 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.710071091 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708874174 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.715113585 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.708831575 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.711303263 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.708990013 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.710860966 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.707717828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.712286456 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.711491945 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.711054184 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712830617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709673997 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.709525291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.712098452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.710420566 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.710905516 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.709255886 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713529322 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.716778226 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.715377137 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.711358087 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.713494438 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.711394298 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.713111668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.712523145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.710477845 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.712014302 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723568339 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.719244477 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.717709038 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.713644757 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.710677286 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.717463727 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.711767724 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.716008782 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71237224 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712676974 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.712210664 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.712362472 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.710699391 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.713906811 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.712033474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.71321587 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.713514198 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.715844137 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.711183129 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.712601302 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.710724674 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.710983519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.71093919 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.712966689 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.7104463 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.714819971 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714796966 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.710784726 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.713085721 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719000103 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712667319 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.714091522 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.712375173 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.713413454 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.711820032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.714154015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.711917669 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.716245558 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.71942764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.716040158 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.72329306 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.714505408 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72151587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.71241413 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.715658618 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.720224338 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.712150536 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.71157488 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.713130384 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.712921821 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720588419 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.7136803 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.714249343 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.71617017 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.712343728 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.712769306 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.712178098 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.712979136 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713535246 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.71292341 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.722428485 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.714617566 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.718136918 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.716172342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.714069651 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.713218193 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.713040652 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.713830692 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719121993 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.714196853 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.714914828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.715675395 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.715296968 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.713778494 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.714894903 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.714374662 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.714511352 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.714164921 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721326311 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.715905303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719558869 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.714722074 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.723069472 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714421103 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721338857 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.713983217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.716039019 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.71494901 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.714513276 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.716141879 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.714594233 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.717835383 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.714444162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.716567315 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.71774468 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.715496475 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.71662991 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.717078609 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.715471048 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.715938963 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725038924 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736379278 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.716555687 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718972399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.714843465 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.717858125 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.719812276 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.715446956 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.71529498 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.719160738 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726328326 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.722533352 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.716665476 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.715016216 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718010942 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715621472 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.715883668 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.716650755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.716872589 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.716200743 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.717404622 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.717104897 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721698352 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.715772985 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.716766253 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.718518137 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.717656398 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.72704246 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.716756868 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.71843722 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.716561854 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.716122886 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.718805878 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.717870961 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.718075488 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.718337425 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.715701683 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.71892896 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723531901 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.723862068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.720483741 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.71759704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.717183498 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.720143946 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.716732661 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71760093 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.716985128 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.716775804 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.718649623 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.717515596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.717816053 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.717287189 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.71742173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.718310525 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717708593 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.722060827 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.725159408 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.720499566 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.717445403 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.716987588 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.71752529 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.718011678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.718973917 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.72737969 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.723126559 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.728958339 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.726154949 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.722196285 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.720851761 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722207524 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.72887458 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.717983518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.719889467 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.718018308 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.722295032 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.720026189 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.723755476 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719292465 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.726357867 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.719993091 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.719147995 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727170482 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.721345451 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.720183533 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.720690965 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724379471 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.721281488 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.719030631 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.719594524 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.721096928 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727233041 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.721895907 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719637327 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722864351 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.718483801 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.722303945 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723465766 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.719294293 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.722187118 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.719675005 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.720642878 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719903096 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.719125496 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.719237158 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.719612164 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.719849138 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.72324112 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.727656483 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.720526816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.724117953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.721890614 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.721366631 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72047236 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720621116 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.72028971 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.720047617 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.720774337 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720680457 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.721442862 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.724026189 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.719997446 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.722189553 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.723751561 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721208144 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.724930737 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.732269292 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.727122936 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.721277666 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.723305051 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.722268976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.725314426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.721019395 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.721786646 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722063819 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.723582669 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.720263477 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.721369485 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.721227456 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.726286435 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.738891715 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.722602635 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723648925 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.724098545 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726504721 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.72206257 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.721774506 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.721962433 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.724415979 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.724671866 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.72855685 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.72285399 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729416106 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.724485967 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.723399436 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.725229185 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.725676535 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.7310464 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.726854702 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.722882361 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.722898224 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.727701374 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.7393917 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722031341 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732396166 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75137549 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.72389536 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.723761216 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.723316584 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724262329 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.723001907 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.725255475 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.72287802 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.723407555 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.723393448 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.722638114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.724201466 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730444007 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.726289793 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.722408548 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.725128799 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.724222331 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.724190948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.72274137 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.722691857 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.724219145 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.723858492 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.723825972 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.724776403 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.725088092 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.737039601 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.733828424 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.724278402 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.725024369 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.723340338 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.729031659 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.727710436 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736047347 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.73140031 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.725040428 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.724023137 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.727612242 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.725420835 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.724657778 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.725306627 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.726887046 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726209632 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.725396384 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.736988203 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.733772145 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.73084962 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.725517758 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724749067 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.7252377 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727023463 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724729454 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725092685 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.727523094 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.725665178 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.729729134 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.724591912 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.725651713 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.729692146 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.73195081 seconds)
  done (took 1023.206730935 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725851476 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726123885 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725552948 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725311574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.727191512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725379693 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725877311 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727002498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725980205 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725317672 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.725641302 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726190495 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725792056 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727159247 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724892817 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.726488945 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72633599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725813895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726349193 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726710242 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726368618 seconds)
  done (took 37.91118183 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.725428757 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.726738018 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.726618923 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726851348 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726727929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.726880012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.726751886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726676792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72820525 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727408748 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.726782179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726941053 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.727529975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.727782351 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7296286 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727259052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728637823 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.72795673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.725605504 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727340761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728061944 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.729081608 seconds)
  done (took 39.665747781 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.72845965 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.72800796 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.73132331 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.728111378 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.727214844 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.727705039 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.728102868 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.727575275 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.728941181 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.728824382 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.727262383 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.728962091 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.735614676 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.735372173 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.730736976 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.728400483 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.872838752 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.727883001 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.72835107 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.72804826 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.729063408 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.734764866 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728669849 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.729360765 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.728826879 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.728766997 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.729118342 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.728735516 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.728972332 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.730505693 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.733421511 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.730926447 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.730470596 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.732028963 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.728958082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.729899612 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.732461772 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.730437613 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.730514039 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.728769876 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.739901049 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.751918739 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.731063811 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.737996087 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.729710197 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.728971432 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.733682692 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.737633278 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.729185867 seconds)
  done (took 86.619179306 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.729632331 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.728964212 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.729788822 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.729162353 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.732006933 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.730220156 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73011142 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.730989797 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.730667669 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.73064628 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.730168694 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.730584826 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.730127227 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.730419534 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.730464443 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.730797333 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.731791183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730203822 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.729776247 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730814514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.730483457 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.730962631 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.732199268 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.730979304 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.730456923 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.731226165 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.731355564 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.731835221 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.732178187 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.73093852 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.73083645 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.731129397 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.7310596 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.731528054 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.732071002 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.731092166 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.731458553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.731965036 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.731038003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.731346295 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.73077662 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.731869483 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.732070914 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.732310616 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.732144273 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.732792273 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.732689551 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.732074853 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.732575199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.732277626 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.732693375 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.73314739 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.732560674 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.733205243 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.732990951 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.733271899 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.732663162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.731681823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.73315082 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.732945796 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.733606936 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.732853182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.733880384 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.732334227 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.733459089 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.733538285 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.73430265 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.734878627 seconds)
  done (took 119.422428703 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.735474027 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.734136522 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735669914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735156298 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.73493824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.734388336 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.733835117 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.732280761 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.733312776 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.733368048 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.732822727 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.734026745 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.733770588 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.733595124 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.733154333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733631477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.734562138 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.733706246 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73299899 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734448808 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.733844799 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.734224014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.734488557 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.733694119 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.734769228 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.734624293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.733753714 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.733740923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735840496 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.73400701 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.735148106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.734516096 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.734031874 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.7353901 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.73655508 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.735341929 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.734967092 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734196127 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.734846826 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.735603168 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.735588135 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.735568494 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.734488905 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.73549949 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734834796 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.735715659 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.734698989 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.736150006 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.73568263 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.735449369 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.735721906 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736367543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73461909 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735177599 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.735228065 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.735540136 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73551846 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.736659292 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736153074 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.735934733 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.735892079 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.73454684 seconds)
  done (took 109.228610846 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735302264 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.735337646 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.735088392 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.735679853 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.735631421 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.735584967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.735956051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.735588956 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.736036463 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.735841853 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736081598 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736483129 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738046064 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736666256 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736725793 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737772868 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736477855 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736695487 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736885343 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736827319 seconds)
  done (took 36.398125743 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.735523532 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.737129754 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.737926992 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.735897531 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.736392894 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.737014112 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.736641119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735954689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736701216 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736108973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737436306 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.736974944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737790187 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.736767508 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.739785623 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.737715577 seconds)
  done (took 29.466566378 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.737430858 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.738542159 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.738829754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.737813612 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.738080307 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.737125758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.737434743 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.738600671 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.738250009 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.738271919 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.739055681 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.737954678 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.737164722 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.737745345 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.737174189 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.737814935 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.737744889 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.738058951 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.738404985 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.739540941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.739278863 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.738854355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.738516575 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.739507201 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.738546142 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.739803513 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.737915708 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.738449877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.73859235 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.738127032 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.739004196 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.739915582 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.737727185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.738064178 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.739357043 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.738294793 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.7393497 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.73873978 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.739635729 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.738736055 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.739807285 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.738405543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.740397672 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.739051132 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.73970133 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.739061469 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.738593384 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.739486274 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.740237868 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.739307324 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.740496613 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.740879818 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.739408064 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.741214334 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.740125184 seconds)
  done (took 97.310738455 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739235432 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.740479156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.740998714 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.741044954 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.741058082 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.740842185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.740328913 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.740304645 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740717406 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.740196488 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.740800374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.739844157 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741415151 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740150363 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.741084947 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740453147 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.741146295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.741216483 seconds)
  done (took 33.009622017 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.739983279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.740188462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.74082145 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.7398909 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.740201253 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740771636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739626163 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.741059674 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741730029 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.741062935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744484397 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.741426241 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740684354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.742378247 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.741247787 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741442487 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.741565612 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740883305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.741215363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742060554 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.741200733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741825298 seconds)
  done (took 39.983776857 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.741484276 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.741697439 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.756484783 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.761767001 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.76171587 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.773514468 seconds)
  done (took 12.215483175 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742947676 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742370396 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741711675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742888224 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741425289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743091193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743055674 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741656289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742859834 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7432301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742279321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742755801 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743272961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741408564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742273771 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742997625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742936886 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744000136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743372353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743186097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742815028 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742904502 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743896256 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743965213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742773187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744096018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742304552 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743930242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743618601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743296971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742407912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743146199 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743949846 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744605299 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742904028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743666589 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743708359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743842759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743426523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743014149 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743157152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744374162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743738683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744307446 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744008708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744006796 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743952636 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743813396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743902145 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743102114 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743627972 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744333389 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74387015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744685186 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744560707 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745040997 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744363961 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743495847 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744745133 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744732665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.745551742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744802961 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745536154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746935781 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74440253 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745762164 seconds)
  done (took 116.756898561 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745520121 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.745203358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746022578 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746182749 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745100025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744759804 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745900636 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745206872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745090233 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746257489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745069582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746075539 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74505934 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745941766 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745799578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746216749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746273509 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7456213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746201038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745835769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746512703 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746056959 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746113223 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746619595 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745769475 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746388043 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.745779237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747657626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746522862 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745960311 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74711539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746631562 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747262073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.745805013 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746413887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747115313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746259443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747451156 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7465388 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747362172 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747953202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747220228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747567599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74707235 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747367947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74732085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746620912 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747787964 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74721787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748386465 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750304825 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749544159 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748499427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748062479 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748540985 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74953233 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748288207 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747528282 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747586472 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747624716 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74822433 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748761825 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747392371 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74871807 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749002851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750023855 seconds)
  done (took 116.981087058 seconds)
done (took 2384.426025405 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.806830725 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.767304402 seconds)
  done (took 15.258548203 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.912209252 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.861989584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.749380647 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.79316194 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.749300558 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.776905678 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.775557035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.751710036 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.751111218 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.751277812 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.751892828 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.937168627 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.749794112 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.748815858 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.749688084 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.842983899 seconds)
  done (took 50.342621569 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.752355817 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.753828138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.763222568 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.755626397 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.752159546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.765169571 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.782462838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.75590784 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.787097059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.763441131 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.820573639 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.764250632 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.752629776 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.802044682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.76522163 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.767956258 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.84650121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.828187613 seconds)
  done (took 33.662184119 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.830070472 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.758462579 seconds)
  done (took 10.280613767 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.778828244 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.778792412 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.8419869 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.764498143 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.749919009 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.759009265 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.762514193 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.765765456 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.765389316 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.757929221 seconds)
  done (took 69.413935679 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.759220425 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.757647115 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.754383517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.752366379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.750721905 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.754483985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.752255824 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.752636906 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.407083291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.787438458 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.760942412 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.759300747 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.754050431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.754222557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.751785573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.775460915 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.886681248 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.749919523 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.750815261 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.76018007 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.753900021 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.806438328 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.766616268 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.755503082 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.782968841 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.40794019 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.761592767 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.759514609 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.859385841 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.751266343 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.753169807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.94392369 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.75699135 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21268334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.016767232 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.759447123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.766968038 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.761103795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.751088516 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.873084733 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.754528109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.760549258 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.685388439 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.992348203 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.850831628 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.79790458 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.047855451 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.770554497 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.756013927 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.782295974 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.757498183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.755761071 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.768007972 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.266447192 seconds)
  done (took 126.367410589 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.755572957 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.105335054 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.922285526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.755252827 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035191365 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96043248 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.753876474 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.798820543 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.754600157 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979988847 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.0044648 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855611938 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.754082704 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.753328164 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755524836 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.754835376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.908462534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.823182159 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.756545834 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.752719166 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780178292 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993143639 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.875087913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.75687552 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.780066564 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.962208217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.876381544 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.856091051 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.547054179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.755169899 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816934916 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.757393169 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.752615879 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.752446405 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.908003728 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.845005818 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838658992 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.756138087 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754127857 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.754535038 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.501308726 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953198095 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.84902121 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.882488271 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004318316 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956107758 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532527374 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.75278498 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.489603313 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.916061962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.982145268 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.980869838 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.875180793 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.756483759 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.011012346 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.75329402 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75444727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.001791226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982998113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.849956767 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.75639012 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.756159133 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.754337112 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042430808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.756598497 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.849541609 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757658225 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.756834519 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.850605234 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851549151 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.988321691 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967716138 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.785555697 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.083624464 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.267442334 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000236816 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.822071745 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003921974 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.758702556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.755488844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831896037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.599269613 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007640173 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036012755 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.998814219 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788354869 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.467326855 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.755125884 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.980127184 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976053502 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.014762287 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001462682 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.994193154 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.092687481 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.756783493 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.75533771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.032335037 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.879848688 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.759343227 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.106675963 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984587832 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.284421973 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.782318271 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.058319497 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.886568613 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.759828024 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387204682 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.756760582 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984724312 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.795798213 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.75848985 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76018359 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.975132067 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.741567131 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.756905169 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.649764721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.817966723 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.757969664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98848951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.75919558 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025666813 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.761501505 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989100265 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.753945603 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.787710749 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.929615876 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.002124459 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.761396559 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996539055 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000036533 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.872330564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.029049703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.657407327 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.758614883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042714894 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.7600685 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.757492766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.926411502 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.759310033 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.898571762 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.761572458 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04922781 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779010895 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993695935 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.761110459 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011389 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.78931046 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.808321378 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.760098412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.887364043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.759372531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679151642 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.913769268 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.759973113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.759289568 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.300421773 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.760988263 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.906672592 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983833826 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778878132 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.830034783 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.420781897 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.759821225 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836933963 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780860534 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.144861497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.759620166 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.011692583 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.764761222 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.20351964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.758769536 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.045552138 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.995730764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.761342063 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.761558074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.665926394 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.762480488 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75934564 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.93994396 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.123743681 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.759644568 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96117561 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76368301 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.886742203 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.764865089 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.834072676 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.092185924 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.761348786 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.759407941 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.759198611 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.762291475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.762006089 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966290249 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.784161216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.251973503 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.897316486 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03156053 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.068985282 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.999386265 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.803006908 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766567155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022402583 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.766067566 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.825083926 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.765317731 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.779446075 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985507343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.763196906 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968085178 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029165221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.61614081 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.808714695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.764242901 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.762791522 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.76134249 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.904979713 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847134664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.763669196 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.76062992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875237672 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.882525188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969362182 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.764041627 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.829565778 seconds)
  done (took 879.001460177 seconds)
done (took 1186.012369647 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.762816388 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.761600981 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.765324084 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.765947147 seconds)
  done (took 28.755291125 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.773264534 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.762886518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.763927033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.764312237 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.763050864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.762969031 seconds)
  done (took 12.289944272 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.822786039 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.76405216 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.766879076 seconds)
  done (took 21.053862877 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.835431769 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.145311658 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.89483305 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.175730351 seconds)
  done (took 9.751508149 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.764763082 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.764639469 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.764352613 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.764770227 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.774307958 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.774163793 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.764757326 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.764117864 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.774004417 seconds)
  done (took 17.611980007 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.820033891 seconds)
done (took 94.981544013 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.991591168 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.062014424 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.902612747 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.76291294 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.831735994 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.998004441 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.769378143 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.972239295 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.763865025 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.630309715 seconds)
    (11/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.945848086 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.087009213 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.785115029 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.764292413 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.752637883 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.791260526 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.896204229 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.415495933 seconds)
    (19/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.219092704 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.437220482 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.135074172 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.866517595 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.76691099 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.746173593 seconds)
    (25/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.273290165 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.852816877 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.007255751 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.866798054 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.788286022 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.024297417 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881685139 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.846639057 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.765395285 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.158016892 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.953115977 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.853907487 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.656491015 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.792756786 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.126474601 seconds)
    (40/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.847487973 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.80096239 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.769285212 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.105255433 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.380168172 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.917778911 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.965822968 seconds)
    (47/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.959189709 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.769559666 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.999958005 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.876267953 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.870274896 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.852820127 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.871037081 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 1.988367765 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.768378458 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.104354064 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.960904416 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.475547144 seconds)
    (59/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.99758251 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.021358681 seconds)
    (61/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.062234303 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.859237154 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.771161928 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.204504387 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.787671959 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.538251603 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.085216708 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.834559484 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.978840768 seconds)
    (70/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.938736211 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.862740411 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.768953349 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.2549281 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.792256022 seconds)
    (75/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.768477761 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.384242607 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.209354576 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.149969688 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.79379292 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.835498328 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.897043177 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.784982368 seconds)
    (83/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.767431969 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.102934251 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.141704948 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.386635872 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.947689124 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.543391334 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.849126993 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.095420158 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.088575368 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.835304576 seconds)
    (93/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.770500681 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.791895031 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.997923825 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.769667957 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.925586642 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.772922329 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.892828154 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.906130343 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.921804591 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.937845677 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.798635877 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.011520192 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.875676666 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.785604415 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.86798428 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.772633359 seconds)
    (109/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.326751926 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.773625325 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.797292652 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.031358542 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.781903143 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.773244132 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.95031814 seconds)
    (116/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.057085404 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.904104631 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.867007993 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.784740781 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.773913868 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.96623865 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.792205815 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.753185137 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.456067681 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.100073802 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.155300028 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.777215095 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.17433835 seconds)
    (129/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.262730348 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.033635008 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.801444702 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.884731982 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.909246917 seconds)
    (134/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.772673481 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.106060729 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915964549 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.873287649 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.788199982 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.772814824 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.781558922 seconds)
    (141/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.201752833 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.210534085 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.024627676 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.794250281 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.004157641 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.024717299 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.659245024 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.778294312 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.259249203 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.44362768 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.093982753 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.779974333 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.926606345 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.796062786 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.772730582 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.774073527 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.785935382 seconds)
    (158/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.77589648 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.949449689 seconds)
    (160/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.814311384 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.654725394 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.794955339 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.966966073 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.661013807 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.779439144 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.490778101 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.777247697 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.446445427 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.803684142 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.773232655 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.172045307 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.793433233 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.775250555 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.909779756 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.884837039 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.858589926 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.99076318 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.149822003 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.961786535 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.835684434 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.040638356 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.670177217 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.802582595 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.391919777 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.111573655 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.15560884 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.099512227 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.925467115 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.779404535 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.621738978 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.110993982 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.864055181 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.58630703 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.34878329 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.916303355 seconds)
    (196/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.908486767 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.805045065 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.77736351 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.388964545 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.518324476 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.777819236 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.950651508 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.43087532 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.779813912 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.097795561 seconds)
    (206/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.774304668 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.951644706 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.571527713 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.718996335 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.106788232 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.679226613 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.93015307 seconds)
    (213/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.931855333 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.799428278 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.841156745 seconds)
    (216/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.225708552 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.013978397 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.723137205 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.125171722 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.426620932 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.960008451 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.987917895 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.776132485 seconds)
    (224/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.861333975 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.130576526 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.914159727 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 4.634824786 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.778850594 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.586500611 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.782314295 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.259231697 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.804564112 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.16077772 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.889272137 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.780950838 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.868338021 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.901378863 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.90389813 seconds)
    (239/309) benchmarking ("sort", Float64, false)...
    done (took 5.505447255 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.077365422 seconds)
    (241/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.91251838 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.783583968 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.81450629 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.019439023 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.107190529 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.12994961 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.781680106 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.875043199 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.235110041 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.970471586 seconds)
    (251/309) benchmarking ("sort", BigInt, false)...
    done (took 6.780471884 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.883687703 seconds)
    (253/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.85408627 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.781988854 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.95919369 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.776488878 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.872041152 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.788473531 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.901017055 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.781109524 seconds)
    (261/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.863006646 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 5.47016671 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.302891494 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.093460439 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.105924452 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.008545014 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.101479277 seconds)
    (268/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.919166026 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.794996503 seconds)
    (270/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.889279092 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.786337097 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.038686394 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.126240265 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.885776022 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.526411345 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.782855894 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.22597989 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.038519274 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.90511143 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.062716659 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.920465841 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.099437329 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.78579288 seconds)
    (284/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.958264664 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.930084793 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.943979405 seconds)
    (287/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.841627782 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.541918892 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.095419579 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.219570965 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.669343731 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.92116436 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.168979997 seconds)
    (294/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.790273472 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.231818625 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.815776213 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.811071371 seconds)
    (298/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.033000828 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.787783439 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.134296989 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.792311442 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.886567343 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.545952065 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.785336369 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.158226823 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.026570658 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.576960248 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.795404588 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.095773882 seconds)
  done (took 979.081421282 seconds)
done (took 980.84968891 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.812825526 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.803991318 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.787087385 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.810132989 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.899609795 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.83399649 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.800883351 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.792078632 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.838003155 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.83717828 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.786596712 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.831416134 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.787658135 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.787585002 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.787873312 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.804444658 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.105757435 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.820751025 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.806528992 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.800514877 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.805784591 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.787404562 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.838788222 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.832975942 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.793110222 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.794342188 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.792869305 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.807074141 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.900981757 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.790452014 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.793234975 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.799888086 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.105802387 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.819534624 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.78707293 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.808411354 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.800718526 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.800465743 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.793858427 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.821868302 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.192379526 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.834795046 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.789985003 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.790795682 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.790396391 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.797385402 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.791142985 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.799292945 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806366063 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806694023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.189045518 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.851342647 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.792285596 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.789727172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.803691285 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.789911384 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.79374688 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.805830372 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.810203437 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.806542395 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.08966864 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.828548288 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.794301873 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.807163023 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.799316523 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.224351832 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.831405325 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.7965619 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.19335802 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.839524322 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.22314718 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.848026035 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.792623494 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.806074212 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.823789091 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.106247088 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.821067422 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.791336658 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.8000123 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.789862503 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.803795576 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807435401 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.797306123 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.791911863 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.807451197 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.837562235 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.805215731 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.792067672 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.803449435 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.811047149 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.801589746 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.804049544 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.79525978 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.790629987 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.804698587 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.79710864 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.794968024 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.794580461 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.797400363 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.805921614 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.189398973 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850177702 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.790630072 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.789511555 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.792261241 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.806407169 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.19034662 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836772954 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.815199578 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.842357575 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.794094524 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.091301233 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.82750543 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.808529496 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.805549452 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.795679925 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.791492577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.091904295 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.223410869 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.854158722 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.793674756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.789740084 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.810543226 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.795854868 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.790789983 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.109816211 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.828958135 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809219178 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.916109793 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.80742458 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.826339682 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.792088055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.797950212 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.844088424 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.81108936 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.826703905 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.797480499 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.811732172 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.810660177 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.791257713 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.805406559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.808272306 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.793841599 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.802244113 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.792573959 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.844250459 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809316448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809185603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.81517315 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.916781199 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.792405359 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.093335188 seconds)
done (took 282.247985768 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.871479769 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.790305134 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.884211637 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.790799771 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.881487538 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.866956477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.793172622 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.791880797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.790665444 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.282527263 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.791904732 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.799906441 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.791525195 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.791918941 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.863783582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.792967656 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.792861163 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.233015455 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.79255175 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.871175626 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.791572845 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.791836922 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.792242536 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.285810111 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.792681108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.79248112 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.871173058 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.792671036 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.235607363 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.791912285 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.790538952 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.234509864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.870401013 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.819173883 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.798907747 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.800849096 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.88136734 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.800193957 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.858216726 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.860541566 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.887276257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.824549924 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.789849029 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.791664182 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.795157522 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.791524035 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.792173593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.824179191 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.789603591 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.796730475 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.231976899 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.797686395 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.797122851 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.791453421 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.79202273 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.820120131 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.791106913 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.791753329 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.869701848 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.791318578 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.858822404 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.284156835 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.282523762 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.791160378 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.789333829 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.7897622 seconds)
  done (took 179.997416375 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.855303332 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.866634248 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.85469456 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.798848766 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837333629 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.856524405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.797892922 seconds)
  done (took 14.592056757 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.79421864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.787136419 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.836649018 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.835902269 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.788450125 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.943190029 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.787389424 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.800212095 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.792556427 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.826065223 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.786338976 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.786219842 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.793890955 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.786678661 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.835061023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.797265672 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.901294186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.787985989 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.784028116 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.931698053 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788627491 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.791708882 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.810130921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.795801604 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.783908383 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.789740312 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.34992048 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.782853854 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.784117432 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.781602527 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782379612 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823009374 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.7820675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.781702824 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780902093 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895149084 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.782295939 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.781159307 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.780803896 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.779996972 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.780298171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.779896791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.781225623 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.781167419 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.780894399 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.804455857 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.780387623 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.781124456 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.780061409 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.781165587 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.806617052 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.779653105 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.779734051 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.784332831 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.821338588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.789253473 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.783814672 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.781059218 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.780403851 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779813701 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.930222508 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.830000833 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.778420813 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.827553937 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.777191956 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.778589247 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.778065444 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.778238697 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866173303 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.775737379 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826361307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.778028765 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.937068013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.801102417 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.778097281 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.779574491 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.779953128 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.776652084 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.775456494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.7833322 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.776004255 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.779246948 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.781353344 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.783027548 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.77551379 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.8884488 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915988264 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.775605822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.776305579 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.783957647 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.776232644 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.819901299 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.776848527 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.774792671 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831735829 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89102177 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.802043025 seconds)
  done (took 197.096079047 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.782905037 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.781291434 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.776936991 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.790087434 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.776600996 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.776438591 seconds)
  done (took 12.39574094 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.776979434 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.778753097 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.774330508 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.774818504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.777141028 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.77487009 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.774481375 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.776836887 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.778805748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.775423129 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.775521468 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.77699161 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.77567998 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.775186929 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.77519573 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.775543967 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.775412083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.773480366 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.773895843 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.775201962 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.029550286 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.775269766 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.774578451 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.779706378 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.779893594 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.77482365 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.788075474 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.775259701 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.776221046 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.783436711 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.780205875 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.774494453 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.777241586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.781046224 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.777630438 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.77755201 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777693129 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.775541478 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774066547 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.77475847 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.774406941 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.774088681 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.773191777 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.774934884 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.774835392 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.780945671 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.777607429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.785914502 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.773840122 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.774887504 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.774530501 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.773091295 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.773740357 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.77420266 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.779360641 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780139808 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.778049814 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.772959807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.772146964 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.77704485 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.77731968 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.773095237 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77485567 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.777800018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.779024004 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.774705698 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.77616173 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.777459956 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773880764 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.773838298 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.773746081 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.773500558 seconds)
  done (took 130.859238853 seconds)
done (took 536.686016467 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.886720506 seconds)
  done (took 8.594867122 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.981202404 seconds)
  done (took 8.772910393 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.393186975 seconds)
  done (took 10.132830088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.814068156 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.841914121 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.818325731 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.809716855 seconds)
  done (took 29.052917695 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.966273726 seconds)
  done (took 8.704629632 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.827165869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.803856302 seconds)
  done (took 15.438773572 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.917642735 seconds)
  done (took 8.65695362 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.128451926 seconds)
  done (took 8.878638306 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.827124524 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.833975575 seconds)
  done (took 15.420209442 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.806010308 seconds)
  done (took 8.542316412 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.999948047 seconds)
  done (took 9.83131868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.827259755 seconds)
  done (took 8.633513828 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.853236809 seconds)
  done (took 8.590727862 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.88454423 seconds)
  done (took 8.620866398 seconds)
done (took 159.579819372 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.806151298 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.801756877 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.802384108 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.8038954 seconds)
  done (took 28.950679846 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.834443168 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.833273689 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.835275648 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.845704573 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.83597414 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.833333383 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.829108927 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.827799962 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.846184648 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.8371676 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.837178049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.837821199 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.83592105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.828510803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.838298748 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.837757972 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.84730289 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.837205661 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.828536722 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.839464583 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.803239205 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.846231475 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.837718835 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.80400582 seconds)
  done (took 45.754166195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.993856493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.874089852 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.956618709 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.855912219 seconds)
  done (took 9.418287079 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.854449926 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.856634105 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.866594117 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.904511994 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.940780169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.864524432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.827563527 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.820532024 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.807452835 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.853143274 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.927584887 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.848595148 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.938358002 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.800378296 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.004823774 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.798733666 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.799420492 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.849872056 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.901541817 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.925679405 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.79864855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.850682737 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.857964386 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.845658802 seconds)
  done (took 46.483146491 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.799272654 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.807688689 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.806474341 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.79764858 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.799128588 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.798604474 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.804825699 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.799376951 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.819051983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.797748122 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.796600096 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.797393369 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.803614931 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.799014779 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.795143979 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.808612609 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.809315083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.796281908 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.800410784 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.803950863 seconds)
  done (took 37.773340726 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.792691688 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.639176124 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.134384865 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.04327705 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.791264049 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.788220546 seconds)
  done (took 30.917319235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.801768636 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.799711836 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.787886879 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.846388701 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.932457333 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.798703895 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.788431104 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.799064582 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.838275324 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855633785 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.810412927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.81466333 seconds)
  done (took 23.597433078 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.786522586 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.785786926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.784910816 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.796920885 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.793991317 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.795563947 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.788966338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.780671949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.796557713 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.806217088 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.793454081 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.793704474 seconds)
  done (took 43.228306255 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85976523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655454051 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223343039 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238315391 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305383726 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985613881 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.781802294 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866793899 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.782570542 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052733103 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.075248072 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012522451 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051569431 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.698256379 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.826389635 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277933272 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094918642 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023561459 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835041462 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410613962 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914775048 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427611972 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.488622192 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917365771 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01357402 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.931784081 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.069297206 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.761153679 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858289862 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814320022 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816856313 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.81226139 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083952072 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931303714 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880936556 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816831139 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224965025 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.520208494 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.823557865 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.486885861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.337373252 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928581947 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814201264 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811600321 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.737095646 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387001305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913120188 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.815025153 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.511195685 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812284859 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816754985 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885838731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.814033331 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.618623491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49689131 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080605977 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.811466014 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813521321 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362162839 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793024332 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484276728 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.757534306 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.897155879 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477118937 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266723935 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.962258772 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.812778355 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.814245991 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738839881 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.578110895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92320316 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948834522 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.829858863 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453482193 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097235108 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.194443309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863661933 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077534735 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.732976731 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.758225216 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029718301 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.761875971 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739555567 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.702627688 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.738569335 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01707351 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842594645 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.39349271 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844584225 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89495977 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81820548 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829283392 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817479187 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026940941 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.708997377 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8152298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.065276166 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066427366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830809535 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.898791077 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740867208 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.815138736 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056867155 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.016309316 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.129304846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.296135545 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895408091 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813655528 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.838974478 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.795317417 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.832370773 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.073484037 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867691475 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784632956 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93003612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.765918703 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052808695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839332764 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.928130722 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.148690996 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053861549 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.147569166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056956101 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875552967 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819480695 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.812000552 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.480548687 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424018757 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.032602292 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.826322421 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369161833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833172068 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.813391867 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744055624 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.47425797 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.156296124 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.895930278 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030616755 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.814285169 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100770101 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741896689 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949043069 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.817756772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.027151662 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.448936504 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.889178854 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058488346 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129971078 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.127510441 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829667906 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821165392 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898639502 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821467832 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.306115377 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066188996 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.807459203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.80469098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.47974129 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.874164326 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817425241 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.82050472 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337265283 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088246979 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835319925 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.822310341 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.686005237 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.8232158 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874869601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813244844 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.813265565 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.333240229 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319030501 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.81490328 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.470158677 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025352025 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814206202 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.42291321 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993505932 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.831184365 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086401824 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883915977 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.744732693 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.518558743 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.51869374 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819056756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745130367 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.818496949 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822030657 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824288303 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.005375598 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091800586 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86812995 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.488073467 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.923520026 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824447115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.822186038 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820441955 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.311993611 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823439355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.53758463 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.839627124 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94839704 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.828930692 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743369088 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.818124296 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818114553 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.818097262 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.766284628 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861335259 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.482766771 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021101977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07430672 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.223495445 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828858325 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.490084627 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.934974458 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.842773872 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.107056578 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.526328726 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.83834344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902355016 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.826054107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.494667059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.554663111 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37323375 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116037471 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136353986 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167673161 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.375905031 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.05099702 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905875654 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046371445 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341326595 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876790974 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.909111891 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757901952 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833714731 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.460871081 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172152534 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829854619 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037283781 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107075086 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.180527839 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957223853 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024491747 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850427767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.822082071 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75402009 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.357780356 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838241246 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.276923865 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026467253 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902674029 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11152424 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.90456621 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.821321433 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16841207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861995771 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.525869318 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173979721 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408861276 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.198521338 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047416496 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829126606 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.262541763 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170874546 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.198304967 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.850110322 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749504468 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827377823 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827331987 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.836161595 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.798386246 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.663708312 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.066835026 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828561996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049186467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.124793962 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093698636 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.72685955 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.824426603 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827185718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065667517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.668865861 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881011775 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.310871072 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.300906116 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828182665 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748648717 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747898393 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.522746349 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.829787662 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.786779263 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029364924 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.932156282 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504153592 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383931262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038757286 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064750764 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.834145789 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092474704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094700629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.313528515 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843458447 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.920671899 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.116322344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.548068074 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.038523451 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.050169723 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354874685 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041437926 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275923051 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.793995277 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.82565656 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0303625 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.039781197 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.1885314 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000430663 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.534678943 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.839545647 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20382695 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88748287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.188868101 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012622044 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.911206501 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832182428 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903242105 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829996675 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.831622112 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.830312743 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835091363 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.200768226 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943659856 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.838117951 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901224077 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835844561 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.396268093 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.83418338 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096145503 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17516682 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163158772 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886634054 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827429985 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834427371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752634828 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955469002 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265066069 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097725928 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.946639732 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.96024347 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847384318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.130812273 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294547652 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041725529 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099497322 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.709141602 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.638591947 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846988417 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.04283524 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831900146 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.030223326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041687907 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145684704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395342262 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.149080836 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922377469 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099229554 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.190125589 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828137913 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410982546 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.837152268 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254861667 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.863037942 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.188542456 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085170707 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830265346 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947496523 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.831014236 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.025460925 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.277884482 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454511953 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174336153 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681165461 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.831262625 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10021626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156294473 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132119523 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906489335 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833373882 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.519657183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961343572 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.678217208 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.045876648 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829049088 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032729403 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.538918018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832375317 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099887506 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131392615 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.829761953 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.70944141 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851072338 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.832589073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042881076 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039966152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074662101 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833275069 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837179758 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.636240789 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102525681 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888962013 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75650742 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.831917416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875298089 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056935472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847782113 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.344493978 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.529808326 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114464206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.73363975 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846882871 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418777206 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108342236 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158246229 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.350746851 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053337954 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382073879 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84009249 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107965864 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.832063222 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406221522 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114622861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.830510174 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.510947604 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841156525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.095527564 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154594543 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.851341181 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540697415 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.861348404 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043769438 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187760649 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759915424 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.834844625 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.876319433 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829799595 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.838720281 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836979485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.738283653 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453878103 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.568159857 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381794941 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.827755343 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.83479803 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.162949756 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.546573165 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841336427 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84930937 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833126799 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.544873078 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.117793298 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074613433 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.514585427 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.839248795 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.833643175 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833301705 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750621474 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01392591 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.01926921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117414855 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.35824216 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.841231771 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834102392 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.042274883 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033065423 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.211017473 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966235656 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134697963 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843265214 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.772770558 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.53397467 seconds)
  done (took 1639.581680684 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856189317 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.838348556 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.85805818 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.897650485 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.84909648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.84040807 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.863845991 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917442123 seconds)
  done (took 56.685127847 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.819464149 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.978427226 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.822698523 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.818843119 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.823947347 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.818715253 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.979467501 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.831409009 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.85210421 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.822814712 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.82013303 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.818166629 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.626593864 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.842205429 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.820093112 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.821652908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.823785908 seconds)
  done (took 73.90465615 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.820842986 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.219931684 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.852493715 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.817475787 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.943193813 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.818602363 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.014082936 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.857777576 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.817273019 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.064966984 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.109555966 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.832161827 seconds)
  done (took 89.925244801 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.822586535 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.812018004 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.811240917 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.812338963 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.810617032 seconds)
  done (took 10.821821119 seconds)
done (took 2138.80762855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.04009184 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004688217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.048014952 seconds)
  done (took 5.797069045 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.944774624 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.996104551 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.114747126 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.113980697 seconds)
  done (took 9.912583963 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.109074723 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.168655168 seconds)
  done (took 6.017687392 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.130354166 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.838460555 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.218179739 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.806063671 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.809075708 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.808112757 seconds)
  done (took 22.167498922 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.8047524 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.805840087 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.805631187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.804750709 seconds)
  done (took 8.960146623 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.8047657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.483935801 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.808963555 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.820597515 seconds)
  done (took 20.658562392 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.952470101 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.927846689 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.947970944 seconds)
  done (took 7.567642254 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.946984383 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.035691087 seconds)
  done (took 6.721454454 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.962222022 seconds)
  done (took 3.700882876 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.833585507 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.074880671 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.292285356 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.319189879 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.382687693 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.685637472 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.13106448 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.027396613 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.240063612 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.250784979 seconds)
  done (took 23.977529475 seconds)
done (took 130.453213383 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.148717382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.83511078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.011396764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.155243839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.044203237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.004308781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021548611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.138617087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.837732533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.832199654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.192139386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.034023088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966018776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819063411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969939179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.819024517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.029837684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.194217517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.854808631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.080667456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026735196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.798310405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.994022549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.813045042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.036244832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.950428124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.342040802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825413619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.972693329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.356477243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95586263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.21908154 seconds)
  done (took 166.021687303 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.79800484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.796379893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.795443322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.796910707 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.269697498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797085934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.79724839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.796912744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.267218122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.260263768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.798315841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.257263751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.799565471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.797801097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.79906655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.797308222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.44075492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.798921537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.797412265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.79676779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.798321042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.098390583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.799610868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.11465806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.429650715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.798264894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.797370868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.798017992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.797222002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.796956313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.799638603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.797513991 seconds)
  done (took 207.017931237 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.7279207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799171699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.800680816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.822139336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.797001346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.799013515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.800526935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816155109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.572673794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.569706427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.799435636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.796729479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.800581554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.799040681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.798875666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798174767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.798830398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.763594468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.800113435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.800548219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.800578294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.385891174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.800252832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397574204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.800505539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.801522063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.800050412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.799447499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.798248671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.80069616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.801785197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.799896761 seconds)
  done (took 217.981143509 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.038681444 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.799004083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.800325576 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.71296569 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.800823075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.800282821 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.776893454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.047897279 seconds)
  done (took 18.513135153 seconds)
done (took 611.281929723 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.157135094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.99744702 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976413938 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.825344198 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.095691157 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.866644702 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.820917476 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.885803218 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.63303219 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.894596372 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.487163115 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.843623315 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.581172616 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.848956578 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.945168071 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.880735379 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.371359005 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.478251106 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.995369946 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.921010581 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.994986445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.714294275 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.901558193 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.663325551 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.605519381 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.76788143 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.844739419 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.375646979 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.832550018 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.981967732 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.475295501 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.074036382 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.835028543 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.81916279 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.876284183 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.85347121 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.02623374 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.832032603 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943768336 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.51442595 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.922609018 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.547862062 seconds)
  done (took 99.646521343 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.811462996 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.808250543 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.808458235 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.808964868 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.816989454 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.808316157 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.808200717 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.808792013 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.80765693 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.809314343 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.808778791 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.819122129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.808756248 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.817140792 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.808093649 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.808425138 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.808704108 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.818658593 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.810414802 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.810950168 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.81038266 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.810140747 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.805865914 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.810042663 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.808667875 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.808747958 seconds)
  done (took 48.818437331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.803169975 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.970754148 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.044387787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.82330034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.805278894 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.808975603 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.823693947 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.810057227 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.808086699 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.807938449 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.907650513 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.811794445 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.82314812 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.044948509 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.821307114 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.803538684 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.8039223 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.804333923 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.979613219 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.820226535 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.82348138 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.80923461 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.824137863 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.817175215 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.806379778 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.806061893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.808196253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.298615783 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.81448696 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.905028124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.851179798 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.830419292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.240357527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.056330797 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.86007091 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.817385884 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.80465582 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911482473 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.812543101 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.806567998 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.823710951 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.81048375 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.045441227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.338375604 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.820542953 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.805459129 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.306731724 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.921263256 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.847526442 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.815155716 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046334484 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.823144785 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.806777437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.807075841 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.842192505 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.811591077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.806466114 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.168626982 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.818023427 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.824362817 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.810335556 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.807104642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.986551414 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.815212275 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.974485381 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.815778618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.813395515 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.807958916 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.046756208 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.823633674 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.349854496 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.821909649 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.805631199 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.907829966 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.978910956 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33188692 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.820462461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986768552 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.257870102 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.832603171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.816848978 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.288768206 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.836152767 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.81587406 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.809621461 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.809946357 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.807341591 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.852852844 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.824181167 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.259110689 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.34764749 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.189382464 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.835598316 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.823659042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.809484688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.171268961 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.816626485 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.806987139 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.040833252 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.35422849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.822888821 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.814405495 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.330482406 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.824110963 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.826072707 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.816550475 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.055675099 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.825543461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.852929827 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.809213956 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.815955394 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.811804401 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.828352147 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.81683578 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.809604159 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.321930363 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.93007223 seconds)
  done (took 225.284978195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.809370849 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.812511337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.80839437 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.812921193 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.807498334 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.808791699 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.80717536 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.807777861 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.808036006 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.807161104 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.808012516 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.81078802 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.810392216 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.807818491 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.813926549 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.809387211 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.410894544 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.81034511 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.806275966 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.807945845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.453417064 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.813005211 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.809590094 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.807653644 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.809348745 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.809272855 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.81401885 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.812917717 seconds)
  done (took 165.661380683 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.810821637 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922641647 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.828341723 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.838472376 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.817403357 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.810101153 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.907441541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.827003898 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.815321592 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.809366415 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.810715471 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.871288373 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.821294569 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.90867808 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.840994375 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.916783722 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.913323514 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.816623597 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.811471438 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.810603547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.839385624 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.819727385 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.871142569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.934084094 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.828237032 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925133885 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.831323987 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.810785289 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.810629229 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923938914 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.830409561 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.872886197 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.840541747 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.830264555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930292689 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.930019281 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.91462645 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.915899564 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.817875333 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.812557002 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.813276402 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.8144994 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.925237264 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.832715966 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.812911826 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.928722033 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.832464918 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.812392206 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.812248734 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.813242938 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.825884919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.829125087 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.876848662 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.940233864 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.849688498 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.836191906 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.909996928 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.935765434 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.813474216 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.909421658 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.820373109 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926514965 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.835204011 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.814203286 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.815013296 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.816563399 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.84212059 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.918377347 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.916812671 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.81928719 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.911160868 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.847906383 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.821661405 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.814156956 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.814677272 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.92625734 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.93046316 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.848197599 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.850173954 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.843862747 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.824288707 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.8133696 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.816120089 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.830759277 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.818903758 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.928319932 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.931814521 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.819836536 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.815249527 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.81429229 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.815649307 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.839024032 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.935514634 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.852175081 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.921767688 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.880413162 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.887062432 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.82839681 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.828503136 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.81937677 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.877380031 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.82825234 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.827098169 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.10105768 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.874761607 seconds)
  done (took 196.732202356 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.180764306 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.863259621 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.870425438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.126054335 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.165877758 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.760743418 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.858088724 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.862372972 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.885478407 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.044878283 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.928940606 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.879068715 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.849657769 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.835592095 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.859890062 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.885875843 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.872747987 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.197155803 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.077986049 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.998990381 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.848956213 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.157728294 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.174347976 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.424279357 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.909050967 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.259247755 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.423683441 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.994216959 seconds)
  done (took 59.950982908 seconds)
done (took 797.829516454 seconds)
SAVING RESULT...
DONE!
