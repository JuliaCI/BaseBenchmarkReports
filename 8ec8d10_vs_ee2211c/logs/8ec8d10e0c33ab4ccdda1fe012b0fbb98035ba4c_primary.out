cset: moving following pidspec: 31861
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.444003971 seconds)
loading group "string"... done (took 0.496325083 seconds)
loading group "linalg"... done (took 8.807027148 seconds)
loading group "parallel"... done (took 0.174265666 seconds)
loading group "find"... done (took 1.269640259 seconds)
loading group "tuple"... done (took 1.86331172 seconds)
loading group "dates"... done (took 1.340525471 seconds)
loading group "micro"... done (took 0.192352834 seconds)
loading group "io"... done (took 0.506374577 seconds)
loading group "scalar"... done (took 50.49807139 seconds)
loading group "sparse"... done (took 13.759620519 seconds)
loading group "broadcast"... done (took 1.294247806 seconds)
loading group "union"... done (took 10.062376869 seconds)
loading group "simd"... done (took 3.021788639 seconds)
loading group "random"... done (took 11.377040926 seconds)
loading group "problem"... done (took 2.201636338 seconds)
loading group "array"... done (took 23.85560064 seconds)
loading group "misc"... done (took 1.101343496 seconds)
loading group "sort"... done (took 3.706405268 seconds)
loading group "collection"... done (took 19.138373964 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.609912966 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124959295 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.264886924 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281926622 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239600344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166341332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141783149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.258719472 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.618820303 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202453143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137957656 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509229895 seconds)
done (took 6.375116015 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253719847 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178250244 seconds)
    (2/2) benchmarking "String"...
    done (took 0.160957412 seconds)
  done (took 1.101689108 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078791213 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156617236 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107945922 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095056703 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09284705 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109454622 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094088298 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108445377 seconds)
  done (took 1.5304166 seconds)
done (took 3.73020546 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.512067877 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878550516 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505450952 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16575197 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311007647 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306508575 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317263231 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204714425 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108011221 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.094001564 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177543458 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.395373489 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424912889 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959799482 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091678748 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100453436 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137494698 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781413691 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082553556 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.123782796 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484918813 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.185610315 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100186353 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121341579 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18641823 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135813463 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165220998 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104288368 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671535564 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134994007 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180439677 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100089574 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163340606 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.198523519 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212271971 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094043743 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685542052 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205508077 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.089583356 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100344386 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675754575 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.122804162 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188774159 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10341589 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092191895 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184118579 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.096002723 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078261007 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116422336 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085709671 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167160463 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450259251 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106840726 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172879516 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094481186 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686646176 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101325672 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277500986 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126808833 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095454355 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09191488 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088697454 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.163563395 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098862651 seconds)
  done (took 20.263723163 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.149008967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166398884 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07880069 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158694009 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125008532 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079982694 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103884905 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077674093 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127909333 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.232715172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140369712 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154142384 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093484145 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091145433 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14476252 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.234437805 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110740769 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123816667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090987578 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090126529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142205047 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096463253 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109261277 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094838892 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171409699 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207829387 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112318904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126117898 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094424315 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099300264 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146791046 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151800888 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096487402 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091872859 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194532476 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110636918 seconds)
  done (took 5.404940259 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200603772 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125616906 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216232853 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166155219 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148277839 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.172048551 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15241123 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.279024418 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.217194665 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167544641 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132899732 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107261612 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096972945 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080902528 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079942051 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.482398949 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153391923 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.173927535 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134196184 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108143402 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082839412 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379439852 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085335456 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.10012081 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087809688 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063104023 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201661951 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105078021 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.111443285 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10754106 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089939074 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133515441 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197900649 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130508062 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.188618737 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140876265 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086900951 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081663671 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.227859106 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113203255 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079274742 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11597135 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133788962 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117455916 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101063922 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112213651 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226051987 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084358361 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107099676 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.060891367 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201579015 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127095652 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083336767 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298978304 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121008286 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087452241 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082505156 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240534178 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116470803 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083047189 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097351097 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087659428 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078208185 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.43349334 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108849684 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.225953046 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086183697 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163779415 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086604284 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1090688 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089076917 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086995248 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124533216 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081155685 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079213918 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10250789 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083844211 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087342259 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110540619 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091226599 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104029898 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085543943 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150300409 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118336977 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103606112 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1273776 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092402529 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083206068 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130604778 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084093244 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086256358 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170595038 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089378423 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107896439 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086373001 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145841407 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084279237 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.214151637 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085866184 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111474174 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102355332 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084286403 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130533595 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121443815 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082505943 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084120691 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097802831 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08201905 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147834033 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098482023 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082096038 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087007038 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10018062 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09559894 seconds)
  done (took 23.662896888 seconds)
done (took 50.093729348 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.442122041 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084498001 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082689555 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103172728 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083357514 seconds)
  done (took 1.638350276 seconds)
done (took 2.45949916 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319641362 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190513894 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102645074 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188874698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086164904 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193210042 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18009635 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095533359 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205581597 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085408764 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186611253 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084544488 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10505833 seconds)
  done (took 2.865013109 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102327612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108918915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098665944 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120892444 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085203901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099552668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119229144 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110839829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101414971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115031437 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086853534 seconds)
  done (took 1.967397884 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099239292 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104251107 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096759665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11493924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085097092 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098627833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118222662 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11029524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098632388 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11526455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086938994 seconds)
  done (took 1.948900762 seconds)
done (took 7.596741231 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.093474426 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.669970658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147384705 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.212824192 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351766003 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239696591 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.575714498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153471708 seconds)
  done (took 14.413657659 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.168691758 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110461266 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092349881 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094531932 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091468188 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114702661 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09393162 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094496684 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113743063 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096230117 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0927606 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.109714493 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095545171 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092026355 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111369977 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092033223 seconds)
  done (took 2.546532265 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144187794 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122975718 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117335471 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097972896 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11321405 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100794655 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101841035 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116391549 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095715246 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095224264 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11933604 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098865786 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097096423 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110313428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099219754 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11738052 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111252725 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099436468 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115881061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117742066 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10042802 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096020395 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115257747 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101277319 seconds)
  done (took 3.507791712 seconds)
done (took 21.290334351 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148700202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102188476 seconds)
  done (took 1.075680657 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145339904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163779629 seconds)
  done (took 1.139311094 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114574271 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091036076 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140493204 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104815155 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091266308 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109384596 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11744082 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109888739 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092225468 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091734775 seconds)
  done (took 1.896604033 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096203094 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096060984 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12283164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.140719606 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116666951 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093575726 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094734155 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111816587 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097602576 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091305115 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095380339 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128491193 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095076808 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127029403 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096899047 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096423536 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11828175 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094069101 seconds)
  done (took 2.746046582 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090931613 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092166512 seconds)
  done (took 1.023737074 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095299803 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089933389 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091868785 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111079109 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090759657 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089565965 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108591133 seconds)
  done (took 1.517108089 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489051118 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261076464 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357744458 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109507186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148651912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350873596 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149152923 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104673218 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102930082 seconds)
  done (took 2.945912453 seconds)
done (took 13.176685187 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094371551 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221108696 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.646047199 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113877725 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.208093071 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.166124393 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.289880921 seconds)
done (took 2.579983229 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339530424 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142425746 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081965998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089786757 seconds)
  done (took 1.488879827 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082748637 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098198627 seconds)
  done (took 1.024030426 seconds)
done (took 3.357039319 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090619586 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089675481 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136446876 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089756515 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089355849 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.087922463 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108568936 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.088587035 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089333057 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.109111465 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089104071 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089377379 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.087922692 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.107868989 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090054074 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088558355 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104221834 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090456401 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088104649 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088327332 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10752083 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090216917 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089191077 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105342927 seconds)
  done (took 3.169774575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110698812 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091233855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11125212 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093870588 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093743899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110947114 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094910917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091182815 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110524636 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091516963 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094335565 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110331882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090947549 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093164506 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107002063 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095958182 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093945291 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090479704 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109123189 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094614044 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092710048 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109719168 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09427617 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09239569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112526895 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095013374 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091118385 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109530232 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094467586 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0943957 seconds)
  done (took 3.808605668 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09881539 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086338088 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089017733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116316334 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088770466 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090846708 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103901928 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087826036 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090730072 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08846336 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109036886 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089574954 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085732131 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108755004 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091223609 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092234468 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116147284 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088273715 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086786814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089900043 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112566114 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088113727 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08967074 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109020041 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090970431 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086390645 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089469866 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10832068 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091109421 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089933936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111422522 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093183689 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090359938 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117160746 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093380663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089779998 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095903198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105694923 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091532296 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085955298 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106495106 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090473102 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086761893 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113576407 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092237768 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090764491 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08668152 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109540115 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092508305 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09328533 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105333932 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089178476 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091962543 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089648898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.113403198 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087693672 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091228633 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106049838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092254754 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090544614 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087671797 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.106291292 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095162023 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09094497 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123681253 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097079978 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087251327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111519008 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091448202 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095130251 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110713762 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101158157 seconds)
  done (took 7.795972234 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103666346 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099745002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090238216 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110795142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091164719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090676663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115004276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091831652 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091053334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114996068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092494235 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090964783 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109099335 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092609047 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091004677 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091477685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114626577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091357481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089889097 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110159027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092051857 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095254975 seconds)
  done (took 3.012640079 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237460442 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097426194 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139288897 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122503243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11023857 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121911402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095705743 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097081782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113367448 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10125125 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099814859 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113754493 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108562849 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117824341 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101459892 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101942077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113029116 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104956816 seconds)
  done (took 2.9513256 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106346173 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093187375 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129644331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093876254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092873186 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091701294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117956808 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111510469 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110994302 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093633156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098754446 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1099171 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094384798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092759292 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091841405 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114841261 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092947979 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091822817 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118277235 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098918026 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096503286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118867576 seconds)
  done (took 3.11815669 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107936621 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091701865 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127735311 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096641058 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091219386 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111341485 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098600333 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09258488 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11724368 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093939653 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092147673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091191631 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125681278 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093250746 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097373995 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112303169 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092927424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091526963 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111212154 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092301347 seconds)
  done (took 2.887472124 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174179013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126301123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110856783 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114876386 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127799928 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10844182 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11484109 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126886307 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10824536 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137613728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108635119 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106347478 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134041451 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112579294 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126663966 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116893812 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114759876 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134498744 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107999474 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125327197 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121328431 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109149181 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134520865 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107995383 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125010231 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109041433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107432168 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131922223 seconds)
  done (took 4.245218238 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09168253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092170024 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089193324 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109195583 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091233147 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091058546 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090400606 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110253033 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091910101 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090379399 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110159782 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091848773 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090331225 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090957216 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110762939 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091245081 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091421611 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110840458 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092461246 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091250192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091341925 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110298979 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091520096 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091207553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109525382 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091712081 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091118492 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09052782 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110114875 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092527242 seconds)
  done (took 3.749316793 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105080935 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101063409 seconds)
  done (took 1.070386152 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100155005 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105509373 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090781195 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111162399 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098875015 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091208167 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118887436 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09889205 seconds)
  done (took 1.680980301 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145387185 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166395533 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096474449 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102145296 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168782271 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158204897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132343535 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095931863 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109735429 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085477396 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159605817 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084976328 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091452022 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108619453 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093399147 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099161488 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111612376 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101685406 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098530922 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111425221 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098235818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097828192 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115009441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103349888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086200055 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114559995 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097188581 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102324691 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108040673 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094818858 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090601976 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111361083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096646105 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095942315 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10963053 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.14813379 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09907025 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108451384 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091997079 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095980282 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145174221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092045979 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093495088 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110221962 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09581535 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095844956 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115841029 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092903711 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084943795 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107710842 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093493037 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08763231 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110205629 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094602897 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092174887 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118069621 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095468516 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089644513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107977093 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089596847 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091962403 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107796002 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097237258 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09433957 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112674145 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094413564 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090309319 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111502275 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095395028 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09264196 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107159333 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109145277 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093605072 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114594645 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100089977 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093121544 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107740833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100610046 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09192579 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110926863 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098525276 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120611207 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113215348 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089874963 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088605504 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099485907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.114180158 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095450043 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085869613 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121159155 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094150187 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092847316 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104044459 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091528853 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088735149 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.11455994 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086764408 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094382727 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110435027 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098065509 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096637698 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108994062 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095609951 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097102882 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116977906 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094371914 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.140276304 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109603243 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088449521 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094413867 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116488433 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08788456 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092905098 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110302923 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091272506 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088056439 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114818096 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093750962 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093865606 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096120828 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11514156 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094750736 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093863989 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110588075 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089706266 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095651911 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119951163 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095318073 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094505316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.113325939 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094262186 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092657695 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115326127 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090957227 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097501496 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109324213 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09394718 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093958106 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09663171 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113113358 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088558159 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10989971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095149036 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091422789 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095000661 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113941743 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088051125 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084866058 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113985018 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088575396 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093185594 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119869474 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089739421 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093762575 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109053766 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100713466 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089405858 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116034294 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095686206 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098173854 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116774712 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086668449 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089644736 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113155173 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095950356 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089065117 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111942924 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0946032 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100138619 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086687768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115904699 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086403304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089206314 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116902725 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096045241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09638385 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106538585 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132481335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103325965 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117820783 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093585851 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115321986 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094086518 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095553566 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11693341 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098929903 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094394875 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110586332 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099856467 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090016873 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094775371 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111247334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095084763 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085399031 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114054525 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086874831 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097451793 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113514534 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09790761 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097092274 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11407802 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094120145 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100173027 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108185181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098506187 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085878688 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116962845 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10577661 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099798736 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09796876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114703408 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091147719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093474829 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12154311 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095741949 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093419707 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.115400269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088701805 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086155811 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11790185 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096855796 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089133255 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.110808914 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096369125 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095808935 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109553725 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087775131 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097809619 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115301543 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090554841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094280114 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090303086 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113580482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101382537 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105304779 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091541294 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096107101 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097253228 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.112905292 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09438318 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095511816 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119616408 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09704756 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095049289 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110270358 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103002854 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091311325 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111201749 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091734221 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096052241 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086267745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114184046 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093973448 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089920155 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109058812 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097813022 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097953545 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1199073 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092300515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097627446 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11968797 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099416378 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090984854 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118067603 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090106126 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085897295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109702318 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088396739 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09655796 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088758748 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117460902 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093337443 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091829162 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116619888 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097155295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099203939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119207079 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105322646 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106714795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088328925 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093303213 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09323554 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111561581 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090287378 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094339796 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115261159 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097925005 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096217632 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110784071 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094429022 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098645079 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109889973 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100670693 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098809367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.119233644 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090557064 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097482206 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110157229 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099228999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088449869 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111589707 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094362683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094120515 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108136174 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095466735 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089652574 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085596615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.119686166 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099762678 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093283826 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.117499161 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093649667 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092338747 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110098056 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089830598 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098963807 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111803652 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1011122 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093836855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106168611 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089197186 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099030819 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112673547 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101449107 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089337603 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09591655 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120474112 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097710486 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093909176 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121565419 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102352233 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097771421 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119178911 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088108238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091518733 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118870489 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094726848 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097311164 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11541845 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090070093 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096766595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118323871 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098276541 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092612307 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087374824 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.116592427 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100528845 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096774289 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.118371992 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096110894 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094415849 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109450823 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099594961 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099536188 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112850693 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101344988 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094010495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117421974 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092666741 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098284105 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095060139 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.109532395 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088702731 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09127659 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11971455 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089208282 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098476111 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117645908 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092136832 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092720605 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116671233 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092604503 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097704892 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117011056 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093765119 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103740624 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094326948 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112325917 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098543554 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09785991 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108277701 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093825622 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093537549 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120139848 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094253077 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098780983 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113766999 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100122262 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095654544 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117884969 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100346301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098611947 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086465394 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120698672 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098303488 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095983844 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11181336 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093311251 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089096396 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113604223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100498205 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090781368 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121690327 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100605696 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092386874 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112468485 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101338813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092730988 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119725678 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091811762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096759835 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106971188 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098471246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093562405 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11906182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092023847 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089747783 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098485316 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120231788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098589152 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096582867 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120681424 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08922514 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087350289 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117218408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093989509 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103530009 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116798101 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093966257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092579433 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114804752 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096910451 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09961753 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089231389 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112593075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095644902 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09520449 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113631049 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090309398 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096826315 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114500628 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096139913 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093556698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109499691 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094944648 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101217822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113615064 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091697231 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091698788 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120811831 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095270619 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090718268 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107406754 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102955645 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096769801 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120039877 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093832961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094625189 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111905596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098599791 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100737372 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091965909 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115708211 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093081471 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099430398 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120471041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088497556 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091673024 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124372947 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100441515 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098511343 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118384136 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096056103 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101389791 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121910524 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098493978 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088754447 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109545649 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094314406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088900282 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095949147 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120558717 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093430759 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111703793 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10043351 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098993886 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095944976 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.1170588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090614907 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100546445 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112942426 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099018768 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08866055 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108759764 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097641099 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098740029 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112744776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096772567 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096203666 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097455242 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111040499 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093177345 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097513489 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119227361 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100695763 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094562976 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114121385 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098845914 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104001011 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.115700049 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094964333 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102197133 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.120631111 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097987321 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094093429 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118817424 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103014953 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097246158 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120557674 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094067391 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095273684 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101245519 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122667425 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104983443 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113230836 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091176196 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100138979 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092436556 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111242867 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099492691 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101769387 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122391264 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096084848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091655272 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1243012 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101485023 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094679813 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114091992 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093997429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099329005 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113779299 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099993248 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092642018 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122456834 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103144183 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101116474 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123828431 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090729184 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101567562 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115920946 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10456826 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096603515 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08912192 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11107406 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098507834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102332813 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122617782 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100378904 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098927317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118759066 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098831106 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095282137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112439104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103825318 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100364518 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096137327 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118745244 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094938735 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096267384 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117110368 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102114403 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102714775 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116521557 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107213509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100640188 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115382946 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094729621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09618686 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117028441 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097318912 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099691431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112560727 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092476194 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101360705 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101998902 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116348091 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103299057 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102479691 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115467519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098702613 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103166452 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121934107 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0998528 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09598062 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117682962 seconds)
  done (took 61.799294362 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146881315 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103466829 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119041722 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099785278 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115837532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120602266 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098941459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099076314 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120017614 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11010036 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097829741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119216863 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11480752 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138638889 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118710366 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10865663 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11908215 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100459211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098486752 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118722274 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114092123 seconds)
  done (took 3.295344644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117731568 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112362629 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131103386 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113652009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105089424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131135703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109911422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129909838 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113558544 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106310957 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133050212 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109418094 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126540282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10737933 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106317199 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127760404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113202776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125361993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111602237 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109053979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127122322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111071579 seconds)
  done (took 3.49523194 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107089372 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10250917 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100211931 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119324374 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101347128 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098110264 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1252379 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100289139 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106582818 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116571329 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092483593 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09565096 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120963124 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099133152 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093053035 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097352344 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127034841 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10188448 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102308292 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11888817 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109894883 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097540086 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.120721167 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091816327 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107331801 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.123530588 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099510371 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101004514 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110976445 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102947733 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098902924 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095964672 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118733502 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09224172 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091571316 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.121292983 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102112596 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098462409 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.118480348 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098692348 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099302007 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101105663 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122740816 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09952339 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097731663 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.118330593 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101703915 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097922627 seconds)
  done (took 5.986027126 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12784585 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164491638 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103793626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136092691 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135736027 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108943381 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124001042 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136506027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100211768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125437569 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115191254 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1344762 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105025931 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105970402 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125332139 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105115474 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104845923 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121334193 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108445954 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102605514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126955133 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105995482 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111384461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133692499 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105503748 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101744166 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123829197 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106311272 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131123567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109346812 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105841009 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127610633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.349008964 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104205282 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124257747 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104396079 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11396717 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125724213 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104955265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100193865 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125850639 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106890606 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103189509 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135971445 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105357797 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124339354 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104914616 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100552876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132104173 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104545591 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108764461 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134160268 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104921463 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102592878 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127129743 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1143875 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123093838 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104628002 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104127628 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13097195 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101819863 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105933002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133216546 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104643767 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107198771 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1337473 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105054751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104546787 seconds)
  done (took 9.133387473 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136023937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105234732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135783191 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114819264 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104748811 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127270236 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106716086 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126251954 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108384091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110855795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126411438 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201728937 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123427649 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110875574 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104609727 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127392901 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105623643 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126851173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107880929 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104837733 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124436947 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115602977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106241292 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134184371 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116966565 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122480647 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107297578 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105525878 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135450106 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107123827 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116724202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126367667 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107512215 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133504048 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119150768 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105585277 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121593421 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107351406 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105596386 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129763138 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104408927 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113650529 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126416161 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10382733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106199902 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128479055 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114203846 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137992475 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113110068 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111036493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127976205 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1139998 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126316362 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107981568 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113989216 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141647124 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114049374 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134784271 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10744866 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113742573 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136711356 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120094726 seconds)
  done (took 8.313220143 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101133435 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100057997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098903659 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120552306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100460557 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09870145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098869239 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121408189 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099664234 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099262656 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121234184 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100252576 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099661102 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099311871 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121431473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099627816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099383921 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119937541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101026009 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099617049 seconds)
  done (took 3.031114108 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110877306 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115689569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121272101 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108801827 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101990575 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129518287 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104498145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102217243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122797936 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103906589 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109309037 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129909062 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103780831 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107103141 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130710917 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108837781 seconds)
  done (took 2.744001443 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121079319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116857586 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.193191064 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103944411 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124647948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109865168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101539185 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126336205 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103243517 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107929751 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105401209 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127820509 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102738043 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101877678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123818452 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105713931 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100907736 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128443353 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103333703 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.19120785 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106129406 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103250189 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124229419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107417805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103883376 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129115052 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109026392 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102703745 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125336016 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10381749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104790162 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130642298 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102918508 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107506593 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124843044 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104771188 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102375937 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102483375 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126705317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103428315 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103789082 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125489562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103402082 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104565344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121837316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10386501 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100807999 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12918595 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104749413 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103409911 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123412364 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11050302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106567526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13005305 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11114117 seconds)
  done (took 7.243560192 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11458065 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10333208 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133343918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102887351 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102573506 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104389982 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125538722 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105736331 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103073935 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125124892 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105026492 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103884813 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125361287 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104980884 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103377564 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124723312 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102923873 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103583937 seconds)
  done (took 2.932665431 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109017452 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102408067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105881189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125321386 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104058315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102208962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122832276 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102627331 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100705911 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123335191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104306676 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102442864 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101575636 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124640483 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10386006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102440299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123979184 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103739927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102064653 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121575962 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104156441 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101891842 seconds)
  done (took 3.33530766 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113759624 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185671018 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109575944 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191996633 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099095061 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097287531 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129875595 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100024879 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115302262 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120696319 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099380777 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098588204 seconds)
  done (took 2.402319518 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13160181 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138317013 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125437586 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10436079 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111487716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129114955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108852728 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107566871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137977244 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118095358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127682519 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116756261 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113928013 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137251389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110889393 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1330563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108513859 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107767479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125153832 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123100185 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10617825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136576665 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107895909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127425129 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109461635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11512678 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136630695 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118841979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127468696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116774691 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111932304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129050005 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116066759 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138160573 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104382232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115274005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128227496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12380845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111695998 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140412703 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103221703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131865608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115747204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112174594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137900796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107873222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133342019 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109630954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10734774 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149772419 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112383407 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135903613 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113984035 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115060983 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136646072 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130502143 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14053961 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115866341 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133201828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120935013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115131677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134248896 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116736729 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140831414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11328379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114880615 seconds)
  done (took 8.983823431 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143902634 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104463795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129540678 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119965843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137729908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109951908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107506278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130511699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109640851 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104546142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17181725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108234014 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140643245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117000129 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10805498 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130546264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108748066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115710858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126808375 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128349786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129821334 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118321403 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115619218 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139680719 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119133452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134266783 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109700202 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107978511 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132465031 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10942479 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134652389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109838436 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116700342 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12557969 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117645483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10893099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130106176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115139443 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107657071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135500134 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116784219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145450484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109246519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108338053 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141879598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108680324 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128844144 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106986424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109639722 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126390295 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121909855 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119503969 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143972052 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116245654 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131595239 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109581883 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107971844 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130466034 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109599524 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11183278 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139049658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108016389 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151459233 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108773376 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107910307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139999061 seconds)
  done (took 8.982628244 seconds)
done (took 170.012120445 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151408775 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.19039803 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146259502 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181314552 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09471292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131354817 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151610726 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148764677 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093306281 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118630816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094197258 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097740002 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.187190075 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096339962 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093985793 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120989598 seconds)
  done (took 3.042411363 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196022275 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30777748 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110658452 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12176831 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103848353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101164615 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120455632 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101532793 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098785797 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128654751 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102062242 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09734388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128755998 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098823907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098751537 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124254266 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107019702 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101340813 seconds)
  done (took 3.203678279 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120887219 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144525792 seconds)
  done (took 1.225256164 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130319699 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196104429 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282877782 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168735082 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123547991 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139851788 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148044622 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135258716 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188837307 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135988927 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113665889 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099807952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147914597 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105615972 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135976066 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102413081 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12860297 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136900364 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113361766 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100628273 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144077917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104028735 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104609065 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136251382 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178481377 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13474145 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103955587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102309502 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125402443 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114236515 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105301486 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139508003 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110851974 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174584811 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104607509 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172103812 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129519631 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102800658 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114126572 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121542405 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104990718 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103471839 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137105731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100760019 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102400304 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131366796 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104517336 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102941242 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129117115 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110083579 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130905481 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107024528 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169337891 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110276438 seconds)
  done (took 7.959127 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862731125 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141912771 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099616691 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.011714706 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150984364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114696081 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.851136069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147033871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257018168 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.88417346 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117443607 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135530434 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241089295 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.279810075 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.264166989 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362207391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.720899584 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114877049 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1287121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166359055 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108457653 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148790008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120019264 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52354306 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100459806 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122696586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109123553 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134027025 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157455787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12221325 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106051848 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198752018 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293101542 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210482992 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102974851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099222816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121533019 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165471004 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27177822 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217550927 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19816114 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097351726 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12264547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111121736 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118722888 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120742941 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180925512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17107004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193244402 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125535462 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115898556 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110384714 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131184601 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179068046 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100363517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360917123 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365447266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123507963 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110973499 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116266347 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292252794 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103903947 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236559942 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127912361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213760632 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124758695 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849316857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185844156 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101256033 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107262179 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.135641096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106763891 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129047715 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172621116 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.504868037 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114423171 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125904022 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102474596 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236022048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101709793 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099914574 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183441698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101034262 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132644738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114936662 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137012439 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190271307 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25070824 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135828862 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109932815 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128365822 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116342232 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101508375 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235403358 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230137753 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178233378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232539152 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111021014 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184069214 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186596521 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10843222 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190956625 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107672551 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14005386 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109501387 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225446882 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160368177 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10309216 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127745158 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112102927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137863546 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128464743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109594755 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190736241 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.560778371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1854947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099911568 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106168949 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13205856 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160290153 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131167694 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265270385 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111225811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188980339 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109180529 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120150445 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110369747 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184436338 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112378576 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132650311 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111500941 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112474504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282737866 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222805681 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137076942 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255259814 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179368304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131387277 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171591785 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133033642 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189849335 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112940921 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1097002 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126544293 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837410389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115925235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131287667 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107593799 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208308349 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102545912 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103633728 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101373794 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122370538 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82152092 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104409392 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099499413 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12682825 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109200598 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109141033 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133836059 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107068761 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182352218 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244285516 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138145679 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10897185 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101608276 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182330575 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101091077 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125451661 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101488695 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101626641 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13376998 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106517729 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103995909 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194105378 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179794792 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234817647 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638330709 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12404632 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103515935 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242761506 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101761108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326159412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134577896 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235920091 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188472497 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099735172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363355007 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191643545 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209855564 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105762599 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193636824 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099804212 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108766831 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182569613 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123687495 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110432425 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179140489 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117476508 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137705064 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280205072 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103350526 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255504157 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09907634 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19065265 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102408665 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132292553 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331012297 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102176625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141607175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159014444 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129631146 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104018188 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.679104697 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102674201 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136396561 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110263212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235750774 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187073523 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109175403 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134843097 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115202393 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183389572 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237453076 seconds)
  done (took 48.246801176 seconds)
done (took 64.626659398 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297403324 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258469099 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303751584 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212304173 seconds)
  done (took 2.120807307 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262284085 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163708395 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235344021 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099798718 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.244901806 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099067451 seconds)
  done (took 2.0910838 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.493822147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.371752818 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.30851216 seconds)
  done (took 2.167237991 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254693733 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241629201 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332575598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.404757667 seconds)
  done (took 2.331799062 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.29842359 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131705855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124018663 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.212023241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254589583 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.23065458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147724003 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194912545 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.150983745 seconds)
  done (took 2.77662696 seconds)
done (took 12.468443092 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.235686788 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.366478968 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.225748318 seconds)
    (4/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.251476925 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.283968068 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169606952 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.202392799 seconds)
    (8/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112385957 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11341679 seconds)
    (10/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.228681546 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.144336214 seconds)
    (12/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.212498117 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.317244448 seconds)
    (14/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.134034336 seconds)
    (15/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.15964841 seconds)
    (16/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.252980525 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076999493 seconds)
    (18/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078429839 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10882695 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.226470177 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.27885589 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103435391 seconds)
    (23/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.229354133 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.08622808 seconds)
    (25/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07894526 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151984558 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.2824134 seconds)
    (28/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.28044068 seconds)
    (29/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.250127771 seconds)
    (30/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079156871 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109990069 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.218998252 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109446063 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.142794318 seconds)
    (35/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082758726 seconds)
    (36/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198573584 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110590171 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237679995 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199376578 seconds)
    (40/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.199091626 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172091051 seconds)
    (42/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181648397 seconds)
    (43/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.169351547 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.081628935 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130466079 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106941931 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131630423 seconds)
    (48/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.283802556 seconds)
    (49/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.164665462 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111279767 seconds)
    (51/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079666538 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110605943 seconds)
    (53/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197971389 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079890972 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079624456 seconds)
    (56/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172723986 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.103165372 seconds)
    (58/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109905161 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177800648 seconds)
    (60/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196415903 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175010208 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.248523987 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.135158228 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.168661492 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0790353 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171727984 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.219391425 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106290433 seconds)
    (69/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.170873059 seconds)
    (70/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080431773 seconds)
    (71/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.157635648 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.160550242 seconds)
    (73/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117284219 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078374411 seconds)
    (75/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.104213329 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125795313 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.285595402 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106387269 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124481172 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.141596689 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.134512724 seconds)
    (82/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.151464975 seconds)
    (83/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177998625 seconds)
    (84/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157836683 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.13081172 seconds)
    (86/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155592906 seconds)
    (87/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079108063 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.220363125 seconds)
    (89/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117433619 seconds)
    (90/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.087615765 seconds)
    (91/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.167786745 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.162431431 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124817551 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111344312 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.195023201 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130595915 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144601499 seconds)
    (98/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177458307 seconds)
    (99/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132596132 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127465513 seconds)
    (101/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082851838 seconds)
    (102/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12713106 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081232092 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079096169 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104347211 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130241055 seconds)
    (107/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079915076 seconds)
    (108/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110136071 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129230498 seconds)
    (110/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111776362 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109882294 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079102485 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.105018266 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102238816 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.137286121 seconds)
    (116/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109659444 seconds)
    (117/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.104174416 seconds)
    (118/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080181577 seconds)
    (119/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113631585 seconds)
    (120/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.152393059 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106780965 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079190307 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079599078 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.140214083 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080922254 seconds)
    (126/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.177433892 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079681602 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.152053604 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12569767 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079420117 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131661315 seconds)
    (132/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079567299 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080595666 seconds)
    (134/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084075414 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136789203 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080540479 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109716601 seconds)
    (138/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080693839 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103405493 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081608493 seconds)
    (141/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083934936 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079692423 seconds)
    (143/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079669058 seconds)
    (144/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.164771861 seconds)
    (145/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.178338987 seconds)
    (146/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07872298 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079302108 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.132039895 seconds)
    (149/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079827085 seconds)
    (150/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133883003 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.131049884 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11334053 seconds)
    (153/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103265225 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130174158 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112236777 seconds)
    (156/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110759219 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129046155 seconds)
    (158/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.193565048 seconds)
    (159/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078791069 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130346965 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104435018 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079300684 seconds)
    (163/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08319762 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.136664858 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126554533 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09962707 seconds)
    (167/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.103776761 seconds)
    (168/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113878215 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10508667 seconds)
    (170/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.078863653 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131876142 seconds)
    (172/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101783292 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104856437 seconds)
    (174/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.102278081 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081737986 seconds)
    (176/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079825455 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078497272 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.086195857 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150683867 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080792044 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079812652 seconds)
    (182/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083640819 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104876103 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102249908 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079853698 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104544171 seconds)
    (187/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.141289463 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105444944 seconds)
    (189/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100315586 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.104712566 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080744477 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081404222 seconds)
  done (took 26.93584585 seconds)
done (took 27.929235593 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216618543 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127476914 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111527231 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108910651 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206295266 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117151596 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151869212 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113610558 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119690783 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134380377 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101699778 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122689191 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133989981 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.18497434 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137304545 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104516155 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101630146 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14425099 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128036882 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12628651 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207926683 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103773433 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119260511 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127947991 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180853628 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130640369 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109675679 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111396924 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149423003 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110750149 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.1099438 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127921701 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125097441 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124532525 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125897033 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111290256 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10227223 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107767288 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112313667 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111508535 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122722581 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136426317 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111069754 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101974626 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136850178 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112226794 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102050534 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139040729 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101163794 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110888909 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129967836 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128508028 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110596289 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125126001 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101598756 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102985626 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145384462 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103663264 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124177172 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126842417 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105198679 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102171381 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112412406 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130023448 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111331694 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101781338 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.137133269 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114261725 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110294721 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129896009 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105018755 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110047403 seconds)
done (took 9.980913971 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109276374 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146947457 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202054992 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215757154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130799798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141458306 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11736246 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126242747 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139147325 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12242719 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138717065 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158768117 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184724928 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143864588 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116890857 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11348271 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.140096032 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112472506 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21310342 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126829773 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15177466 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11901831 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129082418 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144979119 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107168488 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.161502182 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112708284 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114818114 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105566444 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140932445 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127755324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129868949 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111933922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124808157 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148014027 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118780738 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117879665 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138904473 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109328584 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106683997 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139613079 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123796111 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107370537 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144564772 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115161997 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120478411 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139283507 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119984676 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107213642 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138955823 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109563625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131965489 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144056689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123327647 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142328616 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120408473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119768512 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118859525 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13705373 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119370443 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106788187 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132592308 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108921914 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151671326 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112219364 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118551702 seconds)
  done (took 9.705419641 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127384368 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137909573 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141598426 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119340343 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111684661 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126736664 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101648415 seconds)
  done (took 1.911942393 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104423477 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190090317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.213340012 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211237497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.210357467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196750851 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150610128 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10344992 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136032027 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138055243 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189913979 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244899266 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111698136 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143716197 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214705073 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103084724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.215897648 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103989196 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116890063 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.215181888 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119296515 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159403262 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11669342 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102463529 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211694952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103474279 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265425316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145564878 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114001638 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116697876 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116670679 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206440526 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213235419 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116776664 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110120971 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213287859 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.211760364 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116645786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.227659782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106956758 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.21185388 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116766084 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.142207085 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1183965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11745763 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.20105465 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121789489 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.142584572 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117971383 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.218878024 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114724068 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.213859544 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115479438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117440708 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138408255 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120530963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123780203 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142681097 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197069646 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145376775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186627839 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214548445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.214118312 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187944009 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152896899 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191369234 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209372737 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11440699 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137862754 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120287218 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.215054634 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117565255 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114684962 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202731516 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119714009 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.215712574 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.216023434 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114647929 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115163798 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133983508 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116198854 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103244754 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.205197383 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115851648 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141455424 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121587135 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115783544 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143517497 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108798369 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15091215 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118933842 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114783664 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146394664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118687505 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11891958 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.217485275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113047135 seconds)
  done (took 15.96475839 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109936877 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104948684 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109043568 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131136661 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106057751 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104666779 seconds)
  done (took 1.732394909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142129978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118482979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151738001 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11928066 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191209071 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.198443788 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226297996 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112575023 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1602329 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12749587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.223807567 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197862857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225467811 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.144825896 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202820791 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145807 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.20256211 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142518709 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128536361 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115829481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14434083 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122010805 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115162699 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.215828522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1191922 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146406602 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113532614 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126178645 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153335655 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113121262 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.14571771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121601384 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111557331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137114242 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.203280313 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137772164 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115163003 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121211646 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14782879 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120053003 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.226813582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115949782 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123678967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148923028 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11477895 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136708923 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123175662 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112465102 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227843004 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121340704 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149549416 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120082728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119330686 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149575332 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112485587 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112177814 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14841019 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227562063 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123029003 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111897943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144444343 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121160026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112756033 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149392902 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120693137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121076861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138029842 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120445314 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115562932 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145316866 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122991134 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119272254 seconds)
  done (took 11.430772955 seconds)
done (took 41.784762903 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.672563834 seconds)
  done (took 2.731836016 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.894955937 seconds)
  done (took 1.95955039 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.267596307 seconds)
  done (took 19.363521247 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.527006062 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.605653515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.038080715 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156862009 seconds)
  done (took 3.390393406 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.072562894 seconds)
  done (took 2.156375744 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314303734 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268158847 seconds)
  done (took 1.655273965 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.753434103 seconds)
  done (took 1.838749187 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.519777928 seconds)
  done (took 2.59378742 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356033092 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183440341 seconds)
  done (took 1.625045901 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.618122271 seconds)
  done (took 1.704656671 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.869941781 seconds)
  done (took 20.960722298 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253099286 seconds)
  done (took 1.34209863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287541657 seconds)
  done (took 1.37927285 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.691724383 seconds)
  done (took 4.782621019 seconds)
done (took 68.556067667 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115985371 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.138589921 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115530032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142150348 seconds)
  done (took 1.592787889 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123910827 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118486221 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145729094 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119314382 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125175895 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117843073 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144737979 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120960421 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117592533 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147607127 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120234917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116013458 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147196539 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117334637 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11588129 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14759164 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122771221 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118277324 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145303565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120922097 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118318066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145996837 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121858156 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120215139 seconds)
  done (took 4.151781133 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115023484 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10817937 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111084706 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133901365 seconds)
  done (took 1.563832105 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127732814 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130367266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152770667 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127480628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130113157 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156489471 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118421038 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115496516 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144446329 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127501336 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133527626 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158201655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129895061 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118191229 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154278628 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113118153 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117372984 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155881841 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12509712 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15197635 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120477622 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124603622 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147544408 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128001295 seconds)
  done (took 4.301024332 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193820392 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129192446 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17418625 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16230509 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177759684 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116782263 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144064351 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152171312 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12455782 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145688825 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122559541 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162744809 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149911212 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120235968 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118949105 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150037885 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130405191 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123393378 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191754205 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122694478 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150965054 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130516063 seconds)
  done (took 4.293239903 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123278117 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109283096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129985491 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110300165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120519553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136529736 seconds)
  done (took 1.8296772 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108771426 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103554983 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103669696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128826129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108079048 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103682613 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127725529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105217988 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103630835 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103061985 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12958797 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103710598 seconds)
  done (took 2.423948025 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.339287365 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108905506 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135503563 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111929498 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113917724 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105480681 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148133278 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107852024 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273395923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103503265 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14601118 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199675054 seconds)
  done (took 2.99467745 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202420823 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146307551 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296960892 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368718228 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162987521 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189925246 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267936971 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19436855 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205595332 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138930293 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245211112 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159910253 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180951823 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17647404 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166672167 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.154254635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196194951 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193464217 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1734905 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230144802 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158234432 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195137355 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185251995 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175828568 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1370459 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187060189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117867686 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127137905 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193140394 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191816 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170472681 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175529132 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139507036 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21842513 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251584821 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197480785 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288539612 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133121396 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198337146 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187001124 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255418083 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166623668 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187761863 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181587519 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128349882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207780538 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151307737 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201404614 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133049329 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171749813 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204069544 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180010317 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201989976 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135926311 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312364155 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185330267 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142890754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166319857 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214241181 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218879838 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166429159 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150505153 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205157844 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186303058 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209982524 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141809289 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189160844 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123743261 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19580388 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194769054 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203664287 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189904503 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224293802 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131680011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159074783 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199997524 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202510106 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182107363 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188945892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119883983 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149559889 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16316692 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126459003 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212133473 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121312027 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230315466 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132746513 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.334385109 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211732976 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155768042 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186536516 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158554907 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189531858 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145380868 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126832994 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144871312 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189511228 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157731949 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157701224 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155784248 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140283444 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.15589214 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150255673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149410282 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161330963 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.152175217 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162915194 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187452533 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131582113 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19269213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148561638 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.183702391 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169061516 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215214656 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130934916 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157828049 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196020358 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188372461 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136733275 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204511792 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184412893 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.16986353 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136733052 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190370918 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190982558 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171213632 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191772579 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166057251 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133468504 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163322238 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163421201 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185637324 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153046594 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15466311 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151922285 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224644516 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12557383 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166302015 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170956375 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159879893 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125881761 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138837824 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161900562 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142662701 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174619567 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137750729 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178402212 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161795993 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183357134 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156356233 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160760282 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176492264 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158081303 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163839556 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174966462 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119857273 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199079167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189383766 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154182277 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203530303 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189472896 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214892928 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163434962 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158545922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182757237 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152900431 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122668473 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157755344 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183350056 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159543609 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207851775 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211140078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192154699 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151075013 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175131775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166877978 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20922948 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152652072 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.17149262 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160831458 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194818816 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120077331 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122175541 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155529569 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139006859 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155552627 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137378911 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202192511 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163761536 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209843161 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188266582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140459633 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215222525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126433348 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187542601 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165583168 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16632263 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183416353 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213019103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168249769 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168935863 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158939977 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148751699 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127265277 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131474949 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189527895 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136801102 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161584685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140392609 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215252228 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170163177 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175757655 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222225185 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191875238 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197510148 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119166364 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189826073 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196368496 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162086766 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183723377 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163763165 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159064526 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213509936 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138651863 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219650621 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187879893 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169502913 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215748603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.158515972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157358015 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148771073 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18855268 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138394066 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191589302 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146910828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12950614 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18059034 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138075689 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153582743 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182176905 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172609831 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168827295 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.189006921 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195639421 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125388143 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139451117 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190211685 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145750454 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.130446283 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169670814 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213123855 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146754311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184343236 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173859315 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157419742 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315494193 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219533787 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203805305 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134847522 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166920765 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164794425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188947014 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16224825 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212591509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140127647 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210189029 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162164919 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170295106 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131785093 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173993985 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152439408 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135524637 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.16167501 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157569414 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171044483 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210181748 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141655152 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161209299 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191998137 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142929764 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177386074 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140914939 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229309641 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159900428 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201433184 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.157350465 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196589345 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224745347 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12340247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127053285 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160135477 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183558742 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15842379 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164719296 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202967681 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21867157 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165715158 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192325834 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139060895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157190827 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160478114 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176049445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218126702 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135873459 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136953367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220707344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124772446 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158912711 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159518858 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306831824 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1755041 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175161913 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109043513 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298621367 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129525074 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159984414 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162622318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197842321 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131046942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.212627227 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165604661 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171800422 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166122211 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164123582 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209988984 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189923091 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193107757 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171646494 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173246014 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158607914 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188797895 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204533897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146848671 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.144293621 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18777422 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18660179 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2108778 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130686033 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190964716 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16020676 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190719648 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19803465 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140138009 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222591237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129006734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189727849 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138404041 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123458654 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18804667 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201614805 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130993948 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208542646 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164003655 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16048896 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128211333 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144221463 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187685069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138706659 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157462282 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181417216 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158107015 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16708577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213437033 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130751396 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187300713 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147699733 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128750272 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170660956 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141971915 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161178111 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176397417 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212485045 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132271124 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205055181 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163461716 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191732699 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156810282 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17113455 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.335921368 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127168288 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215306058 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175440719 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193660687 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179264314 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166093229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189754629 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150413059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190992663 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148581607 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.246634457 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164651605 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18654395 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131474944 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169801137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1428316 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131344179 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181979439 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161411562 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168939828 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138173253 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185184637 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1449782 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171372568 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142270774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214689679 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151962306 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211922867 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185606347 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165077532 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166677353 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201084059 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131103594 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191545202 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171169557 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172596757 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147054839 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16208317 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139031833 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219021942 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125933087 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158558789 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193002332 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161796217 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190553371 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134746337 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1957742 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140465109 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193595451 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127851719 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.18011645 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165693157 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132652878 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155399905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163215112 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187829716 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15873255 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154547067 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177221988 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189070064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153834142 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134572978 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303136041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161526898 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222706986 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135081068 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167089687 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144561215 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18467114 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.156890633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191484429 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129895214 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129289406 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.159452019 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164407665 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171859539 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163764994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202709291 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159348685 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226906147 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131698505 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283645632 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140930381 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191420574 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115358751 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156548089 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143656335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133678203 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170029649 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212388798 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189302681 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187921743 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147353571 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161883829 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127839353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131834395 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195623123 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153304157 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190959074 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145633387 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1023893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171928636 seconds)
  done (took 85.384774177 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168319452 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15411029 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170768148 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223725792 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195935164 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290313561 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230509694 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247623849 seconds)
  done (took 2.862062422 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124661536 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161128464 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141847741 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146964649 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.120309668 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.456892487 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158440248 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120988133 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163474585 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.161342838 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.145127763 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.612571256 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113772763 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147576451 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125705127 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120055469 seconds)
  done (took 4.197721177 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119264623 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548596277 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.886129332 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279452862 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23090635 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182929897 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.76499915 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.692962566 seconds)
  done (took 12.895334261 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146473307 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136173586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.316126558 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.260817765 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150719523 seconds)
  done (took 2.202111126 seconds)
done (took 131.772099333 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124780269 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123871811 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124285251 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154929283 seconds)
  done (took 1.70801399 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.178144128 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09080629 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092616422 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117538598 seconds)
  done (took 1.67062122 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439890377 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089615923 seconds)
  done (took 1.743235309 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147167622 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143962128 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167131679 seconds)
  done (took 1.660062787 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142217176 seconds)
  done (took 1.333570042 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.132427921 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120993502 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240167615 seconds)
  done (took 1.689823546 seconds)
done (took 11.002230684 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121444399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925776284 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433895815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135333032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710657276 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429586849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.420253153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174940024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174026087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139938327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133919357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690538133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.439021957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.87221368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394507149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903363011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695014393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111655212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146496238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111864383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.429873169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111476923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112147836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110937074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721101112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419790058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109026167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915375298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110959909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113276064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430351323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110514235 seconds)
  done (took 21.041600048 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118930508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171718239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146757304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113284991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113080635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140517822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122692575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121598927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204622197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109518849 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163328246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111211826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115003897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139593997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138265392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109236439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142625052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114067399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118147067 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140982114 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134405215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109107093 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141503231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113715082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110154815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161609988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110566682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121667704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140294971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115466636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114966006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140116147 seconds)
  done (took 5.369934944 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157493618 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180254935 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149217976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149655635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188517589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113053743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224220524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150020039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203025314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111278133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133300994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140090363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150800192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111516992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167772989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110792105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113445566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142160332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118494969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111946885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166237522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110794888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140496719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115914998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110621647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161565033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111967881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124196792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138991501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116188809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115848532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141226899 seconds)
  done (took 5.680493245 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126226715 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124864365 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132555847 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164327553 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120891112 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123548969 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154824174 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12126884 seconds)
  done (took 2.268437721 seconds)
done (took 35.554557423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134407379 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127872182 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129951071 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15365833 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194457244 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146580945 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126725991 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115117555 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152044916 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131166536 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11033748 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116329328 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159354994 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119407371 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225689439 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123992356 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.231118205 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.196384221 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14740906 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12373549 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117212026 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230855606 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121491691 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145579413 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197239785 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112535032 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216365708 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119123529 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149718566 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112723344 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.227395454 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121733406 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117764278 seconds)
  done (took 6.150758085 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212723311 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119718028 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150621113 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118488394 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120526369 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148596521 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.21624642 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149317119 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120629994 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117329083 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118926635 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229788662 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124476619 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145776384 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12214282 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10766389 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.246062165 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119995718 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.139535693 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093333001 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.1166533 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118862312 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258067294 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115346354 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147401176 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120961194 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121226391 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123259292 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.152414536 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121458068 seconds)
  done (took 5.531664945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126994994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133406991 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165148944 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186428472 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148059269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160570375 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141508638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134357173 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174169252 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11376631 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127410834 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178439056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130286437 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12407153 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150147667 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13110265 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134597125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144709927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121640085 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130551264 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164704466 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130672264 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13762227 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15218945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112667828 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119550509 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153447581 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127928495 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121074009 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157897431 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116409158 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117110549 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145261288 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149065061 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114212938 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155784403 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138063176 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12544233 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157702177 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14519698 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116832182 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146730912 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139535481 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.19561138 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116745111 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125383894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123628938 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.160131488 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112185783 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130811142 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186680459 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115200039 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162479359 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117103047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112136552 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12102098 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145302645 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116844103 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127105253 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146616595 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1371726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119484709 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153589231 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116899731 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123505508 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142881725 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11530643 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116841335 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167200431 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122978926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149744486 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.141822204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126674567 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12754031 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123133747 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155248938 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113070859 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12344869 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154663365 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119170446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125699427 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146472637 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117796935 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129082947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.1661278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128968833 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124829286 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157098187 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118398623 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115143832 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160972394 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115876066 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117956985 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155899896 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11613614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117377541 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125435455 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.157892133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112374908 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139669749 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149844051 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114177488 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138268112 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.15138705 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121361374 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122438551 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186041266 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114442069 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125473551 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158772359 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114096295 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121106801 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148958498 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114239454 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1318502 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159935107 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123303067 seconds)
  done (took 17.134571374 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.325721224 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312822085 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18250879 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317173529 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158767538 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.21058059 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.308626445 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.311734551 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113795587 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18246137 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.198468262 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.281162805 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116781273 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141055946 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313820544 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.366340044 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175249429 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151173833 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183549858 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127725517 seconds)
  done (took 5.713292729 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135515324 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147563521 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167614974 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141600816 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124439721 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161511846 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115336411 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13581067 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157700176 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124329562 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116382587 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161583583 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127093077 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129928734 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160849993 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144777586 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120410907 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149866002 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137519669 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11838933 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132733072 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141552523 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122916962 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169031012 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133312968 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154825264 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115566341 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119482109 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120802789 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155249818 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119535924 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132369037 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152954818 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105132259 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125546137 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159676563 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122855027 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116819222 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118874392 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149709174 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129448976 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127450236 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154447409 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098348243 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13208072 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10961845 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160805173 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127403524 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106002184 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164466638 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128021261 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12801616 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152326125 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137169116 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121170688 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161442221 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127580327 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128250329 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150137064 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115768641 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113322819 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147631807 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124972573 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12965102 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125537953 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165204309 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130768273 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143187724 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12104245 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118540441 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118097701 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.16120315 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134698881 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.152935252 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123714625 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127179258 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121998446 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123842009 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125033922 seconds)
  done (took 11.858747527 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140056693 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123040487 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132108341 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181350735 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126823192 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119523852 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156642582 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134791193 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127875119 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162553444 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128155205 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129119485 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167396265 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125431771 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122222357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161359125 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126440665 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151002782 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164629366 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142284995 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158347065 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121139862 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126777401 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125923243 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175271458 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126097445 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172595689 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129114431 seconds)
  done (took 5.203533566 seconds)
done (took 52.799935058 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.383131385 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.568290169 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.336933474 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.337452341 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.356526556 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.359292815 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337202397 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.338151796 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.879858115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.306454393 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.339024706 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.339482266 seconds)
done (took 30.118753383 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.332575104 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.84965416 seconds)
    (2/2) benchmarking "String"...
    done (took 1.630456444 seconds)
  done (took 4.708832631 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.341701143 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.328672341 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.580998044 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.326749304 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.345944608 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.32771602 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.328565215 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328786953 seconds)
  done (took 16.794609829 seconds)
done (took 27.406939573 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.390660082 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.510690483 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.572203555 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.329844661 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.330658101 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.347072449 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.330470598 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.358813648 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.334027703 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.330237322 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.74455945 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.59612068 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.34133853 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.712851831 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.329163428 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.334278681 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.355427346 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.568398575 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.333825401 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.363500247 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.307668442 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.322341798 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.348804501 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.334324744 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.336849596 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.336680665 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.396682857 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.332994955 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.521322443 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.337197376 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.36053906 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.333190398 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.397937852 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.33860267 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.331048743 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.343330884 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.522411244 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.344071832 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.311111407 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.358855316 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.523110531 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.343859274 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.331670153 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.340907645 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.334454131 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.395944866 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.332835628 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.446828086 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.352617434 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.338786931 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.384236865 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.711334623 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.341078831 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.33925238 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.33469733 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.559867584 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.356045321 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.395203359 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.357950093 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.340852705 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.332849632 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.3342247 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.364924109 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.347897118 seconds)
  done (took 152.202751149 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.331083771 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.336477757 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.336117459 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.341749653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.33568585 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.338093659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332687819 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.332768457 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.338020442 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.362071546 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.336211354 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.337893359 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.338156119 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.348419898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.342776428 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.355923562 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.336790172 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.336928026 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.364332066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.334319501 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.34136284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.33829243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.338056179 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.337762706 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.337807252 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.412999541 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.360893425 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.339735006 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.347444435 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.33421701 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.383166841 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.34539674 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.983511104 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.203965033 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.339617533 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.362863566 seconds)
  done (took 85.157711093 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.334537689 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.334020347 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.335787621 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.367792181 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.335892265 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.92343192 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.92221252 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.306381997 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.411498186 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.759835568 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582606167 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.335599963 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.429765156 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.348787937 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.336496495 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.353412548 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.364489295 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336332767 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.335375675 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.923057742 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.348692369 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.468091764 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.514802769 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.3546065 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370949687 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.729407597 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.336724483 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368959049 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.671786962 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.388801795 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335384394 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.702360753 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.789382419 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.452112726 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.336046006 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.336895184 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371717348 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.33775495 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.620873956 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.338827937 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.338352099 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.340558495 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007060618 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.341300826 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.925255053 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.336474586 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.313492023 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.338003688 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.336511197 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.696503167 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.063628139 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.34268495 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.336998975 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.34154546 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.337974521 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337834581 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.372262946 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.765946992 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.43766972 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.336879865 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.342997649 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372434429 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.34020973 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.506298864 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.338260282 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.433025741 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.393945764 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.44429517 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.92866347 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.338442343 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.436007187 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.457948287 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.339019282 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.339531607 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.338790147 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.339241532 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.452160106 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.340631965 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.76651706 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.338596133 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.521401084 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.358327649 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.770351206 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.440477593 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.340187874 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.708964923 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.344731885 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.339573519 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055376673 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.43517967 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.340502391 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.339633629 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.339173056 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.770235265 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.93275103 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.601466902 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.344100696 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.986956165 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.346470214 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.785977874 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.92186611 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.339952088 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.022102827 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.346483078 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452736795 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.521501298 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.360119625 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.34189304 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.779898549 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.345666103 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.400187358 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.342375323 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.341820694 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.745540136 seconds)
  done (took 382.387160942 seconds)
done (took 620.97503875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.199116141 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.150673932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.306479947 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.165846959 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.146246867 seconds)
  done (took 12.208710916 seconds)
done (took 13.449993105 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539001795 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539591184 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405644256 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543469431 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.378018697 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555499234 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522243683 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.358976757 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455004166 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.428274227 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455528593 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.396352357 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.377274918 seconds)
  done (took 20.196187916 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.632254907 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.35254035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.407855794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.623285851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387576521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638826549 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.663730718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.352134183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.513278417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.366403414 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36441891 seconds)
  done (took 19.545087925 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.635200046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.353704109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.409694182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61912928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388101719 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.635693465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.668185822 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.353989769 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.510442459 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.367990151 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366477427 seconds)
  done (took 19.550535207 seconds)
done (took 60.533070362 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.382890897 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.446047294 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.381757944 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.366724046 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.361210323 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.362071304 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.365927015 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.362178984 seconds)
  done (took 12.27242179 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.361015397 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.360277576 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.362366014 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.358767247 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.360119567 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.35976512 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.35934939 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.361211373 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.360285641 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.360635249 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.36241935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.359659656 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.361280266 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.361593388 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.361620597 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.361953805 seconds)
  done (took 23.016180061 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.363631944 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.361743613 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.362182622 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.360649151 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.35921022 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.361915958 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.362468001 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.360911003 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.359909244 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.362706157 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.362059954 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.362430615 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.362427146 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.360040151 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.36209267 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.362324605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.361775587 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.362709686 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.366978326 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.362494101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.362822997 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.363495152 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.362760285 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.363732988 seconds)
  done (took 33.937791304 seconds)
done (took 70.468764334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.361059979 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.364999707 seconds)
  done (took 5.972080869 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.42037477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.420848819 seconds)
  done (took 4.086313439 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.363400509 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.363405541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.365141423 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.363781613 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.36190406 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.362215653 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.362599943 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.363749725 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.362095806 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.365129033 seconds)
  done (took 14.879748425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.363534538 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.362960772 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.363007509 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.365587646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.363171835 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.363284334 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.365074803 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.364931587 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.365186268 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.364610675 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.363845977 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.3649144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.364434424 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.363790223 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.363994714 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.364079784 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.365513743 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.363945977 seconds)
  done (took 25.800705679 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.378849704 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.381760266 seconds)
  done (took 4.007598508 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49323113 seconds)
    (2/7) benchmarking "second"...
    done (took 1.406882584 seconds)
    (3/7) benchmarking "month"...
    done (took 1.468900581 seconds)
    (4/7) benchmarking "year"...
    done (took 1.461631815 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.40534326 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.387109011 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.40519046 seconds)
  done (took 11.27525582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.36616769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.570705856 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.694683606 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.970612557 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.366261006 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.369357944 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.293176498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.371096912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.372776634 seconds)
  done (took 15.622458503 seconds)
done (took 82.888280406 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.350684338 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.391409881 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.384806557 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.365196158 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.66176821 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.379859823 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.355073961 seconds)
done (took 17.137507767 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.333164024 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.336766014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.331296563 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.37694799 seconds)
  done (took 10.626153587 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.365069576 seconds)
    (2/2) benchmarking "read"...
    done (took 1.678078315 seconds)
  done (took 5.291641874 seconds)
done (took 17.166404551 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367762742 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.36760677 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.367539781 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.366737109 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.367815452 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.368402233 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.367230868 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.366547842 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.368889994 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.367480097 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.366479697 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.367890551 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.365810019 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.368636238 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366913819 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368236704 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367973312 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368959337 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.36892019 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368355615 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368841549 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.369505776 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.370032149 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.367655556 seconds)
  done (took 34.079205081 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.369061362 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.368034866 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.36996426 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.367557292 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.367817527 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.369134002 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.368302955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.368261998 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.370473461 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.369275358 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368025219 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.367397367 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.369854251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.369887388 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369115341 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.369379929 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.369077498 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368310532 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368799163 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.368575042 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.368183722 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368206038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.368834978 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368629891 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.369122643 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369756899 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.369946257 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.367767165 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.369515198 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.369671374 seconds)
  done (took 42.317414563 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.371608527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.370534732 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.369226998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.370595476 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.372378681 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.369694677 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.370437941 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.370374745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.370742078 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.370594285 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.369973276 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.37075388 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.371862015 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.371651901 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.370880154 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.370356197 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.371375168 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.370491874 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.37044528 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.371164761 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.371999923 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.369884495 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.36943141 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.371252981 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.370909352 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.370276555 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.371296758 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.371282375 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.371526514 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.372785432 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.370074228 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.37042494 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.372316004 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.371317079 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.3719937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.37255553 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.373518525 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.372694482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.371939796 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.373139488 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.371533639 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.372454087 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.372200399 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.373308687 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.371483049 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.372461686 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.372658402 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.372408737 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.372644691 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.371011097 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.371638578 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.372483903 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.373677573 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.373821517 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.372850802 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.374139644 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.371972605 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.373085341 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.373387638 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.372559865 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.373933258 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.374943178 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.373999099 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.372979248 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.372768299 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.374119757 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.373612327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.373516653 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.373731345 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.373232141 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.373365854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.374235144 seconds)
  done (took 100.035677236 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.373335814 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.375997763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.375007892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.373237541 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37381309 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.373843768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.375188778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374192155 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374476786 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.37488907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374563932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37512573 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374681977 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.37478381 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37663181 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.374414823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.375583436 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3765132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.374773308 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.37607306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.375701488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.37539592 seconds)
  done (took 31.504981707 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376423999 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378647049 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.374759188 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379911451 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380225738 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.3773822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.375926678 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.377547256 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373956233 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376774882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375108775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376792756 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.377740257 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376194046 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.376058051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.377973085 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377031023 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.378770736 seconds)
  done (took 26.044249535 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.376319323 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.377387318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.376549172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.376893548 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.375843432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.378097587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376633369 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.377423042 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.37741374 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.377129093 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.378148333 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37775527 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.377025463 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378007693 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376686029 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.377563074 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.376758395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378735985 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.376796856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378535979 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.37834242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376312532 seconds)
  done (took 31.558480783 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378862726 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.378222389 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.379628426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.378701889 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.377820708 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.379133539 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.378438473 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.378520594 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.379377998 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.378389177 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378287444 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.378247325 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.380919911 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.379324613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.378553614 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.379478997 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.379973843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.379644201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378413801 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.379454159 seconds)
  done (took 28.839228753 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379199338 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380021234 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.379560133 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37976961 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378727754 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.381054361 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378859326 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.380968731 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.378779803 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38000191 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380515495 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37893367 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38110397 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380777023 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380781842 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382593176 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.388222941 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382038259 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379710855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38258574 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380876811 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379919015 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.38306321 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379996604 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.381809165 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380839604 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381148973 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.381934564 seconds)
  done (took 39.923442892 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.380321854 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.382718372 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.381777273 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.380922374 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.380588811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.381678985 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.382302936 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.38095079 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.380234959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380634366 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.381851232 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.381101667 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.381100076 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.383265315 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.382264966 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.381656131 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382382036 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.382056114 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381836428 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382298427 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.384069329 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38208182 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.383837408 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.381229989 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383031582 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.382717769 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383547437 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.382165721 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382303312 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.382683817 seconds)
  done (took 42.722358885 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.401857514 seconds)
    (2/2) benchmarking "in"...
    done (took 1.400390954 seconds)
  done (took 4.065421806 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.38254757 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381913437 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.38385067 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.384564311 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.382338348 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.384392771 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.383425662 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383000469 seconds)
  done (took 12.33023566 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.37599373 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.385499321 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.384402928 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.384336432 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.384117179 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.375653687 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.385376397 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.387779022 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.377038408 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.37772339 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.378859684 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.375961664 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.381359349 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379322371 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.379540439 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380120775 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.389075897 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.38588747 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.385729221 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.384730641 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.386161018 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.379627347 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383414697 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.389215035 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.377274823 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.386181018 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.385580099 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.388058388 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37861122 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.383127539 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.381076773 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.389095708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.38577754 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.386073075 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.386632746 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.385405226 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386823632 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.384693664 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.386303969 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390386253 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387568488 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.386698323 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.379647591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.383548882 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.38350654 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.390776248 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.388534547 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.386333311 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.378197548 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.381877241 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.389390027 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377906564 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.387798428 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382805011 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.385501799 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.390332535 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.393707287 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.379140641 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.382293208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.389228667 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.394942289 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.388622786 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388100006 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.392790024 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383719435 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.386895816 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389893479 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.393169833 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.389433141 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.38931069 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.38877772 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.396382446 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.392806355 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.393087892 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389987298 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.390750566 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382145563 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.392310834 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390891568 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.391496756 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.393970274 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389110951 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386260486 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.387517364 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.383687114 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.392067239 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.388310539 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.389002796 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.380762869 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.391372706 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.396559017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.389822219 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.382794548 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.384149403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.387271661 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.392541757 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.382869813 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.385901319 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.393928421 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.389433128 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.390247636 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.382340906 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.388696002 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39623302 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389726142 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.390513755 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.395488033 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.383094238 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.393374372 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.397869694 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390787458 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.383322847 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.387030155 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.392649582 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382808083 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.38797241 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.39773695 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.38636829 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.397187093 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.390440172 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.389141688 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.394396503 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.399033886 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.390349872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.386724581 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.39498704 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.390395773 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.391293977 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.399000462 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.392176877 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.391136403 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.38734803 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.398857347 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.386202316 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.39755328 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.387382445 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.395177502 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.391559603 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.393097872 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.387387625 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.393558088 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.389932363 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.392015364 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.394973893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.39860311 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.390770334 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.399129895 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.3922916 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.392112155 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.394086639 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.397919191 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.394749553 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.38772335 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.398068765 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.386788736 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.394844938 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.387183426 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.39771237 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394593683 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.395284061 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395791286 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.387172185 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390664578 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.398741112 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.392175795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.392340109 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.397735053 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.393308579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.394016378 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.385366985 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.395654951 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.385719923 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.389109247 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.398526681 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.395912847 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.394966854 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.393420181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401217836 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.393818446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.393771978 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.387896156 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.392417815 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.401296283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.3971463 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.403908432 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394633717 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.396493087 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.389397213 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.389515151 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.397222389 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.387779377 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.399436274 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.400256674 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401882603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.390963951 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.398168767 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.387413925 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.398206518 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.395949434 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.404183904 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.396740376 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39732374 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389550674 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399430705 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.39126542 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.399809788 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.387566975 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.399199353 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.397341354 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.396549452 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.396410469 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.390649538 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393520149 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.40106341 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.396740915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.398633472 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.390581012 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.400704362 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.388578793 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.392080595 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.400695437 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.39702581 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.399378489 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.403961621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394925957 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.40261651 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.398183955 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.392463794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.400476887 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.397421667 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.399973671 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402577433 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.400938633 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.394692004 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402793258 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.401892925 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.392584959 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.398940167 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.406688113 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.399792141 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.390892504 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.400553209 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.400656992 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.398966593 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.40113963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.393407187 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.404992034 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.401279376 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.407849262 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.392426822 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.401833135 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.394085365 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.401905486 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.395636185 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.400374221 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.399544232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403755448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.409116744 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.400005977 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394224201 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.404579577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.400906074 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398790639 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391929922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.403091284 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.402445237 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.400076043 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.397952469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.396665064 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.401397144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.392693732 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.402569335 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.393861067 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.409455994 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.414124215 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.403305147 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.405750493 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.405583387 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.402640546 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.403151263 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.395783118 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.39550075 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398623429 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.397209626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.396976869 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.406000166 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.395938057 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.404797273 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.399072475 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.403612497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.403262569 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.401582382 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.394078406 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.404959612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.403169133 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.403783936 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.392902649 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.403406007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.397892522 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403736847 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.402483192 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.397449476 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410028883 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406082473 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.401011205 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.399351832 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.39962376 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.397542844 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.400403431 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.407425334 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.396999384 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.406208253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.39710311 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.400660252 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.399192287 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.407081411 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.412903124 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.400032135 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.406002205 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.404902347 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.396397086 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.396828341 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.406169854 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.406337007 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.414817758 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.395519161 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.407197171 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.405264184 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.404247307 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.403885601 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.405174184 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.404595934 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.405642276 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.407693782 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.40779296 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.401788092 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406910036 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.413252001 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.405168432 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.406015642 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.396752367 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407653114 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.414859527 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.401411068 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.402803994 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.402169535 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.407348334 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.404735155 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.404981056 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.40606741 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.406234669 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.409778921 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.410979254 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.407421716 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.406282504 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.410013709 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.416621043 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409141559 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.415994167 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.401470011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.409709011 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.406011881 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.401394815 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.402390171 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.403736862 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.411596945 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.400122863 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.409803925 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.404732655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.402032884 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.408041998 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.41455238 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.399560017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.40744075 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.415129598 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.399480724 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.411288464 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.40864112 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.399649935 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.409980225 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.405926824 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.399485681 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.402804704 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404868275 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.411596037 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.401041814 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.411213791 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402777944 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411025552 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.409414227 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.408274954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.409485978 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.409491532 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.402123517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.411345987 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.408346076 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.417915616 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.403920913 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.407826081 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.404453082 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.413926496 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.420206704 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.402814854 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414769385 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.411635501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.404124945 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.408593776 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.41358248 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403746828 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.413237167 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.402954093 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.405509889 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.405230361 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.411776591 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.412208258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.413215388 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.404397147 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.404757605 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41217579 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.410055639 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.411457456 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.408127853 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.41579962 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.404365838 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.405167945 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.412079432 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.405093831 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.416044977 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.403657892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.405864051 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.409259645 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.415959284 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.412387472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.409921336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.40473066 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.404730687 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.416296162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417329379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.409992772 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.405856807 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.414423894 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.40434683 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.40907571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.408897002 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.407232072 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.407703006 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.415826928 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.406470648 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.407743667 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.407955918 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414920257 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.41578361 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.415726277 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.406187761 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.421529315 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.421707075 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.418902359 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.405511549 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.409503796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.408408658 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.416161672 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.412854948 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.406092041 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.419716671 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.417070297 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.41618689 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412138032 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.41404169 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.405419856 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.415140242 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414507067 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.410062745 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.419805259 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.410308822 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.420833463 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414284776 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.413396838 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.406047796 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.408397671 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.410148921 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.40910713 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.414672305 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.4137575 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.416974698 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.412265058 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.419872544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.416128407 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.414712339 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.415011005 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.407111603 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.416811388 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.407562199 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.416467431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.417318552 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.408380176 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.416657101 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414072138 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.40849446 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.410548493 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.41948671 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.415855528 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.408552925 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.41464618 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.420086719 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.426194589 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.416216507 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.410460999 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.413714459 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.419857247 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.416317379 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.417183517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.410790757 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.424497219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.429363292 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.41018198 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.413676886 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.419374112 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.425403888 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.416015743 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.417959523 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.411997407 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.414734672 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.419671927 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.416021103 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.421257051 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.42347123 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.413029418 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.419689178 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.410840779 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.413229294 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.417278505 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42825669 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.418249823 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.412993469 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.42492661 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.430654298 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.416489248 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.430317906 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.423120623 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.419594446 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.422511652 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.409431708 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.420241063 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.414885826 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.423158983 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.418764225 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.418638999 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.417889868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.410987137 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.41911855 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.426279771 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.428544501 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.419217874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.412137225 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.414109251 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.419022372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.420024758 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.420670718 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.419350254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.419493122 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.419372846 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.413118219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.42984352 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.432011755 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.425550886 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.420361455 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.419708463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.418477077 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.423094598 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.417713862 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.423831657 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.419279225 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.421545636 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.417794825 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.429167345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.422926368 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.414542545 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.415943579 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.415323937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.424335787 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.4283095 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.437975506 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.425026833 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.425129498 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.424168089 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.423355953 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.415887341 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.424078366 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.423568257 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.416154926 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.418183299 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.422222144 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.422949812 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.422907999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.414011931 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.425712109 seconds)
  done (took 837.137093745 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.424029549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.422612937 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42194874 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.422807718 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421278738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.422272483 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.422197573 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.422093609 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.42180737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.422405427 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.422394201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.42251855 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.421936398 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.422586346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.42232804 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.423571451 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423565183 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.420696274 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.423402968 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.423783894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.424675811 seconds)
  done (took 31.171041284 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.42444382 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.423172464 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.424126521 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.423900064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.423194365 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.423762169 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.424376489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425422058 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.423406319 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.424149652 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.42450459 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426125952 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.424802334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.42322217 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425049282 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.425445448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.425124823 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.424072959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.425489744 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.425312175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.425482689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.425130196 seconds)
  done (took 32.637299128 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.423978331 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.424956661 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.419149989 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.428175675 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.425713971 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.424248828 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.426261669 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.426861533 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.424993145 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.417738352 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.417968196 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.42000594 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.421487114 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.428829083 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.421689725 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.430493139 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.426371884 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.425908374 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.427607903 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.426188915 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.430469812 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.437943895 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.426480328 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.417233454 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.428256591 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.428083917 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.426876539 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.426477288 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.418008172 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.428660659 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.42732308 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.420577111 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.430426315 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.429495265 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.420196138 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.430450784 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.427607681 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.425487534 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.427481066 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.424406519 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.435618012 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.426705137 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.431800951 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.440505577 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.428164651 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.421608856 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.430839884 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.428198806 seconds)
  done (took 69.763427362 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.429745989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.427863295 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.427879582 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.427704793 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.429181938 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.429321254 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.429042929 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.427403101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.428066351 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.428541858 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.428777644 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.430472372 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.427589775 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.428611294 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.428680717 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.428236162 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.429418818 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.42916602 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.428618898 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.429832847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.428867151 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.430227038 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.429157023 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.430834065 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.428234385 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.430403242 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.429440987 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.430719722 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.429486685 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.430616906 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.430315981 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.431164998 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.430957889 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.430049012 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.429807001 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.430221834 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.430279017 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.430544446 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.43068584 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.431396374 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.431345912 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.431026231 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.432238084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.431507037 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.432193882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.4315971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.43030067 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.430336889 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.432150494 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.433359199 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.432156107 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.433190814 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.431480171 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.432459422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.433340627 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.432074788 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.433208769 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.43346884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.433172481 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.430871176 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.431960769 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.431144187 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.432083953 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.43329085 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.433286552 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.432187213 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.432399252 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.434355099 seconds)
  done (took 98.58299041 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.433768377 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.432284968 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.434339605 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.434029761 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.432614857 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.43342997 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.432002448 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.43321458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.433978255 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.433919294 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.434412724 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.435445918 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.434590305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.436935623 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.433741444 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.432379874 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.433159095 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.434374222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.43413573 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.434518692 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.433340695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.432559011 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.434658617 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.435847847 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.434436626 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.434184844 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.43362919 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.434058989 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.434410962 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.434884843 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.436281654 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.435345904 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.434989855 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.435675257 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.436185424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.435395572 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.435962565 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434494189 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.436049311 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.435134975 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.435340348 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.435690905 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.436298161 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.435619093 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.437213271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.436643721 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.435842489 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.437243876 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.436007082 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.436375481 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.435183422 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.435372219 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.435920388 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.436673859 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.435824869 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.4373486 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.435899959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.436848949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.436607177 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.438173212 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.435925682 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.436574339 seconds)
  done (took 90.279175244 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.436652522 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.435898021 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.438039651 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.437961393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.435731674 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.436789734 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.436632188 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.436714886 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.437878444 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.43665922 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437631708 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.437106982 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.438018203 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438261511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.436358007 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.438108818 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.436719225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.438015527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.438071124 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.43840545 seconds)
  done (took 30.054245471 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.438338327 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.438040976 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.437243374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.436349507 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.437910131 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.437079636 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.439501406 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.438628433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.436952249 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.437137085 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.438799358 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.437882925 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.437590604 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.439510109 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.437973562 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.438778606 seconds)
  done (took 24.317298436 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.43793532 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.438051275 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.43858758 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.438276002 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.437660752 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.436955134 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.438740949 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.437788852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.439405511 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.438722681 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.43860615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.439696546 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.438352075 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.438748711 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.438924608 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.439474034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.437906669 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.440869128 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.439281584 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.439515259 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.438563499 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.437704145 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.44049857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.438479027 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.439715013 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.438839678 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.438040991 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.437666212 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.439287209 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.440361584 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.439178175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.440736931 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.440074176 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.438997313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.438518291 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.439222966 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.439311327 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.437729193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.437851021 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.437320317 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.436751518 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.43617615 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.436197488 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.437615433 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.435821374 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.435829451 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.436702456 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.435929302 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.436878566 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.437645646 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.436709928 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.436880531 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.435796298 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.435690524 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.435728421 seconds)
  done (took 80.408621299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.435670596 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.436717232 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.436588786 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.433759021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.434979341 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.432811114 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.43350441 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.43602215 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.434796323 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.435324486 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.433579099 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.434911205 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.433572672 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.433397943 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.433895994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.433662327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.434787275 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.432383438 seconds)
  done (took 27.126398136 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.433884504 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.432198402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.433899793 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.434481019 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.432734411 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.438295329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.43371557 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.433095265 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.433208935 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.433867388 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434095909 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.435157441 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431616846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.433458655 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.434360938 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.433927801 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.434580711 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.434343545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.434168754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.433541078 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.434481818 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.436147142 seconds)
  done (took 32.854123595 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.426802707 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.424961868 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.424070998 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.437848214 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.431520344 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.423900889 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.42356999 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.424724875 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.443127407 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.447498345 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.445102841 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.43144706 seconds)
  done (took 18.490368548 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434971417 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434827263 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.43487379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435388044 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434704252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435450366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435123907 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434383548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433696048 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434311853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434977034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43503729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435399451 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435676161 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435469985 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436854989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436335007 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435273496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434244702 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435991288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434738112 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435747132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435253922 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434556387 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436251285 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436842808 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436234837 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436238182 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436435939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43557724 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436128596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43637795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435801838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438221362 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437865282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43753858 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437916068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436766984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43741006 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435881214 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.438092552 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436814105 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437641573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437181708 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439045758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439816526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437505344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438187201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438409704 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439143363 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439850457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438118983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439407848 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438650577 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436388385 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439963187 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4380655 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439128595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437864474 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438557123 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437839854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438776254 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438830129 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439611019 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438280994 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438674567 seconds)
  done (took 96.137587682 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438068353 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.439345743 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438118272 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439150978 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438394675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440539126 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437977847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438569491 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439426528 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43667555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440404647 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440010877 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438503887 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440921973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438966706 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439773925 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439673844 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440560278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440425775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439362852 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441186094 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439743261 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439849839 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440834329 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441000718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440352636 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442028793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441002492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441038072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439824962 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441535689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44056601 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441198105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.441555202 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441179962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442193792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439481952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441154485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441270051 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442249541 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443156601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441645871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441931737 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44209093 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442999353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441572903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441412548 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441443901 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444008021 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440472972 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441107404 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441223709 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44266008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44282735 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441619135 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440468076 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443250016 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442739107 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442361782 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44309286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441885092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444072089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443420219 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442284238 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442957067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442410526 seconds)
  done (took 96.414963447 seconds)
done (took 1960.045267793 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.598578002 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.555891131 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.431938917 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.452894971 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.433186249 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.43187884 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.450534233 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.43413912 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.434598029 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.431968101 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.43345207 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.624134204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.468816213 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.433072105 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.433517934 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.529831013 seconds)
  done (took 28.88974277 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.466138121 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.441677434 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.561163987 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.442057556 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.464380653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.638427754 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.50396473 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.440339152 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.619209286 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.456085561 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.439610746 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.459812089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.436530561 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.437181119 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.459388811 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.635903661 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.717164511 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.444108221 seconds)
  done (took 31.374089159 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.913708836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.435515005 seconds)
  done (took 5.660993978 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.459250325 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.437297571 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.439179175 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.435707046 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.430111945 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.430314466 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.435803138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.432630871 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.447630005 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.571712392 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.437663622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.448660401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.435204457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.439134587 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.445298631 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.484207021 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.596316663 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.446422907 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.445125422 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.442527824 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.43581574 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.528840031 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.481286951 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.447766964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.570899682 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.432237474 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.439002696 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.445686562 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.549713607 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.44626146 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.438236035 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.435114245 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.438151902 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.410487769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.984722776 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.430693471 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.463079808 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.445953287 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.443584304 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.575455406 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.439432484 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.443917447 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.429774486 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.9778364 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.545628612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.561609923 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.433129925 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.437995617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.439484502 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.503903688 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.437074098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.4407835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.496166648 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.237941849 seconds)
  done (took 91.123304272 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.433644433 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.431531462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.617372914 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.453622657 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.43114103 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.45026765 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.431361433 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.728453767 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.457290456 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432801139 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.753599408 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.080324911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.436929018 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.498628612 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.470921346 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.489699317 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430350991 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.458685826 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.431325088 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.431080834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.018000001 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430404708 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.430068725 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.521456632 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.473003243 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.980109792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.432189681 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.43144494 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.450885482 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.430921602 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.035004867 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.438091566 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.482462406 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.434483179 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.725722519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83674596 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792295801 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.439703965 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.474576951 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.432096435 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.4616518 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975505929 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.814488729 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.430736568 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.432751938 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.970185878 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.432744889 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.43794318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.434064985 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.705892574 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.433559196 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.43607188 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.432460319 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.446220236 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.432890749 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.498081097 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.50050792 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983897981 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.432050294 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.432499349 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442115986 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.437256408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.445579331 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.433672078 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.435295205 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.818802818 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698131008 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.438572702 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.817441535 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026009049 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.437714519 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126505524 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.433578257 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.452011846 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.478712241 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431890535 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.433763062 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980173472 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.445540841 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.432010104 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79498608 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.431751561 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.741409469 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.450157428 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432394668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.037925105 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.432023093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.46998459 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.44157078 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.432510328 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.431742175 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.437918886 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.731370393 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.49061468 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432397403 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.432745617 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.440459139 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.433792306 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.432894136 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.433148091 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10637669 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.437653318 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.433543904 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.454949145 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.433099199 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.436307481 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.434350513 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.43643562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.72468384 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.432569819 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.439790732 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.433254892 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.442237848 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.442461282 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.527334697 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.441991677 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.757385099 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.436860327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43433173 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.43622198 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434153413 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.468853207 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43461904 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.438837058 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.434695059 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.732952299 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.453492184 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.435453755 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.436515904 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434353191 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.435316611 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.451617227 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.491507386 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.437142558 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.307752648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441091204 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.451499466 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.434389479 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.435141199 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434508514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.440639074 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.436199587 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740120744 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.727095746 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.688193131 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.437487008 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.434443561 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.287542122 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.442061924 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.617830891 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.454480492 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.433638661 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.719052452 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671231858 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.434792912 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.434521954 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.43950661 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.719262902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.434242553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.77862086 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.057777631 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.434612613 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.442227402 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.295417237 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.259042113 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.43717234 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.439526081 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.737057344 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.451813454 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.433855132 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.434959124 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.433712516 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.434523885 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.440833997 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.436798778 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.434675138 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.434331548 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.727036099 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.631854461 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.454599313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.442206816 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976082621 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.457800931 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43886602 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.441680745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.437963097 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.435291444 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.499011673 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.434500484 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.433455586 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.438016834 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.438791394 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.001616908 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.434614101 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.457414167 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.630708419 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.2154176 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.434801265 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.436832265 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.433468555 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.489983769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003362425 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.483132196 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.748580035 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.441280876 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.476269231 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.433485957 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.442673273 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010910168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.438339097 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.452706232 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.187423138 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.435243663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.917417639 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.434510121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433767791 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.111329856 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.43637474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.43807797 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.435223127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.450814371 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.772732136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.435975387 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.471618936 seconds)
  done (took 522.559170932 seconds)
done (took 680.919468654 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.43612182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.434194131 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.421101641 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437679465 seconds)
  done (took 11.044900159 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.451440419 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.440640963 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.449894742 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.438958128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.450255631 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.439584246 seconds)
  done (took 9.987523684 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.437244899 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.438437045 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.438645324 seconds)
  done (took 8.629558934 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.661854991 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.458652133 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.789638506 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.447825441 seconds)
  done (took 9.672011162 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.45148549 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.449987053 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.450455549 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.451199061 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.452111739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.453604684 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.451907726 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.450453019 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.455172266 seconds)
  done (took 14.377890011 seconds)
done (took 55.027112949 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.531053898 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.285075964 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.497345163 seconds)
    (4/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.503045552 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.414657668 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.50472606 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.254684332 seconds)
    (8/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.467777529 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.468969551 seconds)
    (10/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.41450305 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.543826876 seconds)
    (12/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.510750714 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.283605038 seconds)
    (14/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.51820999 seconds)
    (15/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.51703219 seconds)
    (16/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.414735057 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.456096489 seconds)
    (18/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.418663511 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.485821634 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.684218254 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.132071718 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.533554478 seconds)
    (23/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.414425149 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.645739845 seconds)
    (25/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.41864958 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.515641035 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.426062781 seconds)
    (28/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.622697431 seconds)
    (29/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.165250225 seconds)
    (30/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.415239312 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.472255651 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.56832489 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468672462 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.522002447 seconds)
    (35/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.689983014 seconds)
    (36/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.431465958 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.511328907 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.704950597 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.623787114 seconds)
    (40/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.217341855 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.420081391 seconds)
    (42/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.541290441 seconds)
    (43/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.467053801 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.607798806 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.553403249 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.550717521 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.594316234 seconds)
    (48/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.548713284 seconds)
    (49/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.650456195 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.476689821 seconds)
    (51/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.41473642 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.443770768 seconds)
    (53/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.586954016 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.414223191 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.293534465 seconds)
    (56/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.419421965 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.571471227 seconds)
    (58/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.469209423 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.404654885 seconds)
    (60/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.416741686 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.26701595 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.416964302 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.457578907 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533770727 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.414895351 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.254251527 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.19048692 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.546964121 seconds)
    (69/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.554037294 seconds)
    (70/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.417469116 seconds)
    (71/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.467523604 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.461118177 seconds)
    (73/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.444622993 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.434240555 seconds)
    (75/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.214925458 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.524936658 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.617217649 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.548465898 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.52280018 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.554647018 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.581813836 seconds)
    (82/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.521394874 seconds)
    (83/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.170065583 seconds)
    (84/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.570127353 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.468363851 seconds)
    (86/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.659364828 seconds)
    (87/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.424077016 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.615947146 seconds)
    (89/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.469171272 seconds)
    (90/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.397929348 seconds)
    (91/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.607950205 seconds)
    (92/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.416898201 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.590597634 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.470735791 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.443724145 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.542490256 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.688576886 seconds)
    (98/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.417496325 seconds)
    (99/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.657140724 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.513343596 seconds)
    (101/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.653681205 seconds)
    (102/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.440999456 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.435631743 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.340023947 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.591665197 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.592993442 seconds)
    (107/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.430247828 seconds)
    (108/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.476733521 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.545620501 seconds)
    (110/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.477816208 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.477857212 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.583735432 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.65124056 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.547463358 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.466331624 seconds)
    (116/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.479884279 seconds)
    (117/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.588690436 seconds)
    (118/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.418573428 seconds)
    (119/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.512567658 seconds)
    (120/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.519969412 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.439614859 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.441571342 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.630014751 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.563394342 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.138693892 seconds)
    (126/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.553838891 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.2375608 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.578060753 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.528866537 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.583226817 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.683515665 seconds)
    (132/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.508684035 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.603902691 seconds)
    (134/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.694325625 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.5069567 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.419122475 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.479720656 seconds)
    (138/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.632873396 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.238830051 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.451969741 seconds)
    (141/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.564895377 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.592468203 seconds)
    (143/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.193078466 seconds)
    (144/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.563019266 seconds)
    (145/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.461167914 seconds)
    (146/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.546616468 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.421537071 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.534024965 seconds)
    (149/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.319105455 seconds)
    (150/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.587575055 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.45054275 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.514628993 seconds)
    (153/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.562658279 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.558751357 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.478047357 seconds)
    (156/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.486790677 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.5469638 seconds)
    (158/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.518627074 seconds)
    (159/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.254379246 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.50385858 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.443165921 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.558965984 seconds)
    (163/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.79761333 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.484097483 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.553437328 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.51035205 seconds)
    (167/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.472331325 seconds)
    (168/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.514367715 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.565717563 seconds)
    (170/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.685169776 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.688942353 seconds)
    (172/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.566006774 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.598067131 seconds)
    (174/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.518768599 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.298457813 seconds)
    (176/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.126010646 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.124900258 seconds)
    (178/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.424797933 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.660755061 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.42136874 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.472283666 seconds)
    (182/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.569176408 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.427626482 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.549233656 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.422396094 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.46603163 seconds)
    (187/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.606184794 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.593639219 seconds)
    (189/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.629104692 seconds)
    (190/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.427837549 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.448668836 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.442787696 seconds)
  done (took 360.792406046 seconds)
done (took 362.108802519 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47359139 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.539957907 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.451960818 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.452135055 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452203732 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.453380159 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.47372611 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.452051438 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.465991424 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.468016294 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.45317085 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.45992166 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.466222142 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.462457403 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.486783356 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.455224576 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.452751544 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.463345921 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.467160039 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.468865522 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455326397 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455282368 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.482625024 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.452525069 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461155811 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46222208 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.459713987 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.446963934 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.461831352 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.467928119 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.448341055 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.460260876 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.470773847 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.466204505 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.45578222 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.464902186 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456319655 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538290776 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.475874683 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.465409008 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.463496235 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.470007473 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.458914123 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.459575152 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.465747927 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.481824746 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46398538 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.470824655 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.449112753 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.447600265 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.476860025 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.465696469 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.464877404 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.447249813 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.448207673 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.487214632 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.465058367 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475138651 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.461297404 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456535098 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.488448721 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473565523 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.466485778 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.462997054 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.462669701 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.470839133 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.465415448 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.470780401 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.462198874 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457255202 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45570552 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.463200744 seconds)
done (took 114.827738793 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.575434095 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.452081361 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.623210695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.463130975 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.61998223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.58005615 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.462361698 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.463725923 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.462805729 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261781336 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.463835044 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.464977001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.454799465 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.464306002 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.57761162 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.464425935 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.465868138 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15847174 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.464539722 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.594646484 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.449009537 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.464507105 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.464380238 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.262919761 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.454612727 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.451064916 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.597033466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.466827514 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.162139407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.452016194 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.454329139 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.161309918 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.597632221 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.484538771 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.474529596 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.474010931 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.624039194 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.467237383 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.584301272 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.576707154 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.617548676 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.503280968 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.452195572 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.457552233 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.467508426 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.466907427 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.464887731 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.494200072 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.455680468 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.466631649 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.168596338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.475374172 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.465765804 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.464923334 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.466197218 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.494386658 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.466259957 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.468042548 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.597777625 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.467036782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.584565611 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.261959099 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.263109743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.467433764 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.45543999 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.46608075 seconds)
  done (took 116.868071749 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.524208666 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.532357098 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.567495309 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.4570597 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.508267332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.569137403 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.457793793 seconds)
  done (took 11.945206995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.465442725 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.46702979 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.507663978 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.505387283 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.467697244 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.652680038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467173548 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.47060825 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.467115098 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.509891328 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470689533 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466729126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.475361092 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.458835383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.50497524 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.469293048 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.577175346 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.46037115 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468316779 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.611577965 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.468112895 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.477309629 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.510863704 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.470190362 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.469854868 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.466714515 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.264685354 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468642282 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470150223 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.469491061 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.467872026 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.533461442 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.468215102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.45930381 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.468670991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.579490971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.468905039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471418076 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.46897361 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.460477879 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.46967554 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.469878914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.469290227 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.469370913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.47063384 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.485942902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.470138701 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.470396342 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.468586231 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.46885209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.508737782 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.46936776 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.468355853 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.469242591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.514132422 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478343166 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469272579 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.467481447 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.468292978 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47093766 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.612287736 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.508542645 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.470627309 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.508363461 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470843784 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471433945 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.46983361 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471119847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.55080733 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.4701801 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.508622515 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.469995269 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.645694378 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.48643205 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471707453 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.466412997 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.466244065 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471405117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.462666923 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.467961572 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.46987357 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.464137845 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.468939861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471382018 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470955197 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.624048533 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.575018181 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.471707039 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.480200929 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.470147687 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.470104243 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.514256361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.472809809 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.471865495 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.514813907 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.582061153 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.517087923 seconds)
  done (took 150.586953532 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.477334598 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.477235722 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.467392866 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.492022681 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.465449773 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.464358294 seconds)
  done (took 10.176873743 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.465130677 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.473852819 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.472311079 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.471902139 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.474447638 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.474623081 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.473892252 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466667245 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.474684341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.474106443 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.47635362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.47683617 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.473745688 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.475228139 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.475414221 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.474101136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.475221641 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.473756624 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.473115091 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473725223 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464180487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.474645364 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.475027611 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.468094399 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.480406995 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.475295986 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.491693822 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.475278977 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.474095614 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.469995716 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.47774724 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.478183811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.466413977 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.46993738 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.47658658 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.467394325 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477338779 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.479710724 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.474797765 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.476794779 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.478485378 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476852184 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.475424366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.479105506 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.468394705 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.471888806 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.481082233 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.490682799 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.476142671 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.480310611 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.480456355 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.47738855 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.480356608 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.479920728 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.469629855 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.471604462 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.482084302 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.4782653 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.477494423 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.469926276 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.478157201 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.479036604 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.468666915 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.479837811 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.477541405 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.478333351 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.468891543 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.480491618 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477783618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.477631935 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.479856752 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.4767621 seconds)
  done (took 108.567534027 seconds)
done (took 399.469558611 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.982529466 seconds)
  done (took 4.320122041 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.46896436 seconds)
  done (took 3.805618569 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.065776512 seconds)
  done (took 22.407540611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.492311577 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.489881576 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.484494812 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.471479897 seconds)
  done (took 11.277633517 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.886948785 seconds)
  done (took 4.225561594 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.482181267 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.473855831 seconds)
  done (took 6.294196991 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.697795868 seconds)
  done (took 4.037630104 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.798895732 seconds)
  done (took 4.138345265 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.475365235 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.475321364 seconds)
  done (took 6.297107558 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.444254061 seconds)
  done (took 3.783578238 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.388503977 seconds)
  done (took 21.726075828 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.476182001 seconds)
  done (took 3.808373657 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.490263399 seconds)
  done (took 3.819212168 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.904753947 seconds)
  done (took 6.235061091 seconds)
done (took 107.51475709 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.451319339 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.451070916 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.450987696 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.450042883 seconds)
  done (took 11.131962507 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.528134032 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.522804771 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.531676399 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.517842249 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.516985746 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.522885426 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.49754289 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.484166418 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.510698121 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.506141396 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.523163542 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.514134069 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.519925815 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.482184864 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.502140274 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.518768165 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.505735418 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.524858524 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.476334736 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.509893787 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.45166017 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.504840715 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.499942547 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.449067359 seconds)
  done (took 37.448388987 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.936114331 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.508414784 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.590936077 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.488408619 seconds)
  done (took 7.84001147 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.547466552 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.547406265 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.565217278 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.601826868 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.646525293 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.559249786 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.467315293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.461642107 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.447522231 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.54600722 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.629261251 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.540201174 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.754599704 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.436769761 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.753511306 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.436952443 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.437180501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.535907652 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.589352006 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.618480609 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.432458867 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.535597964 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.541154799 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.538209874 seconds)
  done (took 38.483074952 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.438758835 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.445979876 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.431662019 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.446075709 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.430854628 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.434473168 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.431640835 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.434561856 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.428313432 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.429937397 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.430397953 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.443732776 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.427843542 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.428337452 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.432845035 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.428612296 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.427784091 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.433892781 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.436780404 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.425025477 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.426121008 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.431333135 seconds)
  done (took 32.827788323 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.409783801 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.410094196 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.758177497 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.66339594 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.405892457 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.408478568 seconds)
  done (took 14.352467591 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.480707038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.617489405 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.41239954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.749499224 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.83630086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417507817 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.412705864 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.64826982 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.945111364 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940069628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465074911 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.481169033 seconds)
  done (took 20.701409736 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.401078173 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.405315153 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.409994373 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.420990806 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459601728 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.413678541 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.411322221 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.397480387 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462147793 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.465383296 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410039107 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.458633213 seconds)
  done (took 22.406490627 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488568846 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408018291 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407165708 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43043927 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406482945 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407690183 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434076399 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100338176 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.408994086 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679347516 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404616945 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49186562 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651041201 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40558709 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409592615 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.370531219 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633883349 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912963494 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403398819 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402882899 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439642184 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403882211 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407690334 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616398578 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405571843 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402073117 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.664187047 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400090974 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686572819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668740233 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668292292 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408176628 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676206075 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034245851 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503713172 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607976586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414359322 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402929959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.375785093 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.414372487 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416065513 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404722637 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658633092 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402320503 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396760827 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396111303 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121106353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401977173 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.395873221 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395996597 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658963939 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483492454 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399341536 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39462339 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45809282 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394231737 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40043948 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512823614 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031927994 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393127356 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426318725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.399180415 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394356361 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400188304 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056171169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402452061 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398312921 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399002243 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393576568 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395411498 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417494106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393738213 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.413040367 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393322181 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177571511 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393229866 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398436235 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956191243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396976547 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.399265825 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618697167 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393495196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392501896 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.393205 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392579613 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127899291 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402321244 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361815576 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448515706 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087772175 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59940171 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413201294 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423788658 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613219731 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.362298314 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392878161 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.393689919 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398903546 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414491969 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09325929 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393005511 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400222894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639234722 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603962105 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397168656 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.358637603 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86959643 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404346553 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.426846695 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394631459 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60653234 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.02972595 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659014109 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400660121 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447441043 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394405934 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190945999 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407342275 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.40485454 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394426541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674525966 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202040633 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398995055 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468666942 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396780881 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396093385 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394995302 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396129232 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395995219 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.581557642 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403067722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660963786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.401594723 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39677755 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.397819887 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401105112 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401415115 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617154021 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403980324 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676172307 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39569787 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397267247 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39678676 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.613794358 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409702024 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406242467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734546175 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397380701 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403357659 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663283787 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432706629 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50833488 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428417959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.396725644 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648533001 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401654909 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401755701 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396848185 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399537918 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402793647 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405765244 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406790514 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031137136 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373019046 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402614595 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396475017 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.413229345 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470589934 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405395468 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605348817 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400677818 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398823497 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.404423209 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.403348573 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618077242 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659446319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.403064738 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592388398 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.869456667 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033686239 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4130176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.397920596 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396217077 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.395926527 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397022112 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397645906 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396896542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605440422 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664584231 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401575473 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052624284 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397958992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396402654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403813806 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657333571 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410356334 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396805441 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.405227775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395361444 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429298084 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662982934 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621637907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41058795 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395293345 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914787247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403239195 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398430582 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396320397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423431262 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396031411 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235439995 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736579267 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387281677 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659943259 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402529824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418786051 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397821127 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396206803 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413996716 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405816376 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409941202 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.604721871 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405788571 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404669206 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035088604 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192467863 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975476211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403751984 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.411649537 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403639674 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101139135 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397955191 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398161853 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642116735 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095762379 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398399634 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869397641 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.406742355 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15460975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661574373 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629368497 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40069464 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.405463692 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668556104 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615725285 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425434877 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408217507 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403453494 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.368805828 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945468201 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39791311 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581253912 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097456495 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3996073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404528984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.428023329 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409053822 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782889245 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401441185 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399042157 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398731621 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407577454 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235713886 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404010311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400671247 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06472187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399527102 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.879236281 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399291272 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606910789 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665727138 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.64528448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.405399033 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.403193205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646347837 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664892762 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407078991 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401840562 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98665737 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254712774 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407423396 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403889403 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195489206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407507039 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69266686 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.415932742 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406738617 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406196946 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40307581 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401446097 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.402608713 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408451075 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377378439 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903047524 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.402371541 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402493279 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418186214 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408222867 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648197871 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417842059 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038664838 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626192611 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403820689 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432955824 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.408227211 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405046014 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.377938624 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401433717 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402650644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470532519 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622485577 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402802754 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.372060462 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427839532 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61240975 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40231091 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408163918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629898017 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.405834114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.414606989 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204514585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43289781 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40699882 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40990092 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413246937 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441028789 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47693569 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61127184 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.671324521 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672358753 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792690977 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408563669 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409840555 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420679537 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485717744 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403978269 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410493317 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.405156971 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04284405 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199546843 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049247232 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668856296 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409810478 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415369888 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405304255 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646153519 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404736998 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679366551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405310983 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.405176948 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444044375 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40660327 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423430846 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620847676 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680130609 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405654887 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420552219 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410351844 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.405995302 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67314254 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.622123471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910976279 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964764845 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407943317 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406803882 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113430352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682155318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407135286 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40794954 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406849222 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.427067971 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.4215814 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418297276 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416673783 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635285384 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669007524 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058389953 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.669808117 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.595903894 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.408681721 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42377065 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659504719 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239421674 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61671898 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055555577 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153350976 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659950116 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481389966 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617720332 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.413052349 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645734734 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.40693409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413452759 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408990682 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409235061 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.40766546 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672528988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058543635 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661262656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412786333 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.417643827 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438962395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.619021256 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634249341 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15746318 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632505166 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677009759 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420750273 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409688659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057318396 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677918097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415489603 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.416327785 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630614793 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412860593 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446107131 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.281936814 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.410594219 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973371721 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.625025656 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431458483 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420255002 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163287534 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05550262 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.411609519 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91948524 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415648802 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412009486 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693301889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.417592785 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421036826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697437108 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.416552645 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416600852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626850695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.05223589 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168697955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.43692477 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417586579 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.419915791 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411317153 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43844539 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410477225 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416321373 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.799032182 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415424827 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412954754 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426443557 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.412657547 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417344917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.41705923 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412889855 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421029722 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.397297365 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.392049338 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424031157 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535170583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963600437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413035691 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.02801888 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747243674 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659470752 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420421486 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.386746603 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.417398957 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414426048 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413537813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414769786 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427981096 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975270605 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.419730205 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.684201088 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426728913 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624109559 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625457841 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423650596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628768586 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422351604 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43824519 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.383810824 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41353142 seconds)
  done (took 995.803946751 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428463752 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.420665143 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.421531683 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.407861132 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434260351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426975043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.432407806 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492549037 seconds)
  done (took 20.757927752 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.417616548 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.418744379 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.418692513 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.419531713 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.416393807 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.886033836 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.422724154 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.420548714 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.426932762 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.418493575 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.423331567 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.091897745 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.434423263 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.413741331 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.39538031 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.420502303 seconds)
  done (took 33.139396412 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.118464174 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.443478822 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.965010921 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.45732608 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.412795944 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41150287 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.545465267 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.423884862 seconds)
  done (took 26.072678405 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421239759 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418156645 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418782381 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.420725625 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.421069425 seconds)
  done (took 8.393209239 seconds)
done (took 1270.688040712 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.421630355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.420908157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421472492 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422925782 seconds)
  done (took 6.980654836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387582156 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.38585246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.386379663 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398591345 seconds)
  done (took 9.853059359 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.106843716 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.013123602 seconds)
  done (took 5.414603326 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.934367848 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.933906218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927168492 seconds)
  done (took 7.091546894 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70341061 seconds)
  done (took 2.998676075 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.370125019 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.413128742 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.117009062 seconds)
  done (took 8.196029672 seconds)
done (took 41.829578639 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412676549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.168042128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.565357896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.414403528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575247213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.566106517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.658304595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408375871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411015556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42091058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4125698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.571596851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.640615718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.170377496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.640460861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.171022576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.570511606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422768571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41019489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.421000403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.657352046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416207121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411840306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412606618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.574965104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.557765995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40888915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.17136674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408817844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.43295986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.581536612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419952696 seconds)
  done (took 83.782737437 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410042241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.415649816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418262756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412741657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425311712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422256917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412380767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409211697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420179174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413873303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409235182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424969914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.412764192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410519133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.427706401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409866021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.426895592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422717415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414988578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412772357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412385301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413182984 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424132284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416829195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.414488383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428897146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410826055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.411703673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417419915 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411942744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.430313466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416938912 seconds)
  done (took 78.641079301 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411794483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416928364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.4181077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416303146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432017596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.434177939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415887846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.434447734 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416313589 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434090874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424109602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.415908311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434661162 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413423644 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416469566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410864826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418399766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420894818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417038261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416481115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420510805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431248165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41623192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417767265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.427403405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.432848592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.428677296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.422287664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429756562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429767412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.433284931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417537387 seconds)
  done (took 78.824218954 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.652222821 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428710503 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.431333212 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.423210222 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431983604 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.428100527 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.42384154 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.675426231 seconds)
  done (took 15.194760889 seconds)
done (took 257.738012981 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.424171886 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.926063664 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.4548922 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.422916727 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438219306 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450137921 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.64328374 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455734329 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646026379 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.455860369 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442436208 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.423617878 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.248308795 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.578052473 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.231383896 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.347884177 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.307250243 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.424518991 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.975516177 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.700789331 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451159633 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415538546 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.246303908 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.323230266 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.399645141 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.500872183 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.523414257 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.652049896 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.582058455 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.499578502 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.938788767 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.430965748 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.430633887 seconds)
  done (took 65.691737748 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.42185955 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.432220447 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.431634315 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.431934989 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.434151631 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.433016297 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.421469813 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.431338297 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.432302361 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.431434921 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.433287833 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.431975147 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.432153714 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.432615178 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.433069224 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407334903 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.422275537 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.433723263 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.424400197 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.406082768 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.432968212 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.434610426 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.435225659 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.4334389 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.434221789 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.432642868 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.433702973 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.432971861 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.434571513 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.433655722 seconds)
  done (took 44.200368517 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434691092 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.997538478 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.163308293 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436325631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.425507849 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.428831819 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.708681837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438010183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.430615591 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431195965 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.908014052 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.44094962 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458757404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.179111123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432569616 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433886829 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435159398 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.425104429 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.030910641 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439410441 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.706338133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440117819 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.708695113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439993068 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427622037 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425859242 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431653306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.244967412 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.445910817 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.900635184 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.1994062 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.703951266 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.204400186 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.254259039 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.200914114 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442756976 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435590884 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.906235369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433554685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42566997 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.704441105 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431011529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.178689312 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124047255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445257299 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435596093 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.2832447 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.889810928 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.666462451 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439017569 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.198061735 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431904226 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438843907 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430341162 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.666381725 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436641333 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.428900142 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.266359075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.434604049 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.710005164 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443597333 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430433631 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.002408345 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430706596 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.998905135 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43313573 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.437273046 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.430395495 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.193595013 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43644014 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13704945 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447689163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438329409 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.901442398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.022864986 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.330745027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431091908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020931597 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.230116312 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.728008922 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440214012 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.243224772 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.73350589 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.439032309 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441229523 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.439077446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437744036 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498599579 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.706793001 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056156213 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.130370169 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.280006286 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.713026716 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438119044 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431342368 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.276143969 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442253667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439182061 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.184935991 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.133099554 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45123927 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437761864 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136712751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45599514 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.711704525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441435043 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.248579045 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43732399 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501399666 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.440376142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438298985 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435916505 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.712865102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436477016 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.441838103 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132173577 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.921996116 seconds)
  done (took 199.417334862 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427350033 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.427435905 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.428483147 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.427142965 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.426480318 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.434397783 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428151571 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.427421396 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433061198 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.427113876 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.428898571 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.435465059 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434090141 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.427439369 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.428131782 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.428486924 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.42779685 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.43320528 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428132672 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.428246677 seconds)
  done (took 45.898993763 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.445216369 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.983318924 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.9531701 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.447749704 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.444486775 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.43534618 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.490203106 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.444096523 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442208169 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.725887806 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.605789842 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446101422 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442328929 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.442426479 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949052833 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.421036915 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.726940069 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.979828552 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.446555413 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979579052 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41694822 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443373925 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433931398 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979034009 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.738546497 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.714565419 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492671697 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982276318 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445526695 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.444509854 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.980092826 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4461513 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436186569 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.969654992 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445900372 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.457447631 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.444302878 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.493673161 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.493732454 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.728599468 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.988666486 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.727026869 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457676311 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.615098651 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.447638955 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418376652 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.992760781 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.446725848 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.416769065 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447972199 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450285273 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.969621308 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437277761 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.970717735 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.445567071 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445222481 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.985473624 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.972033734 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959203336 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.605738064 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435710922 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.717666222 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.447761105 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996364009 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448123873 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446649317 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446340713 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609349066 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985382004 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.718051152 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.732554735 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.731948446 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.44675965 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.504912831 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.447199148 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.731342869 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505549017 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.859295599 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731118327 seconds)
  done (took 129.695031672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.706798463 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.556159339 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.813125434 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.009280178 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.933694342 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.574237366 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553756646 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.682403672 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.44932139 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547843864 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.081201055 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528264909 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.209616019 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.502403266 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.545504022 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567027469 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.829076435 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.387852983 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.087318256 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.05532542 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.443507314 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545113699 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.949018609 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.639289623 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.441023459 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.990408236 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.352364811 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.953295812 seconds)
  done (took 54.251278207 seconds)
done (took 540.455481635 seconds)
SAVING RESULT...
DONE!
