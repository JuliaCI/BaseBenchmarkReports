cset: moving following pidspec: 4065
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.441300488 seconds)
loading group "string"... done (took 0.502551473 seconds)
loading group "linalg"... done (took 8.840841812 seconds)
loading group "parallel"... done (took 0.174233043 seconds)
loading group "find"... done (took 1.269824069 seconds)
loading group "tuple"... done (took 1.874658232 seconds)
loading group "dates"... done (took 1.338598972 seconds)
loading group "micro"... done (took 0.192912443 seconds)
loading group "io"... done (took 0.507098345 seconds)
loading group "scalar"... done (took 50.772076674 seconds)
loading group "sparse"... done (took 13.778489269 seconds)
loading group "broadcast"... done (took 1.292051356 seconds)
loading group "union"... done (took 10.05981434 seconds)
loading group "simd"... done (took 3.018314985 seconds)
loading group "random"... done (took 11.399293078 seconds)
loading group "problem"... done (took 2.206544487 seconds)
loading group "array"... done (took 23.928615965 seconds)
loading group "misc"... done (took 1.100522972 seconds)
loading group "sort"... done (took 3.71961566 seconds)
loading group "collection"... done (took 19.201412469 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.61029905 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125904225 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.265307755 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281636611 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238286162 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168661806 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143777178 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.259989481 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.655546748 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202714297 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137027336 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506494473 seconds)
done (took 6.418127914 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254490977 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.183821799 seconds)
    (2/2) benchmarking "String"...
    done (took 0.164619136 seconds)
  done (took 1.115337197 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077827488 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157220294 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111023428 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096882591 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096931765 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113200606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096202051 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112403513 seconds)
  done (took 1.556690917 seconds)
done (took 3.77610428 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515084764 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868418293 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490870929 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.165957939 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309425382 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308458443 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32216158 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203293042 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109115787 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09388789 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17908126 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.386282336 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43162411 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.942919706 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093893359 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099858994 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134969271 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.757236518 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083326948 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125223613 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4833407 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.186332335 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099257723 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120868649 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186562705 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134461615 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163575815 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105066006 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.65472004 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135916772 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182566761 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099712483 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161625808 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197493331 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212553939 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094321019 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677312699 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205727299 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090877361 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102003527 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675721503 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12408244 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189540827 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10377578 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091390921 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184846293 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094769773 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079455596 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117567403 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088772483 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.176368242 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.473938364 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10783538 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.1734567 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094078767 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692733123 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103922428 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283744459 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127372394 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097187238 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094689752 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091651186 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167638816 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098711721 seconds)
  done (took 20.255448028 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148739126 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166833973 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07904197 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15825095 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124588519 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080034538 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101711297 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078696034 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12833056 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.23391291 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1410579 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154015528 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094378426 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091180724 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146268289 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.234949655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112235017 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12799832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09253398 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109746892 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128345082 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099059899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112103456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097845325 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177030432 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20872401 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113661852 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126101808 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093428408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098973573 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144847204 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15076842 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09582851 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091802265 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194791987 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109173954 seconds)
  done (took 5.435211293 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19832667 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124580502 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216044407 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165764946 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.169336537 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147192212 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.177882307 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129958173 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.276356991 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.200256928 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182076165 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117545096 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.128067475 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083467885 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08405432 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097336977 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.464163247 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153297363 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.176277153 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153787017 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089364049 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099834927 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085710992 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086424572 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100814799 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08727692 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12000397 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.338684048 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203299406 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087376631 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.129641143 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086574309 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113147384 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115013007 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212236013 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127401411 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122012196 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104246781 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082702726 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224120391 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094410118 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096358033 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117889642 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13130681 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116840475 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099706959 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096185817 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226508319 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083558212 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127638041 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.067320372 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087597514 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198600758 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126682551 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098238417 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29529966 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101872313 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086744012 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102851831 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263068213 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115607379 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082401451 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100709074 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080343199 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08597163 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09682915 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.464519756 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092062005 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.70781316 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082339658 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159528674 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085706276 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106761721 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086720906 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08526732 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121163753 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079947125 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078923361 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097969676 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080300787 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084578289 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106643065 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085567051 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096124077 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146773966 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101834733 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119373526 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109718499 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104169632 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081222612 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127052502 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083330304 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084603566 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165777287 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088096242 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106539516 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086175643 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145013008 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083246859 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.231921 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08466894 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111676349 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104211586 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127875105 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103060126 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080428745 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103029735 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080031351 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080576744 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162095667 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085389124 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084856049 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086603179 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112451959 seconds)
  done (took 24.157903063 seconds)
done (took 50.619268312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449636401 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08358401 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08270113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103309872 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084227143 seconds)
  done (took 1.647049459 seconds)
done (took 2.466393982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320843542 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191060101 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103499004 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188989728 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086626188 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194563297 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179884953 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096018387 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204816322 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085202728 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1852177 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085305427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105301921 seconds)
  done (took 2.870587876 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102459541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10930207 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102378892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121253784 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084746876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102231795 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120412037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113364236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102181399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114975791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086571251 seconds)
  done (took 1.978096876 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097990904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106303168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099458573 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119244814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086700543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098951427 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118615949 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10995181 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0997189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114140762 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087725467 seconds)
  done (took 1.961392595 seconds)
done (took 7.626920735 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.088840498 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.628163072 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.14703658 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209506859 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352098 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.23625587 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.577760107 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152884049 seconds)
  done (took 14.365264602 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.173610655 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110732691 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093145062 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093986916 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091502444 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111884584 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091983655 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094890857 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110774529 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095778622 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093399056 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111071075 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096191654 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091885325 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10713545 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096271136 seconds)
  done (took 2.545233813 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144662649 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.144508449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098783824 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099310914 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113669092 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099840266 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103035496 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117356009 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095520869 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09619962 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118923435 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099992148 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097110233 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.11066661 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100486696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118655784 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110826444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099312092 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116639994 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115827887 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101731567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096533481 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117317781 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103402746 seconds)
  done (took 3.523965874 seconds)
done (took 21.256332224 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149206731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102093394 seconds)
  done (took 1.075814858 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145174574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163383355 seconds)
  done (took 1.135496955 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113391641 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090756702 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138308191 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10442334 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090729636 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108235849 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117719051 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108473207 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092615667 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091545852 seconds)
  done (took 1.887172568 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095525096 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095936757 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123210866 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139216369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115993416 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095055669 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095170198 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110433014 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097297434 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091050565 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095490435 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127205279 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096326477 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127151094 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095831562 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096642444 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11840386 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096468824 seconds)
  done (took 2.744596072 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092427374 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093529583 seconds)
  done (took 1.018820974 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094211959 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090657589 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093214997 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110259731 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091284913 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089728228 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108076658 seconds)
  done (took 1.509379578 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489903662 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260629285 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358323233 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108282705 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147657129 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351364313 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147466528 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104718122 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103521459 seconds)
  done (took 2.938518891 seconds)
done (took 13.140329788 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093967015 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220548892 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.642057409 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116130985 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.203978211 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165500092 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.289318776 seconds)
done (took 2.571802395 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339866654 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142481245 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081906959 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090104708 seconds)
  done (took 1.489183766 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08330548 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099245606 seconds)
  done (took 1.021952779 seconds)
done (took 3.352590881 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091776981 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090100748 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08849606 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106056563 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089073754 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088569315 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088623722 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.121811676 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089008797 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.108497019 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.090338363 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089650974 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088008662 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108049604 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089846515 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088296907 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107227407 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090599365 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089573141 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089477563 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106387254 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089249109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088438891 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105299529 seconds)
  done (took 3.171862768 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113031026 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091386133 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110402227 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094016458 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094476244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111444713 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094827036 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091066444 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111270887 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091823248 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094137527 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111076156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09177242 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094143367 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108584661 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095141 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093687906 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091446078 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10966744 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095638471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093071993 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10800656 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094170214 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094300752 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111373194 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094459952 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090510231 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109088219 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094924824 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092866692 seconds)
  done (took 3.811317272 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098262433 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08723735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089657287 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11653938 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087333031 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090066219 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103840106 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088650775 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091672243 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08907535 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109297485 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089500664 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086556175 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107850692 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092238348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092668837 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115599199 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087741071 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086675097 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090913085 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110397065 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08805935 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089188035 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108383869 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091716182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087239637 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089635568 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108177223 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091385188 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089450899 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110177226 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094525294 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089559236 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115991488 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092852125 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089248485 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093690283 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106251287 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091686232 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.0855022 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105421618 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09024256 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086681563 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112986591 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091095636 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0906612 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086156404 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109308549 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091042551 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09185843 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104165222 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088099837 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091480359 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090640506 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110898949 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087219323 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090370106 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104489085 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092355114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090003704 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103196202 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089727266 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096307686 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08965445 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122530029 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09687768 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086765867 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109539732 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091091512 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094404046 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109938397 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10070501 seconds)
  done (took 7.767144194 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103246373 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099257496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091395224 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109323224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090924347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090156567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114105152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091400389 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090807007 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114026182 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091330738 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09078534 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109151039 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092377938 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090985157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091010425 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115088255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090713758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090639262 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109505095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091461677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094435108 seconds)
  done (took 3.002841649 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235771486 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097892071 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139013613 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122904596 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109617932 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121564199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095557467 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096647171 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112758611 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101102272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100713921 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113273603 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109189354 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117871582 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101454418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102346007 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112132622 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103760761 seconds)
  done (took 2.942213029 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105105935 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092178398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130038437 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093540723 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092283147 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092230386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116468737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11045733 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110915136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095038601 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099214204 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109620805 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094697066 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093852532 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092211628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114059073 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094844514 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092660019 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117074718 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097943967 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114679073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10067698 seconds)
  done (took 3.110348888 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106077227 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092301846 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128720324 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097235666 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09221927 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108868936 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099051472 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092262581 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116060676 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092618505 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092969541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090815533 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12453731 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093110659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097862616 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110491374 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093123503 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09227441 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11006837 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093367915 seconds)
  done (took 2.876631448 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172299443 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125167383 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109511516 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114149978 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125816019 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107656417 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114998709 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127184627 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10883187 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137116997 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109820024 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108085097 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134106799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112391886 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126344508 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117074288 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11470299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134897932 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109921425 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125057955 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120641316 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108896095 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134356488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108912438 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124428004 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109541497 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108072299 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130864586 seconds)
  done (took 4.236589997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092525969 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090621735 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090398009 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108204206 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091998795 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090211677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090426589 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110649612 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091351175 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09094679 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109061196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092424971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09148235 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09084571 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109305982 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091413206 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090570071 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109387683 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093605339 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091129272 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090641888 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110316056 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092270682 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091838089 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110772785 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091830675 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091008889 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090674143 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11055173 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091263518 seconds)
  done (took 3.741809289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104911628 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101144936 seconds)
  done (took 1.063358504 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099422742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106544273 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091167774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109980354 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098668868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091224419 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11995853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098376958 seconds)
  done (took 1.675195831 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145181975 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166057214 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09725073 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10287909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165868526 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156005162 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133443136 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095152237 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109700309 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086593698 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159721787 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085131438 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09230439 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108650053 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093934143 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097755279 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112161509 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102495929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09857355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111935098 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098894594 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097178408 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113839415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103351633 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087013459 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114583575 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096253599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103202034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108214116 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094780519 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090525496 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.110431085 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09722714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096230327 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110519266 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.14921487 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117834798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090529372 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09306094 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096424815 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145393515 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093169044 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110576833 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093034697 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096071034 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095488265 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115637355 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092743917 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085571858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106431797 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09371452 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08762325 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110807313 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094043177 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092779276 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117820708 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095387615 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089032199 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107889139 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089105443 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09126504 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107269862 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097013647 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094503447 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111280555 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094923933 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090960988 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111639023 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095182562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09374884 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109024485 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108631414 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093358098 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114776629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098785084 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093792014 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107470491 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099019406 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092899358 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110618086 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098050679 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121331196 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112700316 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090293467 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088574047 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117063978 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096104388 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095913417 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085636466 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121047004 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095385475 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093237902 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105599356 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092197918 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089357162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114469035 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087808248 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092306115 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110297526 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099190106 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098404712 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10977803 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095944743 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098171224 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116098214 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092936713 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139857171 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109704776 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087997135 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094259042 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117104156 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087183513 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091991208 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.111055206 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090227149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088901638 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114824836 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094321279 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093751376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114094066 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096793843 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094958367 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112145355 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093528642 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089116613 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094999852 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119253456 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094868387 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094542225 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112632267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093972289 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091775944 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115173798 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092012064 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097398538 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109857541 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093508583 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094259708 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11604907 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094370286 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089715161 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109360974 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095596292 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092148071 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114211929 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094655488 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087996495 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104111512 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096081133 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089987994 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092725475 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120012569 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090802665 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095110747 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108319296 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101736828 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090056121 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116562774 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096281845 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098377732 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116978869 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086572813 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091648174 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113822188 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096062207 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089532782 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113601461 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093867706 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099573966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104109638 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098204072 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085622201 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089677383 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117755149 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095215792 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096274904 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108102823 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13199959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103696986 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117078435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092967108 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09353369 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116163882 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094781168 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095707476 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11724559 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100089243 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092205254 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110118121 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099981077 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089472532 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.114577375 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092959056 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095238344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104021232 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095671959 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086066717 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097003475 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114471615 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0988086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097085315 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114486986 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093691685 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100121549 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107762565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097766997 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086021694 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11713659 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104431402 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099845104 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116137547 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096058718 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09181235 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.112134067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102071166 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094840558 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093260987 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.115462362 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08824304 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086399241 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118448617 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096797758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088544119 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113134544 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095734763 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095872859 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110311018 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088160844 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098572369 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114507339 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090829963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094630218 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107723605 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09299376 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100899282 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104795557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091317444 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095282428 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.116348117 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094900872 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094695179 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095926682 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118335965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098428435 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095275785 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11106584 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102482868 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092210795 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.112148389 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092115069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095729927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105912914 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096848537 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094463955 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108643476 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091089793 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097421981 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117199934 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099923997 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0922342 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097754303 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118698431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100756804 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090416982 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117550308 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09011662 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086810733 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109630815 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087079982 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094854714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108128289 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099505025 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092138808 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110376616 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097971768 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096423104 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110017278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09965417 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113129453 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10776812 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088810075 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092515913 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111753596 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092576735 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090498699 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.11329536 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097858512 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09833302 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114554769 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092909271 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094049343 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09876326 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109685856 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100380432 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099192082 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118878952 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091438453 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096562716 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110005202 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098659984 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088453158 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112090068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094335106 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093643536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110029191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094988917 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090006542 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106334001 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100740794 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099802379 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.110437063 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100075989 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093668671 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110141145 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092862626 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091079672 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099057831 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111709854 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101477743 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094781914 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10708483 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089549302 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09967809 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112497114 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10015373 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089368444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115715499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101926374 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097609987 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094634557 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12127993 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102350019 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098611383 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119574662 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087270682 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091723382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118718127 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094762461 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096881628 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115199777 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089508426 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095581817 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118796039 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096447168 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092389421 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107299093 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096294956 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100575087 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114827818 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099102863 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096645244 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095783418 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108752284 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09813264 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097886602 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114441036 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10048912 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09321228 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116909604 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091607592 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098967934 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113681316 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09031817 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08735184 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109691601 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102666828 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088891652 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09806858 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11901464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092846479 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09357825 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118146444 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091802128 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096410727 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11877388 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093449648 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103707299 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114206807 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09456296 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100254069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117314644 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089868651 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093346575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092883017 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119733437 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092962454 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098238732 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114951112 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09946975 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095741528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119141556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099359769 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09945994 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107855208 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101838449 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096735899 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114659369 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093499671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092706458 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107017597 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095160712 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10055392 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090960881 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122170027 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100828434 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091910787 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111215515 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100661458 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092686554 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120041644 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09160393 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09588635 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107056755 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097249229 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093368097 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.119555255 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091392082 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088050815 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118107004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100040814 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098902 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116725857 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102265826 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088529041 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087800114 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117198143 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092375704 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102799214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116960484 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094609527 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092472941 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.116129469 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097331164 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100634911 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109021188 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093084422 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094944145 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115369751 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094178634 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089354699 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.117455567 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095618358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096444487 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112401505 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091078528 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093975671 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119686723 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095524866 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090958983 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092228544 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122220046 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093645463 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090850824 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108396763 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101398446 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09665503 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122018851 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093199145 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095013035 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112405606 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097567286 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100970175 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112944492 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096276491 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093245695 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119704149 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101169536 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088674489 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112570511 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104956567 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099675817 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118397753 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098945198 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09422366 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121008998 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103020667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097519859 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087573072 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110081208 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094517922 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089098666 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117051345 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101946779 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092872292 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112462377 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100640263 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098705128 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.116097468 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098432169 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09023549 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119141177 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094303309 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098398225 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088952636 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108159885 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097670877 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09973885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113404397 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096111098 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096682225 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117077221 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091696958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09232468 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117649857 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101040703 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100437065 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112813218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095831189 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097659772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103954931 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.115773652 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094686946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101203524 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121769037 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096173999 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093894369 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119775592 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101258002 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096652104 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120393933 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094106749 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09456399 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.12224704 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102561903 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104030654 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113697868 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090906888 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099215818 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113188803 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090852888 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099133457 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121485689 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103015557 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094849609 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111705752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105680343 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100127949 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114990726 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094673341 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092755915 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119485879 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094737255 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099416979 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091616121 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122618341 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102685805 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101051728 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124406102 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091086759 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100350972 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117776996 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103942293 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097725433 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109523217 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091233002 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098317741 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.120399225 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103389035 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099752102 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098332187 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119660342 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096938723 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09537865 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112876597 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102337802 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101919703 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116065259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100468538 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094265112 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117224985 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098722342 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101230933 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121655612 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09814936 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105316227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.119926364 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09627135 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093841148 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096444213 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118841182 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097412573 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099972469 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11260153 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090815094 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101443766 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122119261 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096371845 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103467695 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122876735 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096686716 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097886804 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122847221 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103199022 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098612601 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116000077 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100200582 seconds)
  done (took 61.81965908 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146319157 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103907913 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118463194 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100105475 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115778617 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120788269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098998655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098021613 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120166783 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10843633 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098848707 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118391069 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114181092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138610542 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117401995 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108987807 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117456208 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099313182 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099525063 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11869966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113750998 seconds)
  done (took 3.285685119 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117003515 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111646666 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130208727 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113100369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104501513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131146954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109735483 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128961501 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11242815 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10574032 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133225936 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108248665 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126335311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106860417 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106485369 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12808092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113031459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123669975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111312426 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110206846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126844371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111075315 seconds)
  done (took 3.479660555 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107837063 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101602087 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100709676 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117982841 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103323995 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098402056 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12424984 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099710937 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106121519 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115023818 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093676326 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095708904 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119805635 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099603259 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092901817 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098395517 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127161992 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102442141 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102431245 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11836964 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109980235 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09754751 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.118589746 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093103244 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.108260176 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.123088243 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100105333 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101574369 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111078126 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103270082 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098330877 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096290206 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118561562 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092582558 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091498938 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.122277227 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10268238 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099063697 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.117875019 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.100352772 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098794814 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122287595 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103280322 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099452947 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098504123 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.118270329 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103237027 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098896954 seconds)
  done (took 5.986292198 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128532422 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162941667 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102957427 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136530546 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136304817 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107844291 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124055672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137768632 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100840726 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124486591 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115195039 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133868093 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105366074 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106062314 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122456729 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105623601 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104908402 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122512152 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108431864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102512333 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12720827 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105654843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11274302 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133631238 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106483167 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102362726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123583292 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107957277 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131600018 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109963165 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.1072928 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126884739 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.343920332 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101817145 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123660629 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106204545 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113787487 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124052995 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10539443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101211295 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124871975 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106858573 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103457114 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135188779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104287381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124255425 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105909164 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101351052 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131195112 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105631239 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108650604 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133280282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106845765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103611975 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126642877 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112630081 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102609432 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122516619 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105123105 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130117543 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102303274 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10510787 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132457935 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104967362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108279816 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133275061 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106323173 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103913296 seconds)
  done (took 9.121633542 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135440696 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106026837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134776803 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115068277 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106194685 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127112097 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106541693 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125260353 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107537856 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110786338 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127119555 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200059395 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122637955 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112828639 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105299506 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126177438 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106519174 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125673327 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107883205 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105819339 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124856997 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11484984 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105698633 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132930924 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116737199 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121466633 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107488843 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105761046 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133195698 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106585838 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1163986 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126367889 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106657518 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132017058 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119469008 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105973582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121394403 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107854614 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106932839 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127460372 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104356295 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114171508 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127151319 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104180032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105834596 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127321738 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115343231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137104737 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111467066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110752845 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128368327 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114748901 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126238256 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108169964 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113866279 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141276923 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114179757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134229601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107735811 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114466559 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135896171 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119674216 seconds)
  done (took 8.300672941 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101345597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099151668 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099035451 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119670943 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100399119 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099639931 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119412854 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101187076 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099261222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098360427 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120254599 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101120366 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099364848 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099089223 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119807901 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100314443 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099897329 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11980996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10140942 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099372385 seconds)
  done (took 3.022497849 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110963214 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116731037 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121111097 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109990413 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103230983 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127025102 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10412831 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101801723 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122102116 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104109392 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110648839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128951097 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103522941 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108253476 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12931434 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10939841 seconds)
  done (took 2.737906527 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121120728 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117540738 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191560987 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103521325 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124987822 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111352516 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102354414 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125515377 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103428845 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108262978 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126872896 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107241941 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102627753 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102787695 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124639585 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106370142 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101224946 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126674849 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104008576 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.190054827 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107877684 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10353855 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123981608 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106611834 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104547381 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128094099 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11017075 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102422628 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12542791 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105519571 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104113623 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130839626 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102911433 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106488619 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123770603 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105138754 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102642739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103024487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125991513 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103123073 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104699607 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124643571 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102885079 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104050125 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122663239 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104553095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101106511 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128102878 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104762775 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10459434 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122399245 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110250639 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106793519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130469639 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111353502 seconds)
  done (took 7.240026293 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114532666 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103772139 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132840945 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102596069 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103025977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103317584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125594675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105589853 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103735947 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122473415 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1040661 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104166356 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124541895 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105342277 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10378443 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123570775 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103015913 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10444495 seconds)
  done (took 2.923924088 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109723374 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102813298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106284833 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124290161 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104639718 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101541577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122628464 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103864587 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102832456 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122802742 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103381939 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102747788 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101822727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123701064 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104006833 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101923949 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124499221 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102743719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102637521 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122094307 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104944659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101461349 seconds)
  done (took 3.333385741 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113391326 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183874853 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109650167 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191391594 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099994048 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097774942 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129632673 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101675345 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11444351 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120376491 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098992417 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097348441 seconds)
  done (took 2.395517648 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130472593 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139614431 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124314034 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10428285 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111212844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128806039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108493073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106894696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13657849 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120096159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127632103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116671799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114410227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137018043 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112586392 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132423096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108908737 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108445291 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124080186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122958329 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107213711 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136455824 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10760124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127910616 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110319267 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11541383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135845333 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11943708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126754099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116505697 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111821723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127898898 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116497333 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138001869 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104896813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115303925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128401065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123704377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112271506 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137577302 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104481426 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132907079 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116898856 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112965337 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136718276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108840867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132129912 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109384223 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107886549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148975969 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112538486 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13627916 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113314857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115368263 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136218084 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128927905 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141214011 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11681918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133396471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120491568 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116106375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133901682 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1167908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139872329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113151793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13661467 seconds)
  done (took 8.999308133 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142686408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104249671 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130401715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120747186 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135890511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10934219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110116983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128726437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110269538 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105005851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172179757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108162051 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138780548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117757083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108385153 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129636556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110179023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115972466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126626216 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128141469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129095855 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11718596 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136341468 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118549604 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120033225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133346659 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10886961 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10804543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130764395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109051347 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134043767 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110378821 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115956936 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126246684 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117474813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108907694 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131170556 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115224456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108435772 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134301452 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117285209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144159386 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109930728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10868851 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141964202 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109229329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129826333 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107402382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108973028 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125532726 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121672879 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118734293 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142676496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115980825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129662044 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110010195 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108103294 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130863972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109859513 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111917538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139399727 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109109855 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150071732 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110484624 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108758606 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139622363 seconds)
  done (took 8.968359122 seconds)
done (took 169.853636304 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151094855 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188966863 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145319512 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180702205 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095671233 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130619114 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150804731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148333594 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093547187 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117635238 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095339525 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097816759 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185794501 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095824631 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094473813 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120749019 seconds)
  done (took 3.031691331 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196376938 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304631537 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111771895 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120135859 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103550433 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101152717 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120685852 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102062222 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099125907 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127712838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102245157 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097236555 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127761865 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098295843 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099092084 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122759007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10798211 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101323519 seconds)
  done (took 3.191214645 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121599647 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142906676 seconds)
  done (took 1.216663493 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129738304 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194555024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282272708 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168676215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123766339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13857477 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148509291 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13500889 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188901624 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133459225 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112690837 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100048928 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147445532 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105507501 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135777999 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10129952 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128511467 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13669114 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11456914 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101021408 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143827493 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104364323 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104603983 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135718793 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179545362 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134239584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104807203 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102340625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124046473 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114026068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127723529 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117242217 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111478729 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173410721 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104328595 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171919002 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130154266 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101569843 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113631459 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122637404 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10510297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103944067 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137941686 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101936758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102916569 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13067334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103870656 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.122890405 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109752365 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108686186 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129052891 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106352087 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16966745 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11005909 seconds)
  done (took 7.941208438 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862158002 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146216881 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100113837 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.012615377 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153654292 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115647746 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.86078465 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145872417 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256837727 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.881896619 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116387427 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133995039 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241298154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.279631839 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.264276586 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360157035 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72231791 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114213325 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129233176 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164586177 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107738148 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148076919 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120304221 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.523801983 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100189543 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122748048 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109141476 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133730855 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158018677 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122292447 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105889565 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201617526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290831059 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209412491 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102740554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100917372 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122261454 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167007761 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270519986 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218658413 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196670817 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097218646 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123465353 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111325749 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141032558 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100342112 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179548583 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171513493 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193571439 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12599639 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115481168 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111894787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131625596 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180336279 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099444849 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35887693 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363341134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122337944 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109985673 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137219766 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271502822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102702917 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234431192 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148206275 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213753105 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101421789 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842507205 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183278103 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101634862 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10731579 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13025542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106764811 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129533441 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170776121 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.505632842 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11370078 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126358467 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102197919 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234811441 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100960276 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100321424 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182814945 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122597009 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111601066 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113752856 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134636002 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189975664 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249570511 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136667018 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11001384 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127857841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114897879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101797943 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235232874 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229023507 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176698307 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234479431 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110202409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18401963 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187089256 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108269003 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191123449 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10787981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139999638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109112091 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223816788 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159161551 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102924467 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127813975 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112389233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159026255 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107079617 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1107795 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188760747 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558425512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185558626 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09944421 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106015114 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13214847 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160182867 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130999671 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263979278 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111414056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187870243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109449997 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121386702 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110793482 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18428343 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110907688 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132103568 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110073155 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112920773 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.281136531 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221130152 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136643575 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25206819 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17902094 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131243472 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192205524 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110828402 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189593046 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112273563 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108854761 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124988043 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835111325 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115674777 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130544956 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108035337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209251538 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103016492 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104213735 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123099063 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099893919 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815167517 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105190291 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.1209569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105746894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108547916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13143298 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109983273 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107220651 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181705602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244301319 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137625972 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10948217 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122641587 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159288666 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124271285 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104498155 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101776132 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12291515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112614739 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105673536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126808115 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17119456 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18275317 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230561144 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638195696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123916956 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103511132 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241348416 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122650043 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328041679 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112006624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235458017 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188183787 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098628274 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384674353 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168352452 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210725212 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105420127 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193199346 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098778417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131998082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157797312 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125306834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109105769 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179464813 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116713303 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137322917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.278928 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100998976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254690214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098250475 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190227939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103243381 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132614686 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326208976 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101582081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141564208 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179755712 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108012824 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102654918 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.676384027 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10291245 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13666081 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109707039 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256144145 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165627591 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13241338 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111346484 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136905113 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161719419 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232176149 seconds)
  done (took 48.155148066 seconds)
done (took 64.482933691 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2967303 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256923029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304408356 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210683442 seconds)
  done (took 2.11149108 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262506917 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16357752 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.234489075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10064776 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245035115 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099396108 seconds)
  done (took 2.086360249 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491830418 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.370196506 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.308434949 seconds)
  done (took 2.15459168 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255346592 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242163219 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329803152 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.4023298 seconds)
  done (took 2.322078391 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298015141 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130673714 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124190618 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.210583755 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.253190936 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.229739986 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14744198 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193809348 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152035319 seconds)
  done (took 2.768813299 seconds)
done (took 12.417245301 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.225834051 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.326499689 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.349448984 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.145323368 seconds)
    (5/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.279972907 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.218127861 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.195816349 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112674997 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.220817137 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140115299 seconds)
    (11/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.134623912 seconds)
    (12/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112821502 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.190148252 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.209994571 seconds)
    (15/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109725247 seconds)
    (16/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.165930123 seconds)
    (17/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.19550132 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.30268242 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.208615708 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128388003 seconds)
    (21/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.302765487 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.3036396 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172588323 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103371709 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.131882733 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.079430997 seconds)
    (27/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241473871 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128943662 seconds)
    (29/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10002689 seconds)
    (30/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131889186 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105974104 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087492483 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132411034 seconds)
    (34/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.165212029 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144175225 seconds)
    (36/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.22389491 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.174816474 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.226241223 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111686379 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.320657657 seconds)
    (41/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111106968 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.194121978 seconds)
    (43/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083161702 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17418336 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.218588785 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108470033 seconds)
    (47/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.139877664 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.197380439 seconds)
    (49/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.152384651 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.197854162 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077826788 seconds)
    (52/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163151188 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143147449 seconds)
    (54/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.244338424 seconds)
    (55/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.14170196 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116993083 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.156720974 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192527326 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220634023 seconds)
    (60/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08296818 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.166361096 seconds)
    (62/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130752381 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.169559353 seconds)
    (64/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.192143637 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125305627 seconds)
    (66/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080705161 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077995373 seconds)
    (68/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111406266 seconds)
    (69/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196982202 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.197254682 seconds)
    (71/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138678768 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126637917 seconds)
    (73/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084174943 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078837788 seconds)
    (75/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135229471 seconds)
    (76/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080807093 seconds)
    (77/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103581795 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07915334 seconds)
    (79/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.18368502 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21667771 seconds)
    (81/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196782359 seconds)
    (82/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079086029 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07835528 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129802938 seconds)
    (85/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195562764 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150674749 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136661626 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106328457 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102207157 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112162465 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125434527 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079769974 seconds)
    (93/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134135617 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106513836 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.212712415 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102122541 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111160696 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079561575 seconds)
    (99/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106259448 seconds)
    (100/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080476644 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128019979 seconds)
    (102/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.139372083 seconds)
    (103/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.10300977 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107304561 seconds)
    (105/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078463223 seconds)
    (106/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078905913 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129549132 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.177335558 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.134288786 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.140297712 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080414835 seconds)
    (112/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100024501 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.199379376 seconds)
    (114/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.08442431 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08071555 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104983331 seconds)
    (117/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102462246 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080893325 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079824557 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080181189 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132198423 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081484866 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174261016 seconds)
    (124/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110068711 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.13203017 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175580213 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079317858 seconds)
    (128/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.159026151 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080911236 seconds)
    (130/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109806289 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079341585 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128997877 seconds)
    (133/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154422469 seconds)
    (134/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07772385 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.196988916 seconds)
    (136/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192620557 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.132553884 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12665195 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126109562 seconds)
    (140/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134571534 seconds)
    (141/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081027278 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.081069451 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112270498 seconds)
    (144/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104279609 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113361482 seconds)
    (146/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078784094 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126809982 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082615855 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081259495 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081452209 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104899622 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.126064845 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083601776 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105559748 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133511796 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.090638189 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.079993366 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.083002368 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.183237105 seconds)
    (160/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080204576 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100589293 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127280375 seconds)
    (163/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08108351 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106834689 seconds)
    (165/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079053554 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.134313454 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103340993 seconds)
    (168/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084159876 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106958498 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.102770854 seconds)
    (171/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085808207 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127082869 seconds)
    (173/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079714883 seconds)
    (174/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.164289255 seconds)
    (175/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080027301 seconds)
    (176/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084717175 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10048284 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130432254 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080768323 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080835301 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105109569 seconds)
    (182/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.106292031 seconds)
    (183/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079777061 seconds)
    (184/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080748913 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123812333 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080102325 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136896902 seconds)
    (188/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080493817 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079499191 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079512777 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129736705 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108046582 seconds)
  done (took 26.868509875 seconds)
done (took 27.857672473 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216368453 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127018422 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110864331 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109620304 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205122369 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117625887 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150809647 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112603977 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120473822 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134678385 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101650517 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122818317 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133100694 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184701765 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136525323 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103897817 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101963543 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.143204287 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128134735 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127197293 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206384087 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103732398 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119739219 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127090758 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180713783 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12914723 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109954485 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109208061 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147243244 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111856239 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110563672 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126451951 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126476479 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124676658 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126031112 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112756825 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101806911 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10721433 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113045862 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111744739 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.1230739 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135921107 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111417792 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102385873 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136081236 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110724476 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101696257 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139099666 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10114139 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110403948 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128396853 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127766265 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111368926 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123319057 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101895167 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103695231 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145176671 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104495619 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125576883 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125425562 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105972792 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10267664 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135808292 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104337538 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111778348 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102367887 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136439376 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115829473 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11026525 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130215851 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104244926 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110734769 seconds)
done (took 9.963524603 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108660646 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147302909 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201066023 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214355039 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131336112 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140166175 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118440047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125736171 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139524957 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121831703 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14007248 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157309975 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184365839 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142902017 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11792314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114708817 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137813336 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111348556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.213247391 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126035696 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150806845 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118997507 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128875385 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143722249 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107096438 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136470559 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134636575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11456459 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10563188 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139216632 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127109268 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12853824 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111645659 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124929103 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146782671 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118340663 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117111486 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1380088 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109348275 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106979634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138562181 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122330684 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106850526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141476362 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115679044 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121381071 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137936645 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120748526 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107593458 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139259576 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109076079 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131316335 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143617076 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124057533 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141048094 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121167694 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120145666 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119225565 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136285819 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120146336 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.129949384 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109367321 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10948623 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150976717 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111738094 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119910266 seconds)
  done (took 9.674744229 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126515892 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137032747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141127211 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119027331 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112088999 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125574615 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101941837 seconds)
  done (took 1.90193629 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105083387 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189801699 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210996222 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211591154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20952274 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196014681 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149204292 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103150516 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135489188 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137538637 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190353031 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243216605 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111882603 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144464313 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213050904 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103709963 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214131177 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104186915 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115471762 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21268561 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119052828 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157426537 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116264436 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102711341 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210137626 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103840646 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263683853 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145138011 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113721891 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116153419 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117090625 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205940641 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213129564 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117586111 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110331529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210051767 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.211060293 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116479222 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.224954246 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107088705 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.211993167 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116163082 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14226922 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12037147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117463435 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198111828 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121440454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.14250188 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117456443 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217920288 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115020511 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212667852 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116158224 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116196088 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137747508 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120738331 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125207328 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143505684 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.195860453 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144479302 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186412475 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210907486 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.211867094 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187026363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151576329 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190378523 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206543449 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115200546 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1373205 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118913762 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213614834 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116312972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11397988 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201477872 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118957502 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212729597 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213783103 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114383356 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114791914 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132406025 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115503404 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102993825 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.203110183 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116415255 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14128127 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121851899 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115196934 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14438692 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10813041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149036114 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118563111 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115326671 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145446721 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118642843 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119110275 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216017602 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113409405 seconds)
  done (took 15.894467272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109722441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105769777 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108738116 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130261784 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105150066 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105055589 seconds)
  done (took 1.724385168 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143447041 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118658803 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150749219 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120780249 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.190707679 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.196873463 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224301127 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112581265 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159863929 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127344706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.222116556 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197986106 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.223803598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145409815 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.20309372 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144078787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.201885015 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140641368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128048946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116013423 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143724688 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122203964 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115460183 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213656931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119051209 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145931019 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112905116 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125782194 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152647337 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114264541 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145913205 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.123702888 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111547495 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136070122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.2021139 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135646292 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115408139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120619281 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146293196 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121015402 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225092042 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117092037 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123619784 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146855442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113109643 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.135450819 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123843238 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112056514 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.2263695 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120255053 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147448229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120039344 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118754804 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147198969 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11217903 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112887248 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147607718 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.225971387 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122453044 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110997872 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.143087411 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121653296 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113111774 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148111263 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120976124 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121568357 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135904969 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120630085 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116707873 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.144372429 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123153371 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119165722 seconds)
  done (took 11.388935808 seconds)
done (took 41.615386821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.643086925 seconds)
  done (took 2.696453842 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.888753141 seconds)
  done (took 1.94226534 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.436224916 seconds)
  done (took 18.520935818 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.520633384 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.595812164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.037815265 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156343465 seconds)
  done (took 3.364596278 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.096532155 seconds)
  done (took 2.170412935 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294606111 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269179046 seconds)
  done (took 1.624559839 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7438603 seconds)
  done (took 1.816497266 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.509219596 seconds)
  done (took 2.572318278 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.357016749 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182923035 seconds)
  done (took 1.613933463 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.62026939 seconds)
  done (took 1.696359005 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.20272471 seconds)
  done (took 20.280548672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25463869 seconds)
  done (took 1.335107392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289064879 seconds)
  done (took 1.370883074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.4786144 seconds)
  done (took 4.560095813 seconds)
done (took 66.631183535 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115072949 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136218919 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11600576 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139397789 seconds)
  done (took 1.575329628 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124513001 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118204279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144296179 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119754587 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124110087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117602861 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143234878 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120498316 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117564898 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147254124 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118367917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116475931 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14639758 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118188356 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114782737 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145810154 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121782026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117858991 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143377663 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120486086 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118427373 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14532475 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121874804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120502521 seconds)
  done (took 4.129857204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115285928 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10879788 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109985528 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132340939 seconds)
  done (took 1.548797319 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126251011 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13016353 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152782229 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126041291 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129122022 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153151335 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118134705 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114685581 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142093454 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126745263 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133216391 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155498387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128927066 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144093477 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13034382 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112836363 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118562809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15391028 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125481179 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149521518 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120780275 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124129579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146523489 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128721985 seconds)
  done (took 4.270102244 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192270104 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129360437 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173881144 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162979725 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175562957 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117238032 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14471457 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148786783 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125019117 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.142646769 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121559011 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161520438 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148422805 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120448874 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118752524 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148783723 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129477066 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123819797 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188747266 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121767348 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149368232 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129782327 seconds)
  done (took 4.261033725 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122098121 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109125141 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.12807707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111279216 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121168437 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134911058 seconds)
  done (took 1.814735521 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108269213 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103194168 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103243761 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126756565 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107850964 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103474575 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125843013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104902939 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103399427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103183281 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127918771 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102985722 seconds)
  done (took 2.402434533 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333151877 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108616774 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13425437 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112376179 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113767819 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106059975 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146586254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108570152 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268832632 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103291158 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144742889 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196801883 seconds)
  done (took 2.966281655 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202029352 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144118754 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296026339 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365331758 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162834325 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188863405 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26625249 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187167822 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204382566 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138595712 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242661251 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159736407 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181793866 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177098538 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166814761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153559281 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194687038 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219517445 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148875479 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229896718 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157519302 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194267257 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182909627 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175795101 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136729231 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185811564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118157759 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151650137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168820756 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189055478 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193774326 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150257731 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139465124 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216829073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251842556 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196639395 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286612904 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132981577 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198903132 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186161646 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252582016 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167133338 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211451093 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154774621 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12809435 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205909703 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177128752 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173936633 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157081032 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145103169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203903067 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179084125 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199743686 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13436357 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309088322 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187060843 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141520692 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192519623 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186157333 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218767635 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191537543 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124735117 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202248178 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186894878 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208594164 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141988207 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186980183 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123430476 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193585361 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220944491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17849184 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190429433 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225222688 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131226613 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185163703 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172732202 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202706085 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181730343 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188461618 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118659381 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174670127 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136789296 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124664276 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213997532 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122251799 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228046019 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132003392 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.33268425 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210714605 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153782915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183740326 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157952969 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188888044 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144910242 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125990999 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144369889 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189768506 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156951229 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158309836 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156015924 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165253786 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129766782 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150954689 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149750312 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160111059 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.15264142 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163235087 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186832417 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130848864 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191782212 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148761904 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.182244278 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167774855 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213531293 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129579836 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157957576 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19596753 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187520817 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135937966 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203240792 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182969838 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.168822715 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13670545 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188692608 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217259738 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144760463 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217099132 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138043339 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132611536 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161937703 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162803944 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18538005 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152955385 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154044599 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150804872 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22224754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124899583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164680586 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170780147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160100821 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126817993 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137763045 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160237854 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142461099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173472996 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138309321 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17936104 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161463302 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184043131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155698033 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158852343 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175811918 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158015706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163836588 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173799678 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119924915 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196505018 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190194491 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154887026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204096147 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189485821 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212519333 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163580904 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158117239 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180968228 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153485703 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121326486 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158060784 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181867574 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183984448 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181196435 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211545409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19135889 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150569929 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174751598 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165293635 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.206320979 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153279467 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170254906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160347681 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192570294 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119721974 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149328805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128789838 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138320656 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155066722 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136539957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200739199 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163098516 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208065142 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188802237 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138541417 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214833774 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126971037 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187336427 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165529318 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166980874 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182100034 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21149416 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166331398 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166557798 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158383444 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147473121 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126309549 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157083671 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164373835 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134832035 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162084078 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139729362 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213747292 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197383614 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148970989 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221770303 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193116367 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197121844 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.145618673 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161080811 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196788846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161372223 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184347329 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162016398 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156702274 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21009761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138225802 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216882015 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187373146 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165670091 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215374599 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159996552 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156705255 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14771819 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189150145 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13712522 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191436146 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14536876 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128610192 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177866847 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138303655 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15165659 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208058601 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146293982 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19532337 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161418399 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194974003 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125243004 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165125825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163658317 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145120336 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131964789 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167991183 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211363323 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145375752 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182066976 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200769283 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131506149 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31461509 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215214956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203565615 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134410592 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166109975 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164472891 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189701671 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160368497 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211657471 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139094168 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208553132 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161032148 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170640147 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129715195 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173716976 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150772997 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162990604 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.132765008 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180119044 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14376675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210185665 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141050458 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186109187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163561612 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142550345 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176488037 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141078137 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229237171 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15832422 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199921762 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.183899002 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.168938156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223142123 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123413976 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128024955 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160726768 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185527473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15732088 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164210781 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204437429 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218171801 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191663941 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164913748 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166444069 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129754469 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159845368 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17830482 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213611475 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136782622 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163385643 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194095537 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.151953866 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130947434 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187894455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275759432 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175990666 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174353903 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.137088528 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271009528 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156518396 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132249684 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188985774 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171769003 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15816504 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18364577 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166264449 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17048902 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163583423 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164407897 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208864964 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190386813 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19211884 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197455271 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144989068 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185798008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160342005 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203920726 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145295878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172211362 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15966635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212573105 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183533654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158242408 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162226453 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18819928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160706275 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19727149 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139487248 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222149417 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128290747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190478237 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13701422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149933861 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159958992 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201369582 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131985266 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20688353 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161725649 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161142394 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127377229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170891658 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159935448 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163161215 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132177476 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207231675 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12949254 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166666023 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212994224 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128612647 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187142583 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145843741 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15636254 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142072509 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141856133 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15905275 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173735899 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212685756 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132401403 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206830676 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160835957 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192677484 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154515915 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170641157 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.333270392 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154017362 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186145589 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177320276 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190721258 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177499541 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164455523 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191172176 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149662533 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190612499 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147648476 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247458263 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161225849 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184951094 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130622792 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170666822 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141083195 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158973791 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153462913 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187381733 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142783601 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136354161 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185094185 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143663323 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172913049 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141184987 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216150047 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149695456 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210601671 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185597468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166581258 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164098299 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200692839 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129686688 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191225379 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200045252 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144557387 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174966299 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135542835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136775697 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216775885 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127334638 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184769078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165074801 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188441256 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164034811 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134448423 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194444026 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139881484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194358955 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126651513 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181965055 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163133915 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161304722 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129642454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161780178 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185783437 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.158158226 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154805678 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173190158 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217235602 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124286775 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131632596 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300134124 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19074435 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193198619 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.164090096 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136700395 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14248758 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18398985 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155034956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191970614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129318149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156861879 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.131535349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185274079 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14582209 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189285506 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174941611 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186651425 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197881102 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16105537 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254717812 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168991542 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162923623 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113896405 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15713067 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142689131 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160695661 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142618834 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211235174 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191284273 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188228118 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146277439 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162759133 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127146819 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132050877 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196035156 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151395297 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19112962 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144281458 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130146868 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144045326 seconds)
  done (took 85.045352654 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166764137 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153046788 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168670975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222013925 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195131798 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289585872 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229508987 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245811201 seconds)
  done (took 2.846549292 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.1230088 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159079469 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140610207 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145865821 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.119448368 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.454339144 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156970388 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120960564 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.1637577 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163116422 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143008836 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.610011127 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120853179 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145038254 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123235549 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119553737 seconds)
  done (took 4.177151929 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.952407373 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523147729 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.584066974 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.270852534 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.228200862 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180190468 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72139697 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.668764364 seconds)
  done (took 12.306931425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145723843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135767835 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.313632368 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.259315319 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148600681 seconds)
  done (took 2.183713568 seconds)
done (took 130.598816818 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124663205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123213029 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12227692 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152917063 seconds)
  done (took 1.691216326 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.17615949 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090546102 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09275406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116021558 seconds)
  done (took 1.655349706 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442928732 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089866727 seconds)
  done (took 1.73804657 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150217118 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143537581 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16819082 seconds)
  done (took 1.654181957 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14193781 seconds)
  done (took 1.322013179 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126714904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119917827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.235836453 seconds)
  done (took 1.667407769 seconds)
done (took 10.914823558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120962603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.930940509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431609449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135591431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709278367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427584526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.39930808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174112111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174135701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13755781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134217797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.713283074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.411870919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875068806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.370025187 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903211822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693556065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110957821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145781926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112182206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.380770643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138760706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111260352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112184101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717985087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419558967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112069252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912251447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109619584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113528588 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428494423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11063201 seconds)
  done (took 20.947234453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118918798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170965614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145656854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112558251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113910998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139634061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122745015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120981492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201793559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108981015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162374331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109828696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115173714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138782967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137959241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109881393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141635512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113640009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117874468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139563708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134428508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109443634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139764775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113573606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110194943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159996223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111623992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122488905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138544828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114815992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114877492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139023076 seconds)
  done (took 5.341733515 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15895035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180252796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148114545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149501338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186221982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113771244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222400369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149440112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20286329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111613527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133926538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138190851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151227339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111635968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167383295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111644251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11379621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141766288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118778711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111642823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16427293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110053922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137871847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115173942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111431943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159938844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113275574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12237033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137332819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116074458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116553645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138649762 seconds)
  done (took 5.653269716 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12605015 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126322074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132169416 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161566778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120806528 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123551275 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154024922 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120995705 seconds)
  done (took 2.253601032 seconds)
done (took 35.38030421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135200065 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128642354 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12854718 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152910125 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192316921 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145279526 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126357815 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115664117 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151684146 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129810857 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110826784 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115874901 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157899614 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120216092 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22422855 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125435865 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.227977269 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193951184 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146880469 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124729268 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117476009 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228312052 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120908285 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144666313 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197091289 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112313464 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213274915 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118894678 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149053614 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112961033 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225204914 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122857831 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117554225 seconds)
  done (took 6.11534077 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213297257 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120028632 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149522398 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120837979 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120158225 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147771692 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.215277259 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148364579 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120000785 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117903814 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118559138 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228887403 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124558872 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144913213 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12206539 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10860712 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24357624 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122581461 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.138579871 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094108434 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115960112 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119188461 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256192437 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115116389 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147136195 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120470609 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122769537 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123697889 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150707437 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122442341 seconds)
  done (took 5.514583544 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126306388 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132182943 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165099853 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18686588 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147440262 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160216828 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140676312 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133060501 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171796002 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113939117 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128381456 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178167529 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128926659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.150037486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119349449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130399956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134024778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144077468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120824941 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130391795 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162930301 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129952832 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138560585 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152675668 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112377235 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120288628 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153158641 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12668879 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12098015 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156191872 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115949356 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117195546 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143859619 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149422154 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120472978 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154981424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137765058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124864674 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156389054 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145531283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116173925 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14700903 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138773307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.194088731 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115430149 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125376491 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.152229363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129078565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111817657 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130831196 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186420343 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117620031 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162587911 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116721799 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111753356 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121607831 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145923617 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117101451 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128521068 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145994891 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138041703 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120826979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153753218 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117477252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125876355 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.140793371 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11504726 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117451777 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167500704 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123010869 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149023871 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.14053059 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127547526 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125225999 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123239492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15474284 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112896098 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122983928 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153309928 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12006097 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124995125 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144883869 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117018084 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129785179 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162818664 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128313507 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124684345 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155323225 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117736819 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115532978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159865374 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11613713 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118589917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15475202 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116227891 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117391472 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154399039 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127166923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111574379 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139065912 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147899975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114204027 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139017817 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148619102 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119471186 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123842939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185174799 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11636277 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123856895 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156550194 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11434227 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121142514 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146645812 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114079683 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131447547 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159076647 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122059733 seconds)
  done (took 17.075672139 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.323688548 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.308860542 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181922139 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311957729 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157612191 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.21056667 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309357439 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.310815208 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113508187 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181855938 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.195325698 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.277381574 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117019794 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141692401 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.310228093 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.363253453 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173230001 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150506156 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182775994 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127376083 seconds)
  done (took 5.668554197 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135811919 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148556426 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165976076 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142478661 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123264367 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159595517 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114568607 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136159964 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15553134 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124337756 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115977831 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160180115 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127138785 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129674886 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158679787 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145540368 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120796499 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149257709 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137193617 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119223977 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130822047 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139656567 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12236904 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166557998 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132744171 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152596692 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11504628 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119995609 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120649251 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152309023 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118928426 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132368094 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151658034 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105379164 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125579916 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.15787324 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121705189 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117538477 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118670919 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149488714 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129392895 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126418983 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151363297 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098039949 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132286915 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109226389 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158573942 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126740618 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106110782 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164030031 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128002102 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128157076 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150962355 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138063357 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121578528 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161106805 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12760482 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128546098 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148676356 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113926843 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112852119 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.146488705 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125307405 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129009589 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127233907 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165939096 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130597029 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141694129 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120929987 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118206889 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.14576111 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13147451 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136072469 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151892584 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123022955 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126320246 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122897775 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123320972 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124631292 seconds)
  done (took 11.802934715 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140709236 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123501714 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160514727 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151383056 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126335456 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119552491 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153143407 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134281151 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127383513 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162029337 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127127687 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128177984 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167799241 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126282132 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12241667 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160393588 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126671935 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151195312 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16326791 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141953904 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156518567 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120991125 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127390279 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125876172 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175080751 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12632805 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17027412 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128364643 seconds)
  done (took 5.177097877 seconds)
done (took 52.549220355 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.360501499 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.546689516 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.325932978 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.321946286 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.363081566 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.346293812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.325435502 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.335678349 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.793304075 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.292987407 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.324004628 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.321984198 seconds)
done (took 29.881253053 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.418793303 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.83525344 seconds)
    (2/2) benchmarking "String"...
    done (took 1.615091034 seconds)
  done (took 4.665662198 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.313698963 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.314288962 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.563369739 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.311901383 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.313705318 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.317138597 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.322903427 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.333252267 seconds)
  done (took 16.689392408 seconds)
done (took 27.302536598 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.358259925 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.513633693 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.564623411 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.314617063 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.312755058 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.317097473 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.31320514 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.329380027 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.318070963 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.314041453 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.7075807 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.575844472 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.328227028 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.686676562 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.313715764 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.333035954 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.324094687 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.547124866 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.315677557 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.355702582 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.291122755 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.310342711 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.345565647 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.314272301 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.317693536 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.320393159 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.326349657 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.314012492 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.499872362 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.323531059 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.344278621 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.314817437 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.321974193 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.314747681 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.323757895 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.325264177 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.50631748 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.316116794 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.301875223 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.331745249 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.51400537 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.325752364 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.323339749 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.316959614 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.316582946 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.343475212 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.304440907 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.417999389 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.334407275 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.336846582 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.346040204 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.687705416 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.321972656 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.336378308 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.313453908 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.539549811 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.313950796 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.35865867 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.334756413 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.334291348 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.317273659 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.312622949 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.361391521 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.315077698 seconds)
  done (took 150.85148551 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.312245718 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.317081954 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.312903026 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.375201648 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.314349787 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.317636628 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.313796414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.313500776 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.316214802 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.342509183 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.316521042 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.317811273 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.31727956 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.268070178 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.321618965 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.335152 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.317270698 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.314845694 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.324183784 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.311192587 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.313967795 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.316719109 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.327946714 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.314677093 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.342100828 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.376753723 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.321325822 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.329962383 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.328655862 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.31108664 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.339901344 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.315837259 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.872957292 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.192938385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.31854026 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.340600942 seconds)
  done (took 84.258043204 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.310647836 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.312698984 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.31337608 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.341435218 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.313557368 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.311880715 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.823242614 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827628421 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.272770864 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.341124114 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.476900172 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490941449 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.316332348 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400259427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.32364033 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.316748382 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326862443 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.336492924 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.315990502 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311582 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815829393 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.328961455 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.31092739 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.477102426 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.327090449 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340050578 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.701889148 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.389024478 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.313377432 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340442931 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.631069618 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.356326356 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.313080209 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580151155 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.190334748 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.419239478 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.313024461 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340638336 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.31164518 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.585819416 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.312400929 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.313561202 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.315456146 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882647935 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.317975677 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813089088 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.316630082 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.199172634 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.312517065 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.312715247 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.241071111 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.314399146 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.839997193 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.310054176 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.310490335 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.314536308 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.311577325 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.311612317 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.341132026 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.254990024 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40453597 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.312042076 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.312057081 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.315333716 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339161753 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.31318989 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.344434891 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311762677 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.154902095 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.371576074 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410233755 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809277362 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.316372584 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.402146944 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426038961 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.312477609 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.314346507 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312462832 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.311635041 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.419885226 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.31368178 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.681325923 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.477997808 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.326830529 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.437274205 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.408351144 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.314640261 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560028543 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.315988108 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.314090353 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936539073 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402556277 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.312477016 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.314586813 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.313997813 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.677299143 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812562161 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478339684 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.317506078 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.438066008 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.31754315 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.695198403 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803848478 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88247705 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.320461361 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420971224 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.48070779 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.331354393 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.314823838 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.428527876 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.318113361 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.369803277 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.319861306 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.712355944 seconds)
  done (took 377.118810399 seconds)
done (took 613.440744091 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.17306068 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.128323607 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.26905335 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.134702286 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.117550175 seconds)
  done (took 12.037274516 seconds)
done (took 13.252010967 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491880557 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.493772341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.36984379 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.4948965 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.346979752 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50987031 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482112511 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.331332237 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420106759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.387733017 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43593222 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36314123 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346697063 seconds)
  done (took 19.690202829 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.585124733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.330183853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.382612136 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.571529549 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.364746004 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59234634 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.623053454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.331064675 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.476629244 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339046458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337994312 seconds)
  done (took 19.150816012 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.596332101 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.328574817 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.387940708 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562565387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.364950204 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.592174665 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.626137467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.332153215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.484843125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339826255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.338867632 seconds)
  done (took 19.170583232 seconds)
done (took 59.227569526 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.355624128 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411144295 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.355385611 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.339688145 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.33407979 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.335104535 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.340702492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.335002067 seconds)
  done (took 12.025436154 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.334600084 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.333329734 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.334171719 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.334927229 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.332670217 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.33338197 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.334558761 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.333741082 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.334306186 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334391096 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.333453174 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.333571284 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.334158889 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.33422584 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.333555404 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.335068891 seconds)
  done (took 22.562033874 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.338135539 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.335530503 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333991135 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.335476584 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.335181523 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.33435477 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.336128918 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.335019875 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334648293 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.336447542 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.335867704 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.334809191 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.335299272 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.333075118 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.335102928 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.336858327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.336264566 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.336852256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.339777884 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.336323222 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.335909365 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.335697858 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.335161212 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.337303597 seconds)
  done (took 33.278321199 seconds)
done (took 69.083249519 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.335407879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.328880498 seconds)
  done (took 5.883056339 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.395214763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.392733195 seconds)
  done (took 4.007855814 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.339023024 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.336768395 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.336050871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.336726048 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.336275187 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.336533468 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.337729554 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.338835495 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.336616415 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.336569696 seconds)
  done (took 14.591978943 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.337810028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.338454941 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.336283759 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.337371519 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.337156441 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.338046459 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.33725903 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.338155588 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.338415558 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.337686234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.338587566 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.339045003 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.339311003 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.336396063 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.338237886 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.338907809 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.336871998 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.337901712 seconds)
  done (took 25.301918723 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.349997199 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.355714965 seconds)
  done (took 3.925673426 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.466545336 seconds)
    (2/7) benchmarking "second"...
    done (took 1.379718149 seconds)
    (3/7) benchmarking "month"...
    done (took 1.441358366 seconds)
    (4/7) benchmarking "year"...
    done (took 1.43459418 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.380028982 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.359826204 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.37934549 seconds)
  done (took 11.060705006 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.338927167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.538762853 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.662305317 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.956344805 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.339125699 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.342769526 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.2180706 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.343103536 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.344534258 seconds)
  done (took 15.305283535 seconds)
done (took 81.295915402 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.335194632 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.336390644 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.335965241 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.339496601 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.65687015 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.35640274 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.329352035 seconds)
done (took 16.910641226 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.311928349 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.309279973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.309795967 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.324704696 seconds)
  done (took 10.477837379 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.333296405 seconds)
    (2/2) benchmarking "read"...
    done (took 1.648175834 seconds)
  done (took 5.204629407 seconds)
done (took 16.904869902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341989402 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.339574381 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.341069944 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.339154675 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.340736956 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.339536767 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.339956389 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.339328727 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.340385071 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.341984687 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.339982628 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34124735 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340602756 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340724499 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342155857 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.340790049 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.34096921 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.341295532 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339581677 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.342899176 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341451859 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341632208 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.341491526 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.341215859 seconds)
  done (took 33.403418316 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.341846046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.342267701 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.341779485 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.341623842 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.340456489 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.342321322 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.343280658 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.341224523 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.342336301 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.341577653 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341624686 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.340170537 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.340622405 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.342461158 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343147297 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.343107507 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.342516362 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343191276 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341304181 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.341909181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.342315668 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341479791 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.342756984 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343342582 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.342046411 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343064538 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343338645 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342397937 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342064638 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.342678599 seconds)
  done (took 41.489125262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.345099369 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.343569265 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.344263893 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.343466674 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.343628687 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.342770796 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.342549988 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.343733574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.342442682 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.343190281 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.343358832 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.344335088 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.344045159 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.343239808 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.343610358 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.336433901 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.337516684 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.337525716 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.337172034 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.337407438 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.336820258 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.337588139 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.336955137 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.335314729 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.336901855 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.337750072 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.336683818 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.336013128 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.336858104 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.338098495 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.335479058 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.336498007 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.335062008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.334746321 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.33668034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.334509826 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.337594187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.336446857 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.334439488 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.333534127 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.333613896 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.334312113 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.332990065 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.333848579 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.333609759 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.329066105 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.328609692 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.328822801 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.328262046 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.329476416 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.328891726 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.330896183 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.329797073 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.325591347 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.324611381 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.326110982 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.325797823 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.326297338 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.326173541 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.326138205 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.322915805 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.322891274 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.323599959 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.323101828 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.323532369 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.322417825 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.322332943 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.322917413 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.319230282 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.318858317 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.318434139 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.320500563 seconds)
  done (took 97.233766948 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.320025355 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318681174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320096292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.316202055 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315238881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.317815596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.316633999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31612585 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316985072 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317869508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313883664 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311979001 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315550369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313944577 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313539842 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312995566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313639474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312251659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.310060186 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309415356 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310180806 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.310116963 seconds)
  done (took 30.129263488 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31022671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314519991 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.30736221 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309117473 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307220715 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30811971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307952969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309124127 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306781933 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304941162 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300824511 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305143556 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306559989 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30321324 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304870941 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305977308 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303865322 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304158665 seconds)
  done (took 24.719305602 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.301780685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.301085772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.300855312 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.300797883 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.299707304 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300745896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300498981 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299000392 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.298000588 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.298043936 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.298302428 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298824159 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.299739565 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300175224 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296300189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.296493438 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.295775871 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297202405 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296517406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296543283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.294588617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298317374 seconds)
  done (took 29.760651585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294166683 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294838957 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294066598 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295747468 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295701802 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293855912 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.296634858 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.292010395 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.292950938 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.293078883 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291432095 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292148439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.294309346 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295167786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.290573505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290722417 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289572685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291038597 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29120771 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289877228 seconds)
  done (took 27.045307897 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293105508 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28965271 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290630484 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290707016 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290285669 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290131306 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289494028 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291050335 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290708579 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28919118 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289156505 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289243733 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28925236 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288752363 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288241333 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288341614 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293138452 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289053703 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288373055 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288342812 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289372833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286893736 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288231812 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287062524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287128338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285407572 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286468553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284811317 seconds)
  done (took 37.27710632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286910999 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286013591 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.287345507 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285885745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.284064847 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.28384715 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.285759168 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.285449439 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283601665 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283988961 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.285385766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.282696779 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284739188 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.284520366 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282828481 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.283156716 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282987957 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.28420645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283959145 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281307563 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.28284071 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281683407 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282439587 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281603348 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282404075 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.283202906 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284710529 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281425883 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281327391 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281801226 seconds)
  done (took 39.691318528 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.300990283 seconds)
    (2/2) benchmarking "in"...
    done (took 1.299905509 seconds)
  done (took 3.774807592 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.282638136 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283500809 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.281322624 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.281538718 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281072441 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282227457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.281617685 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28147113 seconds)
  done (took 11.429203643 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.274163091 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.282992049 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.284501768 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.282248138 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.282593843 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.273843876 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282323645 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.28700812 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.275806224 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.274132251 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.277159202 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.275086587 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.278988748 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278134506 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.277332343 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279245454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.28646138 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.283599906 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.283435195 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.283972294 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28348585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279052043 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281982146 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.287856339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.27603116 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.284949898 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.283987536 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.287205434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277792095 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.282413745 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.279167912 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.286623291 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.286223179 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.284840738 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.284557964 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.284462653 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28615438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28403107 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.28556464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289462497 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285158123 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.287635766 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.279539614 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.285302643 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282624503 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.291618811 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.282927442 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.283493097 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.276293468 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.279422913 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.287477228 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275646738 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286655227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281390016 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.281664026 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287202573 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.289436052 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.275689513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.27848992 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.284440141 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.290449586 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.286223918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280584059 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.287552854 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277872975 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280786323 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287344548 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290113786 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.283815466 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.283190645 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.282957885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290951129 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286944529 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.286567933 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283304854 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.283581684 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276794731 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286416103 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28356423 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.28608159 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.288389577 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283146545 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278436453 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280735176 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.279398937 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.285356723 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.282365977 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.283022135 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27378346 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284021476 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290927406 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.281142328 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.275150233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.277021169 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278069849 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.282542141 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.273973278 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277234531 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.284693381 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.282510221 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282890087 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274657152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.281320193 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286618174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282464177 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.282599432 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.288355974 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274918261 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.285802685 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.288355204 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281284701 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273895989 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.27861023 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.284563722 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274252559 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.278840884 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.286306435 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.277541625 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.285928751 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.280726786 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278172731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284891921 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.287705842 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.283146489 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.274343554 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283046166 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281356324 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.278469405 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.286782579 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.280151935 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.282338773 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.279048653 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.285208559 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.27444162 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284461848 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274561517 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.284455968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.279896166 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.280522796 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.276176143 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.280584242 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.277985943 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.279719881 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.282388734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.288019378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.27769365 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.287721802 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280466955 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.279230023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.281989628 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.285076809 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280698727 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.27585714 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.285132899 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.273978749 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28378638 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.275626374 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.283897482 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281466987 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.281429848 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282046518 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.272773222 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278323269 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.284770518 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.281602382 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.281612351 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.284982266 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.28129234 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.282040978 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.275026587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.284657046 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275086192 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.278413441 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.285529811 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.282088694 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.283109006 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.280949388 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289767463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282042572 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283049504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.276320965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.281004677 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.287569484 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.286238715 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.292001628 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284066822 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.283450223 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.276541317 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.279055363 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286862656 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.277984956 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.288522345 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288954455 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290536901 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.280554876 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.285858469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.274603948 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.286064361 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.282991208 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.289626346 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.284751987 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285366297 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277735073 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286986596 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.278658989 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.286579538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276031891 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.286600919 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.285183014 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.284794359 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283668371 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.279036495 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282282234 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.287607893 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284224911 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284845873 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.278528528 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.288726887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277060358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.279412348 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.288401454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.283386771 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.286732082 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.292846592 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282472791 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289585749 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.28649918 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.280160727 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.28899716 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282526325 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.286079645 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290374319 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.287861021 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.281532841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291421494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287204459 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.28072682 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.285412542 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.293913945 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.28510457 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.278923144 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.28907257 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.286933339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.285940595 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.286489866 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280448073 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289793046 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.28889779 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.297245656 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.281686192 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29008177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.281305857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.291033102 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.283842997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.289662592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.286692582 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290915004 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297264833 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.286711692 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28115448 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.290791124 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.287679723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.287006511 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280036436 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.289286612 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.289578978 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.288708188 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.286316454 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284458285 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.289356279 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.279889903 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.289828036 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.282140476 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296944269 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.302042355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292314314 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294046883 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.292748039 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290771869 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.292535335 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.280656509 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283800811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283155152 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282815401 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.281478832 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.290108355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281758704 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.292688911 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282273757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.285445487 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287597352 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.285136038 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.277929291 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.28742033 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.284653912 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.286573426 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274745257 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285703709 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277948293 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285622419 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.282058759 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.278515514 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28953507 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288327181 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.279972074 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27925693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277820474 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.27561385 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.279951254 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.287316462 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276579644 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.285689061 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276780637 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.279942405 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.279810521 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286723435 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.292344529 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276806591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.286845531 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.282545391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274952804 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.278306686 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.286280775 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2870954 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295092869 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276424616 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.286826811 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283170397 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284688896 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283452129 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.284350496 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284527145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284061468 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289351658 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288929829 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.280605345 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286162271 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.294439011 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.284850713 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.28341769 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276995156 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288040373 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.29666554 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.279827339 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.282844377 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.281403992 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.286864555 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.284788134 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.286446047 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.287969037 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285783308 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289753051 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29122202 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28806202 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.285965162 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.290790969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296256314 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291518255 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298179018 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.28027505 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.290463189 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.286458316 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.28125875 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.280859128 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.281439682 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.289097288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278168254 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289546822 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.2871069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.282531964 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.286404925 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.293069187 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279516087 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285699437 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293859359 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278426797 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287932631 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.286460597 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280121228 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.289520795 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.287338747 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279537554 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283338779 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283471129 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288963012 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281889434 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29003958 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282276023 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290248673 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.288357214 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287900461 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.289234183 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.288827313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.282588152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.28995017 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288707329 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.297928878 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.283870953 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287530695 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.28436842 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.294732192 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29994569 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283486677 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292504221 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.289428124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281321256 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.286237704 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.293351422 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284124766 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291897177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282196172 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283867375 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.282932681 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.289744952 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.292344833 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.293355408 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281648441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.285620137 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292055993 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.289055467 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288885679 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.287016651 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.296747146 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284648359 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.283779008 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.290879935 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283983045 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296275568 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282690796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286251124 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287310338 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.292150313 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.290517067 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290693849 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282200001 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284918838 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.297497059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294949355 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287661262 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284832188 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.292059975 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285201571 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287288031 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285978555 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.285187507 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.28558767 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.294222214 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284424795 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287387874 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.285547282 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292709144 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.294689123 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.293372414 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284705543 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297602593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.299337085 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297521205 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284596484 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287786727 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285977701 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.292971536 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.29183381 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285112821 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297870971 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297556292 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296192109 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290957359 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.293192401 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283501158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293450075 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293249245 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287845473 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.298390513 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.289770547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299516274 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294256064 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.292627428 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.285779847 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285671891 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287646111 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288587893 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.294571036 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291320375 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.297021832 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.292660553 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298262782 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295078468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.292517741 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.294626416 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286283661 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297432097 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287622592 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294757043 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.297024054 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28957153 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.296403152 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294318012 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288019296 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.288830011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2969858 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.294548661 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286179293 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.292761889 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.298393681 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304621932 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.293500434 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29003918 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.292601922 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.297661547 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29593123 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.29509959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288608901 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303789987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306553316 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288206513 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.291625499 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298825789 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.30542141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.295730811 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.295309496 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.292738704 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293822468 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.29932538 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295667258 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299027169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30065064 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290954107 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.297919069 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290038184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289827365 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.297012777 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305451641 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.296238732 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.289771505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.302069639 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306129912 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293488708 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307741767 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303474897 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.297221726 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.301093164 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287986593 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.297863064 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292755558 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301248322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.296692505 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297162796 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.297670736 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288491512 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298065026 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.303604679 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.307182172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.297730167 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289499757 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291366188 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.299656038 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.29809901 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.298277929 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.298768251 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.298674023 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.29803113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.291760584 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306563658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.312118781 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.303369112 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.298724503 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.298277198 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.297786945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.301431616 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295950895 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.30328311 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.298604783 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.30015441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296905834 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.306345051 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.300421987 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.293164941 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294029568 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293796979 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.302309826 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.307376754 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316375483 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.302203961 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.302669424 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301673638 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.300018029 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293272307 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30284065 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30030082 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293948515 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29564603 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302676207 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.301852452 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.299149247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295036978 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.30355904 seconds)
  done (took 768.416845377 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301364019 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300328174 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299670725 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301768534 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300325587 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299235769 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29978595 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300372894 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300400713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299566965 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300581436 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300359286 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300159203 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300270689 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301059568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300668833 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302048079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.299858312 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.299704189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302054562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30255338 seconds)
  done (took 28.500607725 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.301137768 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.301997672 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302911243 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30088512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302140252 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301778378 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30314301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301306687 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302730568 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301719476 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303028663 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3015786 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.30271447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.302113014 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301839111 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30165464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.303064798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30358435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.303347056 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303153921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303048545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.30336551 seconds)
  done (took 29.84266078 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.303003492 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.303567139 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.2970522 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.30669691 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.303830118 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.303254391 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.3038269 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.304796698 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.304552477 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297545571 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.296383434 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.297162888 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300155421 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.308136841 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.299355402 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.309441893 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.304223992 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.305237145 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.304229983 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.304345422 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.307132516 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.314444541 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.30446816 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.296622797 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.307632797 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.305163365 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.304517945 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.305809457 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.297236685 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.306851762 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.304138079 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298457172 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.307896714 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.30582786 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.29891421 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.307044419 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.30542534 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.306541684 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.305936416 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303389102 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.311361681 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.304287703 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.308121176 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.317223457 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.305630416 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299575099 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.310102091 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.306409694 seconds)
  done (took 63.805240971 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.306083011 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.307043391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.305221373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306717125 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.306825992 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.306705577 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.305426456 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306855771 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.306448895 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.307787482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.30618515 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.307928835 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306715965 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.307339311 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.307282495 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.306503208 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306518667 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307257118 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306315618 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306753269 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.306650648 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.307303074 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.308464971 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.306263096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.307791771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306857472 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306569661 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.306647578 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.309525237 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.307944521 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.308145318 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30802669 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.308205892 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.307884543 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308682516 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.309305746 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.308393056 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30865595 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.307640453 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.309482481 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.308884186 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308574124 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.308330474 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.308787093 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308346105 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.309455821 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308752682 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308421045 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.308351301 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.308401637 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.307846527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.30921325 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307975141 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309029929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30987729 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.309833467 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.308487101 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.308762992 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.309084403 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.309400763 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.308452949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.309106513 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.308969697 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.310243373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.308175218 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.3087072 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.308607673 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.309498466 seconds)
  done (took 90.13637591 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310048883 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.309695505 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309639136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310105716 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311120456 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.310223027 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.310682317 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.308394351 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310192476 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.30928604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308776137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.311186021 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.310587164 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31230127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.311275518 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.311430693 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.312987922 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310318269 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.310920608 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311264609 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.313030535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311026152 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312322722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.311799485 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312029968 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312368714 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312318441 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310901029 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311729596 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310880168 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.313237722 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.311823906 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31247072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313170051 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.312605691 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.312967387 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312710825 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311731295 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.312760234 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.313191281 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31339829 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313242333 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313389135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.314373317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312868138 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.313147447 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.31383624 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.313982362 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.315037778 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313073146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.313502539 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315514404 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313683035 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31376373 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.313721246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.314572137 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313932159 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314425334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315733281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314155485 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315228036 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.313772988 seconds)
  done (took 82.563204548 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3152911 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313833505 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.313399297 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.312104177 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.314250985 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31368962 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313086906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.313700264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314358058 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.314280706 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315485053 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314756552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31504659 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315083677 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315108426 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315831699 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315178803 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316020873 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314951651 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315289567 seconds)
  done (took 27.491900502 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.315668674 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315339969 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.315512086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314708927 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.315354762 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31337902 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.315502028 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315979781 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316169511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316083773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316599893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316220714 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315824178 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316824284 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.317057322 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.316670121 seconds)
  done (took 22.25512111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.31577431 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.315821315 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.317638692 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.316320583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.316949527 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.317748658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.316209093 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.316629782 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.316109795 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.316548027 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.317006577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.316444581 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.317039702 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.317333151 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.31734078 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.316569859 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.317585838 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.316426532 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.315684124 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.317277624 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.318517684 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.318233476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.318087294 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.31836181 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.318808513 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.31848987 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.318205805 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.318884204 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.318275085 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.317933803 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.318607278 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.318613465 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.317482973 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.319543691 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.318410268 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.318191024 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.318773867 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.318502223 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.318813111 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.318439669 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.320003066 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.319035725 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318478262 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.317745301 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.319442104 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.319843808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319663954 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31988662 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319764456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.319043336 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.318605994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.319794923 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.320886646 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.320646371 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.319623417 seconds)
  done (took 73.699965076 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320580113 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319748574 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.319420695 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.320817661 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.320779929 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.319819425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.319706442 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322430318 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319562261 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319635127 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32016426 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320761279 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320445252 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319452385 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.319347636 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320474807 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.320219667 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.319507745 seconds)
  done (took 24.968143968 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.32114815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.321465974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.321071147 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.322138134 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320610671 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.322791912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321028158 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.321937239 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321169841 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323042785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321295457 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.322074939 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322295812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.321963036 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322308739 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321220541 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.320995927 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323216382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.322178507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321248691 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.322462301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322101264 seconds)
  done (took 30.287658518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.312407454 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.312131977 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.312892994 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.326437624 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.320490484 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313689686 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.312488889 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.313007035 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.327612429 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.336749044 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.330943586 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.320035872 seconds)
  done (took 17.047900606 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323390472 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323080404 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32344506 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322724489 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3237503 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322193012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323120151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32329596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322364021 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324468463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323745859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323458326 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323474555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324318788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324178064 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324105216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323235231 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323011675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323377259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325165743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322770009 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323838514 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323656115 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325831175 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323524299 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32327036 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324927931 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324032872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325675234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324735185 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324382236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324553427 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324995713 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324822864 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323795351 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323432794 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327307441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325896169 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324473469 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324718721 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325341489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324229491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325648543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326714479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32627698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325052122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325707015 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325275347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326219864 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327675726 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325344406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324688667 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325798158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325549584 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32544897 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327423004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326891989 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325949398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327360018 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326774621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326791544 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327305707 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326651827 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327104599 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327319168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326884186 seconds)
  done (took 88.653184897 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328246812 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32844658 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327221194 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327530095 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326353075 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327303638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326501955 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326486136 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325968485 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328386603 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327097626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327666873 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327628499 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328368567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327121709 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327455831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328971814 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327987249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326698339 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328565915 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327847486 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328108314 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328606744 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328348591 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327938367 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327025314 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327854249 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328437279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328597171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328490966 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329128851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329193026 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329143851 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327532491 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32858744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328302379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330741664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329134327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329378105 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329612506 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329581944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331443032 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327716079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330316313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328917046 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329654215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330107856 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328900454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329065897 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328743458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330405288 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329600741 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330043859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330302879 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32979035 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329391012 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32996967 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330878759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329768396 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330173591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329276652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330607479 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3323183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330531766 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330822797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331523405 seconds)
  done (took 88.917985409 seconds)
done (took 1813.76302076 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486839517 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442273478 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321209204 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.340028833 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321533021 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.323213322 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.333950954 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322475352 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.320396898 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320809225 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.32058712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512700924 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.357113852 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322157638 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32123775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.418066045 seconds)
  done (took 27.000728275 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.345993564 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330513069 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435228735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330405081 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349581023 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501958158 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387483831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327820573 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.488855659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345300473 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.317729363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.348852146 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32686595 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.318322246 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.34674479 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.509958725 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582394618 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.322004006 seconds)
  done (took 29.133568403 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.750550133 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.321950676 seconds)
  done (took 5.289823801 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.345866244 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328056237 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328652525 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32702312 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.327809238 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.319863758 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.326589735 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.333151875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.324989795 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.452518212 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330679806 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338442626 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326033465 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.327848851 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.335743285 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.371211822 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.490053061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.336379852 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334878762 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334726589 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326332536 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41595206 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367395576 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.337024078 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.446764803 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.329449848 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334224838 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.336561264 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442824001 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.337673524 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.328025266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328781712 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329299945 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.260538981 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.859128139 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.32189078 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.352998752 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33684164 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.336917472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.469660266 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330590381 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335085574 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.320165563 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.85920765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.431166147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.442393892 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.322720144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334920517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.330975816 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391346073 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329893848 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.331410775 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.386138215 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.102550068 seconds)
  done (took 85.009481228 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.37921065 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.323066766 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504935528 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.344487852 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335043677 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322738716 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.3246277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.594561088 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.350999353 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324272005 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.63194785 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945608545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.334635939 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.388307111 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.359644967 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.389154861 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326105119 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.345529362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323995432 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.323360967 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890322425 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324450923 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325123602 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.418074858 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364428438 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84972198 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.325405472 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.330149343 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.344876705 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.324835089 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904085372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.32760783 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.374778897 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32730332 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.606100911 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701263064 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662114302 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.33305731 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364302971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325726379 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.355850345 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840904739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.684559137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327498269 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.325875051 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839600894 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325701411 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.336203137 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.330680603 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593147537 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324936986 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.327610548 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329725927 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330000284 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.331826973 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.396236451 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399986782 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851264469 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326566582 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.326009386 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341051259 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.329780901 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329484546 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326742746 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.326744088 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691097414 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.587438815 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331765275 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685124649 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894508581 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.345840183 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969966848 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.346204443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.34439506 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.374210197 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327021211 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332303082 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.851334284 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.347555786 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328646991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664616446 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328607672 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.625381782 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.344099096 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331216926 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91892336 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.335791709 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.367170594 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.328449354 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327516336 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.343355052 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331315781 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.613334818 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.38165996 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329730478 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.328595688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.341083258 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328294495 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.344777757 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.336538712 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970105528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.344393916 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.330994405 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.348600108 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328631658 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.333900653 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329581778 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328287389 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619213712 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.329091512 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.331519706 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33141628 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32999206 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.344805002 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.424378278 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.337860332 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.633205634 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335380618 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330729447 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.335345018 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339440314 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351230534 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330497625 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.35155384 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.331289036 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.628444704 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.346643557 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.345231535 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331921653 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330337734 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340298057 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334120941 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.386593798 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334402276 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195620795 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343174985 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.34724309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332774348 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.337231152 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332787234 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.35334372 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.332783766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631877984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.617302912 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.587542618 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337535476 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333086224 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.175032185 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34159507 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51438485 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35152532 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332076746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610568399 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560798764 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.333499152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.332937448 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.336118938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612505845 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.33274887 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.660446292 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936578983 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.337987929 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336094407 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.193580395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.147262403 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.333629753 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.337421174 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.625557282 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350244059 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332867954 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.33375411 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.334356969 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332621696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338376649 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.336961394 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.335521398 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.333797573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.629564177 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527211956 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.348716028 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.34531703 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859327598 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354392494 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333927441 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.340099259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337506096 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.335711192 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399274066 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.339042251 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.34179841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.334360823 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.335910388 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883519693 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.335602162 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.351674541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527313908 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109577441 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.340268746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.337821088 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.334842952 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.388904782 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890411477 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.3802327 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634860637 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.336959629 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37469939 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336583864 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347047531 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893475186 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340099874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350813866 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068922085 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.340036229 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.817619964 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.335845439 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337620037 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995955444 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.339778097 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.339775756 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345964307 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340639866 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.671665072 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.336489777 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.374924327 seconds)
  done (took 498.624387064 seconds)
done (took 646.273209029 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336647636 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.341735567 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.321378602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.341100557 seconds)
  done (took 10.574143774 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.354423432 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341144946 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.351635095 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341375276 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35171292 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342572782 seconds)
  done (took 9.314452663 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336970467 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34325008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.342143708 seconds)
  done (took 8.255306343 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.55123921 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.358367745 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.687315909 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343934433 seconds)
  done (took 9.174549625 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.353544382 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.353103529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.353675878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.352927424 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355275289 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.356333139 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.354419612 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.353444787 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.354337975 seconds)
  done (took 13.418035795 seconds)
done (took 51.970494991 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.414402714 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317717814 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.217818021 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.486532975 seconds)
    (5/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.522666405 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.317758825 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.428595113 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.375638606 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.45308988 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.33862766 seconds)
    (11/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.338314259 seconds)
    (12/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374139203 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.39976558 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.487013156 seconds)
    (15/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.372020889 seconds)
    (16/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.41809282 seconds)
    (17/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.580841659 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.438473479 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.582154726 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424021024 seconds)
    (21/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.369024051 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.319979769 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.439625189 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.464160264 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.455288944 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320206366 seconds)
    (27/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.491617604 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.417856344 seconds)
    (29/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.407456116 seconds)
    (30/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.380463576 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.462319629 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.685650939 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.491069029 seconds)
    (34/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.406836822 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.4238698 seconds)
    (36/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.331445173 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.324272319 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.362392761 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.427118199 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.453895955 seconds)
    (41/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410548752 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.325985824 seconds)
    (43/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.507706742 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.458864397 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.489185206 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372006195 seconds)
    (47/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.382572368 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.487833986 seconds)
    (49/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426983975 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.321164687 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.167149075 seconds)
    (52/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.442429833 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.32918953 seconds)
    (54/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.233600985 seconds)
    (55/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.507060011 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.347055012 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.464922272 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.191839346 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325271379 seconds)
    (60/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.554797822 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.325054202 seconds)
    (62/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.54216318 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.375602171 seconds)
    (64/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.554895275 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.453801197 seconds)
    (66/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.323016529 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.409383268 seconds)
    (68/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416020171 seconds)
    (69/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.333517829 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.049496294 seconds)
    (71/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.495726929 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.43279183 seconds)
    (73/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.322607597 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.560488375 seconds)
    (75/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.381491323 seconds)
    (76/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.61139903 seconds)
    (77/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.364672308 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.331739083 seconds)
    (79/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.327929876 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.342508553 seconds)
    (81/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.120997902 seconds)
    (82/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.323639892 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.200583826 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.458630674 seconds)
    (85/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.3230271 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.427696897 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.585243887 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.457179713 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.344283731 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.385779847 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.428515295 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.324056114 seconds)
    (93/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.384962984 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.497132824 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200783555 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.463539535 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.378815298 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.323584203 seconds)
    (99/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.597561442 seconds)
    (100/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.316020158 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.417265135 seconds)
    (102/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.553782435 seconds)
    (103/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.329042392 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.586589396 seconds)
    (105/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.440957197 seconds)
    (106/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.509710351 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.460393201 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.328382733 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.399209764 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.452388992 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.324441497 seconds)
    (112/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.526562059 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.355660436 seconds)
    (114/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.464434992 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.202865724 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.345280277 seconds)
    (117/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.532246176 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.048585192 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.027232753 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326012998 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.403322779 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.540516497 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.176998228 seconds)
    (124/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.381292455 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.457218536 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.479527986 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.126438164 seconds)
    (128/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.373498123 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.353009365 seconds)
    (130/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.381990238 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.496485483 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.503263035 seconds)
    (133/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.569373129 seconds)
    (134/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.428038709 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.494580428 seconds)
    (136/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.527603642 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.425947735 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.476939777 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.437077966 seconds)
    (140/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384901423 seconds)
    (141/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.325745155 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330768942 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.449343901 seconds)
    (144/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.354896815 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.409757517 seconds)
    (146/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.326557148 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.513221023 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.328713483 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.159169586 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.334378859 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.446308166 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.466098066 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.158617859 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.45769564 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.388516295 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.319789613 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.484482812 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.425475234 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.482807808 seconds)
    (160/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.03966411 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.409518821 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.353023507 seconds)
    (163/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.331242328 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.449430417 seconds)
    (165/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.091206478 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.390821491 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.435330191 seconds)
    (168/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.471094144 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.374000428 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.080266102 seconds)
    (171/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.604098137 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.465799704 seconds)
    (173/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328148851 seconds)
    (174/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.56068425 seconds)
    (175/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.540275688 seconds)
    (176/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.470030655 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.472641347 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.376310972 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.174691558 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.107251525 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.365646617 seconds)
    (182/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.470329963 seconds)
    (183/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.427233722 seconds)
    (184/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335498893 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.550068439 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.102788661 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.388796321 seconds)
    (188/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.329136692 seconds)
    (189/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.176016611 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.374683907 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.512288722 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.603132717 seconds)
  done (took 342.582288543 seconds)
done (took 343.816650822 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379067703 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.44554642 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.359227278 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357019748 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360575257 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360249424 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.381347978 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361216083 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373366661 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.375699149 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362232242 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.369395423 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374711208 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370986792 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39375278 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361397278 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359302307 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370110793 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377091035 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.375911703 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362286956 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360944388 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.388188237 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359698792 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369785516 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368110715 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367625515 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.359745117 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.368472587 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.376486199 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.358964371 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367407834 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.377015112 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372679392 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362981932 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372182057 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361981117 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.448673741 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38250117 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371619702 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.369938441 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378500991 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367068017 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366883098 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372599049 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.38915986 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369383299 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.377665142 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.361880899 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355897487 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382686066 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375790648 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.371163893 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.356253436 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359576127 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.377765605 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372816442 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381227246 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372133346 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363736087 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395889612 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38383926 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.375312085 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372038854 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373007584 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378775062 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372913243 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.379741905 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371629795 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365193137 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365737275 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373221004 seconds)
done (took 108.101992706 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.487325854 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.360504041 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.521762653 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.372049821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.526519652 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485325964 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370609703 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370603808 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371324509 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.172975412 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371588839 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371422493 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.362912045 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.373188725 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.48553793 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.373233259 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372595697 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.069086668 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.375151974 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.499744955 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.362561356 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.374706757 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373562697 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.173505543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361383322 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.359427839 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.501788606 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.374149655 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.0722538 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.358173527 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.361019138 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.072233764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.501032385 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.392421027 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.383145814 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.382727123 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.530397165 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379068032 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.488892298 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.490751619 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.522291283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413639161 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.358850495 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.365703716 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.376794385 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376206537 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374524362 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403135444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.362853163 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375175788 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.06978274 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.383244306 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.38343287 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.375470487 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374931549 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394616854 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375797738 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.375141129 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.503196486 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376115416 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.491870294 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.17655718 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.177303165 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376749933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.362559357 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.376259733 seconds)
  done (took 110.740228169 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.437034412 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443006529 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.476633595 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.366921002 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415940598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481090671 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368070717 seconds)
  done (took 11.243361635 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373804971 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376225334 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414508305 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415589811 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375808423 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539063009 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376511405 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379211001 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377370696 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419037499 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.379060278 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377249817 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385888694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.366401465 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414857331 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378425453 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.485169596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.369629511 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376926709 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520363679 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37683324 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.387440808 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419303248 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.381378856 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379715111 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37432847 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.153251162 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379352533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377069669 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.377765004 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377244685 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4355317 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378777911 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.36796474 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378656666 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482633915 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376934373 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377411724 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.379165798 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.370542698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.379382146 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.378655468 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.379632225 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.380210172 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379316827 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393409869 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380271059 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.379348675 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.379054811 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379407465 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.419472107 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380160751 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.380581207 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.38049832 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424845968 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389883376 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.379397582 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378874617 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378804878 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379756963 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.523408032 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416853793 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37932706 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417234057 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378107198 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380963684 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.379682955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.380185679 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460497774 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.380370641 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417571869 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.379371354 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.552610108 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.394918603 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381372599 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.374261445 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374513619 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379929611 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.367639657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.378305655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.379538436 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373000489 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377392461 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381174204 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380555146 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528504595 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477991336 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380534756 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387809248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378541543 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381099091 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424174803 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.381915592 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.381445782 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422516467 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492107808 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425046083 seconds)
  done (took 141.641603741 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.3863919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385764615 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375855469 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400045269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.374302033 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.373630841 seconds)
  done (took 9.556113687 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375346896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.384318515 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380870831 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381858114 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.381554987 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.385089939 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.382235807 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375931848 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.385740305 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383386485 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.384218754 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385718452 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.385358448 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.383018308 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.383226845 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383767295 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384651348 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383306258 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383681868 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384851635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.371810683 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383761825 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384163178 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376958416 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388277421 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.382989211 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399960045 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.383657894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383936694 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383196537 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38727945 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.387101493 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.377842541 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380310899 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.388145715 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.377656535 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387618042 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386439677 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384002925 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.386725998 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.388384079 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385421801 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.385537884 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.38750214 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377907854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.380267169 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391665101 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400838273 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383527419 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.387623257 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.388459667 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385857831 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.387313177 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.388840968 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379616133 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380677508 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391199252 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.385737873 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387105042 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380027802 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388525778 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387947601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378385587 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.389836917 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387737335 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387846562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378593693 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39080393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387339522 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387404976 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.387580872 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.387236809 seconds)
  done (took 101.965252894 seconds)
done (took 376.395019069 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.885919411 seconds)
  done (took 4.149758115 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.378231177 seconds)
  done (took 3.641760327 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.502329679 seconds)
  done (took 22.768788937 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.415221415 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420226627 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.387983313 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.372627828 seconds)
  done (took 10.861337243 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.811238781 seconds)
  done (took 4.075073182 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.381210315 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.380822037 seconds)
  done (took 6.027232425 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.575538879 seconds)
  done (took 3.839923888 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.593187845 seconds)
  done (took 3.85773288 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.411291187 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.399612362 seconds)
  done (took 6.082851338 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351490851 seconds)
  done (took 3.616048416 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.460107723 seconds)
  done (took 20.72459392 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.395150993 seconds)
  done (took 3.661146095 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.416084473 seconds)
  done (took 3.681411082 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.89703171 seconds)
  done (took 6.161546508 seconds)
done (took 104.413728624 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.373750937 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.37965412 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.380865257 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.378823024 seconds)
  done (took 10.77871243 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.452366348 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.450052416 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.460803048 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.446489283 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.445699415 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.454396858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.41638835 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413857046 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.442750036 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441631595 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.457425484 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.446435727 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.454479073 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.413770807 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44102577 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.457434297 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445545407 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.462182833 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.414531589 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.446956126 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38901164 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.447613596 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.441594275 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.390381548 seconds)
  done (took 35.798217165 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878207525 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448493611 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533844891 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432560909 seconds)
  done (took 7.558666216 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.492910058 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.493447813 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.511158506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.548423006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.595465945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.50794053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416360673 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.411829187 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.397354987 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.495633393 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.580883439 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.493065115 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.707224591 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392235005 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.707266826 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.389671356 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.390412944 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.49461407 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.543780235 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.573182076 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.391693389 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.493555498 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.497933106 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.495499944 seconds)
  done (took 37.288142014 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.400170301 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.409516923 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.392660065 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408889724 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.394223973 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.393713561 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.392700853 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400611573 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.391721963 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.393704687 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.394663657 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.407335499 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.391980444 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.393801152 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.400023975 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396405182 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.397020339 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.401315583 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.403193672 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.395611656 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.394387865 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.399903244 seconds)
  done (took 32.023029732 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.378253795 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.377367774 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.729225302 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631908723 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.375985464 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.383113339 seconds)
  done (took 14.145071122 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452906121 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.591185308 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384893795 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732341854 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.814928114 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385341585 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38613631 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.627776805 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.92470033 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.924753041 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441609334 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453843031 seconds)
  done (took 20.388583883 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.38929097 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382919633 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.391172245 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398858585 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436985389 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.388554304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390273967 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.378064497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443234023 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44412853 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.393225708 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440255354 seconds)
  done (took 22.147353104 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476619145 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389242912 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390216083 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415424217 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393771582 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391089114 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41405345 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094762934 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394993686 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666482903 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400515492 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480802566 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635446107 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405052802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395114273 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.348260861 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621467838 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901319299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394844421 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390769499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427202169 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392045054 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395354892 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608112645 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390221485 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390270633 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.660508658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390834131 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683768944 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6615966 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662586079 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397287728 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668312363 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031450766 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4998975 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602357833 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384206765 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395632406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.385017162 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.395844672 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40515638 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397919363 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657045607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399423032 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392226472 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403011643 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105248467 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.39900973 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.392905214 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394748782 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65970351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4805885 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.39909794 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393262729 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446645455 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394901044 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.399791762 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516380587 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033861938 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393563535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411908941 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.398254365 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388145784 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398739564 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063393193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399147697 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.399122104 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397990645 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394522745 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409596209 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424301876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394432124 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.412740057 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394469059 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191688663 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406927851 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399862997 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958000134 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411277633 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.398725134 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617121872 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395082525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395450173 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.394355915 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394899347 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140737415 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407550383 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363754128 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454874709 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094463686 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605536434 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412361796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424871444 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614243639 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.363552218 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397189819 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.403703174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400582758 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416279223 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102153019 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39510865 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.402421538 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642752433 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.607803388 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40955694 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359935945 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879637913 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403123234 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.425672946 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397221256 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630423429 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.036639427 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666822162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403062984 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435605327 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396769171 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202870547 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408613456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.407966286 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408765398 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682434124 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214501961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404276399 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471444758 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400313076 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39724969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399676676 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404960201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398010182 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.588064157 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39864259 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671626361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.405350379 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400198245 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.397578777 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418874327 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.404603068 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618278554 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403077789 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678491748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399757898 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398392963 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399033012 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.616744416 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.399192489 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.42100848 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738635731 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400545809 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405710899 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672244177 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435950829 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512384331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430997198 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.411779232 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651561019 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404906671 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.406156097 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409169708 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406867612 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405206633 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408848701 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403604309 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050650019 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37897468 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406326357 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402228071 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.418061456 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474050724 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407585286 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613244685 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.409174453 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404319924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41227497 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.40074302 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6273786 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669297276 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.407455096 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580814572 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880730837 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044380098 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416368184 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.401565033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.401313769 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.40160172 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402518329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401733621 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400295329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613288791 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673330481 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402555677 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076283859 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404145704 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410257217 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.413669047 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668382572 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416251495 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403627441 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.401919209 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407097127 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417999196 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676398804 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627753617 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.418501169 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403158798 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922320117 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409958342 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403125887 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403046951 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431558349 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41473028 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247126246 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740693484 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400942518 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675548816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415953057 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.425569878 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400836969 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416397735 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416466052 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.421823592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411664055 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.616070807 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403382435 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428083909 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039295054 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212996294 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993749679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408320202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.412923233 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40854569 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110461986 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405340796 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405246963 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653273126 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11128599 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404039117 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883636445 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.40263349 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167439508 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678063903 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633305997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405361179 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.423735644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680640304 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621805081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432846178 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41403838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409482892 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.375733851 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962862046 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419785952 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58892336 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112054551 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404239804 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429016558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.456748226 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419680914 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794995004 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410148967 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406379625 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408521814 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41098174 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249626449 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409604096 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407231077 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075802083 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405900414 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.908347333 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406436655 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617793797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674432053 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.657859057 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.416017642 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410215769 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656031177 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676230657 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413443519 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409426362 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000735027 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262547971 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.414521148 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407260343 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219362431 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414180892 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706403774 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.415904664 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424494829 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42245571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408829762 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408491975 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.408589414 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414011734 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383858859 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92193062 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.409672549 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41086306 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41990707 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413971264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654792731 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.425296358 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056518531 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633535599 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407107458 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445953191 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.41521522 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407067441 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384692022 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409404514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40987447 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46607704 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628803851 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409375459 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.378762843 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403105887 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619151262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409789896 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408520981 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644904517 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.408925558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.42996523 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220329261 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44012297 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409182129 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416107107 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400640035 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450646382 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484215499 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622545924 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.678870054 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685670949 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805442675 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414453645 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417329402 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.426565865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491383263 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409117634 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.431621107 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.415701155 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058997616 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217427524 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064866209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682346808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418266755 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421833557 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410912056 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652873848 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411199661 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686781409 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412255997 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.4010057 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45821399 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413369977 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418687186 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62791353 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684856953 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412601521 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422364879 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417701679 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.41255391 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686201529 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627756011 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930306534 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985496257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417169402 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412357765 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127970464 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689309077 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412775731 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414233671 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413097523 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.419599673 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414390253 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.420075334 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414219383 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643040085 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682842733 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06513294 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686169203 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.601962046 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.414807947 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415855542 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665252748 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245207752 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628386175 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070134487 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171770511 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663399884 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487629939 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628516175 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.413994297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653467481 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.414910633 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420627889 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417401159 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415598728 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.414767888 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.685447861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074757476 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667194291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.419965665 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.415691731 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449494486 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.630183677 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635060699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173349102 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638585748 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690338637 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427389753 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416760927 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071174734 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686456455 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421133102 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.421889497 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642641852 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418632822 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452463121 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.2894309 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.415960146 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988347835 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.630434727 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437251909 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415918113 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183135544 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071850386 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.416982984 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939814585 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422991854 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430872825 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699383608 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.425034358 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432981962 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703948338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.422478192 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43031003 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639881768 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.065123537 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189693881 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.428864917 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430210026 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.424920751 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420050661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4380424 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421122316 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419883451 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.81274721 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422168265 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418956555 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432366109 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.418226754 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423002218 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.425853872 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419445425 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426952665 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.400467954 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.391478023 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428651677 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543512978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978479391 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421504309 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.032956226 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755449672 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665835548 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41986558 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.411215001 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424097709 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420404206 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421271906 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42063012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439272723 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997136509 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.42599639 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.697884295 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4328754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.631243102 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63224526 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419455871 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641095935 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42054504 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445497079 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.388897774 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420533918 seconds)
  done (took 998.292628761 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446032005 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.418417344 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.438335427 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.41886708 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448973651 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437020768 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.444542689 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.503452232 seconds)
  done (took 20.853648165 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.419724264 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.421102498 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.418043247 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.420240102 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.42214077 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.902692567 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.415521827 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.420448546 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.433660351 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.414617744 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.415776132 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.102767405 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.446804848 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.420700458 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.413121931 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428376656 seconds)
  done (took 33.215549468 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.175363648 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.471250177 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.068824008 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.487723617 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.438040015 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.420729261 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.579338782 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.444409796 seconds)
  done (took 26.385645052 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426572153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.42665631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426240148 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.42548094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426955954 seconds)
  done (took 8.431208205 seconds)
done (took 1268.571804143 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.429461034 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426606866 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429340075 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428233942 seconds)
  done (took 7.012468571 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.393828135 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393862109 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394793109 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40923729 seconds)
  done (took 9.890716824 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.122728754 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.041858529 seconds)
  done (took 5.464823982 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.94917976 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.950584013 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.944400453 seconds)
  done (took 7.144967397 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70713857 seconds)
  done (took 3.007185445 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.393138493 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.419267156 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.129758622 seconds)
  done (took 8.243161203 seconds)
done (took 42.063377501 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418423677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.178763891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.570782207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418673171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.578119025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.57228195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.665475551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414477028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416930032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415255233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4191842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.574820118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.652956545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.177488045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.652696787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.177147441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.57620594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428032788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.423459103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416228221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.666976534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423548777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416341124 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42406956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.576766871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.560116172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415936663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.196083564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422206105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415660861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.57783394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417239566 seconds)
  done (took 83.962394473 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420270206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416027128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.444930268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417015983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416907667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428173106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41791647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.41798944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417577642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417521373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416251204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.417086255 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416791627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418165369 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.42098401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418438386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417720947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.425198874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415694914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417579211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42109986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431462672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418771205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.447116479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417903317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.434428588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437269667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418175914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417907381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416992725 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.419965849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.437214908 seconds)
  done (took 78.819366332 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419469411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418574797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428787354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418666922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.445760717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.432161855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419612484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419523177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420513089 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.448160688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420237424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.429783579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41895208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420299655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422350125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.422177939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.419213105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429460528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424569111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.43090245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42188145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431957058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.4203333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420143084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.425759078 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.424797295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420233231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428684167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420423092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424212453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.430154747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.425492281 seconds)
  done (took 78.908255778 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.659532701 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435181431 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.440467673 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.430624094 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439074221 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.435366389 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.431347191 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.669095049 seconds)
  done (took 15.247000621 seconds)
done (took 258.23821605 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.430405744 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.923721194 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.461043296 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.436197311 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446717835 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457464454 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.654158762 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.462070649 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654244649 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.450775279 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.462569586 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.436871976 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.238610097 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587817766 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.259620707 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.375009863 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.32321829 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.43582297 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.996077616 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.718734941 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.4580005 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.429074438 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.256083094 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.334224759 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.407498305 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509488415 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.52824962 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.65723764 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.592284683 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.508730845 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.936470701 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.43355026 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.451477996 seconds)
  done (took 66.021248421 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.428141076 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.437779438 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.437395346 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.439380843 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.439893802 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.438126555 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.42931127 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.437678891 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.437422164 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.438887811 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.439346644 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.438898169 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.440454058 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.438722 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.439325225 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.413305772 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.429632685 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.43856482 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.429381206 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.412407074 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.44066507 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.440307529 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.439575791 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.44068133 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.439543189 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.439559717 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.441228121 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.440406495 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.439149259 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.439823082 seconds)
  done (took 44.394922401 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44159645 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008536009 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.166901804 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438759208 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.431030831 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436571573 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.722418927 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44262107 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435071819 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436578699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.893522235 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443350038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465155966 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1784573 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43386475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440778559 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44114295 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433173232 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.019775593 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441629606 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.722618486 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443948735 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.72188561 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441786409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435490526 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434654798 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438790824 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.261296691 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45395191 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.894882821 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.220276831 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.723218168 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.191948129 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.228899984 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.220785079 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.449712776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442661729 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.901419253 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438165016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435397637 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.720394349 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436003237 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.184175014 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.120303342 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453497711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445635411 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.292962408 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.898316785 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.679741055 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441341136 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.217076402 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437766451 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445377398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436597203 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.680288208 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438823292 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434855547 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.286022366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.440938722 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.723337747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443498743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436911753 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.020095319 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437102508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.016445951 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43834075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443533158 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.436360492 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.189164913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.444705057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.150694525 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.45421319 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44512292 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902493214 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.020029363 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.345607885 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.440450744 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024048391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.227133518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.741979826 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441743093 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.244027549 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.744164699 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440791137 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.447381052 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447938196 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446318891 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507163006 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.72311273 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.06485083 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143196613 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.29759806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.72703363 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446478429 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438948831 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.297194024 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446520517 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447335861 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.182002609 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.141483207 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.457224193 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445702478 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.132873932 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457460894 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.730245055 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445505435 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.224220327 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444188367 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.508471317 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448117582 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.444467487 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.441914847 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.72795858 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443357784 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.448360229 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.125931055 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.930882998 seconds)
  done (took 200.170997036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.440213648 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.434140811 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.441109478 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.433807637 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.432988252 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44178835 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.43521204 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.436542178 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439935827 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.433911752 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.436306242 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.4447842 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44111992 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.433064213 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.44782492 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.43589596 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.435361319 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.450413442 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.435873423 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.434632071 seconds)
  done (took 46.082798223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450978462 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.00055939 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.973724309 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452416002 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.448990862 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441759961 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497827583 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.450648382 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.450992702 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.742191263 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.616064596 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451769184 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.449365963 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.450969659 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.975825062 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.423217668 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.741481376 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.001293818 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452336549 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.00061901 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42473327 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450637478 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441114417 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.001265724 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.752678086 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.729301081 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.500808094 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002009924 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.451557336 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.45284267 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.002483738 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.452161493 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443436007 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.989016956 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451290227 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465181538 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.452468369 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502219094 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504034673 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.743491859 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.01077495 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.740418394 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468325395 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.604105877 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.459277405 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423503427 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015224716 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.453700522 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425427724 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45480694 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.458111481 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.990396939 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446728184 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.990689924 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.455493734 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453239399 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.005991809 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.989391054 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.985414074 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616823314 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449095588 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.732986838 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.453865495 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018012493 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454144651 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454185858 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.454457045 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.620594917 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.007481731 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.733530055 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.747020083 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.748599154 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.455088181 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513409308 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.45524801 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.746736693 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.511993331 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.827997362 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752882733 seconds)
  done (took 130.590867962 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.71594035 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.56100901 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.82611742 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.032564422 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.946362767 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.586127739 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561775379 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.693976211 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.450350037 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.560940129 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.096099246 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.544173622 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191130412 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.513133377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552525673 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575473491 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.843862522 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.413784271 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094128168 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.093962603 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.451163002 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554261333 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.94933607 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.656145551 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.446642403 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.013388904 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.38122297 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.963861994 seconds)
  done (took 54.592340434 seconds)
done (took 543.159336416 seconds)
SAVING RESULT...
DONE!
