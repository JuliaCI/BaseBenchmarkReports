cset: moving following pidspec: 11539
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353876016 seconds)
loading group "string"... done (took 0.55862318 seconds)
loading group "linalg"... done (took 7.097841368 seconds)
loading group "parallel"... done (took 0.157218876 seconds)
loading group "find"... done (took 1.098529384 seconds)
loading group "tuple"... done (took 1.71086337 seconds)
loading group "dates"... done (took 1.188801244 seconds)
loading group "micro"... done (took 0.21641183 seconds)
loading group "io"... done (took 0.987757832 seconds)
loading group "scalar"... done (took 36.670439212 seconds)
loading group "sparse"... done (took 11.23413099 seconds)
loading group "broadcast"... done (took 0.900738198 seconds)
loading group "union"... done (took 11.881159192 seconds)
loading group "simd"... done (took 4.195756497 seconds)
loading group "random"... done (took 8.469707583 seconds)
loading group "problem"... done (took 1.844916327 seconds)
loading group "array"... done (took 20.499107686 seconds)
loading group "misc"... done (took 1.630387346 seconds)
loading group "sort"... done (took 3.126158335 seconds)
loading group "collection"... done (took 16.341660168 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485810777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122909815 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11470797 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119048744 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146243282 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114933761 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123299311 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083565551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.767462855 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152886901 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118409999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416379571 seconds)
done (took 5.074145155 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174866145 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082410345 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081316538 seconds)
  done (took 1.288442146 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065664115 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122176521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066410311 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066856593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066400137 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066148598 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066144832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065757935 seconds)
  done (took 1.644790575 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072665321 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068304646 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069618142 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069268667 seconds)
  done (took 1.406493116 seconds)
done (took 5.715819236 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770207583 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201877991 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183317684 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397660893 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129655859 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154537116 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640720705 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301373983 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186261449 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081886969 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104902939 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318398964 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107252963 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.627472762 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074262412 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090491281 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136940519 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420533091 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067685212 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081912659 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088841192 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127502929 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085165737 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075019748 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145641642 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068661321 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1303891 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080114888 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066756034 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208269739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172840211 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650414728 seconds)
  done (took 10.140846833 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09679554 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09778817 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069145736 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136469348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.0964731 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069461298 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070987364 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067110882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086686777 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127642631 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088558621 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101193024 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065681306 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069353465 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084625435 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204161655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082059289 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081157174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069926602 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075283567 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118917558 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078161119 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07870802 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078054274 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128175441 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179415822 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09951853 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098983851 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067773462 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080787954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115223091 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125741698 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065772894 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066374195 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124867835 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094658926 seconds)
  done (took 4.60208437 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.285911445 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109804902 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140892793 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090348497 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131863784 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064771537 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106827637 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065460272 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080564575 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20079161 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.289415036 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577427131 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110724623 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103765501 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067969799 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069133596 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067268638 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345650687 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107802972 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103802051 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080262136 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070007383 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06853634 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342717878 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067469617 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063664384 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067484365 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057671226 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123361221 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067873733 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927880653 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12548434 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067005234 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101020252 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161585793 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090860141 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276563736 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069240343 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064059447 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149694995 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07002953 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067160969 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084104322 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103407758 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112658528 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066250796 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066898138 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162771056 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066016275 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079218007 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.983212662 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155150608 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079791214 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066440433 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247636005 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086991354 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069488444 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065318982 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173265834 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138792775 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069626988 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068251265 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068448086 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069382844 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.358816839 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069051127 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.707610101 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070127326 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0780287 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069354977 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069359181 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064866386 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073131466 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074976352 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085246546 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063731103 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06610907 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075483434 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066265709 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065887021 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067319117 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084483466 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360033517 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066591478 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067810598 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064813937 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08603205 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101248522 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066873283 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065119485 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099988902 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171817014 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066813974 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106191103 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067239129 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084228697 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069464356 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113651133 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069709901 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093840434 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067839045 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096305126 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070427442 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099315699 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081853631 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068396098 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400182046 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065071949 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065542846 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065752974 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067892729 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065991795 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067357169 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066208269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08048095 seconds)
  done (took 20.853065474 seconds)
done (took 38.006947856 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.273061888 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077000082 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075580552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075829251 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075291147 seconds)
  done (took 1.793515151 seconds)
done (took 2.992177719 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119901134 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098695892 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064604737 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095199819 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06407116 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099851848 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098594607 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080939595 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098799795 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064406533 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095957491 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064305022 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064337144 seconds)
  done (took 2.32810129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082633285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082854546 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070330873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082449974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063496026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082493241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080613567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088119221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080231948 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072094691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063640391 seconds)
  done (took 2.041696193 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082072619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083548106 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069733532 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082132766 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066074501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081279285 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080988495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085416962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080782995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073054533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063704771 seconds)
  done (took 2.038045911 seconds)
done (took 7.595156621 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077110556 seconds)
  done (took 1.258589345 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587156517 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.071780581 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081431098 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111996938 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184110483 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119536463 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27855661 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086811753 seconds)
  done (took 8.882395974 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087807837 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081647799 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068904607 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069037085 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071566643 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070144379 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072565531 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072152451 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072007966 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069805719 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068917426 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069861201 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069430771 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071296297 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072027966 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071183201 seconds)
  done (took 2.409662028 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092398177 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091003401 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073665335 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07512835 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072028228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071954412 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074195398 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07399618 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070660918 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071937758 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075212823 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073580481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071627045 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06536179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074458755 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076021121 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071025428 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074247544 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075333251 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075118574 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074612915 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06498999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071768762 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073966156 seconds)
  done (took 3.069064998 seconds)
done (took 16.808898631 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114799148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071492116 seconds)
  done (took 1.374458556 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082369768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083604456 seconds)
  done (took 1.361177605 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084710319 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065814665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09375626 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079438551 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066781205 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0661416 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089700687 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066204292 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066089938 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066229666 seconds)
  done (took 1.940184304 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069196082 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079298021 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071492035 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082318305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074423963 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064554526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073075711 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068190098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07922539 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063236424 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072054065 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082952497 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071908892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084842263 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073157846 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069193824 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07179631 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068130663 seconds)
  done (took 2.51835407 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06619896 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06748315 seconds)
  done (took 1.335734068 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067986641 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064759708 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067585772 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066988692 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064047111 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062707681 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064078295 seconds)
  done (took 1.656497604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385883375 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110232654 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294643453 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070753768 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081869437 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250041903 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065442366 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070538582 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070273678 seconds)
  done (took 2.641177856 seconds)
done (took 14.027987345 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078447571 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085137428 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095707918 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362549795 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091830252 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065998292 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113799197 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19154948 seconds)
done (took 2.296219911 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.228728204 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616160146 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386818664 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197667054 seconds)
  done (took 2.405371596 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324087227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087684671 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060771017 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068119148 seconds)
  done (took 1.753438573 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065898907 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069253453 seconds)
  done (took 1.345747949 seconds)
done (took 6.942797304 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06665744 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065922936 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064026815 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065882626 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082434767 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063466923 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06372325 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066168279 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065544144 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065784677 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068428407 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065868948 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066108496 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06351674 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063597993 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065864885 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063574408 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066377082 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063597316 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063557029 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065857986 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066073694 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063490683 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06385218 seconds)
  done (took 2.825472552 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084280321 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066528375 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071982842 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071868952 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070128484 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071671028 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07125891 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066737517 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071689679 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068230171 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070348134 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070371538 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068220594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070377129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068438046 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070101431 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071253993 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066298086 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068611946 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070435133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071290961 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066665734 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06977372 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071679357 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069868256 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069944469 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067727367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066400984 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071137457 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069818804 seconds)
  done (took 3.323695294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070108079 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063587444 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064413718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070371195 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064248528 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066918492 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063014309 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064218079 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064260298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063227976 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064947011 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063727955 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063543309 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06483336 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065106296 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067338561 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079173597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064092139 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063586189 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064066457 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066946365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063882146 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064326775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063908998 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.17572128 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06329678 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063863834 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063230101 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064383593 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063282799 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066612484 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067431772 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063234299 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070163748 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066955196 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063386311 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06742451 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063071087 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064003592 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063183099 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063196641 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062950215 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063787397 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070497292 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063781162 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065213818 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064152057 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064692285 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064316221 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06597992 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062913286 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063657571 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065338553 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064569697 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067436571 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063003585 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064028213 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063245121 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0645796 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063374232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063470033 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063031068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065550757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064026158 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077437031 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070207748 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063219348 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064996465 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064358278 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066187258 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065445668 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076855526 seconds)
  done (took 6.039903423 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090784707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087599915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066107785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065525753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062360177 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064149521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068167126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064524239 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06567051 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069816905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064973357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065595342 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06527902 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076878982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064700612 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065579259 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070762286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06218498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064238158 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067761145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064464313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067687593 seconds)
  done (took 2.736357635 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15470755 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07020032 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106706071 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073468276 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068297058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073945426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069934046 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070158348 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070081764 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068367227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068522901 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06984673 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067871765 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068188893 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068725237 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068431559 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070310349 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06829826 seconds)
  done (took 2.601451855 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077202296 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066567597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086507148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066189545 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066278667 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06873559 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07112673 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074620868 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068488497 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066260041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074564362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068512753 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068283233 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066019342 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068266128 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066148803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06838896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065918599 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074304096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070777469 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070771135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074679393 seconds)
  done (took 2.774814545 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080187162 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068246861 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08267203 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068823423 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062396365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064489865 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070455702 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066327299 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070916718 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068063091 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066390289 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064767524 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069387898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066285566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069629434 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065889359 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067616045 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065948043 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067753169 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062317866 seconds)
  done (took 2.595999071 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086881504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067671913 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067931655 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076612628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067742713 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067379338 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075779998 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067306791 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067407725 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089210743 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067269176 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067547446 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075052526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072603069 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06780698 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075209089 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07498081 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075009528 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067593269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066948426 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087283529 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067436623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075173904 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067367199 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067430959 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067259846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067205799 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072408849 seconds)
  done (took 3.244272497 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066931364 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066004642 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06386526 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06351768 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063397152 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064018001 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063643924 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063774922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06606772 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063633508 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065934149 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066232983 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065933416 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066072029 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066864822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066151116 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066184462 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063773304 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063356148 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063637621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065956758 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065515752 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066147184 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063526827 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063313145 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066060321 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063816448 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063300969 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065704331 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063238623 seconds)
  done (took 3.177683401 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076023315 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073294788 seconds)
  done (took 1.382988724 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063496955 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080111574 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06383341 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070321995 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07117454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066548806 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074072518 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069900129 seconds)
  done (took 1.789295729 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082609726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078122559 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067828657 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080796833 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077260885 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083027896 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132729716 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067035217 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07314692 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064205263 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079701984 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06575821 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.0721225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066542618 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07167372 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072726297 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064129533 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072349134 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068416833 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064861591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067760843 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074792833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068895138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061730563 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067526223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087786503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077391483 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065922953 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069178374 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073864084 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071418088 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060440349 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066314179 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066447113 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064208026 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075650254 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080883682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068724101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074906927 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066966599 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077167366 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061349888 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07096218 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072512445 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076693888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066677017 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06740326 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061038703 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063779491 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068574006 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06142607 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066255632 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061233516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075937736 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069969951 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077330603 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065243456 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068234505 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069631077 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069949195 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073527186 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068595945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068908307 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066350821 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07607413 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07090494 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075318432 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061821994 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060402049 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06387278 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07564218 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088577438 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072275364 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067087533 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067296702 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06381733 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069586196 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067688305 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071763166 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072426732 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066293744 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071715556 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073719694 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066315033 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06859473 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074712644 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064578134 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069221213 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064190714 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082575643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065435414 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064214961 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064408518 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076889274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069853254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065900983 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064590447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073078946 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060051905 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067065001 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066060767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065542849 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075031158 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069544853 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070205097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073370042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072489905 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065265615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068003938 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062035434 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065684063 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064153699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07221628 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059123635 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067545838 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065787657 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06536903 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.19906296 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065333759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067140903 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075029381 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072588084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065576334 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063625763 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069779041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066822084 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07031886 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07437671 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065789035 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061858059 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061362438 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069755324 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066893165 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070549611 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071557258 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070100687 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061054658 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064970063 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072153555 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075203397 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066636846 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067354621 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073161221 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068233106 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065667622 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073276159 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06905412 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066440337 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072294532 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068225996 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061934244 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070285404 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069274888 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066074642 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070655714 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070463244 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06923112 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067693906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065059807 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074196672 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067672284 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065609854 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067088747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066027528 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076980215 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068113274 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061883271 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063913397 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076397988 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064498119 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065844171 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065527878 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068946256 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067775022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064834721 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066543274 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068406444 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077651774 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071135007 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067230076 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072431574 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077572497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066727406 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06903054 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066235475 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067632388 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06715391 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07515439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071885638 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071271495 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069202201 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062973579 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0719804 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074175 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065990518 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064365294 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065641625 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070524084 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071770031 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070601427 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067203425 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064403187 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067448791 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06967098 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069464494 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065962027 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065506349 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072845681 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064344865 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073284478 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067113396 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076289416 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069583111 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061488631 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069473783 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064469938 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0717642 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061511623 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064259753 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065538573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06699738 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064520449 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067496847 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059579077 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071710925 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072224267 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06538147 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064338931 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065299815 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071637259 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066804077 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068565621 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068648929 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070606961 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075235126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06404327 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068508078 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.20203479 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06702822 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061474497 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072802334 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065394855 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0659768 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065779878 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064546448 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070007933 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075802976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07397073 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060672266 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069793151 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066744916 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066257417 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06277254 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071621901 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070482401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068244505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074163299 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068608916 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069718814 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072801107 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068326062 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070654749 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069548948 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070308988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067430896 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068507691 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066854699 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070892505 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065854731 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06459373 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068641162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0675153 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066778782 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071906336 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066910901 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067042855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069140914 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067799493 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068111684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067369388 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066265607 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070603629 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068004705 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067226629 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069103875 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061992854 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074108526 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066645327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074445257 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069091939 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065333531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07666131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071108922 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07503176 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069676528 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06930547 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069169542 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068816633 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071747358 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076587614 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066105023 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079985185 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07704924 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069538209 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071673628 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069212813 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068784961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066230634 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067360964 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067313431 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067060527 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066717824 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071160253 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06869284 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066404611 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067919102 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066929057 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06646279 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06725702 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060783876 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065662136 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065907879 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065931482 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076083487 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067115403 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065987992 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065563001 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067145888 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065718283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063435452 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074954041 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075812846 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06732226 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073400183 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065514764 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068111369 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076570754 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061043883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064349816 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064128359 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063937474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073708235 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066893557 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075219795 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065904952 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064990836 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062932756 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066520392 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064236416 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059643548 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063320969 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068200776 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064391418 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064727698 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065250225 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067537324 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06633144 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074469633 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06473108 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065935118 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065038978 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193101498 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066389912 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066593723 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069916341 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068105655 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064812803 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064659261 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066688491 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067504276 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06866972 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066885724 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068164972 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075976213 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067353225 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070510519 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071101671 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061627959 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069864554 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067200083 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066605052 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06592905 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070874591 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070080001 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06766877 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076208692 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066528715 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068003774 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067278784 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064965988 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066779548 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066709409 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067010097 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066572177 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068823762 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074790009 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065069651 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069980505 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066443647 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066968423 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073013971 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067695919 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069641864 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074503183 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06655514 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068084747 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074716216 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0709723 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069508364 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06821914 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06829902 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072321587 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066052992 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073150959 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06739882 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067508672 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068903263 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065051805 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066892656 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06675346 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065797732 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072593016 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067323652 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065392811 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065770107 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064760452 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067319682 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07073497 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074001365 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069087441 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069968439 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062124779 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06373035 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067562024 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064492291 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068912851 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068952573 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071767542 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068496655 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066811057 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064938517 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074954744 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072008201 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069882292 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064680616 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069950039 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067634085 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06885746 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067686476 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067108613 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068145373 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071004173 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067828092 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065626487 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073473836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069908851 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067391038 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067792623 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067208108 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066611908 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061618092 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067211052 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068223501 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071536747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068599338 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066505703 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076881079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063811363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06627466 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069263959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064999964 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07029421 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060964598 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067199896 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066506951 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065901245 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060367316 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064486205 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063288402 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067384904 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064280165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060516985 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075343351 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074036348 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068193866 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064501528 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195598727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062917085 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062502349 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066510912 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06786676 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068952292 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076676516 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065674402 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065606286 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061857719 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067472002 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069759815 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070450404 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063649557 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06251898 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066027244 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069306143 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072128306 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065925074 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066526683 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070048953 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06943557 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064716083 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070481373 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064368651 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070958367 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079401284 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067694396 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068114034 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073782648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074433002 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067835408 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061915423 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067572335 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069887814 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067519618 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068242828 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06758134 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081981524 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070198111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065992801 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067020711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070149637 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066395336 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075096472 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067168622 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067243711 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071465975 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068998962 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076852569 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069168403 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074395987 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06960211 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069484769 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066476716 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06753781 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065438762 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065984359 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067443526 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067685377 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073500801 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075611112 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066187878 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077703997 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076048638 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068915423 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063865779 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066663061 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066744571 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062164005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067292835 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064700945 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064756217 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064919108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065348951 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06747496 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072240822 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067182406 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067387074 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066473719 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061057749 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068655775 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068640114 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067092933 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063333127 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066387613 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06727383 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070752635 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069940393 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06442359 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068121473 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068137034 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067717935 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062054875 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073633564 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065587247 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068642918 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065927135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066982989 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067410342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070534752 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071482629 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067824195 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068400669 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070381539 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068377687 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063692814 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063897743 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071107669 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064067101 seconds)
  done (took 42.658124658 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100128218 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063701648 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062524003 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062472801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074776147 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06283659 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062036504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063385845 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063739248 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065421098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062522136 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062133913 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071244118 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078167833 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074643623 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067412037 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062293664 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063332878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061969478 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063466753 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071453049 seconds)
  done (took 2.751240373 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074308489 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071212849 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072724246 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076974234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067226283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071030784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072886293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071062406 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076610634 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067688375 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076575828 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079774397 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067559579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067377044 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067460328 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071510769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076376721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067424152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070854756 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072963672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071220546 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073157917 seconds)
  done (took 2.891642026 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067269266 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065741789 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068317624 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062293123 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066374222 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061876666 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069932966 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063964393 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069343104 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065424095 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065296378 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065170945 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067893314 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061365107 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065933128 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064130122 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108338308 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069297974 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065754331 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066296882 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061337526 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068025455 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061770534 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062182979 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06560424 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069969414 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06719291 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064657887 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065743769 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065310696 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065828174 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063904951 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067653789 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066662988 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065768749 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064827076 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065832593 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065481037 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061541447 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063830336 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066539228 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061739498 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066342505 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067410298 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064279011 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063795664 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067557281 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065234995 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061255924 seconds)
  done (took 4.558013524 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080097412 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108859561 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067940414 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088882588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080358876 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075684849 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070127799 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089235203 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063716345 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064989703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082139755 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079853183 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065872884 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070371836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072961205 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065879155 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067095012 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065339271 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070016651 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065254586 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070407607 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072626229 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080158172 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079401097 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069564452 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064866962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065513566 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069970977 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078917237 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070437344 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070500348 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071700078 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080900531 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071492998 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065090619 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067834281 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082243624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065897015 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067921322 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063901178 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067902293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069885216 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072217933 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082120887 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065807946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070937703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065349612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062641649 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078887908 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067925056 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073586578 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080280586 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069346265 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066029673 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070127698 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080725024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065769259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064047275 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068899528 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078791409 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063867347 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069456771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079840844 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067692489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073027931 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080193413 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070911063 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069562278 seconds)
  done (took 6.367106613 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074408523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072533439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081191354 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080388102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072783458 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072528143 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072278088 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072675154 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07245842 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077063195 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072467664 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093738253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067919979 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075475091 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073170744 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072487538 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072912472 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072551324 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072461837 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072341593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072789441 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080587868 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072856736 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080413557 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098763878 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067649998 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07228576 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072289981 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080852974 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07256828 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079677215 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072754241 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073070344 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080965368 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079710561 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072627046 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065317462 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071805195 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073217864 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072309667 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067908126 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080466684 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071938889 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067356667 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072314845 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071939679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080430163 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079647583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074977093 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077110348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072643358 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080383946 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071784157 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072176223 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080456362 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104735712 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079936835 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08019072 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072291798 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0801196 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079901674 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086363531 seconds)
  done (took 6.045727988 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084379986 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075301634 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076888981 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061518276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064380485 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070133565 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064350751 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064032947 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075380659 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074882474 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07714331 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07012927 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07330992 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077032686 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069840051 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072932903 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070122729 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069793076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074713841 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06987397 seconds)
  done (took 2.771270972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074569721 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083589493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067198048 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072211867 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068699935 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071867612 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068536951 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069246999 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067046615 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069661869 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076093388 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075956183 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066791886 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0719071 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075900162 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071866158 seconds)
  done (took 2.477915617 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074529885 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07266023 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080079649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065952304 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064352791 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062899916 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065981252 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061808697 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062711089 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078000422 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066050674 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068296599 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066382159 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064743458 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06348704 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068465647 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062834558 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064228842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065641902 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078144046 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077004004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064583846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066617389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065829504 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06592765 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071053448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065587831 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063616432 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063689444 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06611992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066564024 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069373989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063221169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063703357 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064445532 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063363482 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065538902 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066199753 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068731677 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06533094 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063966304 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065558647 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065558046 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066981792 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062404741 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066141835 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062290619 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068109985 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064093951 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066320756 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066086494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06861298 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066671115 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072400073 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068956098 seconds)
  done (took 5.006211784 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079405726 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069865678 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061806471 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06446289 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06944207 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067312353 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069367219 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067553992 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068065801 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064631871 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067953179 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068575827 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067942561 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069938344 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067745746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069631712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06196857 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067743752 seconds)
  done (took 2.563182872 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072115612 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066507274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07310016 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066059886 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066067321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068299313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061915999 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064609651 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064666474 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066046196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066350342 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068453116 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065283497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068250166 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065964172 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065984127 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068292835 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064444767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066032537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062074103 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067664921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064714743 seconds)
  done (took 2.794643263 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092424793 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081324212 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138488633 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078575644 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083129731 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071455845 seconds)
  done (took 1.878905694 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090108217 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079261276 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066644988 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08846357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073973151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067431764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067308768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068335044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076282013 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076550963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067844068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076747003 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076342902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075478531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073600404 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073502107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067351729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067635454 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066295201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084518894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067791313 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076180923 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067667957 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067389077 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067443229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076202752 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076304745 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076162193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067413205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076499727 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073184707 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067878944 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076697624 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076323371 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069017061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076583564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067853387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084281664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07385776 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075792994 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068701499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073681416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076217707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072424835 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076645704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067925296 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072606276 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06753989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06790835 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086323994 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073343935 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075409472 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073619064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076638879 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076628127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086487711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076300796 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075440555 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073530161 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078650359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075594671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073262394 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075140444 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076274652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07354773 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075790195 seconds)
  done (took 6.227774121 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082782995 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086210536 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068567147 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076832174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076121096 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067989315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06795949 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067949234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06770485 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067719506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108601698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067896114 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076226547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076089494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068458625 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067667126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067868057 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075708453 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06736471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086535226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068161204 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075954896 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075785252 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075399935 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076228159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073227811 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06785616 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067987013 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067781332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067745838 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072759197 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068107072 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076042429 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067305042 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076237002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06806811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067804243 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07264241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067919777 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073475831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075705158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085220913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067565078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067354482 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076397926 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067685839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067437064 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067375101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067633361 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067348513 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07607085 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076042729 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076796739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075654017 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067828665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067875554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067708679 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067979979 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067921823 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073303172 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07583489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067665481 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086837595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067714477 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067729307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075587604 seconds)
  done (took 6.140719504 seconds)
done (took 128.83353517 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184937691 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16513018 seconds)
  done (took 1.683046638 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069136584 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098234608 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077859459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128263542 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066328122 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100078977 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099762267 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077794576 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066170687 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06648017 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066088501 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068826748 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131752367 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066451341 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066488894 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068734945 seconds)
  done (took 2.663696699 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096815765 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156658168 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099676789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064849882 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097195734 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072990052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064985373 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075733997 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07135386 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065294317 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072995763 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070650612 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065241094 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070476109 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070949019 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073159875 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064830019 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072495617 seconds)
  done (took 2.776118666 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100476898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091535395 seconds)
  done (took 1.542508348 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156315264 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105236565 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14963088 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346578572 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167857712 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229091723 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127779273 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127479026 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118074448 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123536879 seconds)
  done (took 2.99850842 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097672873 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151641613 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255621227 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115716836 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0723084 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095357535 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116266717 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078123059 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081112322 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081114219 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080254449 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076530629 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098927359 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073736939 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073488203 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076416323 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102610496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072609432 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074458011 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077115043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09898846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065926927 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073309604 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072248451 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078060726 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077338518 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065393701 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066216272 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077009328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074226676 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077109099 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093960087 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077250064 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107388081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070080645 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108837366 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077158191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074350972 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074136498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074213042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079405594 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078952919 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07291304 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076713901 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065749541 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077000899 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065524251 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066027679 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078672543 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067343174 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078531104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077560191 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107949944 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06715701 seconds)
  done (took 5.968493122 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101600192 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105005444 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071626379 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112146504 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100542366 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071677324 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102010995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093615272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103595622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07034016 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068629523 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07219704 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082406625 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08315069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112475798 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104307719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073933368 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070704204 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104545878 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102881031 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068508654 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095173593 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090452744 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102452952 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067573839 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070878507 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068394627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070839909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077559804 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079310098 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069811811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081614462 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085416959 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078979087 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067313405 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06823908 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068722641 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080532248 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079986792 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07966403 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078451616 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068460434 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068238161 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070249044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070623344 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068262275 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080132797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081046534 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079522485 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069624355 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070386568 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067895193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069640186 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080943784 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078275834 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081426836 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080995012 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068442374 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068446974 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071723951 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081229074 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079633361 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079674835 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069868301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07960233 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068731042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081086674 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08518294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069094686 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070317987 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06876925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069652369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069972876 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078428784 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078080669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069909733 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069574344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06826605 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080167402 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079162758 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068444576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07717164 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067406548 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068795115 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069987871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070038227 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078285491 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080275888 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069987275 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068293337 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069441767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068393316 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066408317 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076113476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078757152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077755485 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077588816 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068906325 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077883455 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077802708 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069257946 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077866185 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067481942 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196921653 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070366903 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079585458 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077971415 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081076916 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070043342 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068695295 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078954115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082046424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069021802 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079709956 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081021091 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080864138 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069431656 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081822442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069052758 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080748522 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070847075 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081784555 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06931844 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080475782 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06972108 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068869379 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069554062 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080510491 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070650891 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069653694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071007686 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070349933 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081065019 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083952671 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071474473 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082178711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080091574 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070613389 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079200194 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069404317 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080543322 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070253439 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070797542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068007869 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083561882 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06912433 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069591083 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070362242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08144861 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068520627 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080865763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079170783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069002885 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081671468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081873749 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07854485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081577861 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070393438 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069181541 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068785244 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069811268 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079038105 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081038817 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07073379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069932247 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07929275 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080216657 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067387308 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079011917 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078635888 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078842757 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069078132 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069789929 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081112256 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081224486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079025402 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079119135 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078990711 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069068132 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078527903 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079154612 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068744238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085520946 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068764739 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083020703 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080159246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078377035 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079683377 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081650213 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08092511 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081204827 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083802772 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067906925 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068126778 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079953693 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068236585 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068874959 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07781098 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069227666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068660285 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08211895 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067780647 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078741366 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067698011 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077904812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066488718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069280195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082040208 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198239608 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07087205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080920925 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071265022 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078672561 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081748328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079302813 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068894857 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069994551 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080900798 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079912033 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069498317 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069163999 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070772273 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086135673 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077943471 seconds)
  done (took 18.742329218 seconds)
done (took 37.731182378 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211053961 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152267131 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181217554 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119655561 seconds)
  done (took 2.113891297 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122807195 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101821348 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096197805 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065893162 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103199898 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066247824 seconds)
  done (took 1.942195737 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313940457 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213285373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184000399 seconds)
  done (took 2.096613442 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201151603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189570613 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.400371374 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25601776 seconds)
  done (took 2.54359479 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145213979 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090611302 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067683913 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083886083 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136639131 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162627434 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102982997 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127133638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078954782 seconds)
  done (took 2.437863213 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148410025 seconds)
done (took 12.675904744 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.130287592 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099702097 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077339065 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095214426 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.198465187 seconds)
    (6/309) benchmarking ("sort", Float64, false)...
    done (took 0.126858045 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.24257278 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108423861 seconds)
    (9/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.221336015 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082335387 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078032198 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073526519 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220945172 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166029902 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099286314 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088540713 seconds)
    (17/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072521728 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089635593 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.196015242 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.131836146 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069418114 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07599549 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112651588 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213739091 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108397179 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10067972 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088416608 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108768885 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06579799 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106129218 seconds)
    (31/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128795418 seconds)
    (32/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181770625 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100984266 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077507712 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106729302 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071875788 seconds)
    (37/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.155695219 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067799971 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076738124 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195162794 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.175282948 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093106081 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07434293 seconds)
    (44/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.164767024 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052319036 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.160145257 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167934422 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185138761 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.199302343 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.156004326 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073065578 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072966592 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072633647 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071035155 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130902066 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173156123 seconds)
    (57/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159669493 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.180361712 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075146854 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13364538 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108780025 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132375085 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089295659 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06723391 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090888683 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073873493 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113298116 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07097374 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066754023 seconds)
    (70/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074443237 seconds)
    (71/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179369916 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072924412 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091274478 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065057732 seconds)
    (75/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052334617 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089981502 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096400829 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09295965 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073049861 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085588818 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074768096 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089751277 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193927245 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.210377013 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.385809105 seconds)
    (86/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053829864 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.104412972 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093395576 seconds)
    (89/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154354918 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101210761 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066954018 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073461599 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187274972 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067827536 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096725426 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053897363 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.150397163 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099806526 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091253492 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080313629 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.176998653 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077051136 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077550816 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051922188 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07297596 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087448547 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074292423 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137366011 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073460194 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066796476 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089853771 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136608599 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.0879915 seconds)
    (114/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091050004 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164049955 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076713286 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083111808 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052734893 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108808283 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066343514 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073215653 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090481213 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142107667 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090327031 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.151586383 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072393646 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109402417 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.134628187 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074559735 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052282522 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052217127 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073021346 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06740442 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076406683 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072087283 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072511004 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073585442 seconds)
    (138/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062510752 seconds)
    (139/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062276458 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062497186 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.175629745 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072830204 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065976853 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051592218 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072576948 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070624107 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051736113 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120186316 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073931837 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112599309 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07834172 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087165991 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150958928 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094856367 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109063777 seconds)
    (156/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065217596 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065357284 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072638022 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071234947 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065618335 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.15982152 seconds)
    (162/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150529747 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066897251 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.0515871 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073947495 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097849433 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065652809 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051934866 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155885643 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065705242 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054741334 seconds)
    (172/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074324984 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051505699 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177824508 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053563115 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090254838 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068627288 seconds)
    (178/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05220918 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086896458 seconds)
    (180/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060437465 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066733044 seconds)
    (182/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182857445 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167157039 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066344633 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062765089 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066997674 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070528492 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072005583 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051539803 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073815176 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051893415 seconds)
    (192/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074457201 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051560674 seconds)
    (194/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.340175953 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067466277 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178866885 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077895915 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065235151 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075340797 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052721348 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052292192 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071082599 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151863679 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06899424 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147839491 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090339322 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082358564 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051832757 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066444863 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09045097 seconds)
    (211/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053011108 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103705564 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072710012 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140772196 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075638675 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073097188 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069260673 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071456773 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079676364 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053607438 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052987911 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176510817 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070190204 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051968627 seconds)
    (225/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063718073 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051961774 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072014759 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061569324 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052244352 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05195419 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071538513 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053383891 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07947206 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066339603 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.188734201 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065222927 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052446968 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066834815 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053983413 seconds)
    (240/309) benchmarking ("sort", Int8, false)...
    done (took 0.141252153 seconds)
    (241/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080132644 seconds)
    (242/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073728949 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133663976 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073049023 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065768946 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066118443 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065819088 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069167739 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080182015 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 0.127479889 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064548153 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052119702 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051763727 seconds)
    (254/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052681506 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072656097 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074051787 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05458099 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065466855 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104306864 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063399365 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051911607 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135677821 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087367615 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125950216 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066035517 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071443507 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065361958 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065488735 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065739275 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073193453 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051485902 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051687733 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065619011 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066788319 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052750664 seconds)
    (276/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067539444 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107197188 seconds)
    (278/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052107359 seconds)
    (279/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052557839 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113838921 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066781911 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052395161 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079643172 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07315848 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149921552 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064226783 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051555661 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063953273 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051533528 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131669794 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072390713 seconds)
    (292/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052535511 seconds)
    (293/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052221692 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07191704 seconds)
    (295/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052119143 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065257054 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164300923 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071170755 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062015205 seconds)
    (300/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052398313 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065675297 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067470856 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071178584 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064135211 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051174128 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052639465 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066544193 seconds)
    (308/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051301909 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051380218 seconds)
  done (took 30.584616424 seconds)
done (took 31.984694998 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086000534 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092576971 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075161625 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093638241 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081331594 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077408998 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072347237 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078830987 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079874242 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08200948 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079358849 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05532964 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074153823 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07452519 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074599847 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091510451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078444271 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072745625 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073504968 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065241001 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073176882 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065518856 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067347911 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055131921 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078147296 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071880825 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072445926 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073840829 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065933198 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065904897 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068685472 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073211735 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065837285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077798548 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072283716 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073423111 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074654086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076758727 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067656319 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066334275 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074230988 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06611901 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072555642 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073719362 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072110267 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071475193 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07335268 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07824751 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091871967 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06798022 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074425731 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07607461 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076408754 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072388491 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069583565 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072974032 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070680106 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091651677 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073930607 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067933441 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074313112 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073891964 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070996203 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072901146 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073133461 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075108096 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075183884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071330987 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075136308 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07095821 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065951177 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072725489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068902469 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065718574 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075555908 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07667337 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064319817 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070902992 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072602921 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071550262 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065107482 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067581002 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067180465 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071443455 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067269858 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054623877 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068697772 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071651112 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064339404 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072766597 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071695395 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071574088 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067180194 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075320339 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064661493 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070863534 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065772433 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065585546 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066592594 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069115922 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06519025 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067227876 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074286491 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066845463 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071574977 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078997173 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065029242 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071761655 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064357007 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06461976 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078958549 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074193256 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064889311 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067469577 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064441355 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07217108 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06406382 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06493076 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064689402 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064952538 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070299448 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06461733 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066636764 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07175288 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076678984 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064696779 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067711103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066470479 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064709156 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069441561 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064145887 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198424797 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068327356 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062294784 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067935051 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065974191 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07255144 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067979674 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073393176 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06698075 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074277824 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070046808 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071207365 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071674948 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064797514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05872882 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068113702 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068418811 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067588284 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066099276 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067457549 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066027116 seconds)
done (took 12.450777364 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067167536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143073233 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100080253 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096034028 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086057473 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066948925 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076190095 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102233516 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068143142 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103144308 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087522371 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084953428 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112743177 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065054125 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065952209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070632002 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067270571 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081502691 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100866548 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086730421 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116288389 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065313701 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094858896 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090397146 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087336494 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092629345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06708463 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069995269 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070074574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100244233 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08662415 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069732187 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067057849 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100686921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092427265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083972471 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066528225 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082586286 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066670948 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066091518 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067692718 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098691246 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080399593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080821548 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070149486 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069319869 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067283263 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083669916 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089065296 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078424453 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086431099 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104057928 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068735719 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065606382 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064626614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085436538 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065254604 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068866584 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066440225 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068326354 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066416972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069300595 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081206955 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082090496 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069828926 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080308406 seconds)
  done (took 6.810797777 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083746979 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089680563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083533091 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083595044 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065640086 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066730021 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06662193 seconds)
  done (took 2.035901213 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06749244 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088733452 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089237166 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089156593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08453434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087671056 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076259324 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066867976 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080588164 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067382267 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087517185 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102305721 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06710428 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073519661 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090855104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066668417 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090675294 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066931861 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069651673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089904214 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069201206 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082095587 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070155105 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066818694 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080393057 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066747222 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113494163 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07086109 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068496334 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069575902 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064629968 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107365952 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080434619 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075917168 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066790416 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080978993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081238645 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065768058 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083035416 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071885747 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080563281 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067057775 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067615557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064884021 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0708572 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076982815 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067702601 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066885919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069394325 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086233373 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067233601 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079915576 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069916465 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069012592 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067892744 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070639947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076403193 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067381159 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086150166 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067817835 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083088332 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08231263 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080628247 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082447466 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069185829 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080233099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080251307 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069188702 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068611176 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069975325 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083048092 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065057821 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068252134 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077527996 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068381936 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089524151 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089826631 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067667678 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075675377 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066888999 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067066424 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066688043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089217741 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068994069 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067000889 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070686324 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069516779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064854694 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065689778 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069757333 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06555783 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067838046 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069193985 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069329625 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069092755 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082914234 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06879788 seconds)
  done (took 8.779225069 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069459544 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068150759 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069569492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067879814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068245062 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068226617 seconds)
  done (took 1.93000484 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093963703 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069506724 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08061526 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072835387 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104486454 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086929627 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087330728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079470363 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08441323 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079046512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087198396 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089021468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093246803 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073232397 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086824807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072330421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08742888 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07645473 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078766321 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073259405 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087091072 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072663121 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073216672 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081722212 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075994322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072348976 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06755237 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07917303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078998911 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079413825 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072491464 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07580047 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071247335 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078763397 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087017906 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070941413 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072169156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077388306 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072479734 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075500123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087940328 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073428507 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075493798 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077731202 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079094084 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070860232 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077798128 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076396705 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086336335 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077351201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077354014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07174029 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075622062 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077392832 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070671967 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078968884 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0769668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086865488 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072302544 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07079379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069454117 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075542171 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078656778 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075392967 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079168971 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07689422 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070745496 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072875471 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072967755 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071643975 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077197328 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069244623 seconds)
  done (took 7.106818925 seconds)
done (took 28.145490721 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542244816 seconds)
  done (took 2.030565817 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604220476 seconds)
  done (took 2.114793979 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.671673818 seconds)
  done (took 8.179295975 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392490031 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473695013 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690293778 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130585524 seconds)
  done (took 3.235804205 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668894278 seconds)
  done (took 2.186660082 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209265777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196067364 seconds)
  done (took 1.932884007 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37687837 seconds)
  done (took 1.884737025 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110074439 seconds)
  done (took 2.621036537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263317442 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163227694 seconds)
  done (took 1.94289367 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459209302 seconds)
  done (took 1.975337215 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.822516805 seconds)
  done (took 6.3373137 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214413528 seconds)
  done (took 1.769885576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241071486 seconds)
  done (took 1.755228156 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.69365971 seconds)
  done (took 3.211188345 seconds)
done (took 42.694011916 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080567633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082519708 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082300998 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07903516 seconds)
  done (took 1.829136264 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077414343 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07312293 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077524768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073000074 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077713611 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072930887 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074889255 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077193465 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072806606 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07329939 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072977824 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073283532 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0751253 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074714387 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071362831 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075602375 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076653674 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072930036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075835061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072888799 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071483707 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075473755 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075115777 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072594088 seconds)
  done (took 3.30508697 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078774874 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073410043 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075330264 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072785618 seconds)
  done (took 1.825650616 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07843701 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092414187 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089685386 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078305485 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092607124 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086432429 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069288219 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069855564 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073589359 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077222615 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067987755 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096283886 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087729455 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07735647 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07983752 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066081844 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069217528 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087828682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077639669 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078128672 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070051777 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077557171 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06816056 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0886911 seconds)
  done (took 3.422562386 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078547693 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103950004 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078414424 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088730602 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090395738 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065764435 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074832783 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089577088 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123635276 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065838217 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070534703 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065848386 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072808792 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065764513 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076982005 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105180217 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108766968 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069097726 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096518215 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065759014 seconds)
  done (took 3.188784429 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073794726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070032703 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066645286 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069617568 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078007541 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073952674 seconds)
  done (took 1.963738764 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06860566 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067973851 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068268071 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067046424 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072384604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068157354 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066977821 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067862191 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067662274 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067471669 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067175909 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066072453 seconds)
  done (took 2.343329859 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.426376971 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068983099 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069462883 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066344916 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07143296 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066889996 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080489551 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068327672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09128194 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067086678 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067054266 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068943145 seconds)
  done (took 2.742386256 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208551583 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076960207 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239004798 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138321269 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11217824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117116753 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104890549 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113522912 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144561926 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102656963 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16895699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16721419 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107968341 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138958097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090025262 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098998356 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156914739 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163647539 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104318798 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16713397 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145158574 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125566588 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147964069 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101748432 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106567116 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122871867 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071703953 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080310916 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172467994 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133160183 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14810201 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111882081 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094522642 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177828946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17240484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143642603 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135251075 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084382201 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103484304 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135697599 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198958658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088350955 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162788036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246880164 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082532701 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135619512 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122268757 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121803144 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108922427 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090865111 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147879303 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185252428 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141251241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08848413 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114141409 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116202243 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117949883 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105291263 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18378352 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162887174 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130509702 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071304594 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100034812 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155430342 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132227751 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110048901 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127401502 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095730002 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133844727 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156268158 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118822105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144909186 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129573387 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089502376 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120455527 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140782593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129839588 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171853647 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125953796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073737951 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126529262 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104470463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082080372 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143667037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075799065 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175450184 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099197134 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106486908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113454455 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109353973 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109014359 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161907007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142451141 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24579943 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067458714 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104995249 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12098852 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149223816 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087930713 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109165486 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118007245 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079172093 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142187144 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075377837 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125465604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076398457 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126828754 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133874181 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076680877 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123587367 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102313654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10151563 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135180625 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162716841 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090404233 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082802468 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167965121 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124473769 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106252431 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145315215 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1568779 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10024374 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104096195 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150461919 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18194179 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091031562 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164935356 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108542295 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084613524 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088073329 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125148769 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113880192 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12314615 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082960904 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119941337 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170342974 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07554736 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096705044 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134144245 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079384644 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080755291 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103842015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100797092 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095282249 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100926035 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104548266 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137986387 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123115079 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103870808 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270429572 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100150921 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171572859 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090522911 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101684271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105776849 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071551699 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137712671 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159783826 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08038271 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1668965 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125099866 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10634501 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120758544 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083371956 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141194366 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079566953 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071339963 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146800038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11134932 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111415455 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151602402 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105979206 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129245309 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121352848 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13725094 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13314657 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130425767 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106587203 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089578564 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112933721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126023715 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073580823 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092097847 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080646938 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10496186 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09589561 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083973263 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144078946 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126276264 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101301988 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112612043 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097738239 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148631885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07733668 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129659016 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119462576 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094226312 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152363131 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152839479 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131402442 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099653817 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145182392 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07005733 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073380301 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234209698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126331162 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084850729 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084835012 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119234496 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148153549 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131495989 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140277845 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112883993 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122622142 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157420394 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070649143 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116449215 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149307811 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123180919 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105587706 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091223027 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100980253 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143229617 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109291811 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183677936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115047033 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12813051 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154334795 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100182311 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080385356 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109758963 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137135724 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105836789 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146354182 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100392606 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089157498 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111162139 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074875765 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101234893 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128887773 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121102145 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13738129 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115552297 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134438392 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077542209 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117849079 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121328187 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122563681 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064195219 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120084379 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162039171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094188439 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11933177 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152896836 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079370416 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124696516 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322689898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149275131 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085762123 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110717279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120093668 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129050035 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122296207 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142161691 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109407274 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136473337 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109962535 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086793305 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088643828 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098941821 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105777236 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095766124 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109250794 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115657153 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095848443 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133538005 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10540706 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110749722 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119344865 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097509815 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09010524 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098432689 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176270288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121416228 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173697229 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099742297 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147295697 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166510883 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075388155 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080079756 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079097908 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141445819 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084701746 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131850292 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098872365 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10678744 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125894239 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143657016 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096043303 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069070978 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109272381 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135768292 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112861516 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098142007 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10481862 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163329011 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100602071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079316766 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113631811 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105283303 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102287905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316807914 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062192716 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09969874 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077140407 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081901575 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132385079 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154915226 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08167806 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104485148 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12078374 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11223685 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130393417 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102572052 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100918257 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116171291 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152389568 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129563884 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090463742 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113676187 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131008936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158304104 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106900863 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09682312 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17347361 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15398591 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179835142 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089841916 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115892923 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115007015 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109186536 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140240701 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083691212 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165403072 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08295393 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137723214 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105405669 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091802525 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131205184 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099887537 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089091541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149579664 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119329972 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083427353 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07873092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119128659 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120959586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106634855 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075494101 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139684765 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073522124 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132892732 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168798164 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081060225 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251737414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098833523 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081870772 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109832331 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104633201 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091079676 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09992515 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175620004 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089317202 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151464467 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143549951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114919054 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138598048 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10068041 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637589383 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078608424 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153591302 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118360388 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174489138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098635493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1196698 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110947999 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125647271 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146436037 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105748043 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178271992 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133315299 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118069569 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080421989 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104176167 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104079942 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089966095 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106825783 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115757662 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117428015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094961489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11727934 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125013357 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082958894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096348035 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157828248 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118260922 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145474262 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141369376 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084849291 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118238668 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139577919 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080573577 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122590264 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15308585 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106218914 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243552211 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083513476 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104794316 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174232041 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074652929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165310014 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121486751 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11185123 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115929443 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116171161 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134498942 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109992474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124015514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095552019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112529122 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114022252 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082264164 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07840537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105325582 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114563022 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097619459 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099768196 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099289336 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153587799 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071957355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096430918 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104753126 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146793439 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177573275 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089050286 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083699193 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120404523 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114288587 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114410535 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121946408 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080307147 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083219316 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082965069 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078323709 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109354428 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113141427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105369581 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112380157 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166374164 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083752041 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225867146 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095938555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105494398 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070358819 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07953265 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096800224 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098167689 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108216477 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100654673 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168893367 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094510428 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089697642 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092334486 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072824596 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228935629 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130676785 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113427853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121874424 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099257265 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063122821 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110177122 seconds)
  done (took 59.454347124 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110229616 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083039137 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09744743 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150578955 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124058328 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212869829 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158353492 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20144571 seconds)
  done (took 2.778059804 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069169201 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095332703 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100812931 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083616113 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067625223 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069980934 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227571151 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081562611 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067421562 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089430936 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080183157 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070062964 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428747972 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066531615 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068462809 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063974099 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067891297 seconds)
  done (took 3.429460581 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370290009 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601431194 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374635247 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074256138 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.883731013 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090261282 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.05186658 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129052479 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074628234 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541239618 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701136511 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127709497 seconds)
  done (took 18.660063758 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076822683 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07129727 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085387319 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085711986 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073361962 seconds)
  done (took 2.029961446 seconds)
done (took 108.545785521 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080716845 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396429023 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054254979 seconds)
  done (took 2.117447825 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083949973 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085833018 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08583617 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083595202 seconds)
  done (took 1.986114801 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075568511 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077039465 seconds)
  done (took 1.792666284 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226260945 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140657225 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087892733 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08221378 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07871908 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079653554 seconds)
  done (took 1.886679106 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072878752 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075437985 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073663821 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076815695 seconds)
  done (took 1.94083257 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076598115 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053599175 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055613416 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056595046 seconds)
  done (took 1.885413593 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086659511 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079851703 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078988664 seconds)
  done (took 1.889273679 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102304913 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08576763 seconds)
  done (took 1.831811331 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082396799 seconds)
  done (took 1.726751083 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100012526 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11478873 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129691468 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110624476 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137518967 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112022972 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086867555 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088009637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077868955 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088633459 seconds)
  done (took 2.6905475 seconds)
done (took 21.9194063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079153609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36337673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361993042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090898867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.68932835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357469119 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989500107 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093488815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114680567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068337343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0846283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66890197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.015173423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325601333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002256978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324316433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650631053 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068841342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068621383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068379359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974661322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068567631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068604693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069181482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649383174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371950921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068765058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318886345 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068339592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070646887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35573125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068608431 seconds)
  done (took 16.269666907 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071285594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118870671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074505902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085164964 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.0709853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070642832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072275846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069643418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120664906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068332243 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085180131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0681196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072765739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069341408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088118321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069010473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069682818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069302135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068680239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069285841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087420627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068795792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068864085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069066397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068725562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080486725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068793687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068898391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069054859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070570007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072277755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069821701 seconds)
  done (took 4.071238944 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115668095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126882248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075089979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104136622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113726017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071020885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145034131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093883931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128990238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068981278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085440677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06903314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102113208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070057836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088583861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069842578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070336745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069796113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069291443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069614631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088364141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068990068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069639268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069574005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069538321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082221182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06986335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069793738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069488593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071918944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072805343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06980832 seconds)
  done (took 4.337997776 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073954883 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075731088 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083635432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084696052 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070547197 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073270883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0736269 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070319538 seconds)
  done (took 2.266206345 seconds)
done (took 28.594680849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079961798 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069657294 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073508256 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082069901 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073671238 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079622803 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068716667 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075500023 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073184714 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073647681 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075383621 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068006466 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07165102 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068225929 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074284006 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068819838 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080273825 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072648153 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079958126 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080291311 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070690213 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073710666 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074613951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080104071 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079813627 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080660201 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078065242 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07349369 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069998041 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071270553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077845872 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084820998 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069713323 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080221023 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068423654 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068349092 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072058202 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068573821 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080455251 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077644379 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070643187 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077501538 seconds)
  done (took 4.778625818 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088649467 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091925348 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085382818 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062248367 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067591901 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066207675 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089627384 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060419814 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060089986 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088703685 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056804608 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059913584 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063435024 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054722744 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059889302 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058002869 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06208431 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056809815 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059913958 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060197776 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058666874 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054803981 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061328028 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063136715 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059783982 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062788796 seconds)
  done (took 3.38159111 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075700405 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084885391 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08953554 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127511841 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104965847 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077498536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079257194 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093489239 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086396775 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068272075 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07194328 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094655233 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089222409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074355812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068758311 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085714394 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082960573 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070075693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074420363 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091427399 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085163734 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084544015 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093510702 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081571577 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067924435 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070672926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071957052 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082147275 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072889555 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077265913 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072053235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071476238 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070816704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079701299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071977407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069685034 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091324068 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07795701 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078623455 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068815316 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071664395 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069271258 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090432918 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123808922 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06775374 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074893792 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076563024 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077321004 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068224194 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087058914 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079034416 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067934203 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071326576 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067424064 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068046218 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081268239 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070256195 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070702521 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077663975 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071351968 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08671224 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072020407 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083710227 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068059801 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075970044 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06737188 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069273439 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067252999 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093318241 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069862194 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108775464 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.080704281 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069293352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077242536 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075788097 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074139353 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068380277 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083435792 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078210159 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072231589 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076609957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071496754 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071422183 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088426303 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070698492 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069447941 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069124908 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074181513 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070702963 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069513491 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081061041 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068200514 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070900421 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084652714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06816351 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069210137 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073894191 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072822842 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067919831 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079351935 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073141303 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069061753 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077842086 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068089829 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071119995 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078540993 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074146445 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067164386 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073053485 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073804776 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068522949 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06895165 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070550736 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069270605 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076196088 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074566885 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072213884 seconds)
  done (took 10.669230377 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163776875 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156336967 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071127867 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147467093 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077518166 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08007063 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149178076 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095393847 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068590187 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068853334 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069249002 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110988044 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107110865 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116840939 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079274948 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068443681 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083986552 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115214146 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151009897 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144341068 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084530073 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077456951 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070560923 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069944645 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071313546 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078850158 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085994343 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077397163 seconds)
  done (took 4.443001938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082478558 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097823336 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075429388 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09083046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092656998 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068863473 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071138231 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070672925 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081264306 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079877111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068582134 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074153692 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075161587 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071949741 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069595023 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075551043 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075706715 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070291461 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071485917 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073320006 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078442884 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081642461 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072523787 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068348705 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074772123 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067738833 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065479015 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085164642 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068873348 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091235707 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066406387 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075519826 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082978398 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069516541 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068310044 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068567399 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0679641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067864367 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070095677 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066968315 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06686149 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058470723 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067784671 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080256155 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074669138 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057370303 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073360632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073354775 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073966615 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065988596 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071191742 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070920825 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072326504 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075490791 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073149043 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073354601 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069276244 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066056059 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075956023 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06782997 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065238147 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066940561 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072139911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066701564 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076215298 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072720971 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066366209 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067648684 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069748525 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073932592 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067843343 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07121204 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065764391 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069986393 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072692202 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069695497 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06912776 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066606425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068049392 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068329734 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056519364 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068000974 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054387141 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071585732 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066401473 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066624351 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06792519 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073420494 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080561077 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069879131 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073642578 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068982499 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067246188 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071012556 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061031936 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071103205 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083753456 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083394797 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067845827 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066232108 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082475179 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073109044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066927016 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056947885 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075724584 seconds)
  done (took 9.230976646 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09046225 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071267875 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084715048 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092812673 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087101966 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075686737 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077344039 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069965426 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083230879 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074836001 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077566798 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068888272 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078452699 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077700578 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070673974 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078214346 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072998905 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084084569 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083382727 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06947152 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076770688 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081591058 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089866084 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081369756 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079660385 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080942138 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090207449 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072930513 seconds)
  done (took 3.931747213 seconds)
done (took 38.089956095 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.752561999 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.918921782 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743130476 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096196642 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.067977162 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.76327261 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.894001225 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.739270995 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.86128073 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.780059623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.992633003 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.79317104 seconds)
done (took 65.080589024 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.770072662 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885501128 seconds)
    (2/2) benchmarking "String"...
    done (took 2.012272107 seconds)
  done (took 5.577567211 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.081808301 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.344789221 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.172976303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.740110381 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745091941 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 4.063877824 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.542436609 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.310373262 seconds)
  done (took 31.600822751 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.804976032 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.964861848 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.393737616 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.422938987 seconds)
  done (took 15.310392374 seconds)
done (took 64.103874663 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.738134688 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.755501487 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.784850491 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.724212404 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.7985015 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.755924758 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.009767151 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.972927363 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.74008966 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.727692983 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.743768894 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.174701113 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.744352827 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.010899687 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.741684015 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.741145763 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.771286799 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.165021096 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896851025 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.764338602 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.764311029 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.796074011 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745299848 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.743806726 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782287796 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.74055451 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.166749479 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.742645515 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.36522872 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741693187 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.774457908 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.173684904 seconds)
  done (took 203.978555214 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.740645449 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.869263584 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.894250291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.778606204 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.381937489 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.92447918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.85828677 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.40671495 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.744349407 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.754700841 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.054115191 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.743506802 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.070663816 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.68829912 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770977362 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.82460858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.029029693 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.050242637 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.774788578 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.908358153 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759577886 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.973460954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.933267233 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.006655773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781629144 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.794244091 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.893437525 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.766263104 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.93557712 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.006178148 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.770869142 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.787560924 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.963538625 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.615847543 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.750454663 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.770763246 seconds)
  done (took 170.461144822 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.908091401 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743476821 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.742661914 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743082741 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743010504 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.755692698 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.743436886 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.863440408 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869288503 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.206044193 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.93871543 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795456361 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568978603 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.744256495 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810879108 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.758791424 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.744445582 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.759467653 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.770355477 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74568138 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744525474 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.868592949 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.757206464 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.774657243 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75238339 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.744719738 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749674526 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.113207548 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744143435 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750340343 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.005132768 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.746166696 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74432313 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631391518 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.562482148 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83335593 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746456676 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751315268 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744976893 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.964540861 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746124389 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.745965851 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.748709611 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922123189 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.746741021 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.86907272 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74575668 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.245922502 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.745828665 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745991598 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.256539946 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40906199 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.747754454 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.745878327 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.748858892 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.746442302 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746826654 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.751412311 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.184283939 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.818630475 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.747488141 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.749631573 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751526816 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.74718728 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.755398302 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746294221 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.147836658 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.805868051 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.859614975 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.870413518 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748098566 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.746789102 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814713834 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840891926 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.747313427 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.7473664 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.746659337 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746677216 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.74733242 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827767101 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.748073171 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.87449468 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754988492 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.748201011 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797576808 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.816196464 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.748022998 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.628855667 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.748669332 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.747411964 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.077054097 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815257288 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.748189242 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.746929383 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746571092 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.878979025 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870841377 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535072782 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.748772183 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.267912195 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.75000987 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.889070581 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749145702 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.925323531 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.750868812 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831179433 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753169601 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.748590605 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.750308456 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.747644882 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.781554206 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.748933982 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80868887 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.748844103 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.122796603 seconds)
  done (took 397.9409889 seconds)
done (took 776.022884257 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.428253912 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.391192096 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.510137331 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.420283824 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.39146755 seconds)
  done (took 13.829751392 seconds)
done (took 15.518096945 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.835335137 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.84118352 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774119512 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838499789 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.770144094 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.840777563 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819601135 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.774201023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80500091 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.77492722 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.807094039 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774714649 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762159704 seconds)
  done (took 25.106855281 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981965421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982162697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.817891011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979833732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79437901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974637984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913137808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900739542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900176763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766321105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762972306 seconds)
  done (took 22.465251448 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984217535 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985263258 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823632908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.983015364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797314417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.984729866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909837728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903223472 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.903258942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76588557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764212089 seconds)
  done (took 22.494934159 seconds)
done (took 71.756408558 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.758856784 seconds)
  done (took 3.44935419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78012877 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918000719 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.76409066 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761602568 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.760313526 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.759142079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.761942882 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.759046783 seconds)
  done (took 15.956309852 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.756339989 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.757783434 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.755327113 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.756547467 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.759307561 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.756515059 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758767762 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.759153684 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.759130231 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.757422802 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.756218544 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.756465091 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.757850781 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.759068375 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.759743167 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.758735138 seconds)
  done (took 29.816030487 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.759022295 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.756040695 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.756410093 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.757861253 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.757145097 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.756645301 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.757819218 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.757374984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.757335722 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.758015879 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.758129006 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.756779707 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.758624581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.757814238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756907192 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.759623642 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757777421 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.758278827 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.76247314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.757545354 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758849697 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.75866812 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.757994159 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.758913175 seconds)
  done (took 43.887322509 seconds)
done (took 94.799782783 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.616585938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.12917301 seconds)
  done (took 8.438923334 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763173144 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.761765821 seconds)
  done (took 5.249766849 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.761042521 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.761018909 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76189262 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.76070292 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760974793 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.761608884 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.761400958 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.760370157 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.762070825 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.761466258 seconds)
  done (took 19.306226005 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.76086626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.761538209 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.759786266 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761553759 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.762152824 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.759242209 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.762082953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.762283613 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.762695657 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.758717827 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.762610989 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.760055108 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761660153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759872278 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.76213451 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.759280965 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.760064872 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.760349565 seconds)
  done (took 33.391717032 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.762318304 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.762786163 seconds)
  done (took 5.220217805 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759989979 seconds)
    (2/7) benchmarking "second"...
    done (took 1.760077393 seconds)
    (3/7) benchmarking "month"...
    done (took 1.76110919 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759895238 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.760404097 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.761015252 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.759969047 seconds)
  done (took 14.018371972 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.765755908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.934446382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.009893705 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.433998436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.764313662 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.76951398 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.671031044 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.767385309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.76870572 seconds)
  done (took 19.580723212 seconds)
done (took 106.899827864 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.577848571 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.759176503 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.121957499 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.847927973 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.774449816 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.05439217 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.780886447 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.980963862 seconds)
done (took 42.593220857 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.817881546 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.307353892 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.341723531 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.100331104 seconds)
  done (took 12.442194421 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.752437344 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.270401886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.785903172 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.343314904 seconds)
  done (took 19.863821017 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.118852316 seconds)
    (2/2) benchmarking "read"...
    done (took 2.150881386 seconds)
  done (took 5.964049807 seconds)
done (took 46.780031769 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755473885 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.755819899 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.754014147 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.756262885 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.753031833 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.754353064 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.753445362 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.755689475 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755113766 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.755320745 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.756210913 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.756449609 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754679736 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753161957 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752378998 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754034843 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.753264624 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751095126 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75085938 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751509331 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.753563256 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754577964 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.752447993 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.750774813 seconds)
  done (took 43.786033342 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.753752184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.75161229 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.753736019 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.755431708 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.751306753 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.753349678 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.754600778 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.751423497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.754629092 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.754201413 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751373181 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.751619725 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.754550647 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.751369228 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755035103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.752125462 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.754735756 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75217981 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753738459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.751652709 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.75569779 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752001201 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.751909044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755285455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.751428481 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752488278 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.755847498 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.752423877 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754518325 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.75288494 seconds)
  done (took 54.2844041 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.761109686 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763530354 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.755150788 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.755116777 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.75535662 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.756089972 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.756435169 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.75575818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755306402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.756103952 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.756136031 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.75556404 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.75600555 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.75606811 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.755491129 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.75602216 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.755742608 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.757569239 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.756060815 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.756212234 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.756223296 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.756347537 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.75767608 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.758346303 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.758126742 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.756237784 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.755943182 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.75737358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.755516213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.758142707 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.756110024 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756445297 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.756437655 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.756504154 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.75647107 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.758799623 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.761156215 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.764350152 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.757171304 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.756796432 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.758256287 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.757423176 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.756106846 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.757839852 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.757054675 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.757933944 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.758302407 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.757250599 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.757277419 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.756993235 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.757256415 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.756969851 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.758951751 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.757626083 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.757330304 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757581574 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757555534 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.758260189 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.756272507 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.757747173 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.757646411 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.757945111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.757552279 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.75806887 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.75796302 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.758338615 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.757588093 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.758130561 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.757404185 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.756204259 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.753169557 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.753357119 seconds)
  done (took 128.20462539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.752081904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751658215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.749057145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74934753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748955855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.751423747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749066587 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752060566 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747833012 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751086858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750419494 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.748814938 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747944665 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752255569 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749710401 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747758848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750492275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74711823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.750113044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753158829 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749639689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747017671 seconds)
  done (took 40.183634521 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750176091 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750633954 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.747176212 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749470392 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.747309326 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749353137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.750019308 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751138259 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750518501 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747468999 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747166608 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750170405 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.747869818 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747985725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747299856 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747187831 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749665659 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747282949 seconds)
  done (took 33.160392684 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.747676327 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.747611764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.750932828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746973427 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.747996961 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752519909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74806765 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75043617 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.750336089 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.747872377 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.751095916 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750848363 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.75032784 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74738752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75114193 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747947543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750362274 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748631164 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751019285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748467464 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748311753 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749965315 seconds)
  done (took 40.169539279 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750711507 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750410052 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.748818063 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.748716021 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747857781 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752875775 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.751240347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.748134358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752084442 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.7513594 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748220291 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752521116 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.748250121 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749249663 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.748002692 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748286373 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751930289 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750853203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749960641 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.747255175 seconds)
  done (took 36.680422424 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751391746 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752499093 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.751069646 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75004797 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75050266 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.751239422 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750660894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.7521592 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750270235 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.753942585 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.750263106 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750788947 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751187802 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752029238 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750383555 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750406103 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750482281 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750112353 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751543219 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750577645 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750648685 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749777946 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749088462 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749698634 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751631609 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748466726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74854468 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748413125 seconds)
  done (took 50.701774918 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748958501 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.749646762 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.745059105 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.745724545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.745676181 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.745613597 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.745647281 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.746847478 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.747260323 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.743877277 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.747356176 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.747153083 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749220838 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.745437309 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.746188029 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.746687215 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746398597 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.744486134 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74349601 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743403782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.745084141 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744358809 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.744908948 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742561881 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744661116 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.745202413 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743195284 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743135707 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745690153 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.743047146 seconds)
  done (took 54.048311466 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.764111939 seconds)
    (2/2) benchmarking "in"...
    done (took 1.764340059 seconds)
  done (took 5.206657778 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.743538685 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746742737 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.746051963 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.743069452 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.743482983 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.745934196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.745509579 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743569483 seconds)
  done (took 15.636652743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.745053307 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744742433 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.74574332 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.746013149 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.747310033 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.745065401 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750653485 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.745420566 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.746085354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.745605013 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.752417533 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.752207268 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.747319073 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745114112 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.745165379 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747042403 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.745213956 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74542854 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.745510574 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.745401238 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745454496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74871307 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747426082 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.742303583 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.746462385 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.753744453 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.7487721 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.746212141 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74535743 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.748155143 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744183825 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.742396135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.746209805 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.745518182 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.744579104 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.745659734 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752772984 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744760399 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.750834021 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746287117 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746229973 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.742886329 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746056101 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.746309415 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746638971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.745558586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.745165234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.742467344 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744140867 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.747798711 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.750946432 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744884176 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.742176406 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748758869 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.745693831 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752611936 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.745669013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.746666086 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.753535315 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.755249045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.757256041 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.752841113 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746908838 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.745592585 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754224171 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.767019456 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750519705 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.744521576 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.742500738 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.744274843 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.751380494 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757606554 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.75393766 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.745749222 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745593234 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.744541102 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745603343 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745013838 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75280834 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.746460945 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.745836008 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745742083 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753772938 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765353441 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.744995182 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.745840483 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.745737353 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.74587046 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.746033371 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756078084 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.747018405 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.744674414 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.744286882 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.744800207 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.745984393 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.747453738 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.743398227 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745599256 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.741607973 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.746004951 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745667195 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749451359 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.752232547 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745712221 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745763399 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.750772735 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.745712008 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7456026 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.750962716 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.745064179 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745442756 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.746131927 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.750505158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.744408 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747845664 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.752839864 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.745041316 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.746873425 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.747469128 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.745642914 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.754197669 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.767476465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.745536479 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.746051801 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.750651899 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.754825426 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74536564 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.74802946 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.744568778 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.743536793 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742906347 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.74703595 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.745133482 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.746337707 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745098681 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746864213 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.742735212 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.745644301 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.745264825 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.745642717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.746383297 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.74631571 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.746912637 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.74728529 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.745718157 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.746525716 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.750813907 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.745660652 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.746468126 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.745607996 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.742458887 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745182964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.74539607 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.745987817 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.745455894 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745913123 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.744270229 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746095987 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747131322 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.74496106 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745350045 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746961657 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.748389651 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.745894874 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.750313132 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.745102116 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.743492323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.745196052 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.745469314 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.745111264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.747121964 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.744316594 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747450338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.75139269 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.745130123 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.745225967 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.748255655 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746132301 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745813153 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744885403 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.747830015 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.753060225 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.745929993 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.750788928 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.745120003 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745595729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.746345303 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.746917507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.744583685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74567154 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.747942467 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.750740875 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758019396 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.752861815 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.746619582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.748868841 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.746362595 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.750279838 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.750798013 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.747212194 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.746075795 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745922097 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74504467 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746262689 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.748845414 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.747627043 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.745219541 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.747363918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.747318237 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.747426025 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748316499 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.747159253 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747340678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.744191304 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746455787 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746949862 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.747746728 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.744823718 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.745650117 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.746186542 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.747811067 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.748869817 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.754045062 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.745100891 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749423425 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749639773 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.747367575 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.747217628 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.748722777 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749768955 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.748008935 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754793212 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.748523775 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.75024913 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754083093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.747472877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.749153939 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.750610796 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.749300568 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.745128713 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.751588459 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.754089122 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.748309906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.74867351 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.750112014 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748473668 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748932331 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.754699413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.746223447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.748219257 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.74952771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.750315802 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.745642819 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.7499909 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.749299788 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.7493675 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75224769 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750378016 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.74924033 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750526744 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.750079439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.750760341 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.750073991 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751555382 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.755374852 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.753590314 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.74920831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.752893512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.75047317 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.751799662 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.750013322 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.750275102 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.750240957 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762010871 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.755973489 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754923761 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.751762482 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.750677622 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756097598 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.751784743 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.754397153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75015828 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751360651 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.750158147 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.751808152 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.748703915 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.751825194 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.75078039 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751429219 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.753439281 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.754951453 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.752072532 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.749788966 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.751725476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.751354325 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.751661679 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.751899048 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.751740052 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.753218383 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753355296 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75138361 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.752504778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756917493 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751263943 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.752453608 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.751169768 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.751597605 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.751812199 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.753628528 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.752731878 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.754451736 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.757326875 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.754433173 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.760317714 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.752519029 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758984437 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.753121187 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.754435765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.761383625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.750006759 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.751576981 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.753002994 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.752690813 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759007544 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.755494681 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.753478448 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.756121147 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753831194 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.753316732 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.752529388 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.754550792 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.754206906 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.753478259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762271221 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.75347366 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.757082355 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754846951 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.750102796 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.753780193 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.753578213 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.751616895 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758653812 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.754618061 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.754815864 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.75317608 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.754322015 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.753631987 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.755415938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.753990872 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.751286697 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.754534272 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.760018291 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.754690133 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75853586 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.754370264 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.761857327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755075436 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76022472 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.756188599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.754419528 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.756523435 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.754419611 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.755729918 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.754209259 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.757286465 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.754959674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.755328662 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.757816739 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.755460294 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.756965327 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.756643958 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.756110697 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.754593975 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762982348 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774360734 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.757496931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75843174 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.752529936 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.755319757 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.759497392 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.754794062 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.755899078 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.757363811 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763546227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761647961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.755281584 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.756779641 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757579646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755683455 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.75654243 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.755830478 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.755607096 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.757590611 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.756301329 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.75689641 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.760725095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.756133075 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.75678012 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758899931 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.757136175 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.764540001 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.75641129 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.757602089 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757419884 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.75787728 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.756863164 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.757670547 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.757140112 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758301342 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757294586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.757682866 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762880574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.762331623 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.759460442 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.75646478 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.758977154 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.756913569 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.757816034 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756893656 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.757454442 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75807851 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.759181184 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.757984935 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.757943632 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.756124833 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.758294085 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.757151366 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759603011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.759717415 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.76253103 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757623915 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.754796999 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.757461849 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758036513 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.756843764 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.758109461 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.764899098 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760170046 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.766736956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.764319512 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.761608556 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.757690675 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760397705 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.764574902 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.757278962 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.760571544 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.758811622 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.760924093 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.760203077 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.760974653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.760256513 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.764841781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.758800403 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.758935672 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765816056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.761221802 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760347141 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.759929685 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.76152161 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.758836332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.756103514 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.759377327 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.759077395 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766192717 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.760778085 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.760366341 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76132693 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.757938951 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.760179982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763045319 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760195531 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.760083198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.758355724 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.760995855 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759803827 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760219535 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.757665837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.759693454 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.759674818 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.762818635 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.765912083 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.75779995 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761174091 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.760391803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.760849818 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7618533 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760619279 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.759075929 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.758401582 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.760181732 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760883937 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.760736977 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.763227982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.760288315 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.7613592 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.760986096 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762112386 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762863433 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.768808745 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.767293646 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.75881885 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.760803101 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.761484416 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.764057701 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.760890424 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.761602589 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.761893557 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.763236344 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.762723177 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762071863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.761788288 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.764439775 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774555534 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.7634168 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761801859 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.762509407 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766426521 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.763169998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.759755234 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.762460174 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.763667962 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.764829348 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.768913415 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.764022374 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769215993 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763438119 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.76331695 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.765713063 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.76591644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.768728433 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.765419457 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763997334 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.76279198 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.766969549 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.77526121 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763541762 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77170019 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788298111 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.763674227 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.764643194 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.76424556 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763145907 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.763939311 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.765165824 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.765028294 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.763584969 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764027703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.765333434 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.76478449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768272948 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.764224123 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.764718618 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.763858506 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.763224989 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.765629109 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.761378228 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.765534657 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.764488264 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.765501921 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.764029598 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.765424048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.765086201 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776355811 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.772346068 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.765369439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.766586969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.762624313 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.768706298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.767976543 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773834303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.770870125 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.765353479 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.766510836 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.766534545 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765817446 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.76417819 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.76644902 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.766658005 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765502597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.762764147 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.777270119 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7719937 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.770620383 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.765436171 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766424762 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.766428023 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766076009 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765888278 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766986891 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.767363365 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.766379028 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770387614 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.76676176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.766581525 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.768472934 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.772101802 seconds)
  done (took 1047.284477198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764222978 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764059809 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763991067 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7639405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764149259 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763937187 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764333954 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.763405882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.764541829 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764346451 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.763927458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764122214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764418425 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765262958 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764501475 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.764520237 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764218677 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764979846 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764698899 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764558276 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.765562489 seconds)
  done (took 38.751151776 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.767195418 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.764685247 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765371001 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767839815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765141197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76723158 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765430764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767492005 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767477352 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765230207 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767225589 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768845823 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.773143176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.765741716 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76598995 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76855584 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768197401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770647885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.769062536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.76555515 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769129605 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.765855181 seconds)
  done (took 40.581516536 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.772989957 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.76914438 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.767636726 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.766535474 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.769711876 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.766274725 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.772463482 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.769122901 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.768519582 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.768798826 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.768583799 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.773980869 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.774566899 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.771245816 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.770406632 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.769283412 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.913064289 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.773379541 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.769697945 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.770355593 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.766623675 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.774373892 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.768257824 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.768495318 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.768841994 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.770293008 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.769744016 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.770721429 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.771154628 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.770059318 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.773789916 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.769428125 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.76920384 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.771837231 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.770315682 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.771165643 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.773542923 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.772715267 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.768786813 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.770953134 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.779580975 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.786587763 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.771833993 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.775898663 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.769908855 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.771195951 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.774027359 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.77798308 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.768823945 seconds)
  done (took 88.634907462 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.77188023 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.771431628 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.768745197 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.771735192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.771805959 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.771734449 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.772270742 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.771014516 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.768875975 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.769916116 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.771115642 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.769180764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773492679 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.771626438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.771286777 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768699618 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.76847419 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.769173384 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774741488 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.768618214 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.76878899 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.772514688 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.771724691 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.772909169 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772379163 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.769468474 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.769190045 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.772243084 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.769235309 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.774173231 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.772630963 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772524112 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.772604616 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.770997432 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769889981 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.774168422 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.773427935 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.770865976 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.774193251 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.769972243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.776420985 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.773916161 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.773274881 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.775273921 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.771704383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.771809272 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773635589 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.771430117 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.771669181 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.775486154 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.773447868 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.771869083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.777574459 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.772234515 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.773989355 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.774529759 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.772296705 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.774936371 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.774412854 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.771844786 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.772504368 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.774702814 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.771645926 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.77796685 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.774438394 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.772801583 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.772263509 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.774235633 seconds)
  done (took 122.218789687 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777989781 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.774878414 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775969675 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774706787 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775149166 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.778078622 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775276266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.774439626 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.775437887 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775981285 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775955084 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.776641952 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.774990177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.774861924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774869051 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77503647 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.775716346 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780180255 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.775750846 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775363352 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.775713291 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.776264794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.777509157 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.775941705 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776264265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.776400953 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775853403 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.776037173 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776408317 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.776226903 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776245324 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.77616412 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.775207677 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.780903478 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.776624582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.77601674 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777302837 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776564603 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.776830185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.77864553 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.776828888 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776944244 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776795137 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.777351028 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777398059 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.779745286 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777093222 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.77788507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.776835301 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777739817 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.77967934 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776517168 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776961533 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.77695907 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776481363 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.779264578 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780661793 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777969364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777876758 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778368549 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777240319 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.777581796 seconds)
  done (took 111.870303674 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777102634 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777572802 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.775033342 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.774914005 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778633428 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774748664 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778448908 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.77813747 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778089044 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.777875556 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781091642 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775046859 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775433538 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777993773 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775022929 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775877363 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777796945 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775125466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778191614 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776090673 seconds)
  done (took 37.24974861 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.778243563 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779214228 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.775630843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776291727 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.778236861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.776176087 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.78238949 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779387447 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777778534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779589157 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779534874 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78234181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77737656 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777650589 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.778928649 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.777529429 seconds)
  done (took 30.167012924 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.779505675 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.779090758 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.779944548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.780479883 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.776886038 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.777583071 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.781865554 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.777685176 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.777462174 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.779823341 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.779763824 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.781367167 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.779081799 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.780111112 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.777915764 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.780755622 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.778163218 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.780652809 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.780743342 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.781471348 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.778976176 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.777414474 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.780514229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.783585614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.778477577 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.779629715 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.777759074 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.778869155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.78139328 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.781856811 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.778433106 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.779920395 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.778356922 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.779020058 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.784734843 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.77827724 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.781365121 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.78165225 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.781556071 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.782568138 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.782457876 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.779167292 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.781842431 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.782424352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.77961077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.785747618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.779260088 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.780035805 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.780121554 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.779833169 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.782074017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.78521947 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.782461174 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.782539375 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.783261566 seconds)
  done (took 99.635462973 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785518006 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.784132756 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780189037 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783205027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782701398 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.781049235 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.786637982 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780240088 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781169859 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782592717 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780578037 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.782474214 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78251014 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783327095 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782102289 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78335854 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.780335846 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782819207 seconds)
  done (took 33.800435898 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781367758 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782680597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.784437419 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781158142 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.783794252 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784563321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781499138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.784136201 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783880491 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785252594 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781624988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.784413331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784763812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.784495913 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782791531 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784964839 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.784543171 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784209058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.782369828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782400167 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785349119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787425442 seconds)
  done (took 40.958517563 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.783475584 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.783818724 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.798700291 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.802251628 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.804186029 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.810715744 seconds)
  done (took 12.500342199 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783252814 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785385142 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786734412 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787226065 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78676683 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784392758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78398778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787696897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785730735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783532984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784353168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786487224 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786607707 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785915651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786883302 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785185626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784168971 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784183092 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785592007 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788237197 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78428278 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786911553 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784830216 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783852022 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788032795 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784804745 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78719584 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78509339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784848087 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787324136 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790105457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785053545 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788490203 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785777114 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788913679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78864207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784965131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788453853 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788436864 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785588359 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788238768 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790483806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788458882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785975995 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788568648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786683306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786155139 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788115203 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785728221 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789114373 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789672905 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786001632 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791834843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790231281 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789573062 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790385595 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787713851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786749335 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790267456 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787655836 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787013094 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790035919 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787434095 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788745791 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790390723 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787262883 seconds)
  done (took 119.662508845 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786747112 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786668568 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787820135 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788695923 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787090726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786647184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787192356 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787307074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787839605 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78708608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79017207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786815282 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787379484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790139321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788176968 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788448593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788312859 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787401639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78866974 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793232379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788659903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789225043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787929552 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788741606 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790975451 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790768046 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788722248 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788450532 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789390122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788242399 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792174139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788955806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788462716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788936079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789297495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788489273 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791148265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789695399 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789617516 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791890711 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78886116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793376891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789613891 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790269604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790389425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789195168 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789664827 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790092094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790273195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788864676 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790092781 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789864248 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792337473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790254865 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790050602 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790085604 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789875212 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78900292 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791587053 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792919007 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789808175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790057856 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792491036 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790465512 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790723181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789498907 seconds)
  done (took 119.825528072 seconds)
done (took 2446.892170526 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.802692826 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.037072026 seconds)
  done (took 15.56357489 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.960685018 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.914909331 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.798879932 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.826319132 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.799354832 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.812171568 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.801047669 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.80009393 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.799447209 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.799084485 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.799828874 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.987294737 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.814787293 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.799650318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.800733165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.892748055 seconds)
  done (took 51.142131345 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.803762105 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.806775493 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.815116662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.806666018 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.804014997 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821756717 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.837975701 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.807331049 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.862761131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.816055276 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.92725189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.817053789 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.802782172 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.861645857 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.817331047 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.817674782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.889167689 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.880386423 seconds)
  done (took 34.729340088 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882884953 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.813887635 seconds)
  done (took 10.43740267 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.807146886 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.811040085 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.832558188 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.816703223 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814530382 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.801449333 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.800902753 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.80663596 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.825201588 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.811039507 seconds)
  done (took 69.862765203 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.810809061 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.804812466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.805756714 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.803340084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.796768338 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.801943551 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.804601794 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.802435406 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.500421949 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.840430421 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.811128026 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.810446459 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.804026021 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.80576431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.803181096 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.826896352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.943518097 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.8020709 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.801686138 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.810075154 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.805203266 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.858712396 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.818319941 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.805882674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.835410853 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.495845002 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.813120021 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.811149805 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.923055917 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.803117572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.806634 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.8054569 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.808228868 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.194757579 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.140743165 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.807528699 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.814913582 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.812687266 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.803590319 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.934533086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.806829034 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.811906553 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.799741237 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.120295918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.891729474 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.849866128 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.175904832 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.810430718 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.806713863 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.837362855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.810275986 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.806673151 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.819325709 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.315830339 seconds)
  done (took 129.291376825 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801132584 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.094126977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953480988 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801392638 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075161643 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009095813 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.744851329 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.851073437 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.804633992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00525328 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017927938 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911580801 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803713975 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.801099694 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.805485965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.801539673 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964471703 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870545981 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.802615567 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.800231729 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830395758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011157218 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.925339976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.805343299 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.824197944 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013241711 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.926379395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.910277253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.272103858 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.801375712 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867529326 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.804179285 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.804708566 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.801416658 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.95837944 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.904414573 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894022443 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.80462896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80008412 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802309966 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.464605612 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000303099 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.902953012 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.947336581 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.956573402 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008435034 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.45041899 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.802271395 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.444893471 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.966381286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017255616 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.011360817 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.930379533 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.807336136 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.952577881 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802457507 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802642172 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041190218 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949481663 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.908279585 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806402226 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802144066 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80333266 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048431139 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.806181977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902274621 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806820106 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804225148 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.903039691 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910477251 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.947902934 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019223615 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839155399 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.528146653 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.013803188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019054032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87393305 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041202489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807743305 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803322349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891248535 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.55715738 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.005221386 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052139816 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027262218 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840389864 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.401702415 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.803884147 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.998923206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991445449 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000824171 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.951972953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.958830116 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.116833832 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80507804 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.803807022 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.03639299 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943829836 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.808894187 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167136581 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041844278 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.430700926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.827061699 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103424718 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.942815631 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.147622516 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.431739063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.805994431 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.974047954 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846775 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.807833514 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805403152 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.997399939 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.614311943 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805216877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.563793437 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871070414 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808046256 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011511345 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810270848 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016997552 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808688175 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042951695 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.286782477 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.842042742 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.979321535 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.958977612 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.60027916 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056163244 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052660694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926983666 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077201092 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.539142679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.808209717 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083994371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.809338815 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.806019014 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.974742694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.808136663 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955682149 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81022042 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036802513 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834384684 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967384137 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811113773 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041527591 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.846160781 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862845759 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.812824556 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.933664639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811411697 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.712644062 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964732822 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808834479 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80907897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.239527839 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.810283118 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955615975 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04184005 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833958158 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878973793 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336749332 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.808079445 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896972989 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836457582 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.412889192 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.807668809 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.020432842 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.752035402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.257835055 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.808168904 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050640363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044001941 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.813047858 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.810290371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.55037793 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.513979445 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.809362284 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.969328684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.249751228 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.454698287 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015685125 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812493811 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93956921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814726617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.883560758 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159229027 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.809645898 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.81055508 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.810254747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.809184997 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.811348235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.017911593 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.843626484 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.308335433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947571158 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028326694 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.123530947 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.033863212 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.858445418 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.814521267 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059913741 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812888859 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.877405583 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.81274516 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835187348 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04406197 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815988728 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045024576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067077279 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716656771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863418726 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.813605479 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811933855 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.810589115 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959565966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905934446 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81378324 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.811127703 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924280835 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.934779306 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007141235 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.410548753 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.934330912 seconds)
  done (took 884.896362057 seconds)
done (took 1197.647603467 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.810842297 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811216151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.800313679 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81454394 seconds)
  done (took 28.98533485 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.819635442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816833887 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.81805267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.817302085 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.818600249 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817217275 seconds)
  done (took 12.65554845 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.850773839 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.810870283 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.814393252 seconds)
  done (took 21.224395719 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.887707219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.23009825 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.927352325 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.263320589 seconds)
  done (took 10.057301985 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.819696735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.819142659 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819559136 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.820440248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.820946975 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.821516313 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.819781919 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.820615486 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.82123513 seconds)
  done (took 18.133098204 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.160472269 seconds)
done (took 96.964617567 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.142407967 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.889738619 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.88746 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.930665804 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.085824061 seconds)
    (6/309) benchmarking ("sort", Float64, false)...
    done (took 5.616616687 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.799707275 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.710059107 seconds)
    (9/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.337437838 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.9506555 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.858453108 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.839597317 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.797728697 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.249788393 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.483389498 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.052371167 seconds)
    (17/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.899185805 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.822913117 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.075494682 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.951633726 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.881486256 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.913878715 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.884856199 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.112961687 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.818483207 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.509632235 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.80353653 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.329676051 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.815098447 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.858664343 seconds)
    (31/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.875965257 seconds)
    (32/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.892615025 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.193609599 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.908992536 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.985659533 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.925351552 seconds)
    (37/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.982276063 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.820957417 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.317593716 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.492722296 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187689677 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864846867 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.841167618 seconds)
    (44/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.133012099 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.956369525 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.817856013 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.790269798 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.804072149 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.787043099 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.401055657 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.928079162 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.841694772 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.077648697 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957806735 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.92639287 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.816924881 seconds)
    (57/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.319184119 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.337996425 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.819882403 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.885010692 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.85136813 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.839174616 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.71346366 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.882436305 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.502401253 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.942543939 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.934352005 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.038066835 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.246945545 seconds)
    (70/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.873379042 seconds)
    (71/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.013365495 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.457593416 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.704086201 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.044547174 seconds)
    (75/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.41991754 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.465915358 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.955735438 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.869197483 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.826670969 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.734847895 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.886997414 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.818953897 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.864991211 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.499113058 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.056023237 seconds)
    (86/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229725102 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.198206927 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.474512939 seconds)
    (89/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.888510326 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.95909691 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.063135925 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.069415917 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.181068735 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.904973164 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.842730556 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.807490415 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.786078278 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.992194223 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.74172107 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.946999011 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.987640618 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.907942283 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.828182448 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122951741 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.847024715 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.032246369 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.9160483 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.819843248 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.086546151 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.414012072 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.963869576 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.823417579 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.840507372 seconds)
    (114/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.902348487 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.442485813 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.335771821 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.781768641 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.824322951 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.821958378 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.822116564 seconds)
    (121/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902573328 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.146906422 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.84338272 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.118393466 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.808984868 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.765640846 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.10078694 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.2742792 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.846519084 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112096217 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.034868409 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.088201879 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.930409812 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.845147998 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037621492 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.100002043 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.847553608 seconds)
    (138/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.034587516 seconds)
    (139/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035923975 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.010068598 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.98762128 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.911085859 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.203437597 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.706033569 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.92475358 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.839160391 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.104897101 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.899196139 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.847346755 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.894186428 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.335737563 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.813791706 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.113102413 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.929910582 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.626464482 seconds)
    (156/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.326879522 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.0464564 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.85170262 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.847303412 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.983210331 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.018908515 seconds)
    (162/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.932404469 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.980187742 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.093415059 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.85304368 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.97344844 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.479067311 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.718073689 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.411201206 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.12420759 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.810381914 seconds)
    (172/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.229917135 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.119096133 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.828094563 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.80879092 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.473137048 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.896640798 seconds)
    (178/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.202945102 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.84310291 seconds)
    (180/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.991464466 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.917336232 seconds)
    (182/309) benchmarking ("sort", BigInt, false)...
    done (took 6.822345994 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.827043642 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.825184592 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.247694024 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.925713749 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.839920013 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.849978876 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.011157419 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.868654371 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.953215472 seconds)
    (192/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.913342591 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.952729871 seconds)
    (194/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.176928507 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.827918471 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.870814589 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.164282727 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.890843571 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.998303525 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.894961624 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.015984903 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.688897772 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.09742828 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.741686634 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.981175896 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.086040102 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.647325638 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.034836335 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211966763 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.631470638 seconds)
    (211/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.200719525 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.816516106 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.483875489 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.83697612 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.632349519 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.058378222 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.890438943 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.956525611 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.340877724 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.818492153 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.30142597 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.830939378 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.911294376 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.133826611 seconds)
    (225/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.260163518 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.13175387 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.933298833 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.020641309 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.893150202 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.440629873 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.84977831 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.709252406 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.514107821 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.137491225 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.81478759 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.901939043 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.811355538 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.663655737 seconds)
    (239/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.032851986 seconds)
    (240/309) benchmarking ("sort", Int8, false)...
    done (took 4.858793907 seconds)
    (241/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.752546664 seconds)
    (242/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.842714752 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.761314409 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.862076753 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.166880638 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.162309719 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.222696566 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.894898057 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.978919385 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 5.597298521 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.92313105 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.119908983 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213549144 seconds)
    (254/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412598087 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.855736679 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.852074618 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.812477395 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.998248165 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.815475089 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.861885011 seconds)
    (261/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.259643709 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.829875627 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.18336129 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.013271005 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.829443079 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.605338416 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.176501263 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.104799682 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.641641158 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.319240989 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.938781469 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.894380055 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.153618597 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.831036489 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.41829238 seconds)
    (276/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.963477012 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.815667138 seconds)
    (278/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201408334 seconds)
    (279/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.068185884 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.350935 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.915116436 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.790223714 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.401707429 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.939129629 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.927516626 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.917622142 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.140051373 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.947239801 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.145136819 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.969365078 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.614178295 seconds)
    (292/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.410347936 seconds)
    (293/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.15802917 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.857221973 seconds)
    (295/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.975823506 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.931767431 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.834182637 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.876574249 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.146623965 seconds)
    (300/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977979299 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.079364113 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.96012821 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.852903427 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.954082677 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.930008012 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.208905658 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.837157855 seconds)
    (308/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.259132312 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.988846357 seconds)
  done (took 1004.645321657 seconds)
done (took 1006.462018973 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.868009641 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857952046 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.8425465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.86341797 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.952920144 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.870427073 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.852445651 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.845113626 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.890453845 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.892685046 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.840719257 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.868026522 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.843656469 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.841865121 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.841945758 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856197678 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.150133685 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.872361801 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.858857868 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.852400357 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.858605625 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.841586644 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.892301133 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.869968948 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.846704796 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.846686094 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.846730346 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.861617126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.95454617 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.845716935 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.846271215 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.853684405 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.149699759 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.872271384 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.838610906 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.862273652 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.854229119 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.853629408 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.847083539 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.876459559 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295760053 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.850305435 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.844772164 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.84492584 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.846071989 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.849901729 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.845818231 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.851971921 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856171541 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858499083 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.289847824 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866015889 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.848528542 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.845747019 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856965776 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.844902973 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.848911057 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861113364 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.8639956 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860339518 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.141361334 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.878578885 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.847057072 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.861424244 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.851959489 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328835431 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.848298959 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.850473022 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293997031 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.857652082 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.327690453 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.860092855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.846889249 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.860270156 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.876484187 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.152739241 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869836678 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.84525213 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.853160596 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.843808383 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.856158095 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858562914 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.850817768 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.847215952 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85971584 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.87441595 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.856727464 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.847444017 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.855863615 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.865975762 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.854821788 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.85756815 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.851103348 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.84278935 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.856973344 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.852182989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.849802456 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.849379485 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.852830722 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.858277884 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.293599325 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868925368 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.843396131 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.844795634 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.847857238 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.861289214 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294331092 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.85481 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.870072124 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.894585318 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.849028442 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143007106 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.880505184 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863276373 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.856769904 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.850745597 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.843669373 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.143439975 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321658104 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.870621547 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.851186309 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.847224915 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863927355 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.850455952 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.845036603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.155671152 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.878769695 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861996328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.968844131 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.860002817 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.880399353 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.846845871 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.853166684 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.877027837 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865227834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.880351133 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.852750118 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865187549 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.865542587 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.847060282 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.859478783 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.860861014 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.85090713 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.856783823 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.844921041 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.881465286 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861653943 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86207701 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.87100381 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.971588441 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.847958659 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147367789 seconds)
done (took 290.415288606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.918833113 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.838743234 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.943028887 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.847436802 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.930507042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.931612652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.844650804 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.844234001 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.844585248 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220853163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.845200333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.844636436 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.844670151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.844442463 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.928064007 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846587313 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.843857372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.184788273 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.847544857 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.917523135 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.839204947 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.844709801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.847324305 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.227068595 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.840090515 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.842936463 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.918136915 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.848101951 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.193427853 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.848521228 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848163308 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.19182338 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.937967366 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.866676621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.858072407 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.85492736 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.931575935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.852600621 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.928497624 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.929112698 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.944909232 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.888068379 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.846417451 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.840753304 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.852293343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.850255378 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.845462417 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.875871622 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.842050048 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.846354444 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.18775402 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.859111048 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.856624272 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.846488342 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.846569344 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.870390183 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.846364742 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.850041504 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.938405933 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.850782728 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.911541849 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.229210345 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.223773767 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.850358897 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.845909361 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.847002606 seconds)
  done (took 182.830829314 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.916079232 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.923342468 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.91842323 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.853332407 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.90117957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.36153909 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.854874659 seconds)
  done (took 15.507571602 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.856130815 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.851909049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.900007958 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900765066 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851592762 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.001135443 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851246155 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.862493083 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.84869143 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.902913897 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.851687207 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851069614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.857622537 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.851851505 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900338929 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.862441215 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.965723666 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.852927231 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852191561 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.007967877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848945435 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.858575604 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.904929833 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.863772641 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.851904391 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.858137368 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.44265705 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852120406 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848295238 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.851534305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849781407 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895019981 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.853120665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.85032806 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848752032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.968585272 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.851155971 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848921309 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.853243289 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.850596994 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.852669065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.854571442 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.852328861 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.850186634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.85372391 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877430345 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.852087896 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.853503117 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.852783727 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.852793671 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.903826436 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.852631243 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.850802128 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.851420941 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.90968205 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860981044 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.853704474 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.849228484 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.852878359 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851250261 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.009716373 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900927609 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.853809774 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.902523279 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.853724818 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.853213302 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.853805112 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.853262957 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908755244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.85323311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.902374824 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.850805298 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.010621688 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.877608645 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.854303238 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.856328664 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.855987299 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854067365 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.847386137 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.85987928 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.85189811 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.85547996 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.859900651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852454793 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852469896 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.967251868 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964544906 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.852469906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867973082 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.862260409 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.852080577 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.907948312 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.85426189 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.853272656 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906964848 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969915386 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.91106408 seconds)
  done (took 204.156432243 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.859339633 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.863343314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.855989423 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.870139783 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.854276879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.85360683 seconds)
  done (took 12.940013174 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.857659111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.856063348 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.855579314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.855067541 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.855726806 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.855868515 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.855955158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85631064 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.860265809 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.856431029 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.855874265 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.856977403 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.857928438 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.856127374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.857434253 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.856068728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856998357 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.853583159 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.856662805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85587562 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.010316673 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.856511746 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857324514 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.85828692 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.860951131 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.856462517 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864703594 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.856826012 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.856454162 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.865339913 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.861589996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.858045008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.858032888 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.862882036 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.862199307 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.857948873 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862451874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.859715226 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.855321143 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.857932134 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858629758 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857395877 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.857790052 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.858988389 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.859922701 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.862907439 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.863146958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866966942 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.859333413 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.859353399 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.85987517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.858915177 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.858727925 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.860175898 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.860880894 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863355724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864384251 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.859746845 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.858072434 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.860240035 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.859983272 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.859675678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860420166 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.863117319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.856867649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85931401 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.859392557 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863368317 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859535914 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.859987358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.859802842 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.856591109 seconds)
  done (took 136.780384348 seconds)
done (took 554.00688562 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.103978219 seconds)
  done (took 8.891360695 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.914825949 seconds)
  done (took 8.783253063 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.45318887 seconds)
  done (took 10.240400366 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.864986566 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.865570977 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.865055347 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.858459559 seconds)
  done (took 29.253100542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.199675277 seconds)
  done (took 8.987353564 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.866553272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.852320269 seconds)
  done (took 15.571563136 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.942714732 seconds)
  done (took 8.73038928 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.946119889 seconds)
  done (took 8.743348095 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.871454348 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.871441528 seconds)
  done (took 15.54617688 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.839577913 seconds)
  done (took 8.627472407 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.469768277 seconds)
  done (took 11.2672355 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.864829219 seconds)
  done (took 8.666742672 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.880673649 seconds)
  done (took 8.669678821 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.054416311 seconds)
  done (took 9.84278069 seconds)
done (took 163.608933219 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.856739251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.854414696 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.852619028 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.852616086 seconds)
  done (took 29.205288906 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.893885289 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.893694032 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.895510724 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.905241349 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.897445673 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.893594688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.886773246 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.886629475 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.905572576 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.897692488 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.896234029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.896748654 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.898562215 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888057151 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.896300161 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.912061601 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.905507249 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.911699693 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.887834076 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.898260185 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.862966017 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.906564707 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.898120826 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.863614771 seconds)
  done (took 47.267635875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.059392281 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.932878118 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.015781784 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.914271414 seconds)
  done (took 9.712244242 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.912925996 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.916415271 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.927308921 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.967825696 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.991912431 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.924826911 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.889659144 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.883252341 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.870350579 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.915136826 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.990388505 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.931404259 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001245891 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.862376453 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.03911158 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.861625122 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.862201707 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.914845956 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.96606203 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.982657585 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.862412176 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.913956619 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.918266776 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.931868094 seconds)
  done (took 48.028654466 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.861010549 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.870570937 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.868242591 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.861823388 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.862514334 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.861516625 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.868381378 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.863992935 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.883334874 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.863399385 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.861046625 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.862714229 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.8621355 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.862948664 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.861815022 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.875413191 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.875602109 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.862720372 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866395468 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.868604141 seconds)
  done (took 39.116117807 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.857709502 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.902357263 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.208710605 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.113291386 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.857644805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.856382678 seconds)
  done (took 31.587958195 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.876806318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.868768341 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.862675906 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920598786 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.003560768 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.873094477 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.863810869 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.873096359 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909838944 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931610052 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.883459237 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.892744709 seconds)
  done (took 24.552424671 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.859321509 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.860532314 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.861550959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.876848596 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876033835 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.874378123 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.871223411 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.858206821 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879035257 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.884681702 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.874454082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.876565483 seconds)
  done (took 44.249012699 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947333755 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.90458308 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.893454095 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551490372 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242688447 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071101286 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.483228625 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210307758 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.86305788 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13414825 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830573527 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963918512 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116982557 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413168129 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895826458 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325399864 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15377297 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079474392 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89056004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518563795 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924746906 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.099735433 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649908987 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917445478 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07169707 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989680392 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.121587037 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86157224 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993502545 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8998757 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872633646 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86074896 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135551633 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241245416 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968932811 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872601511 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480272697 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.576431968 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.850877549 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.606146203 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542192741 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977831027 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872182307 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86200699 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796268518 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.077535313 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249530177 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.867313753 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.573283066 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862560452 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874971658 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956660611 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.865276542 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.677688974 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780838269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869023737 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859851503 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869333387 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437129484 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9572508 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.112060575 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.840605295 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.954673563 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615625248 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249592887 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.011592196 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.866891964 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866724895 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798458052 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.521342432 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920153495 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191632318 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.884986139 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513763228 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164405242 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.897252573 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806306114 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159256498 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.453064086 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.841660899 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093170533 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863958883 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799744555 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.809053858 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798841256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12914546 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905239421 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.661072311 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906983138 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.207668063 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875730197 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886295032 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889021041 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088002973 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.748015806 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865605948 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.601876334 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009806747 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886560896 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.206339101 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800655266 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.868314578 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123126345 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.077152544 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00140451 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.36929789 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021348842 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489779353 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.921343434 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.084527931 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.917770867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.132848865 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921419346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972401127 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922467272 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866257915 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175056124 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.523415084 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.00782197 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.929658671 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994577848 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200698651 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897761033 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948830125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875426388 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866257439 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.632662964 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419442126 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.867187147 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.867596561 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.007746561 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918660802 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.868104707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816140466 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.493907153 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873276631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.881598879 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090740594 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499926729 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186590655 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802043654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19701413 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924526627 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.091110966 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.507421526 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.934388103 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128730259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.012262138 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.03932233 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919061419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886956673 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966274011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889485693 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.089720539 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165779625 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.87317065 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.872353445 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.628130782 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905085002 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877236758 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.877574511 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618953273 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141800181 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892606822 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874293733 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.757800356 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.882587355 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935009145 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874504533 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87937341 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.409661765 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589195056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.877065426 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455489337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094195547 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880867518 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.598987724 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986578715 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.957424808 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143043949 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929477648 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.804507029 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.581020408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.562372818 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871169265 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806147832 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870321329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879819549 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881561381 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.067295154 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142378978 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911707589 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.530344073 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914268745 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882588276 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.875654505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871025024 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.382632701 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969389665 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127161649 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922122134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015663587 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.885250654 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805717085 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87532876 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876988046 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872081427 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871845801 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905525345 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.539244032 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247953475 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132935262 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483027881 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886904938 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.589218097 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.928676099 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.876044827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.644116589 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109563931 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.911664673 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900206503 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.883740436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.604862922 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.582051913 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443451587 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175718791 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175172927 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301861967 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.149242678 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905542635 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216673447 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807220781 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431325461 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93322598 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233494239 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818064587 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975732303 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513128429 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207081156 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887093037 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101843262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252624454 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.572184945 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009812322 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086320507 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908498521 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.086833229 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839185932 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.39691033 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016056926 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.522140963 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073912645 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220724617 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522965443 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991419356 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.873078516 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.559440166 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962856781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.587301449 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046547339 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.12751124 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.780081328 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345868016 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88060839 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.100093449 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223461242 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.114713069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.005047512 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810886847 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886402031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88619115 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.875794095 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.872155896 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.758907188 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.129079087 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8861205 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808939473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.053065276 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169984736 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.778267388 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.882247872 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876246912 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173109789 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49548171 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044660004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.039093183 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400662879 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88388937 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810586228 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810957408 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.570497604 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88335972 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.853004927 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084681413 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979791163 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825407253 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.012134683 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962180378 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132834572 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.890517019 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144196367 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149237309 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576713911 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903129276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.977332405 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513211783 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.977532867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877276325 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113642838 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634849891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104513467 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.917387924 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.836419436 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876359403 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092401804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878670664 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.712217765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101812024 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.603382563 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.891350511 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189693161 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950236191 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.802617334 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.917005826 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.969990201 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889136893 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957397517 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887952184 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.888623427 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.889527582 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9266203 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.804715273 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.995115581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.892161892 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973309797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996355554 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.404658383 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.88447845 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149981462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230430781 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200245602 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935832934 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879465727 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878659085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813987825 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028959149 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10611454 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153603135 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010677379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.996656773 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904964387 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513757288 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145960426 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125085275 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155621413 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.775017147 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463610125 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923873687 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.881685427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891480963 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.093172429 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091362326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18516461 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028155197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027344705 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254498428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154575243 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880711799 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882054907 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470962536 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.885286044 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571093126 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925487286 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.75369826 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149711369 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892245037 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260800017 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906447971 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.03815357 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.655258229 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598514675 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172639212 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868595777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938070054 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151529316 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257638912 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191969336 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949736361 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893251926 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.992266725 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03031605 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.764140002 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882962761 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88197504 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936955323 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.592664166 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.892108735 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154600208 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190946494 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.880103617 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.765009316 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906873341 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.892537805 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107210387 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15960391 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136159848 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893390982 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890327565 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.699002026 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155789149 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938584624 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818490601 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.887269189 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981708159 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134702749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904164082 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.336287422 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.594912378 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17068665 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.885518357 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90598413 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107735293 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243338438 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202676076 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.418143285 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09924591 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.472829399 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.532547648 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188690128 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.888781903 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.107084463 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19220148 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.888554574 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.021190965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927564546 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.152989233 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192664473 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.901749312 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555932668 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.853141712 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228261886 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445576796 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824733901 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889824943 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.944724231 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886403476 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0146443 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897464876 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.773636844 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102504686 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676449211 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170968789 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.891570154 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.878343286 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.557297906 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.230952196 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924074075 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030197046 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887961379 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.560363317 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.236682512 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14219159 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035571095 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.898225371 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.891715094 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887221331 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874358066 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.083041987 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.085081737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162957751 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.059160091 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.928354352 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891034693 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.102881026 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099815593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.806426117 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017405236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030647624 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934261585 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.792029114 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395313137 seconds)
  done (took 1677.800647366 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904544233 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.921957172 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.911072473 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.938830646 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.906472816 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944709254 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.933395485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.916373023 seconds)
  done (took 57.199257931 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.88765226 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083831084 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.896062795 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.888371249 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897278793 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.888997065 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.054772974 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.899817195 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.897415372 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.898029933 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.901016135 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.887779993 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.211174347 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.914107881 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.889121709 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.885509133 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.89685657 seconds)
  done (took 74.718095832 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.888760602 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.987616832 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.915501319 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.905857702 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.859947043 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.905594219 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.7095005 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.930216976 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.89005538 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124094271 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.518191543 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.919629689 seconds)
  done (took 90.379128155 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899413733 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.896162527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.896562558 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.896194141 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.895646575 seconds)
  done (took 11.311867135 seconds)
done (took 2186.943575 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.143586411 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.103893317 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116725595 seconds)
  done (took 6.044587962 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.035333068 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.082475948 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.202690546 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.224266834 seconds)
  done (took 10.368025318 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.175839447 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.267053804 seconds)
  done (took 6.262538712 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.290146507 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.891483463 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.266671474 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.885226513 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.888449102 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.889168314 seconds)
  done (took 22.487379267 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.889833554 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89317613 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.889599152 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.893525108 seconds)
  done (took 9.387053612 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.871058308 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.584698506 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872113747 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.888336192 seconds)
  done (took 21.03715989 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639260808 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.650256109 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.634779515 seconds)
  done (took 9.745109729 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.317184631 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776944327 seconds)
  done (took 8.914922616 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.154567423 seconds)
  done (took 3.976002946 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.023338799 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.198451688 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.365783411 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.428256287 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.479535502 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.587372368 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.21662268 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.141312491 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.329626626 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.330241579 seconds)
  done (took 24.922871087 seconds)
done (took 138.562003264 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.268914534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.134634946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.092374992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.224291905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.295480365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.091723693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101087842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.207868664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.733327948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.731311773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225686847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.298128526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.256593061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.128945843 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.258635549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.124598315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.109046441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.277298858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.926805792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.159136267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.1038756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.86349319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.069938771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.876238375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.111919929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.042404222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.441660919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.126496246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.076282734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.45265448 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045283452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.310900618 seconds)
  done (took 173.990207841 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.649890068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889960593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889562243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.889998907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.335409492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890333662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892170484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.891015841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.165628732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.160567563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.891311735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.328273163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894375464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.89042559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.892583784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891042452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.29521587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.700914347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897898481 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902402221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.905583789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.274353006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.907657214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.323760665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.3188709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910229001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.890667646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909453678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.895674954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904657308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908554336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892554174 seconds)
  done (took 209.105946901 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.89170437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.891711814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.897162094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892856294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.897405861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900081935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894110519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892687374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.466466082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.460087007 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.901697249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.898408621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.897109134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892053697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.902376964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892722645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.894213612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.901324962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899146845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.907518602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.913324924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.706164114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.91703065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.705683812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.924400006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.907390547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.892765738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90770196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.912127384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912816695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908925696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894426953 seconds)
  done (took 221.4186148 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.096221746 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.900087423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900480881 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.849634697 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900851472 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.900760779 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.897396166 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110778897 seconds)
  done (took 19.406911588 seconds)
done (took 625.75815475 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360167871 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.207110971 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084044493 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925570189 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.152291052 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.963447266 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.920972416 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.984689979 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.656019395 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.991814794 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.560655 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.941821032 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.651966788 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.946506993 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.048843127 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.978953295 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.461438077 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.549427608 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.100693867 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.014595216 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.099266648 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.855939055 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.996604224 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.690088217 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.6722996 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90649204 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.087070184 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.46430357 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93408499 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.087506926 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.665925284 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.308554879 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.933610665 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.919391348 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.973215886 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.954264228 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262571658 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.932297656 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.046512838 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.655180462 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.974787693 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.544840185 seconds)
  done (took 104.294372571 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.89248242 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.89103929 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.889222838 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.891183477 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891365382 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.890653151 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.890063097 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.890012011 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.891019906 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.890709483 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.890495295 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.89149589 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.890076007 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.892119231 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890426879 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.891292651 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.891274897 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893507814 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.890298707 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.890696449 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.892438002 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.891131043 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.892394777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.890697737 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.891674132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.89214188 seconds)
  done (took 51.012619711 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.905642506 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.046617703 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.131886064 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925061209 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.904513621 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.908240018 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923676349 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910422043 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.90696043 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.907351774 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.999672997 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911308607 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92450621 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129740238 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.92022542 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.904973859 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905311532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904500232 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.052160324 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.922848195 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926089808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.910339692 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.924913368 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918720588 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.908403249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905443253 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.908059564 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.341647183 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.914022958 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.000895759 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.94769084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.926479452 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.309532794 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.142532128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.959485679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.913860363 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906556149 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.004953666 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.911198208 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906355666 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.924896729 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.911658923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.134021829 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.402923322 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.920555663 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.907857262 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.351204252 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.013658204 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.949218538 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920025033 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140152194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.923939056 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.909185465 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.908745636 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.945402737 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.920362168 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.907383777 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.215019941 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.918572727 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.926025751 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.912891416 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.909984132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061704251 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.916572393 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.050104063 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917189623 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.91589868 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.909301826 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.135086901 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924654495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.403466796 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.930366952 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.907634684 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.002418416 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.055733326 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.382166935 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.920686038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0650814 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.321063693 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.933679569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.915725719 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.338614679 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.93627353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916537805 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.910676278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.909591493 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.908629202 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.953635157 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.924907075 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.346366734 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.409158972 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.229635102 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.93716545 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.925165555 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.910006863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.217342369 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.918120021 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.910091459 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.129721113 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.420449701 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.923197012 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.917407743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.389788296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.924472268 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.929059556 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.920240533 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.140590823 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.925226731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.95379953 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.909830228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.916260647 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.912138059 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928905345 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.917626663 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.910488977 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.381098833 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.022498636 seconds)
  done (took 236.186207542 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.906144213 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.918177873 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.904558002 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.904973831 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.90377201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.908584897 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903395625 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.904359858 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.910396423 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.904688112 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.904629479 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.904842721 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.907643452 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.906068946 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.389649274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.914064743 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516898314 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.906880414 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.905922879 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.907600233 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.585616118 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.913713614 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906819727 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.906939287 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.909046694 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.906666443 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907429881 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.948617236 seconds)
  done (took 169.058433339 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912881565 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095728788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.929978675 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949501664 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.925138221 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.912085579 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.937050888 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.933945867 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.918128287 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.911846024 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.912155197 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.974961096 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.926123959 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.050485548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.945322505 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.94591888 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.018876215 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.921384795 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.911551256 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.912676461 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.942657852 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.910363812 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.975890956 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.040881319 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.933059104 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030540785 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.918903807 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.915097222 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.914535529 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.031499978 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.932941131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.974993851 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.943763737 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.932692101 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036742392 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.031824053 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.022037879 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.944718382 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.922336572 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.914570702 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.913993234 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.90367091 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.033866326 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.933547053 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.916905713 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024050563 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.933937882 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.917131948 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.925279787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.914128169 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.928974444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.935460103 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.983687305 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.050068784 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.951511637 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.941832214 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.940539094 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.202734126 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.92630775 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017222704 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.909128178 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033162951 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.93465167 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.904505928 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.916578635 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.921093536 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.943762817 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951015952 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.022065522 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.924332625 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.018114088 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.95190518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.92702461 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.915904526 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.918561099 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03394267 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.035097648 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.951425384 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956882699 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.951537606 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.915846818 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.916636857 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.906392426 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.934810231 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.921227258 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.033479451 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.0358809 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.924946627 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.919641148 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.919190961 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.91862827 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.942122471 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047815118 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.955036145 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.015360373 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.986501086 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.996331084 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.934686328 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.931598398 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.922150815 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.981804368 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.932938906 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.928870385 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.252420387 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.991108047 seconds)
  done (took 207.641100357 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.376580665 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.97158032 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.974554103 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.215444999 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.350161224 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.721164637 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.967717522 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.969393194 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.993435399 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.129017423 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022587271 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.980159738 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.958924841 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.94026722 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.968597829 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.986968132 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.970998991 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.261428465 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.098968689 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.118085326 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.948380398 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.244033168 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.28800862 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.338884696 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002479235 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.285382052 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.651180212 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.209629696 seconds)
  done (took 62.796788327 seconds)
done (took 832.816582435 seconds)
SAVING RESULT...
DONE!
