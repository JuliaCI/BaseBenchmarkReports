cset: moving following pidspec: 3803
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.383768386 seconds)
loading group "string"... done (took 0.503908647 seconds)
loading group "linalg"... done (took 8.465271179 seconds)
loading group "parallel"... done (took 0.174749942 seconds)
loading group "find"... done (took 1.376901447 seconds)
loading group "tuple"... done (took 1.97075921 seconds)
loading group "dates"... done (took 1.338630491 seconds)
loading group "micro"... done (took 0.213171556 seconds)
loading group "io"... done (took 0.57614868 seconds)
loading group "scalar"... done (took 42.068299945 seconds)
loading group "sparse"... done (took 13.001513546 seconds)
loading group "broadcast"... done (took 1.030273897 seconds)
loading group "union"... done (took 14.40614203 seconds)
loading group "simd"... done (took 4.846730377 seconds)
loading group "random"... done (took 9.803793582 seconds)
loading group "problem"... done (took 2.07022884 seconds)
loading group "array"... done (took 23.219795868 seconds)
loading group "misc"... done (took 1.08038687 seconds)
loading group "sort"... done (took 3.501160738 seconds)
loading group "collection"... done (took 20.872734123 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.596488595 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134292823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14565801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175527116 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203789967 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136041469 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15690573 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460367355 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.066060381 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212243137 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14086329 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528973599 seconds)
done (took 5.704253112 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223083183 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073947323 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126260654 seconds)
  done (took 0.896712517 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07294895 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172853953 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091983178 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10800798 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108646485 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.093693118 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10916888 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108065638 seconds)
  done (took 1.490624125 seconds)
done (took 3.387298944 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.779936777 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.846065255 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518562278 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.125985851 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15708469 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129975989 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309211267 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161676134 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.113964143 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.120204404 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174982845 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.376899076 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423993836 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98036757 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093501656 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127070157 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078079931 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.716805098 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078121926 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129705538 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498951307 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107869835 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116411414 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124207286 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.21114452 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113764325 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.183219425 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.113830078 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657085833 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100443359 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182958971 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095920585 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160350913 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.223480474 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075105535 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104840036 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684093821 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188137254 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110623797 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092201968 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671930134 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076879394 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194281712 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104942132 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114151323 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194012003 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118650994 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.073492982 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096184 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083788863 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16794742 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480931092 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10533074 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14290056 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09093528 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693926713 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092146048 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151868417 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122217767 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108815215 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093888236 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.111280259 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155076079 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11872819 seconds)
  done (took 19.69119674 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117014244 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137324934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093374158 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137066308 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137822099 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094214414 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08185323 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091488344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108137223 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179077314 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134414201 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140756588 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070910794 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092918446 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098211037 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248955747 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118838829 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118400277 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079433763 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104357347 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121691374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110300224 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106311041 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093074471 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166775986 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205190648 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120366338 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122428598 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076478015 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11251806 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139230755 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159343774 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073977474 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090986601 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177715922 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104090078 seconds)
  done (took 5.073759349 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195739788 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118069966 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184940304 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171140642 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144210054 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162177039 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121195402 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264305098 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.227750824 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179461269 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127949975 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097556583 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092190166 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079191169 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091761615 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.773618603 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142601683 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166415557 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122040563 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100997857 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080951907 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371721244 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098914635 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076766597 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100594556 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067723995 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.184895187 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082846553 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.221787293 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099249434 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10524573 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129375172 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194806883 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125931597 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115920597 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099605104 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077918711 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213016348 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088031685 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159846419 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093728709 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101488984 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134309975 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13511443 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095247466 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089148415 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241787042 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080717885 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11423392 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.027185239 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19716501 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092431149 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094408768 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335961767 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112686867 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083377659 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094012804 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276366326 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131239695 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077989735 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075471993 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100222552 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076582359 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.487528801 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085723386 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.837742688 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092912083 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.153661006 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095012736 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085298816 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099462589 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083630656 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114888802 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078401961 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093166851 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077901835 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074377979 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099832033 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1117424 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078708646 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095240193 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074061384 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158822666 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07945105 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11423832 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112079117 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106484883 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0984052 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075561888 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127774847 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095069404 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08019185 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095363759 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13784647 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084402148 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112285758 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096411249 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123520801 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094056683 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173906013 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077570757 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120955948 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094983718 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110284679 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116210654 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09391317 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081308554 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093978997 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076851893 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154325401 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077868979 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07615269 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097146103 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106460805 seconds)
  done (took 23.226645881 seconds)
done (took 48.687266925 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.419272021 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106961988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108232762 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105430344 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10376382 seconds)
  done (took 1.616335173 seconds)
done (took 2.361891003 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323271547 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196625353 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084374319 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187836819 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08181286 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173528731 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.175058216 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095569516 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202600621 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078500246 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160886218 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096052125 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099311969 seconds)
  done (took 2.730992948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089561299 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113646875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078081895 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085566056 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087346533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085710613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101770764 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106762978 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101991101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081255247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087835997 seconds)
  done (took 1.76226269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088427135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112647805 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077218345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087069359 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087447028 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086375238 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103874642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097137817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103432849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080443933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086954852 seconds)
  done (took 1.754230462 seconds)
done (took 6.983330999 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.12050896 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.33932957 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118633016 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166155907 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.323052441 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192053409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61516579 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132569939 seconds)
  done (took 15.94862552 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.125027359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095604311 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077865432 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094894745 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079194206 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095815631 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076079584 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091287236 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077750958 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093023938 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075615366 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094161891 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076688267 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094571928 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076667777 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075666272 seconds)
  done (took 2.212067614 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111870345 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11108914 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097962141 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085922213 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096760797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079902871 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100633119 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097318309 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07961808 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09634285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086618869 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098963485 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084248654 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093978739 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082588159 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.102751277 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094618546 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083602871 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098702572 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083353131 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101455353 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080989955 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099646025 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.084439985 seconds)
  done (took 3.087135498 seconds)
done (took 21.992167086 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163267658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081556235 seconds)
  done (took 0.996235268 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098312418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114748364 seconds)
  done (took 0.971768987 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104040556 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094422541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13145536 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095713946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095143991 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077139109 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125565424 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096014109 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078057256 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094409831 seconds)
  done (took 1.749241937 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083695949 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097284279 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086717834 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115394834 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089394792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096094886 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082016565 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098039195 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083049352 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092479504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100839201 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098230221 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100941164 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113519903 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082623822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099268605 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08778406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09754023 seconds)
  done (took 2.462259785 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078438368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079779741 seconds)
  done (took 0.915214117 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08048661 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091502322 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08029369 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095654714 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076022098 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091223148 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076286087 seconds)
  done (took 1.351407419 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476708947 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.181178673 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324001189 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109410332 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129650242 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.340867848 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129556606 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10969875 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10888301 seconds)
  done (took 2.709750524 seconds)
done (took 11.913772802 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088634061 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129593165 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.478141888 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113263985 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074720436 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153607316 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.25656966 seconds)
done (took 2.054809032 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339876939 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119602949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083833796 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076644599 seconds)
  done (took 1.377971268 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076490205 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081908549 seconds)
  done (took 0.923203486 seconds)
done (took 3.065272051 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075564238 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.126759479 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074203379 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.088706567 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07515115 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071669419 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090459436 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072475538 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09227766 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07477731 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071588323 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09074248 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074470427 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090371295 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07348097 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087662717 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.196303206 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071984932 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08783205 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072708563 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090215403 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072466974 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071119038 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090916491 seconds)
  done (took 2.884073643 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101601303 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093307184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081262688 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097723569 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079128856 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097424529 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080865204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092385406 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080370561 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095072341 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096484135 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079702236 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093847816 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079975479 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093927997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080100482 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097515261 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075847431 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093892351 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07902467 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097761882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075629896 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096794155 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080544117 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095536694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079676659 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095395883 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075295686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097528682 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095850727 seconds)
  done (took 3.428439326 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082427833 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072101318 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089472643 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084349715 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08933525 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077208883 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08971911 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073400762 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093694425 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073168268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077740571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089882836 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072745768 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094478145 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077514258 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09617618 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092227729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089093906 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073096069 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076934824 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095757674 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073279756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093653539 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072688993 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089000477 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072593947 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072478453 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090241567 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073814794 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090002111 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078162272 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095547315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072539677 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102393319 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08021268 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071720611 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097355272 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072253159 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094326219 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072643069 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089781552 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073254001 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072504434 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101594168 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075462289 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091962623 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072988642 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09445276 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076616848 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096341354 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072764341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.072940332 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094910502 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077090187 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09575352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072482294 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091216151 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073048278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093409438 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073215416 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072321485 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090087928 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079511933 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090644892 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097219995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101016166 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073823907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09685015 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077572642 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097832606 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079236999 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109340127 seconds)
  done (took 6.822094761 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078862244 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100901184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075350217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074536809 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0891043 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073434561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098082968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073563147 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092464696 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090732913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09217213 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074603737 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092311757 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078266037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090953837 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075221571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101059493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071758867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090681247 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077213965 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073386689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097682025 seconds)
  done (took 2.635791305 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218197411 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10168933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136660999 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092616815 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111509383 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10978676 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080110768 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099578888 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080023283 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100953843 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101119277 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080972597 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111694173 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083571097 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101307443 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10279528 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08069315 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10225677 seconds)
  done (took 2.672712907 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089803645 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093676858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100380049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094155963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076547987 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096226419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082975741 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108808377 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078268262 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09441161 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086999912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096632311 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078556122 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093719711 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078371345 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093898076 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078218791 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094524826 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086459243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100506282 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101007989 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087392762 seconds)
  done (took 2.767951079 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093844551 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096367274 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09746792 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098552752 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075098039 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095487249 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084558385 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094192947 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085201617 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096006263 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076346581 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09502919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083533649 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093957228 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085056913 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094463078 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078253025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094437528 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077919544 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093529888 seconds)
  done (took 2.570850339 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117651594 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108223577 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091049069 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120023229 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108726928 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091710319 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120201435 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093538606 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107738648 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121356752 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091363802 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108468791 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10184703 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114664104 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108448628 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102344336 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119995643 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119447387 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090791333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107901789 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103967489 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108751512 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119194914 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090768262 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10918349 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09222952 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109010214 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098311197 seconds)
  done (took 3.756524043 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076390872 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076510979 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091708305 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073415956 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091380326 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.074458282 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07305847 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091620266 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075944549 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091326598 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075990834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075277752 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093593432 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074958654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094676548 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076185674 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092715471 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073413162 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072961547 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091571858 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076253734 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093970448 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07570212 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073273667 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091465145 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075885631 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091602065 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073571745 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093686354 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074129983 seconds)
  done (took 3.240308041 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085516535 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104675706 seconds)
  done (took 0.975676564 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07471446 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110751675 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073516748 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080006474 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101247355 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076314079 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105081299 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100690712 seconds)
  done (took 1.506031375 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10164945 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115543675 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083384359 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108080491 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096295517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113944188 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158545473 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083313904 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103167321 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077824069 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114508972 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077448625 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104192261 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083050311 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104555539 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092106687 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095492318 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087596554 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103127069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079609797 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101622511 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093232083 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107210046 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084892137 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098349941 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089248365 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10967269 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106740713 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083281336 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107337511 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084854393 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088795711 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082137027 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083129496 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097145036 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095189275 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115132396 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100634679 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087711001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10134994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087047975 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093643013 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088540744 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10315387 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08995955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101496928 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084091357 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093524772 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078563973 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099423379 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076546311 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080936631 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08970941 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08759102 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105245595 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113891579 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080871428 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100202542 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082132727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098945825 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085542737 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099906244 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088939846 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099165137 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088006638 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104702393 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086647625 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093815872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071562817 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077981448 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105878845 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12030899 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089278933 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10169111 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083548579 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096856929 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083162048 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102480856 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086156711 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107474185 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082191997 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103953345 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088566382 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099785224 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081928494 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103756008 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079783778 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098711773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079171401 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116809501 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079832799 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096911105 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078971314 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107073905 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082379556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099840246 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078367957 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105927819 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071631943 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10216066 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084302157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103502959 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09028678 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102510997 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085560792 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105604305 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088870929 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10158688 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081678338 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092560674 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084556219 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09884502 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086829489 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0713607 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101677852 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08150622 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103090893 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10710402 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080272692 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082781358 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10748141 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108197789 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080713603 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074142272 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10128636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083030006 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106050397 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108120525 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080492279 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075849808 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095774551 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086813706 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101608957 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084662632 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102407982 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083302407 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090286735 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078080535 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102168339 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.088254921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100522725 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085281071 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106843595 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103437052 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081074942 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106460713 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081411229 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077564305 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105958345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082166167 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095894087 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08840809 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101023598 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080934397 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10124381 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087827679 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10181406 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083805241 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099722873 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084001236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103131828 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078484153 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10285223 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081011451 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110055187 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082390632 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095339464 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074600252 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102867512 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079308053 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100791228 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079093697 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101759157 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084628542 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079118403 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100360171 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082566238 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112042925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110485449 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085190127 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103595268 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089890786 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101281007 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08558416 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100728098 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08528126 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102913228 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087824939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103828122 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084024277 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100732165 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.075043539 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085769351 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107262128 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078346687 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09793331 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077945627 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101400934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089736947 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102045579 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084400907 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098896194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085439049 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107430025 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082594377 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101416428 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078582428 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102940629 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08833407 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103278005 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085422817 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108853461 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084268355 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095520044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088888914 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099511817 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08714005 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095502393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079460088 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097715623 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085439077 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080841909 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100931936 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072338594 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107576194 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088981887 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103500861 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078209327 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101658833 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091486589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100762144 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089489145 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101988053 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085512067 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116431022 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096480924 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082805542 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109894318 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083432071 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09113451 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085958524 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099192046 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077206584 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080887834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099204246 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083478786 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113414437 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084584793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090995361 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082588618 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100177495 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07922192 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096072028 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088458727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103619572 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082705335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111426149 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085378179 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103899109 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085621365 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10202634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084884557 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104196162 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084438483 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103857745 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082308967 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098047082 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084339603 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097724183 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08033656 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100851308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084837498 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102682437 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085571474 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081839192 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107607609 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102127692 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084849761 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121187123 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080766775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098084422 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084484082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105187277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083101535 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102309645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077429301 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107642147 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083483587 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108952715 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082709806 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094172237 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083586095 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102157121 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084828098 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103468936 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085034982 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101061767 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083653949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102250651 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093122383 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098378562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090681781 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104645442 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085940264 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102928623 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083985282 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101505755 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079320922 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102566903 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08516987 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103381037 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083295503 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104689303 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084087514 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102293812 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081788685 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103955319 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084346203 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103669648 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073151165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079469505 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098456298 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083515398 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107278702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084658384 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101444206 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081538312 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105395633 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081712502 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094364838 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087199929 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105023702 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084712534 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112125088 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079212311 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103064843 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093483699 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092448264 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080850625 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098644548 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079796009 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108330218 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084947474 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.107757321 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084822631 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098677222 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.075934693 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084492112 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100737001 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073927643 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099212662 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086932669 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100496731 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081825771 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103945977 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086036182 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105589302 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087573216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102649775 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083510366 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103829988 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076516284 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09904442 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079823814 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102719052 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085291464 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080300614 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095690179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083750727 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103720902 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084501075 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101969064 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082419619 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109039259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08426356 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103061662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08994777 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093673003 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084199606 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102570487 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083968137 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098809906 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085451977 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10544239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086255278 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108139148 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084155611 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10536707 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083587256 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100328145 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083905954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102708305 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084383445 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079217032 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104864035 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108727437 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080711318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083672642 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103273831 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080976269 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103831925 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085440185 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102846135 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086475478 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104070634 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084147071 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106453563 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.083913231 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105291 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0857156 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102238331 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088610249 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099343082 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090696188 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105121075 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085948659 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101943746 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080334114 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102851216 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084033985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102294079 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090656781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105546443 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080245469 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099138046 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080303382 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102950221 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089712087 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109932344 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084829913 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104271332 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07870561 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095907214 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086106608 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10016178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082847036 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105681966 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0883827 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103805939 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081210322 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082032679 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109786182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108895949 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087026033 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099750479 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086764757 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104906837 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084225516 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.100774203 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08394265 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085328151 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106119807 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082624274 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100852293 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113052192 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089566069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105261005 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082922854 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106494584 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083651169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09759066 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086403174 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083813028 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107360818 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10366298 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084022916 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113564362 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079675717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10211722 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089975951 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102909546 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090314379 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098246994 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085465416 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106225423 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086415814 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097733685 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081033201 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080502099 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104231229 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080415942 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098159397 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095304966 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10921834 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0851493 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104456643 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082798242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098806423 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07838185 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099891717 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087286003 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103661195 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092395666 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100221515 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080614017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097889846 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084685021 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105672608 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087542981 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076838515 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099388761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080586693 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103502893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091278713 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099747231 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081200692 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102975212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082327748 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09720305 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087946711 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093491346 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083131341 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114145819 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083054247 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103654885 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084938975 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107309589 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101383295 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07603645 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082824149 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101594969 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082850456 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10233911 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083747014 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116050222 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102466303 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078039208 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099971087 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082932458 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078160912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107846259 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103261396 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083331792 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103013282 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080929831 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103050113 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089869775 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103405557 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084751005 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101831713 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080715184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100747922 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079118102 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080279835 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102970839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08387338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101112776 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.083746294 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098282758 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092447141 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11048738 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104702626 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076349977 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079897239 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098517709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079301184 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104903792 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077726513 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101022104 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080532767 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100001421 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084714153 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103643139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082645142 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103430185 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083509873 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073618599 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105449046 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084349284 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104915705 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077177009 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102917539 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086635872 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107079553 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091536516 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103245979 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084873758 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104014033 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087546047 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096785674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088310371 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102558183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08427467 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101676207 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085510135 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106897443 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087129189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106518359 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088302492 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105553421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089632411 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108493664 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07809364 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096458205 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089180392 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081394879 seconds)
  done (took 56.367533889 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146310622 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086789542 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076600127 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094442609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122983383 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0806757 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094989079 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080602749 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096969874 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089226777 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092256035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073993943 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115290955 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120983287 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121690461 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091216248 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095095025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080283683 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096077458 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081198522 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116586427 seconds)
  done (took 2.889378024 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10114126 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11557717 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112805573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098479475 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10669976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114627443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09292502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114419292 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119127285 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089161507 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118144134 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115711115 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089155311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108455024 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10808818 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092126006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118245096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086641477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115837088 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113132975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092148287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114046209 seconds)
  done (took 3.167646093 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08924268 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084322466 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107642284 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.075827643 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104150447 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.075548457 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109005175 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.078823391 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107903237 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.085302846 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.101568537 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.085218334 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109960707 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.075457061 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.081947073 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095709315 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089126045 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102300687 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085052224 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09645235 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12113876 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079212621 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.077633713 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.100067849 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092207853 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103649545 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.083343823 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101722201 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08257892 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101845872 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.076220968 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104359353 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086681471 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099724781 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079450573 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.081434776 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101714119 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.07589629 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098910605 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085982324 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098018306 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085312555 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111357583 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081366433 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095795021 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087941816 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105188523 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.076800309 seconds)
  done (took 5.251732019 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.116139805 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155350711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083296689 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143797443 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120722643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094289886 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106141566 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144605153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07824719 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105347415 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123701581 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098826406 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106442016 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090661369 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108017525 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104797805 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086949166 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10089568 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090869439 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104528258 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090506527 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108414533 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11964973 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09721435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109772969 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083240031 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101916854 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110976357 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096423436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111541173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110937941 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093029996 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119991473 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083080435 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103744955 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088393493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122031597 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10584551 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087729411 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099499909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08741627 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110539957 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088627312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121371321 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106167132 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.087238792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105672485 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078190318 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116660241 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10832722 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095701189 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119494709 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110349992 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086433303 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111114275 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100085236 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10708917 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083006098 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109507077 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116847631 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.079340527 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109486885 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118967804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087378088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115292898 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098507823 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108429434 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110386338 seconds)
  done (took 8.074415293 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113710081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111405997 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102259601 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123571085 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111601004 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090299229 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110361575 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111502078 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091766297 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11811185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091474935 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159426843 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107990349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096542292 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110822406 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111215097 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091133604 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110591739 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090558443 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111604433 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090393092 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122194378 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110793428 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102036797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124685251 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107559924 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090297921 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11072488 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122691532 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090895572 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121529162 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11048426 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090580246 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123172368 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12385151 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090461808 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105066259 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090655985 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111197653 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0900795 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10855929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122276867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091309669 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108590124 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090887087 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111279868 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123615226 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124373158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097621847 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118242018 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090277412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124392877 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111224122 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091143718 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122768394 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13190976 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122684319 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122687546 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091268803 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122555657 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123505259 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132083714 seconds)
  done (took 7.62125474 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082544583 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081527874 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101150133 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079368026 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103535818 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080088451 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081219961 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100575418 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082695237 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101778491 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082045241 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100310983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080176964 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081981407 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100118289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079799572 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100252918 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080175604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081995924 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101158987 seconds)
  done (took 2.629049652 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091391784 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123606349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083124993 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11093666 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08504906 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11034122 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084146637 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105296899 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085298226 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102916283 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095758718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117016601 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102275966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089761534 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115457074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088869263 seconds)
  done (took 2.440295508 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103375174 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124622646 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128214958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087771984 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100980883 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.090592635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10479869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.078429575 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077817585 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111468277 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088436452 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107566796 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08455922 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100974393 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0830838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108727627 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.078681269 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.106880108 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085637369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127786244 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.087567209 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107448885 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085731212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107131411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085112722 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.109862477 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109717299 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080574884 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101571622 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086697275 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105716618 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091766146 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099646122 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087765754 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.079932021 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101919712 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084711831 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103714079 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088388767 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106875715 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.080368979 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103916313 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085269752 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104766104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078478536 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106766718 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07851271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109602902 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08405586 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106813317 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085895477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11114462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089577221 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114302831 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092717729 seconds)
  done (took 6.177922482 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098266292 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107159189 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088080466 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100540117 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085883122 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108155402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083315401 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102388815 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081978444 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096078437 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081661179 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103601506 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081870928 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102232898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081906188 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104866458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077986439 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084351944 seconds)
  done (took 2.526608859 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088410224 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082145862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.11203161 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082177005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103511412 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084715225 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099974059 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081602856 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101610752 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083218504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103091927 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085551087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080047202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.105790797 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082155556 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104017754 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084842189 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102378051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08330473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099517618 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085125296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101697637 seconds)
  done (took 2.893246611 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10100925 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136197342 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.097409147 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146685613 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108332877 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086644204 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119276145 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087378066 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126426167 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086359179 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106867788 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086817 seconds)
  done (took 2.14342507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108262719 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138725794 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080259687 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102747005 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093156022 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10628922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104369183 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084845481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117711898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118559233 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084181977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119190238 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120584102 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095527753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114652725 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113907316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083543149 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105090307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08019017 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128230713 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104937729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118362881 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084994023 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104215816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084775469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117336642 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119346087 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117581439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084758618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118930958 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114543391 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08575314 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118137826 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117358465 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082464577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118910751 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084240912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127606337 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114178755 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116833173 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082169574 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114468206 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118606275 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092227497 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11921945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10699761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092534126 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104684876 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084413324 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13305097 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114421345 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120438033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097515304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121262566 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12204037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13830255 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12455213 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099818046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117394754 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123140663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121055874 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09518059 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116574039 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119522836 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094150324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117186422 seconds)
  done (took 7.986998922 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124338969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103219371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0880377 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119073451 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11692719 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106265005 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085130706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104799247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085945691 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101306128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151291242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084833233 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11732238 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117965226 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086719533 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104719461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083673916 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11721011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101645241 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136116296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088330878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11879556 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120895776 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120725001 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10209172 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115891722 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108146349 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085976138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105336357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085887113 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112835304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084313994 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117335064 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101105146 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095801749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106475744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103964836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092128774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105308687 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093967897 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117766825 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131016412 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10827884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088602576 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120339971 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109446998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089674997 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105248443 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090068599 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10571859 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100459319 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12115363 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120415846 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121576027 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088846126 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10631064 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084249146 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106104588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104667911 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094017856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118009396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107053056 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135047787 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08944913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109152348 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100323203 seconds)
  done (took 7.840575327 seconds)
done (took 152.035524296 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102484731 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140203278 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098261001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16639939 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080497998 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13594483 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11396166 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115005473 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080679052 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101011321 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.080406542 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102761748 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146242374 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079535826 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.099895191 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083125246 seconds)
  done (took 2.58502361 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18183957 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283056235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099745514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106862084 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085763113 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104219365 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084932936 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107997545 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082720564 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113026333 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084203751 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103749656 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0917384 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103752581 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080917514 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103314726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092018297 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103061533 seconds)
  done (took 2.882360392 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116360504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146569881 seconds)
  done (took 1.133410527 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121455241 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185043845 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.533690617 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153777553 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108950495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124373251 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158706165 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09971102 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.221733911 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128568499 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108322117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108618317 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136683662 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096513483 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114975518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.0912528 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141103031 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092528781 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113893312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092389977 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139033358 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115511163 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096765543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113953098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189022673 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129010763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091958921 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11276628 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092040039 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11314272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096221636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125397514 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125490439 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.166217332 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113641124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166817652 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115456909 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085754332 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.107838722 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085661943 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11209043 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11228864 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101412472 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106512044 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087153585 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115191876 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087118197 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107953803 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114430679 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095608857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114564773 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09050676 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159076036 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094009907 seconds)
  done (took 7.697127307 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800434768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147535519 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085777474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89747722 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138119116 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098332064 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.800004435 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128819199 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230933015 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.789030678 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12703002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123310249 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205629856 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.27203282 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.117451607 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.331224301 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67381324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123704778 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135088566 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147884983 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092393758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138385686 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129832199 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428729511 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087238214 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108120336 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090621677 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122247533 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162282152 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107678717 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089166383 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199330726 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269903365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18054299 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109836217 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087575895 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106415066 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165983486 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268430999 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196987684 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172430647 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103113803 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08432621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119507656 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128407359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082574278 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16105348 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169202032 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194941398 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090370612 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121487937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121197865 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102318617 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163929331 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110704069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340449165 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347851557 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089422384 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120039507 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109473427 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26841881 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087811596 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22985408 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140356286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215908878 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089307341 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795840294 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168892824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084112534 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118791013 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118917581 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096232637 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12033473 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167653727 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39285635 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103198785 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113345296 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086472034 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231470341 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088629299 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108352492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16717392 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085752704 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119709499 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126196604 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101127369 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191733923 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251774693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12504469 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093954373 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113311553 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099473359 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109436781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209655645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218054038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160439804 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213085703 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121980329 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162774946 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162286802 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120504416 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167343347 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116189858 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128970409 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103371093 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21623016 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145063106 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089858381 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115683772 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119942322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.123523929 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114838255 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114473683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166948096 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460693953 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164540448 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10719736 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093453286 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117168588 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16242733 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114920342 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240206425 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118626823 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17045662 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115276277 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086946835 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116335812 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165216893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121787015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094623085 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121918136 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11490109 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24754608 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194548719 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123719564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237502931 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17964615 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095810868 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173461357 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121566913 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163776639 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118361173 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122005071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092432345 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779082286 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097457813 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11662746 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112768061 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182802656 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084818276 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08650654 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10657313 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0818418 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796375399 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091065588 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105395441 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086955886 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118854787 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09657726 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116432462 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116495764 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164659871 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237292658 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103525879 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117245466 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088473695 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178725011 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087569281 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105408338 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085489272 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085227357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119843932 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114204194 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087202992 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168819772 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156089828 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221971056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.582571294 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089235635 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10870433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205129084 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107324438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30674484 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099246776 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228414613 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170989227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.110183915 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340587986 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172017479 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189137379 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094033833 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168996244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10700675 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097097991 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.1845028 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090495289 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119301112 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163901032 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129250056 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105986999 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151400682 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084948576 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250232183 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086864324 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165171298 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111111965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09889959 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31500709 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111957794 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109892436 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182872 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093649159 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106725507 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701152034 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107916876 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095989054 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11831314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228184928 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169227453 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097805519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122489964 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126109463 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166746029 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.214565758 seconds)
  done (took 43.677937021 seconds)
done (took 58.843883593 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309571018 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255683116 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.286626228 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189405294 seconds)
  done (took 2.010497705 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179603916 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.145371115 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119116335 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104588921 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.147843392 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081760682 seconds)
  done (took 1.671704968 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.43463904 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37824509 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302127692 seconds)
  done (took 2.013588294 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244942316 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266853949 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.31774055 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421407159 seconds)
  done (took 2.253993286 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.1999875 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096489594 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117507488 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.133820368 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.140730533 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.193862786 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137329917 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144948913 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102832709 seconds)
  done (took 2.212489763 seconds)
done (took 11.063956413 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.270663281 seconds)
    (2/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.170953155 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.240900181 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101326021 seconds)
    (5/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.285914045 seconds)
    (6/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120054831 seconds)
    (7/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098471807 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113047688 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.207638087 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139757583 seconds)
    (11/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.23923944 seconds)
    (12/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.219125458 seconds)
    (13/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098280453 seconds)
    (14/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.230924799 seconds)
    (15/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121966963 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.154204955 seconds)
    (17/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089831777 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137827682 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.192798305 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120270671 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.263018526 seconds)
    (22/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.192013795 seconds)
    (23/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096449252 seconds)
    (24/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120556911 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.217232478 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.211440405 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.239238013 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089876791 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.207341624 seconds)
    (30/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.1669731 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117269665 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.123287407 seconds)
    (33/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.145271275 seconds)
    (34/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122694384 seconds)
    (35/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196290472 seconds)
    (36/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.209592628 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071331936 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135046269 seconds)
    (39/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.1839869 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.194510581 seconds)
    (41/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175196374 seconds)
    (42/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109537273 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218771379 seconds)
    (44/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093702828 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107187802 seconds)
    (46/286) benchmarking ("sort", Float64, false)...
    done (took 0.143304068 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172700916 seconds)
    (48/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.180608235 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.113040528 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085908866 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134221583 seconds)
    (52/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071464091 seconds)
    (53/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09264316 seconds)
    (54/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.201128416 seconds)
    (55/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114146804 seconds)
    (56/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.15364265 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.098451829 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10778508 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092759129 seconds)
    (60/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157007125 seconds)
    (61/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09162851 seconds)
    (62/286) benchmarking ("sort", BigInt, false)...
    done (took 0.248334588 seconds)
    (63/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09397801 seconds)
    (64/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.187421368 seconds)
    (65/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.201688319 seconds)
    (66/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11471213 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109129479 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071932065 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12404855 seconds)
    (70/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100344489 seconds)
    (71/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.093941544 seconds)
    (72/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13703852 seconds)
    (73/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175104109 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120241383 seconds)
    (75/286) benchmarking ("sort", Float32, true)...
    done (took 0.225539502 seconds)
    (76/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071538441 seconds)
    (77/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121313757 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.08311768 seconds)
    (79/286) benchmarking ("sort", Float32, false)...
    done (took 0.171774574 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114320295 seconds)
    (81/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154450494 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122531709 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.107887108 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102417931 seconds)
    (85/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071413742 seconds)
    (86/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093657366 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 0.24153948 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.137831487 seconds)
    (89/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093657086 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.14525973 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081610431 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09529141 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187983765 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073914044 seconds)
    (95/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184016898 seconds)
    (96/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.222831125 seconds)
    (97/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090318707 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152436008 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097556737 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118432601 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073741612 seconds)
    (102/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119263855 seconds)
    (103/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.085838126 seconds)
    (104/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.187910239 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138883396 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105714007 seconds)
    (107/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088670664 seconds)
    (108/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071101872 seconds)
    (109/286) benchmarking ("sort", Int8, false)...
    done (took 0.208714808 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114852832 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.195409783 seconds)
    (112/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111234519 seconds)
    (113/286) benchmarking ("sort", Float64, true)...
    done (took 0.225089229 seconds)
    (114/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109373731 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.145691175 seconds)
    (116/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071663099 seconds)
    (117/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12036628 seconds)
    (118/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.090384608 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110946942 seconds)
    (120/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091007025 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112670569 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.192776221 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117054531 seconds)
    (124/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075347687 seconds)
    (125/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077737508 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118148485 seconds)
    (127/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191159315 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087655921 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.147307138 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074002496 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111549871 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160088482 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095739547 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105840792 seconds)
    (135/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.143532471 seconds)
    (136/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120490846 seconds)
    (137/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085216837 seconds)
    (138/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112227629 seconds)
    (139/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.087088481 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.133612296 seconds)
    (141/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.071634554 seconds)
    (142/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094954469 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09458295 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111804387 seconds)
    (145/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191304648 seconds)
    (146/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088045681 seconds)
    (147/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.15771071 seconds)
    (148/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071845579 seconds)
    (149/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177822516 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105909498 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.190175019 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113987861 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.159028615 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109708056 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09964445 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095210067 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109926853 seconds)
    (158/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.123923578 seconds)
    (159/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11307157 seconds)
    (160/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085201324 seconds)
    (161/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.096505206 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087478894 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116148039 seconds)
    (164/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189909468 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089862938 seconds)
    (166/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.190173162 seconds)
    (167/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112177803 seconds)
    (168/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071273531 seconds)
    (169/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.151758017 seconds)
    (170/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.107224985 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113111149 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093967591 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112792062 seconds)
    (174/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186760623 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08938452 seconds)
    (176/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111169822 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.089802513 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12168438 seconds)
    (179/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088280227 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126505923 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169806802 seconds)
    (182/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071982394 seconds)
    (183/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124487199 seconds)
    (184/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09785557 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122900185 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089276075 seconds)
    (187/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095449575 seconds)
    (188/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074991795 seconds)
    (189/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.096194664 seconds)
    (190/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091054724 seconds)
    (191/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123052644 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07481317 seconds)
    (193/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070708718 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.213012094 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109121148 seconds)
    (196/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07154299 seconds)
    (197/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095107585 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088140113 seconds)
    (199/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.095001967 seconds)
    (200/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090893325 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096832717 seconds)
    (202/286) benchmarking ("sort", Int8, true)...
    done (took 0.214973148 seconds)
    (203/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074441581 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121943129 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095702868 seconds)
    (206/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.154040242 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089831858 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107595092 seconds)
    (209/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079120194 seconds)
    (210/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.111198622 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085759853 seconds)
    (212/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.09460197 seconds)
    (213/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073367943 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133018672 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074239233 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118797606 seconds)
    (217/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08800911 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.110488039 seconds)
    (219/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109999391 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112865607 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088562847 seconds)
    (222/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110160038 seconds)
    (223/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.078205149 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.097771701 seconds)
    (225/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.070965217 seconds)
    (226/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07846298 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.098119954 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090182384 seconds)
    (229/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10724439 seconds)
    (230/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088992357 seconds)
    (231/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.131371818 seconds)
    (232/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074709365 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112019499 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.143311383 seconds)
    (235/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.101629319 seconds)
    (236/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071191527 seconds)
    (237/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128483326 seconds)
    (238/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.088598374 seconds)
    (239/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.095618855 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083343815 seconds)
    (241/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113647889 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090427068 seconds)
    (243/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.094061476 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075021217 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.08932455 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112780604 seconds)
    (247/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071581807 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119091621 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083020192 seconds)
    (250/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.096744528 seconds)
    (251/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.085519898 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.109835732 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091581815 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.11970161 seconds)
    (255/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074153234 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.100261906 seconds)
    (257/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.13735866 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107870673 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090281779 seconds)
    (260/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095357483 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106668973 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107342164 seconds)
    (263/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.122120534 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.095205377 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109207007 seconds)
    (266/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241246969 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116383972 seconds)
    (268/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130771716 seconds)
    (269/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077376833 seconds)
    (270/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082950204 seconds)
    (271/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111325287 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083453593 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109162529 seconds)
    (274/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083946591 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120613304 seconds)
    (276/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090429987 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123949829 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110177541 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072707722 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.17755519 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088017329 seconds)
    (282/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.101950721 seconds)
    (283/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072755059 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.108908293 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088601175 seconds)
    (286/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114285012 seconds)
  done (took 36.288175304 seconds)
done (took 37.19534548 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103047623 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150926601 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096907994 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137470108 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097389656 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.122849198 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116205606 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096059438 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121446798 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09885907 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.120137331 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078826356 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118397326 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094217552 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117554439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113124744 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121091239 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090134559 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109815234 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085412411 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.109692047 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086594005 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111826298 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.077977093 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.117886666 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09202293 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.113400459 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093564537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111629267 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08655791 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108999905 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091039596 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108461681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096782366 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113099349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08618882 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118213614 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093036528 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112757074 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08801477 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114734671 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086812197 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.112704623 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091425506 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110512713 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085772731 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.110197838 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098526058 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137080043 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087197182 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115385291 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.093942502 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119356232 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089973781 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10865487 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.086572882 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.111203674 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112920402 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110039588 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087563747 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115376574 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090615165 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.109282202 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.085759301 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111126856 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093551288 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.118709902 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085764665 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116618972 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089846937 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106103635 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086458562 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.108400756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.083637006 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092756002 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116835461 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081129114 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111831239 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090100629 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112411846 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086075198 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108335561 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087565959 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111159195 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084553352 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102478865 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084433505 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112336845 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086012723 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.109647417 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089074259 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.113004839 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088216631 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118006925 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086441227 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.111179279 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088016763 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110380509 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088541235 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.10875786 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.082981953 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084918624 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115478552 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08321864 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.110823224 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096612351 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108763186 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089301508 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109394864 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085853165 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123879658 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.0928867 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111923123 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088209228 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.106994894 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0890782 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108296547 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084443397 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108487417 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087774472 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110778701 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087503924 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109110982 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089817257 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120370103 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08256226 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.108933512 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084844912 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.129547234 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089916365 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112057799 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084704346 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.085829901 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105546006 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085194431 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108547791 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.089319785 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109628661 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086068098 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110448464 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08639039 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112361898 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087445493 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111745136 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084272807 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.103269526 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087857762 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108781784 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087627626 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111102234 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08680891 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08214248 seconds)
done (took 16.319757734 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098576998 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184573395 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.14402968 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146933489 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118608465 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128867523 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122698262 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142618035 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095522893 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14114062 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142367989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108183438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147792307 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119012121 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.103465411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117416911 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11733431 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103486774 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152051036 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13741372 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119540824 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119257818 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139378712 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137753633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092622008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146656368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.097009156 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116950703 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121025213 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101639713 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134457279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.096546587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120805199 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129714609 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100864801 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117138852 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104406843 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115113219 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093469369 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.117769146 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130923848 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104960107 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114998501 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.125461651 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093928818 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121911852 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092742328 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116256239 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094215449 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112990271 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098340923 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139079315 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117367823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096446426 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119237343 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093354607 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119160254 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120854679 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096220456 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121299624 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092911207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121562067 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.122897098 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11069137 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117675358 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119996855 seconds)
  done (took 8.7591239 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.113311935 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145096858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.124145081 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101157627 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120897876 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082709827 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10695618 seconds)
  done (took 1.753997173 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090674209 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140043868 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115691991 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141839005 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132941832 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119726206 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124898393 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084327049 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131209983 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093395434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136612885 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165828297 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085295989 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123010531 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14496944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086667635 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143518594 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.084065954 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116897729 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14065016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089367738 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130731391 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096808213 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110080419 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107476257 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111170358 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175141592 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095295605 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108133563 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089915051 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11412574 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179215845 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105915675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11977706 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081776975 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136608231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128882155 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089668286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133824692 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08964422 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130643533 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091724978 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116709619 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089373781 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117029294 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098923936 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119605362 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117875764 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090075803 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136719558 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094863859 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130914006 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086232117 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113698627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094630034 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116219901 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098601559 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114947602 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112229889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115734481 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134406403 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109937758 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13098912 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134656421 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101254371 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13135008 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105727224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115136686 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091921334 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117194013 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110980573 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113682116 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119766929 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100194504 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118962944 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111535039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137263553 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088960273 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122631019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089267622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112689911 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085157587 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.125624739 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088554234 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111674782 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101128274 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12220749 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089719297 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113268248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132213603 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088715906 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.120856664 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09524848 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113078576 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100193709 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137490576 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120440642 seconds)
  done (took 11.990389762 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09307884 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.089027786 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11588817 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086760584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111680892 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086928856 seconds)
  done (took 1.556752339 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12342569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116952194 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100320169 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117204025 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.152861826 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109319029 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.137693868 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095202658 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.129966137 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124541998 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109350232 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136673978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115181173 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117621679 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.133720218 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094406457 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135809923 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089862639 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124413368 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090454381 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129893072 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.0921089 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114792193 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10814779 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119529128 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117793377 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092158459 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125386305 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099865539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120848827 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092328951 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11925567 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093165424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121245974 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13623871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093292111 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113847456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095786239 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119353043 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093650676 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136092214 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089131398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123887053 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095550958 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121003663 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121549051 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09519461 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117163612 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110051775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120902476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095136695 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118417417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.093350413 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120842354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093182825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12160537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098954012 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135896716 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118244627 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093297917 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114726603 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093781414 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122588848 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094189934 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119862656 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095301163 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.118396718 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091797189 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115699133 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092575932 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120146769 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08956693 seconds)
  done (took 9.023662454 seconds)
done (took 34.045149218 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.678997833 seconds)
  done (took 1.64819995 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83462633 seconds)
  done (took 1.807843384 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.667476493 seconds)
  done (took 18.671354606 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.481857731 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577527033 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.019584536 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164121667 seconds)
  done (took 3.218086759 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.966230127 seconds)
  done (took 1.957208325 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299136075 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236130505 seconds)
  done (took 1.513599519 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.819812386 seconds)
  done (took 1.808676872 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.521928011 seconds)
  done (took 2.506252042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.352522217 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19585871 seconds)
  done (took 1.545226253 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56874636 seconds)
  done (took 1.555668634 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.532780469 seconds)
  done (took 16.525556779 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243501149 seconds)
  done (took 1.24737759 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301404848 seconds)
  done (took 1.29253295 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.633591938 seconds)
  done (took 4.624310973 seconds)
done (took 60.9061915 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102097939 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098242531 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123630829 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095571962 seconds)
  done (took 1.405468848 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105728092 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119198057 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096900144 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117939016 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101118519 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119344801 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.091731842 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.16304621 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119427459 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09543966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118859421 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092356474 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120933322 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092138131 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117306195 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094127058 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122195973 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092976596 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120271273 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094564181 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116709201 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.093448852 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122086083 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091388885 seconds)
  done (took 3.621627369 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101379592 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089775225 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116683514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08906021 seconds)
  done (took 1.40056801 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105587213 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131828106 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105540419 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125127029 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105746864 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13066939 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114116231 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08779348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090089499 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125010083 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090082231 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134378191 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130775263 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083620602 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126188259 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086352365 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.111463723 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105694348 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124404983 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099736455 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114506553 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097350197 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122403707 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.102785011 seconds)
  done (took 3.654001786 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174968591 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126207496 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137876628 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093836893 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162816353 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13926175 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.086886813 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139510356 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088248497 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124776618 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091151727 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165006923 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123078644 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.091114556 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114012885 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09443674 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123048673 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.097565255 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.116668214 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101361469 seconds)
  done (took 3.398498564 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102375811 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114289464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.085533736 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086689172 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121132203 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090733122 seconds)
  done (took 1.610279631 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090893392 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086390918 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111100834 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083764542 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114755269 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084093782 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083172013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109446568 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083844248 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109840307 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083854486 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10919665 seconds)
  done (took 2.159020104 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.391299234 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118315456 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112337058 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088674312 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120262214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086681353 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127064508 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.087616331 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143447866 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087876351 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113363061 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09022548 seconds)
  done (took 2.568219315 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210241902 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096212133 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259558228 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350427498 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159092448 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164690835 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27617749 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168393321 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.183378173 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134537934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188074486 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152913451 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14984143 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175145772 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108906625 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173533364 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170596108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195801033 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144655449 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203340409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157801681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16323195 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175121931 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148990956 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131720994 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1532049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089764866 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123226428 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168531103 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165533087 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171588978 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148945093 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108800452 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227216555 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21330749 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178493872 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310925396 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130512593 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.187898113 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.176770743 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248050575 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109686221 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217977539 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128459741 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12837347 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181358761 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157994921 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181745232 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131705357 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115418896 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179161671 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172807434 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205659856 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113788642 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333420328 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126443583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145203043 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187279772 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189267689 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1947052 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165757543 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118536697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185923933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17659575 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178448893 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148937982 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.169008099 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096473962 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172567555 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19241949 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20200621 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162631509 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184053977 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137932708 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163474936 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164266801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121907582 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177848607 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159011686 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119430048 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121083545 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134189654 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126326148 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155736485 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121256454 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201261998 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132906565 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187800958 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198820882 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156811015 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158592031 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161013414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162658435 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115540817 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118265314 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141436094 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128706259 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154042452 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13060557 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155589962 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114109775 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125334161 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14973294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092775471 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157531791 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132574551 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163686106 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161524019 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099696776 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164099656 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147886546 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15441688 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167092083 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185481913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104852752 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130261597 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192728981 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156081134 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105692378 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170324772 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210120328 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.137178247 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136580242 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165180986 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18924211 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139125626 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185491081 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13827467 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102591473 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148487348 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156299277 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154825526 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156586257 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098259756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154531593 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18647044 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126325906 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110230151 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170798052 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125330992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12516606 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111195131 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134267292 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140633498 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117109037 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138964171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153340025 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158069586 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149693969 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126455097 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139655512 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21558278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105017061 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157348633 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144605174 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089187096 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173480637 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182698436 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125832411 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19480909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167253476 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221285539 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133654445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130237205 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173888501 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125446107 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091375436 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163234262 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158798862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158159934 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182143571 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190970427 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163450672 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151027054 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146732014 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166024722 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.176275729 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152462071 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113349415 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158913314 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161734084 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12058963 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092592375 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124549882 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139387188 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099885648 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129397223 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179908164 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160600045 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186192675 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158780057 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142092086 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181603965 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.096753657 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161470676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167940888 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137616824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179686634 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179546577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16454697 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139652759 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17102512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089011306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121256865 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101949325 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160549054 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130779429 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130478334 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111645325 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179179945 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170343328 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149146119 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225090028 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166486983 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189621882 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.091782626 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160885806 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166693869 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154993392 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154994877 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127619841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156593897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174196338 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109795822 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211262868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129686648 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163266204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223995787 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15378539 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098887147 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146427758 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162030747 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137229715 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160862518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114234623 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131961791 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150148219 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102593914 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123772013 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176295132 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140868378 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175258781 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152800656 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169874977 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094582099 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140028018 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157155619 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143622742 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085765316 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164306124 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209913811 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112959191 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155956535 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169249585 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127962813 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304535904 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187832295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180535745 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132605676 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110348613 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159263165 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155310382 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160185304 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174874816 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139960092 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175520249 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153570914 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112010837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131704374 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142965376 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118805463 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.147259237 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130388369 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150071766 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11353682 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179316547 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138381264 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15739822 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162448698 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145315585 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118308606 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14008792 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19644553 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155863458 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173482121 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151867458 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163217003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194425583 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092530202 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125923145 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094491612 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173734579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130529165 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155189128 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182660388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192773704 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154352333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162748379 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135448133 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.088715155 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158063326 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146437179 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193872483 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136967149 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132869594 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185808725 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.146704603 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098526993 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161050515 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284155971 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144821571 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171464738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08486014 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278556092 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12402999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100457428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15651126 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165751743 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137619764 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176580111 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134703034 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139928476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156488145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134172909 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185972901 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198826388 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16772516 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170127311 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143231929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153971348 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159653533 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173341956 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141372229 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112111685 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158354616 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179024841 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185111368 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130332679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157978522 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160548153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1311625 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196971567 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102187237 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194505387 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129274112 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164854987 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136948413 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091887744 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153917372 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185136578 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129630976 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172426477 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154944142 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100063906 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124872701 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147838786 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157376163 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11206667 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125954546 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175193534 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093314107 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160087268 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175710943 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1273741 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14999314 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114605614 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135271997 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139511044 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113429503 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131836105 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16548677 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180780515 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099338801 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172085952 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171572927 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159821003 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155664587 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141267246 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663200647 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096279843 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179371814 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144851598 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183103288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145918164 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162448546 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128030095 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146137927 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163993778 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149114912 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21781559 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162959573 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155438715 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098738923 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143983929 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139568348 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099083116 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149183574 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160536606 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138124104 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105364906 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156261059 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143138891 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140748583 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105969126 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181857984 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146014465 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179583912 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17755851 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133376947 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16209373 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171715523 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098459023 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156561486 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169955705 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138216473 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147259871 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.099818025 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13144494 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175611505 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091737474 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160263904 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159135159 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16011599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161602852 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101332167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157639413 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139154855 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157252125 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097748276 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149843592 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155822417 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128697746 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.095481398 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151931713 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156942012 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155022802 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093288114 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16821088 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177991035 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093736137 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130863185 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284765186 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15708204 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189230181 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149083522 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101140493 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141718755 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15295634 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150531278 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156148245 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097356224 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128954857 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098690969 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179214323 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151705896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152668534 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18131555 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157129305 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196778802 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.102401927 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.263547349 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136065782 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152404582 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.098016638 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12708705 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13946232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10230349 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139800189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186891921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176283679 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14938994 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11157329 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123753965 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123804701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100708288 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157970229 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150865947 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155180617 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111009439 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116454151 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140686369 seconds)
  done (took 74.732077895 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150225826 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128203427 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144220447 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191667059 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162055762 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23806556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200858567 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222152892 seconds)
  done (took 2.524494131 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.1028382 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155487332 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136332899 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121790005 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.087426907 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.327459065 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135387647 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121119274 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.115588597 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157635896 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.088729226 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.53529883 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123161882 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.120205868 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109364249 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087105028 seconds)
  done (took 3.606858751 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.321897945 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532430674 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.108650801 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.241186533 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.22052613 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.148397727 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.757760387 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.153741165 seconds)
  done (took 12.578725931 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12535088 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136234829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.130404847 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158804917 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115822075 seconds)
  done (took 1.765513507 seconds)
done (took 116.010813647 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097835947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121797083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.093059588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123389297 seconds)
  done (took 1.515009036 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.110232104 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078904479 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108584107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075989716 seconds)
  done (took 1.46145987 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428701217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107233123 seconds)
  done (took 1.664570036 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118056913 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129933774 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103206095 seconds)
  done (took 1.44571925 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105336474 seconds)
  done (took 1.203721074 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098867123 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095747511 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137622048 seconds)
  done (took 1.430518719 seconds)
done (took 9.817252055 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115022318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.429993549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.381953392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133980889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690650806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403773025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040405575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125538974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163372779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115817385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104195204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694633732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034454475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367902678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021312059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367151601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671116733 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117556174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093487693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117209171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993108908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115082797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088120479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117069327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668642316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419428754 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087473835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.379833876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086829177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119528798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376270754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115109376 seconds)
  done (took 16.839732291 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099771477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180655173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094759906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116781555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091377002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117086031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097835359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128999738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179070435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086654875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133523148 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086812227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121509989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087899674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135752457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086661904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117952493 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089685051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122547188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089449289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134759421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087160156 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117833918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089198929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087380672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128323485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087838739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128040119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114964081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093152305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120023287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088842234 seconds)
  done (took 4.639830881 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144014377 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184310754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124606756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12124561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166422144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089390438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200390892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153724237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181193163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116456554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104614998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115567943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122220681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116690912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108150427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115691519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09066965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118803702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09459029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117946093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106654663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115209312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088707195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117719463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087105637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129368744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087575276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128900691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087832397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119852392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092833903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116105844 seconds)
  done (took 4.969878462 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101169076 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123900688 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10336356 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13242098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090055073 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122764469 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096003916 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089023998 seconds)
  done (took 1.959467054 seconds)
done (took 29.507638285 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109627821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.09265279 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128721878 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099339464 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125920237 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101298887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114627306 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098698423 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.128000646 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.095449952 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131992637 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.086484773 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088372722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114168564 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.099974102 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120101892 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.101800779 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.125138185 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106813077 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13136004 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.08803031 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.127451753 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097335354 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136032818 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107883335 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136474168 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132330751 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09383265 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087009265 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.1175448 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101164039 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.13806615 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.089628698 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.13226595 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.091072861 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120391922 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088933016 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117820783 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102894277 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.126440032 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.092703229 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126539156 seconds)
  done (took 5.7460182 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.119579067 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.160444988 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.087481619 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.117960748 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.087964965 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155671716 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.151285503 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.087892534 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.088597053 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.141793212 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143562421 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.088492737 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.088218414 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.117079649 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.087728683 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.117798208 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.111449484 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.141686749 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.147358822 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.118243447 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162192406 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.148059937 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.122482011 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.140935079 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.158117406 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.123073668 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.137803424 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.123159684 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.144377427 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.11702399 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.11776879 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149367617 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.087747582 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.116696455 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.127988728 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.152606912 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.144608089 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.127428162 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.147315559 seconds)
  done (took 6.016495572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101832144 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101132651 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138074246 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181261179 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123679794 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.130134163 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097452269 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134836995 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103878339 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117489534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.088755994 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147077077 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106323468 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125208851 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.088155861 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131941872 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.106727884 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119133013 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092649297 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136534056 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.107076746 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130289203 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100242537 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128108108 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087460316 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125906821 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091549886 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132247028 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.093326487 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125202956 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09139943 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121958258 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09188596 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128202864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09134449 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124364012 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110188546 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125332146 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099627922 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149232972 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099666686 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121961797 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109326966 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156282766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087706875 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.123585648 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094222744 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125123492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087151223 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1355393 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097361681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117190085 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103282028 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116678949 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.086929042 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132113533 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.088990258 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12028914 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.096042209 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124223092 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107473039 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121966791 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102510735 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118214504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09407443 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11816778 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088965478 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092898327 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138880905 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119661321 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127240652 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117313342 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093238734 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125018487 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094208525 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12710142 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.087974857 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100921667 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127036539 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092431909 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126979882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091219015 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121468327 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106228084 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131434386 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095052101 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122246383 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094995048 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120435676 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088990194 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131221614 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090082504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121830872 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10299455 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118263725 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091592126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124297529 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.092292352 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116154062 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101280739 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.130310959 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.087576222 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12680288 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088685108 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120612908 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097163956 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.091829469 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117920629 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092157448 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124130526 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088220656 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120938414 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091962906 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120402353 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101321489 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125275991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091277581 seconds)
  done (took 14.17127338 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240666594 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214892411 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190121811 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30203668 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.143639765 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115355791 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21237528 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163460209 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089345042 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157892113 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174984979 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185707014 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.173622145 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185587258 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171200607 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120146504 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107068695 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.170897625 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215788979 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297618765 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108780624 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133503533 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160408361 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159227433 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107611143 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134945218 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110915538 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139020462 seconds)
  done (took 5.818489769 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110680697 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155125615 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095627369 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143227645 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146493028 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089093107 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124346033 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089615257 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10201554 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133100787 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.120143785 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.095948526 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.123836513 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.098162265 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118503338 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098508727 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128544205 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097558761 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121299523 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092464047 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132999673 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10684606 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12426429 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091071668 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136098945 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091454667 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121038666 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140543129 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097216374 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144475149 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085990105 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128295865 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103648732 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118542509 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091631005 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.091108289 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122050901 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090815123 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120784589 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086613291 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119111819 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079722567 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120693218 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104539883 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126368522 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087078837 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124005997 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093377463 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126059182 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08567763 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090347837 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121940082 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.092915351 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130775684 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09218591 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12565481 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09264678 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122113296 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097925367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.121706542 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086503825 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090256992 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127705556 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123188025 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098041897 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125660309 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090666463 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091043198 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124103737 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.095254839 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122474881 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097768907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116757924 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089584314 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130063895 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097891991 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.122874483 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.090692715 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122635514 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088081379 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077803849 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118474658 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076490686 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123146394 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087923581 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120408053 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09151704 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094009942 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136837625 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128207854 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096371253 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118346471 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091452122 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122483978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086321054 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093382273 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137104305 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138882745 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088295146 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116210566 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104933344 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.089812159 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117048971 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080413928 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129970475 seconds)
  done (took 12.598314367 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135712286 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170049821 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120048277 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108190231 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153499073 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160440273 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.097445646 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096027599 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119676312 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107092002 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123255158 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097899704 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123001302 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102997123 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160234957 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129178757 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090192625 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103228532 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126105744 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172721763 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109151265 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.158177939 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160060021 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.091841673 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124814269 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155245952 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.133212294 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133333392 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.101573011 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.161835571 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.1325812 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.133766632 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162474833 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125200005 seconds)
  done (took 5.517720265 seconds)
done (took 50.974945205 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.204749481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428434991 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.198758005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.200147868 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.245401902 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.237299545 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201075715 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.392568839 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.015487337 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.18761182 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.198195277 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.19907359 seconds)
done (took 27.839014069 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.263257502 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.362112463 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502109943 seconds)
  done (took 3.993009166 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.200917726 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.200640902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445652735 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.214079848 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.202697461 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.218040982 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.202059459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.219291618 seconds)
  done (took 15.829355976 seconds)
done (took 25.414517645 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.27486028 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.40793261 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.468711948 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.214868024 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.19820815 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.202615922 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.204982874 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.262015203 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.201902193 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.200227536 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.214337485 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.479649153 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.216895219 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.606741308 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.202138704 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.218585159 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.215992563 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.439629463 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.203350183 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.215257055 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.204385943 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.210640689 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.216709837 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.225738477 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.213103256 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.215006448 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.236021113 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.202034433 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.417376723 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.206367453 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.247344597 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.201706774 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.245554808 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.213496371 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309427223 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.229717661 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.391808171 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.21565234 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.195037033 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.212061775 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.395275304 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627416205 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.20358601 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.201619798 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.205480914 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.275238361 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.192451986 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.926004032 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.209542947 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.20367407 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.207504026 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.594465768 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.206673605 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.217133641 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.212800162 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.450108476 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.205917934 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.253609137 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.244530752 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.201811005 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.200233534 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.201616316 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.233956363 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.205798398 seconds)
  done (took 143.662155183 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.206389148 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.202450822 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.202588515 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.263899853 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.20611122 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.202932787 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.206161408 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.206153302 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.204005931 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.205559356 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.206663068 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.202805778 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.207753281 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184156846 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.208383455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.228399503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.206585034 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.208665496 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222222302 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.208025467 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.21251791 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.207639367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.221973922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.204400693 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.205472929 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.283739917 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256819684 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214559271 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.206964711 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.207822519 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.252205836 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.223525405 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836821354 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.062576108 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.225743626 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.23385109 seconds)
  done (took 80.379667456 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207523239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208764262 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20678836 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.241692316 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210319072 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800036117 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799356329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.945876598 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.638281942 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625979435 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.532806107 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208811667 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305106108 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220335402 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206799512 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22542906 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236560784 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210096352 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208715187 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800783327 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222183904 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.276796484 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382591808 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.219589162 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241659788 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609307103 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204186666 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242462108 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.547267084 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.256098508 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206698467 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627308601 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.554922342 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322254321 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20763396 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243490292 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209974438 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.4970876 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210596377 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212290044 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.211433883 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214124639 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922941619 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209458949 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.803079266 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210765356 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.216010962 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212268597 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21243652 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.47306743 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.968894813 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.228172173 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212063928 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215042983 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211449391 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211353949 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244897919 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.414530419 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323751449 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210848457 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215304682 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245672143 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.212374102 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.442276041 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227585598 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.089748301 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270772136 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.432220602 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803171613 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2143279 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31350278 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33122934 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210964394 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213394568 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212933378 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214021005 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.323835651 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208481793 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639774901 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208146742 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390518591 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223623498 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.646725435 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213260379 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.310827836 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208571399 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630127719 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214990308 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.213722587 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023607031 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313188982 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.704226983 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212355387 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211402838 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212052868 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644332562 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804996783 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479902738 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21374514 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.653834362 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215174058 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.65327791 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779904013 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.937442749 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216636625 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328718046 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.393743024 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225481331 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2118792 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.643051451 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214840441 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275632839 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210478003 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613479181 seconds)
  done (took 369.075913493 seconds)
done (took 594.246978978 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885300968 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.836788196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.972555732 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.863027408 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.834560295 seconds)
  done (took 10.530467915 seconds)
done (took 11.669068409 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411323651 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410575301 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277878639 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415015806 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246997674 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429041715 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394212515 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236055527 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322323478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300167943 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32102215 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275498754 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25099762 seconds)
  done (took 18.42910157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565085098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.212163368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293374261 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560949179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25247667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.562636418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425280745 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.231075932 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416649016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226897634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228373648 seconds)
  done (took 18.118879875 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55479214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.214364294 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298238348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558344027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254247401 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544228132 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428768988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.230583935 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4179314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225999864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230614234 seconds)
  done (took 18.099586896 seconds)
done (took 55.790005342 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259588707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384012363 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243153223 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230942481 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.226142006 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227488117 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231587816 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228277421 seconds)
  done (took 11.174033934 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22575195 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225925663 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227262243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224610979 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228185171 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.225892857 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225598676 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.224168911 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.222294689 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224047985 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222276453 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.226396921 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225311426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.226889091 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22500727 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224062262 seconds)
  done (took 20.746569476 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.226258487 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22429213 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225595606 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.223448362 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226204497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.225841409 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227419764 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.224885615 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.224608814 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.223594312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223264163 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.22309445 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.224473691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.2260634 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.225091602 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226000202 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221970431 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225774513 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.228968824 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225627603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226565005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.225725046 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.226534009 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225533627 seconds)
  done (took 30.55228923 seconds)
done (took 63.613748184 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.229936326 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.23340047 seconds)
  done (took 5.607008191 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288129808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.288203448 seconds)
  done (took 3.722982958 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230062742 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227050698 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228526126 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229946555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230456015 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.228220057 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230928997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230360893 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230228486 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230238988 seconds)
  done (took 13.441852425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228237656 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227775154 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225567549 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.229344957 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229737504 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227258729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230678754 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.230782681 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228832174 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225548284 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228932319 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.226065996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.229511846 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.226807815 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23078352 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227336841 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.227406119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.227342453 seconds)
  done (took 23.254719396 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242840057 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.251118984 seconds)
  done (took 3.641527588 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.358097575 seconds)
    (2/7) benchmarking "second"...
    done (took 1.269398586 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336077146 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323927426 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.269019444 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.248541696 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.269077836 seconds)
  done (took 10.220416766 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232510178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42088469 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536681037 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795368914 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232845307 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.235344766 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.137779283 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.234633199 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23822362 seconds)
  done (took 14.210291639 seconds)
done (took 75.244457906 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.222656768 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.242568473 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.240323704 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.237681537 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.566697192 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.25136649 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.224842054 seconds)
done (took 16.134831838 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.214754747 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.227243707 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.212879231 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.229735066 seconds)
  done (took 10.032337665 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223952387 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541849124 seconds)
  done (took 4.91617768 seconds)
done (took 16.099073078 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231746788 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.233047083 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.231668724 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231240079 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231573653 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.229198287 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231060232 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.229659471 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233908044 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233455542 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230536979 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.233063248 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.233155721 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230211324 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230962137 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231754494 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233149628 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.230700757 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230172763 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231141464 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231361877 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232585134 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.230902337 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233858562 seconds)
  done (took 30.707563166 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232615688 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232122059 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234466741 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.232717375 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232431844 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.233030716 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233750893 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.231901792 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.234590791 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2330195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232295029 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231885968 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.234750359 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.23308401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233402145 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.235063823 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236869574 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236046306 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237002507 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.2337721 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233187398 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234386567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23185577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232920148 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.231951458 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233528197 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234385055 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.233025807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234399423 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233041545 seconds)
  done (took 38.158089738 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.239638126 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.243297483 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.234213799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.235314161 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.234862476 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236363008 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236305645 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.235029807 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233401878 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23405009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.235587168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.234015506 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237364994 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235714058 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237380975 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237410596 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239896118 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.237103076 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.236300779 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.236836319 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.236265089 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.236479324 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.236030907 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234244158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237174304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237437336 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.237108811 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234845991 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.237206567 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.237360849 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23622886 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.237632451 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23653477 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.235035538 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.236334071 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.236949519 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.241716801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246615579 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.236910894 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23608459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.237934789 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.237701198 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.237590603 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240017053 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239121609 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238536943 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.237416768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.237636203 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.239010236 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.240137265 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.237966703 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239251218 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239255875 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.238971602 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.238995254 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.239360594 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.238948001 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.237194179 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237398225 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240514042 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.239741012 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.23943181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.239177956 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.239401897 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.238964888 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237585371 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240763177 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.239910868 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.238383654 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.240647724 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.239730178 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.239201535 seconds)
  done (took 90.274877405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240008549 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237505956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237695709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237780149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238068136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238627285 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238324632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240856815 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235240979 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239740151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240619449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238401504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237037413 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240216155 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240052334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236704215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240714032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237953108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239034634 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240086399 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24034682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.237371195 seconds)
  done (took 28.408884493 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241228612 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244330522 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.238413837 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24294504 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242042734 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242052886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.242284195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244312091 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241449422 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240351105 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238679645 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241665408 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241003191 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238638043 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23961786 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240735099 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240552555 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242415246 seconds)
  done (took 23.50097202 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238549727 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238780062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.240805363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240029496 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240240889 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242887784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240924126 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241953385 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243507307 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240922958 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.243085163 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24395599 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.243053453 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241600583 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242682029 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240795426 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.243654735 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240441752 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24553711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241943491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242075669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24418285 seconds)
  done (took 28.479724459 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24218457 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243109757 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239763559 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241700928 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239691088 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244465386 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.243530178 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.241874088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246056535 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.243553287 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241296839 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242853531 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24146075 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.241959729 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240855938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23984938 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244108061 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.241438198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244067427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242304886 seconds)
  done (took 26.006527463 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243929102 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245863144 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245100355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246356007 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245353436 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247237098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247006848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248047325 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247715453 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247866929 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248474816 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245220945 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246274539 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247154386 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24782459 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24930923 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247555447 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246935558 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24690802 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249392958 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247658948 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248823016 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246769898 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248236472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246696222 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245855218 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245045409 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249250798 seconds)
  done (took 36.078958339 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247857251 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246946533 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.243687633 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244277375 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246713697 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246209253 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.243936776 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.244583231 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246950662 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246372584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.248120399 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24710698 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248065601 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24696764 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248132593 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.247223599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248690901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.246920386 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244889452 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245973378 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.248366832 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247969028 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248500831 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245733493 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24465375 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247609564 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244815403 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245328325 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247237487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247245969 seconds)
  done (took 38.561394105 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.287646294 seconds)
    (2/2) benchmarking "in"...
    done (took 1.288152457 seconds)
  done (took 3.740090887 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245888571 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24944829 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250418169 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246865621 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247296894 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248770275 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247505367 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248814711 seconds)
  done (took 11.148842997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247262575 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.250212083 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.251341103 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.249353291 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250043476 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248358198 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256270237 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.269254561 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249328582 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252382453 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25746773 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.259309802 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.25323886 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250039337 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252239797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252663773 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251716229 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252468493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251734698 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251238879 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253290361 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251351759 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252463191 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249492933 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.253396972 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263874708 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.254308537 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.251633044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251540711 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255427979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.251430806 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.250090858 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253506536 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253725554 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.251707167 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253573827 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260185319 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275222167 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259372187 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25499356 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253229416 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251048624 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256088354 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253098528 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254441925 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255063087 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252061045 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.249783458 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250816948 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260570296 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261990166 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253131698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251114589 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257769857 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255136816 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260070605 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275025176 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.257998305 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265400075 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.266615606 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.266443324 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.2806987 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25847882 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.255446403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265374874 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280093854 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26197717 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272602286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25311075 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.2545419 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260295312 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26720941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278554058 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.253805938 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25593888 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.254258235 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254183026 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255738581 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261138548 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277217847 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.257330283 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256994064 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265445625 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280261758 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256406178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.256052309 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.257765221 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.255146532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.256352767 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266435973 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277483495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256285058 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255068329 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256955954 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25676428 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.255968053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.254633277 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255542412 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.253491748 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.25577439 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255348535 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262052163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266814836 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257132423 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257894034 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263730881 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.257948752 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256236408 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262292368 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258137499 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259325612 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259715472 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264522263 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25575495 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261607723 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26900216 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25943611 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.258296046 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258413148 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.258194521 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26942532 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286834777 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25961686 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.258963361 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.264646788 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272031982 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259525507 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.259510664 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258144519 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256368781 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256545232 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.258544177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25949877 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259635323 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261066419 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258383307 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257002016 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260583681 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259504104 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259347888 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260659715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260211824 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260657971 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.26072414 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261650667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262896534 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26654422 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.257553647 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258825931 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.260842627 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25884099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25969967 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260994712 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.260154732 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.260512897 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262444028 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.259775702 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261383745 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26300454 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260678981 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262060233 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.261078525 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26553758 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262260903 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265238753 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262137335 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256825516 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.260836446 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.260233383 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.259471702 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261704364 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.259236732 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.26580916 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27080706 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26033463 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263768181 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264519498 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261154994 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262597911 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263632721 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.263969687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272452277 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.261438894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268894228 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.262396345 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263091691 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263083964 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262681012 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.261056108 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266012012 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267580311 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271698074 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276400683 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288492316 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.264905242 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267395812 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264949318 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267690686 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267348231 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265817174 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263651408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263507446 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261943905 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263362795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.266470726 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.264747685 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262436675 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.264801921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264914223 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264131901 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264024124 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.263299967 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266355829 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260515735 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263861942 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265531097 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.262864539 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26241255 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.26304188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264167573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.263687698 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.263197167 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268700559 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262677019 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265075277 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267111373 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265593498 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264962314 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264524746 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268350639 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.264208177 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269973749 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.282002767 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265831745 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27087112 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.283839226 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263370126 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267358492 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265514562 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263928623 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268634703 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275908874 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.265233175 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.265635481 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267125058 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26607812 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265612249 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271388339 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.264430659 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.264652081 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267549003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268021623 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265120383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266935955 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.266793652 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267269068 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268872818 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267512838 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26665264 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268513514 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267703588 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268738167 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267755549 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271287729 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278050386 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272169932 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26729377 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269546221 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270891077 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273490282 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266796376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268816284 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268839202 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280324083 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2932855 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274329983 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28678693 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27062875 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274329105 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.287049481 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272854655 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267876315 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26939813 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267991333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26729085 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267387297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271542174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269150817 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270501916 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272149219 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.274402632 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271702695 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270084001 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.27221924 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270768438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269331968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269708413 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270558606 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271888835 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275582642 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269447051 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269404404 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277686527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290002495 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270949692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.269718043 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269353507 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270963843 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271917618 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272026788 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275175677 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282336998 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273309519 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.280667762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.273154099 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281278975 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.273026357 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.275805929 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.283602788 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268582768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.269945385 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269983398 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.272401936 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278498546 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293282775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274530132 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.279347491 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275254769 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274602134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272275947 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.274329482 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273532913 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273861307 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280027342 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297970366 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.278593441 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274412707 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271470199 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274172485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27421228 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270755766 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274935402 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273362307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274255483 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.271085476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271926973 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273502413 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273586336 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273599124 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270699026 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273287158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280303896 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295745387 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280498182 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274051785 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.279874699 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273633551 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280267737 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294435644 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.274929526 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.273090416 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275508286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.275669055 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.27488201 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274676867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274604036 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276059174 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278292299 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.276030108 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.276564002 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.273836295 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276379149 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274835567 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286339175 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300435263 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.274875738 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281507357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27258102 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276275177 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.279642041 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.276686628 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.273753547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280956193 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287801496 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287175304 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.276611522 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276367202 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27661925 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277419394 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276326184 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27524593 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276597457 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27613242 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.276767142 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276020998 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279152759 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.275651424 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277165825 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277033893 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.2773481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.286731111 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27806108 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.277779862 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276640211 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.278088875 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.276745029 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.276826602 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.28035652 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277235187 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276677134 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27925516 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286705252 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287590896 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27982244 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278694014 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278107454 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.2776449 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.277609531 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279548247 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27972447 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280162927 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27950709 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279758921 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278324698 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.277077326 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276918096 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279105329 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278802759 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283051511 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287825264 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280858123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276261304 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277651668 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279667145 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278296939 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278109014 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.284520829 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282970946 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292041459 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289947011 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.285013748 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.279932821 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284172428 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.29192594 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280784794 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27957901 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28183056 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.281790982 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280481569 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283217903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280645621 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286527773 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.280798772 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.277711352 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288917763 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304765081 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281637528 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.282448303 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286650942 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280631105 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278139208 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.281967092 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282155001 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287774685 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30064086 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282938324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284501395 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281293448 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280895099 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286337904 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281841567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.279811076 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.280039236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278860058 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280619775 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283253808 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279229671 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281144864 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283970879 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.283926618 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288001641 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.280569216 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281613677 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282995134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282598253 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284445616 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284172004 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280849272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.28039557 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.281693442 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282778926 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28283844 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.284859974 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.2806505 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282368505 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.2840094 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281931465 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285795203 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296785652 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293483028 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.280588986 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.282169474 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283323346 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285130062 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282065152 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283599619 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283117679 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283256842 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.282923591 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286436544 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284332596 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288083356 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300139127 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308284971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283745817 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284536442 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286392985 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28384932 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282159749 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285128131 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285908605 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288224793 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294222344 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28487312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290313024 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304952671 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286959266 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.289743705 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290490613 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293912655 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287357115 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286831355 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285802581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288790411 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303751459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288031543 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296287247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318680628 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.307708794 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290373665 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288035138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286790586 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.28870543 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.287801273 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.289713735 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287825174 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2872021 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288043856 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289054819 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293204706 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287607421 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290962376 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28697361 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.287097019 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288023401 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.286321513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.289912774 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288977297 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289037121 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287461775 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289801644 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288917022 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301257772 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.31311908 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.286865684 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289278254 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286665802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.291122078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290966772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302099924 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.29895969 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2896555 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289997148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.286655862 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287541899 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288165248 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.28744717 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.28884448 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288586568 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288117694 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.300589831 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314247632 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293572208 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288611806 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288586676 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.288502862 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289083838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292130048 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290308714 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290990519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291922745 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294496498 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.288733205 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289850136 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292506701 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298312207 seconds)
  done (took 759.836899244 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28956496 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290258555 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291309157 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288765106 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290258759 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291130808 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290188747 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290966066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290972428 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289454247 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288519876 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289542418 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2894646 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292802229 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291302303 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290107185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290253297 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290941042 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29088079 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291478613 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291813296 seconds)
  done (took 28.30137305 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294046268 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289746641 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289621364 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292390777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289162456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.290238663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288777829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292480732 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29139065 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287217662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291898012 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292276693 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.287573143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289493402 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290202932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292743038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291088697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288438615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.29392542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28934374 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292263289 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.288257657 seconds)
  done (took 29.597184276 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292888681 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293665455 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291031801 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.289268897 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.293945086 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.288352239 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293110039 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.291624297 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.291881745 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.292479892 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.291841717 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.293438203 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.301222994 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.299572851 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.295286097 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.293537645 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293005156 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.29257683 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.295749294 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.29117365 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298124093 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.290015825 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.290695336 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.292124029 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295913654 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295409561 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.29602368 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2945733 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295268467 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299430219 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.295317235 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29338006 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296689822 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.294053572 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.296766316 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300669114 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296365956 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.293849112 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.294218613 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30600388 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.320427264 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.294734252 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301032352 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.3141346 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.296140418 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296183965 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305820626 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.29367039 seconds)
  done (took 63.406265301 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.297113176 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295803151 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29325164 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295672604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.294855695 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.295375396 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.294130082 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294885008 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295655925 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294369598 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296087529 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294748215 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294051968 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296553065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.297731089 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294377369 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295119029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294689565 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.294600937 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2939903 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.29385647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.295266067 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296935684 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.296433296 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296406936 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295405626 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294861682 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.295876292 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.294868818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.294095598 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297468107 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296613083 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.296510218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.294832403 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296154362 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.297399191 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.296878792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297947019 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297621178 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296482459 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.296028732 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296689426 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.29714534 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298145595 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297413554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.295675727 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296633791 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.293054622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.295945503 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298067206 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299346977 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297690462 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.296830463 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.294613649 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298596266 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300736415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.297062268 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.295851996 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299916724 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.296345071 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.297661859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297365326 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29729356 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.298450646 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.298924294 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.296737783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297667737 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299574641 seconds)
  done (took 89.357059035 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300640862 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301361708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300350387 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301845296 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302174352 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.300505806 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302930487 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302146323 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301081231 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302736224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302519631 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301379893 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.302333629 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301433397 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301980908 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303347698 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302401605 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301658142 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303766485 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301093694 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302974846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302397987 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300899308 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301608407 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301459058 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302167771 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301962474 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301699039 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303155024 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302781428 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303459904 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302930147 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.3051684 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300924305 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.302998462 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303905996 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303958033 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304468864 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302279859 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304053834 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304087111 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304008461 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304379757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30300875 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302174315 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303919035 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303236858 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304378871 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306278295 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305793786 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307765713 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311472591 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307385916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306482107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304660297 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.303256206 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305403597 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304781597 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303893529 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304360394 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304624735 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.304089483 seconds)
  done (took 82.014224931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303875652 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303346177 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.300861565 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.300287944 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301815449 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299464818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302156917 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.303930935 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304321468 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.302773005 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304329895 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300390281 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303952017 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305276757 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302555118 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30415227 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305545472 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303744697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305970609 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302140971 seconds)
  done (took 27.275097388 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.301248234 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304504796 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.301848649 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301787259 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306793773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303412468 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304707873 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304612349 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303497636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307509745 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305785674 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307046033 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303938383 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303055532 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306399419 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305498805 seconds)
  done (took 22.086298115 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304411658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306803148 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.306661544 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308482639 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304773876 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.305150846 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305751886 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.30478986 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.30401337 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.306765598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.305548373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.30573594 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307336198 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.306130583 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304050745 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.305670966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.305105452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303093755 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.306542245 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.30864923 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305360327 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304468738 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.305090761 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306576842 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305510559 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.307204927 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30518149 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305199906 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305255884 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.306866836 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304810362 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.30560908 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306684074 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306387601 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307794494 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.303943539 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308688548 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308364902 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309172196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307049484 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307755709 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.304236656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309467834 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309000393 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.305632212 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.308277139 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307860452 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308338923 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305542186 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.306058013 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310543631 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.310310393 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309097987 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.308377916 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.308780717 seconds)
  done (took 73.077808011 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310770418 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308616496 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307014504 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310920037 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310213009 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304455405 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309511642 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310491549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308390389 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310319747 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308368313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311150476 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311026539 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311188897 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308457182 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311866631 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307484373 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308563571 seconds)
  done (took 24.787598494 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309316824 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307306495 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.310586537 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310100671 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.308160112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312915695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309398034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.312915602 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312788062 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311343156 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309801267 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311342843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312638243 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312874666 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309939376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311222645 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314778817 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310772981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311000447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311093287 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313785047 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314289073 seconds)
  done (took 30.069830285 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.311794595 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.310731522 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.311685016 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.327926698 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.33160387 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.311496183 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.310272656 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.310592734 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.334632843 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.36573288 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.362758544 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.332209552 seconds)
  done (took 17.143027465 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310496792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313589008 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310292906 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313288488 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312378423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309379249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310728613 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311350518 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314004048 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313024059 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311543189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315045488 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313257555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31146387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314346199 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316574207 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313272692 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313807083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312339695 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312113934 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309091095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312423875 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307061049 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312339625 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309905241 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312665775 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315618079 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312329377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316111795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316329415 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316088061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312038575 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314002466 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312510289 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314845023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31372273 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311516706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314775822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313889611 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312977565 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315010252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3138635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31280476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312349042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31513638 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310928581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31459535 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312764446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313319836 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31327664 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315532703 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319987173 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313615938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316946503 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313169439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314292985 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310713044 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31094945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316615306 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311795519 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312247767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314227551 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311459972 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314201005 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314313121 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312482882 seconds)
  done (took 87.892478241 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314387764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313538419 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311199493 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315957569 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315409769 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314286555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316128265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315560954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313553658 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314680943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316797531 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313458107 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316900825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317065789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30667892 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311165711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313148214 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312865022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313492089 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31626232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311898246 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313968804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313747058 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315295968 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315265181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318275138 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314156467 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316133034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314344982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315570613 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315523437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314813177 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315111261 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31500571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314778322 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315272887 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316630446 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308639133 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312571696 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315601568 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308630788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313695837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312229197 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308544149 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315686863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313750175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317312264 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318824053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311835754 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309586718 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308687849 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30994203 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305975336 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308683003 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309177967 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308331455 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310453931 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308877672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308862481 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312443967 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308916353 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309919445 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311556737 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308209875 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308081443 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310738516 seconds)
  done (took 87.882046798 seconds)
done (took 1778.940555571 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.481987658 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.43083126 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309911526 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.315368119 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308771279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.332069604 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.319037636 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.308172061 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30952653 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.309963057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308144931 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.530300241 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.30412255 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.308771023 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310024529 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40553792 seconds)
  done (took 26.818745837 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337578179 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.314425346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.432752225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327209919 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337070003 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.510238888 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367719339 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.314153229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494279954 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354975473 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.307588268 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336185152 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311027807 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.306788703 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.333403852 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50958712 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567073217 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308329489 seconds)
  done (took 28.99231601 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.791664092 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.313030788 seconds)
  done (took 5.328860694 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332731442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314071459 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31546321 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.313076165 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.31045597 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.303466007 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30823199 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.306421908 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.311898471 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444195331 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.313842263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.324351002 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332363915 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311330798 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.310659513 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.349940034 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461012049 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312075256 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310073297 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318058795 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.311264164 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.399081787 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35533032 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307717368 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444201093 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.312530921 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310267764 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319513652 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44888656 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309293816 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312480602 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.314707047 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316678121 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240996813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.78741395 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.306066207 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340997877 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322299585 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.312859531 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.453554018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312194752 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320230636 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.307453553 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.769376292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465944356 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434165485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.322111533 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314629719 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315965881 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379276736 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31552586 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.315799587 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357836453 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.119735836 seconds)
  done (took 84.105454406 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.350487748 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.307437608 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486912338 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334041792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308408314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307337247 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.308712824 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.618099124 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31227644 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308147255 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598389129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879506841 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331437033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.345188178 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.166620135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36200117 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325441349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.308376398 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323762549 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.315986219 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871685028 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31079398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.309647543 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.468653753 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.349336938 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82763067 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.322900884 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324921862 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310200559 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.308128959 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850269476 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329887937 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.36484922 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.312091417 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58150873 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704817157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671224192 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.312069464 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.32978874 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309633115 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.329445708 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829436261 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.706578742 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308559235 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.32716645 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.834660086 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.310990283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.315312748 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.316152564 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559103088 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309480847 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.312527392 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.339800137 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.309275275 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.309530002 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.379348396 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.375893839 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827302765 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310628292 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.310539227 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347563227 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.30980373 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31579221 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311199577 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312303193 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.685574561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.448053014 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312701594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68513933 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827590474 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326380785 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.914672212 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.325887919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.324143324 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.322246136 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316480109 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.31007753 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82393771 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.335406734 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309667478 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.669399455 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309352634 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599746009 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326712648 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311067296 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875378842 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.319728345 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.310151576 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310319996 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.325916003 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325254439 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311966176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.600889636 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.347390642 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310985594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.309566225 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.329547188 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312761145 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314014612 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319689656 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898336452 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.334846416 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312717162 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312122847 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311080962 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.311390989 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.310999051 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.317987218 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.575120865 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.310339061 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.315070848 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313323291 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309857212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330066686 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449608878 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.308328966 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629458132 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.307047074 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305941694 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.308347924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308269942 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350744194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308418088 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.317022596 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254486439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.616413899 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326370238 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.30438111 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30749334 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314754923 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309300288 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306745567 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.331200661 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.315168111 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075354391 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358647036 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.334771132 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309296779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318286851 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308845447 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319163218 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310559592 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611315472 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579394295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.451475553 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.312745914 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.309438483 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.043546008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328969216 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492974135 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331323324 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.30950715 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561923762 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497222872 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.313443528 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.308736769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.312916579 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567245689 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.311983413 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642786498 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847182509 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.329143701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316431087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066092497 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050588225 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.31404087 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.313311734 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.591053626 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.32805317 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313204936 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.310674156 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31322265 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.327535612 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318086719 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31791084 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.312585841 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.312740689 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.444601438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50420069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.329614212 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316792493 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820036355 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316402625 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315504216 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.31666933 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318111326 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310229213 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366344049 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.313964348 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.314807795 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.314765629 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.320399388 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891073304 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313612174 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.310756882 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500772914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00657754 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.330127421 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.314188107 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330980563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.192006081 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839538409 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334816362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633856706 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.326974618 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.352574126 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314261453 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.410662464 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851638431 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322233882 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317810157 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961144252 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331824359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.83721062 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.312205574 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.316347045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921206625 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336505934 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.316217975 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.316453867 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.3169244 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607392895 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.316931027 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.334144932 seconds)
  done (took 493.618689979 seconds)
done (took 640.086398507 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317824031 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.31623092 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.308987467 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.321781676 seconds)
  done (took 10.498973555 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327770783 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.322414483 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322558689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322999572 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32616603 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323437519 seconds)
  done (took 9.179016837 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318341214 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.317564264 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324379244 seconds)
  done (took 8.194374515 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534507247 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.333937413 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.661007726 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.338983003 seconds)
  done (took 9.104567629 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.324843808 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323469028 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324094035 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324243497 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.327706461 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326179644 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326747132 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.326472619 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.328617757 seconds)
  done (took 13.165961505 seconds)
done (took 51.37788991 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.65503672 seconds)
    (2/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.41565421 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.303422831 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.594381049 seconds)
    (5/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.856101676 seconds)
    (6/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359208891 seconds)
    (7/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454811628 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345076968 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.342742588 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.323401302 seconds)
    (11/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.107405533 seconds)
    (12/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.312343913 seconds)
    (13/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.40346714 seconds)
    (14/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.304644267 seconds)
    (15/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.329619493 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.326180122 seconds)
    (17/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340529769 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.693917795 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.321882402 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389366601 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.313334003 seconds)
    (22/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.311326254 seconds)
    (23/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.333896532 seconds)
    (24/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.408520826 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 2.318582071 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.304803435 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.351526052 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206690273 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.308462987 seconds)
    (30/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.326059227 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.452866805 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.315537797 seconds)
    (33/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.500602634 seconds)
    (34/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.326602953 seconds)
    (35/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.320534386 seconds)
    (36/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.308331104 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.322377813 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.319186657 seconds)
    (39/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.469196046 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.306883302 seconds)
    (41/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.316350327 seconds)
    (42/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383656462 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.309153952 seconds)
    (44/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.444272673 seconds)
    (45/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.311704024 seconds)
    (46/286) benchmarking ("sort", Float64, false)...
    done (took 2.320567277 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.174464762 seconds)
    (48/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.308821385 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.432789533 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.380842963 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.5766427 seconds)
    (52/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.310358137 seconds)
    (53/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.317462523 seconds)
    (54/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.308622841 seconds)
    (55/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.332923754 seconds)
    (56/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.318491559 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.446538381 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379064053 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.404665641 seconds)
    (60/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.324451249 seconds)
    (61/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.373933277 seconds)
    (62/286) benchmarking ("sort", BigInt, false)...
    done (took 2.321114388 seconds)
    (63/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.334561255 seconds)
    (64/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.308742834 seconds)
    (65/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.306976733 seconds)
    (66/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.381037093 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.323359573 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.310812322 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.32016198 seconds)
    (70/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346965565 seconds)
    (71/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.948458583 seconds)
    (72/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.311604918 seconds)
    (73/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.30847757 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.359042742 seconds)
    (75/286) benchmarking ("sort", Float32, true)...
    done (took 2.323923451 seconds)
    (76/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.321730418 seconds)
    (77/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.329156537 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.322333823 seconds)
    (79/286) benchmarking ("sort", Float32, false)...
    done (took 2.321134305 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.123806255 seconds)
    (81/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.422027162 seconds)
    (82/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.081443207 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.180042163 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.325646302 seconds)
    (85/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.309292637 seconds)
    (86/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.32132238 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 2.323329468 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.8954999 seconds)
    (89/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.357468118 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.337400771 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.312174974 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.167190909 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.312301954 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.32654312 seconds)
    (95/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.326237263 seconds)
    (96/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.863352493 seconds)
    (97/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105415257 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.310492381 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.727619662 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.540785021 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.308928797 seconds)
    (102/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335171864 seconds)
    (103/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.372942267 seconds)
    (104/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.313799084 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.253590896 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.207044341 seconds)
    (107/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.323944244 seconds)
    (108/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.31961083 seconds)
    (109/286) benchmarking ("sort", Int8, false)...
    done (took 2.324688923 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.257631583 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.313469994 seconds)
    (112/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.459371511 seconds)
    (113/286) benchmarking ("sort", Float64, true)...
    done (took 2.324087424 seconds)
    (114/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.325482037 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.965178323 seconds)
    (116/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.310914952 seconds)
    (117/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.44859812 seconds)
    (118/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351878425 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.53953258 seconds)
    (120/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.347044928 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.256481228 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.843172015 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.346367091 seconds)
    (124/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.313868785 seconds)
    (125/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.331191027 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.580589037 seconds)
    (127/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.32738791 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.333244085 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.954945231 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.312166843 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.109854077 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.320402819 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.596106072 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.200853414 seconds)
    (135/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.451362031 seconds)
    (136/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.336159378 seconds)
    (137/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.302374133 seconds)
    (138/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353835554 seconds)
    (139/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434993176 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.328498388 seconds)
    (141/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.317401952 seconds)
    (142/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328760253 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.437291297 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193284685 seconds)
    (145/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.314427778 seconds)
    (146/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.377965731 seconds)
    (147/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.481482158 seconds)
    (148/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.127146866 seconds)
    (149/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.314275182 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133110128 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.233758143 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380858718 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.355486656 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.326755601 seconds)
    (155/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.335643363 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.369084116 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389508822 seconds)
    (158/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.683753225 seconds)
    (159/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.355041726 seconds)
    (160/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.409555757 seconds)
    (161/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.315849789 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.559454642 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.329457149 seconds)
    (164/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.862741946 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.970093322 seconds)
    (166/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.333012121 seconds)
    (167/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.343291855 seconds)
    (168/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.859384097 seconds)
    (169/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.706051916 seconds)
    (170/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.325749391 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.328092185 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.413557139 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.192457764 seconds)
    (174/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.317625666 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.966626438 seconds)
    (176/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.328847675 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.356742311 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.341220554 seconds)
    (179/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338872716 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.342515489 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.316441748 seconds)
    (182/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.31939139 seconds)
    (183/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.335739021 seconds)
    (184/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.329137825 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.489777607 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.661918115 seconds)
    (187/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.881439391 seconds)
    (188/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.317732473 seconds)
    (189/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.367048245 seconds)
    (190/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.452974819 seconds)
    (191/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.446646961 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.317692503 seconds)
    (193/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.329271331 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 2.329685938 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.389326613 seconds)
    (196/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.234806389 seconds)
    (197/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.337709376 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.34911203 seconds)
    (199/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.326579494 seconds)
    (200/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35823252 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31899801 seconds)
    (202/286) benchmarking ("sort", Int8, true)...
    done (took 2.350487253 seconds)
    (203/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.33110514 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.312028152 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.541193172 seconds)
    (206/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.089797242 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.727442778 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370179902 seconds)
    (209/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.095914434 seconds)
    (210/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.417394533 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.369394142 seconds)
    (212/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.598525407 seconds)
    (213/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.319169001 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.399300915 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.32336838 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.374621333 seconds)
    (217/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339756891 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.360177032 seconds)
    (219/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.357650809 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.726867588 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413405108 seconds)
    (222/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396061487 seconds)
    (223/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.678202145 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.318864589 seconds)
    (225/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.483616337 seconds)
    (226/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.324359817 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.321432208 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.350270592 seconds)
    (229/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.336563857 seconds)
    (230/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.333043016 seconds)
    (231/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.208178178 seconds)
    (232/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.333669778 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.799965026 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35763625 seconds)
    (235/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.696857744 seconds)
    (236/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.486005614 seconds)
    (237/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349553379 seconds)
    (238/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.418552633 seconds)
    (239/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.319977786 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.550688105 seconds)
    (241/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.43694079 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.668802313 seconds)
    (243/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.69926686 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.319764296 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.361062169 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.264273389 seconds)
    (247/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.602490407 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725691703 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.620060818 seconds)
    (250/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.354899284 seconds)
    (251/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363381844 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.43527566 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.334609905 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.346704266 seconds)
    (255/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.320717448 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.374028446 seconds)
    (257/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.337164465 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828423543 seconds)
    (259/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.361697884 seconds)
    (260/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.335629921 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.340691231 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.417237886 seconds)
    (263/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.987171708 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.188819357 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.341802793 seconds)
    (266/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.336902035 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417826611 seconds)
    (268/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350203559 seconds)
    (269/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321306945 seconds)
    (270/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.134095791 seconds)
    (271/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.45769107 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.415427237 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.482565695 seconds)
    (274/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.343093318 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.331540796 seconds)
    (276/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.336842601 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.189382579 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.395715481 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322837712 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.458924445 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.351233289 seconds)
    (282/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.328131851 seconds)
    (283/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.322231238 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377815308 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.454483886 seconds)
    (286/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.364595775 seconds)
  done (took 565.691889598 seconds)
done (took 566.92801334 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.370737452 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377898708 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347822735 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369952951 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.458870222 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.525541159 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.359797742 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.35119084 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.397004576 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.398121618 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.347097787 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.522252431 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348295516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34983204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.350240496 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376221154 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.35216924 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348530124 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367131549 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358973685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364859473 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.346271564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.397251691 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.52462121 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.353811161 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350637783 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350448345 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.369846337 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.461044677 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35153215 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351670847 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.362877478 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.353943498 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348417321 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345847247 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371625344 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359794515 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.360074856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351299369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.382014892 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354361423 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34671649 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350131639 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.350715969 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.350067212 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350977553 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.352769153 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355292085 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380887348 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378907027 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.344463275 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.364626489 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.354710968 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348927671 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.3633084 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34679902 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.355166159 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38247803 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.370023928 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383306437 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.345220824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356717526 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.352909913 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36650059 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358249388 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348098564 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.347665998 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356465896 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354503628 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.356430298 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349205417 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.355990047 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354737178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365810244 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382514792 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.342743668 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.366101303 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352097457 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.360231543 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.350212491 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360945936 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381613237 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36011446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354814072 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378492982 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530972627 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.36232093 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.351993158 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364125031 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.370092753 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.359418216 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358077692 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.357878246 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350428334 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.363211324 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.358096221 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351716871 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356353828 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356348168 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364193726 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.357472905 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386706696 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.350638581 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351894997 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351364619 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.368069178 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355769915 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.353154522 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376653044 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402171692 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.354459226 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.349729044 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358221368 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387307434 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363674878 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.357188299 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351770001 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346237798 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.352582155 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.365684667 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358440773 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.352969475 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38571028 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356524202 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.354561932 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.344098379 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357124131 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380901591 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.473981959 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.366475788 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.382932542 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352892483 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35552441 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.386590643 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383877783 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387840804 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.359157897 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387510386 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.369855934 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352685496 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.364664221 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.368404537 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.357141971 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359986843 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352159052 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.385451899 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385066442 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385076054 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.378588746 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.477191596 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355498669 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.350178287 seconds)
done (took 225.305164978 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415359436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.349537397 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445289834 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.354431926 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455991299 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462049939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350094641 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349485922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350373383 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.733048246 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352216749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35141033 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.35447475 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.347477966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435959686 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354608034 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349581257 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.692285862 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353979461 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425110317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.349692364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350789876 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.353732386 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.74027274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.353340499 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.348257087 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.425907833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355026103 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.703982128 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.348602949 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.349663486 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.700333871 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.443762336 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371550664 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361401686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361262812 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.460167412 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372720493 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44526888 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436591077 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448096652 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397390768 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.34780593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.354410278 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35290851 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.356195576 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.352681249 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.382462239 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.352753888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349796507 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69784775 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362416069 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355164362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353059363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351940503 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384399383 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35540345 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355046406 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445437728 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358302822 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.419563305 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.743227508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733023472 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357133851 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.354558304 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356127311 seconds)
  done (took 105.85322006 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423051625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433248904 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.468835714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.35609647 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407728762 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475842437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.35641799 seconds)
  done (took 11.187119852 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364157482 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358728978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404356684 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409944543 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358411801 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.569011684 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354335214 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368679396 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353340918 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434123667 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360911074 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35810213 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365793964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.353252055 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406629915 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.367335967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471686268 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.356782199 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357396455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506581572 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355612647 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365344752 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.433351119 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368245969 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358761471 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365424234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.270264242 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358558413 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358375596 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.360687812 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353815911 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.462116993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357409374 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.353642072 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354317444 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.518220222 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361763697 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356167231 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359456759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.361001326 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357622685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360972853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361443067 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357444155 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.362211503 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383729722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35940597 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35898399 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.362006874 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.35852408 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.437049236 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36144436 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357063191 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.356662466 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439258458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369538063 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363120413 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357890861 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359523143 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361724643 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512950286 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410692595 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361816348 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.406403347 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363490293 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363908268 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.362402281 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365507179 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454806403 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358463437 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411458344 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.361222941 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.587352106 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390142318 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364702332 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.366578696 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365417328 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363598021 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.357862885 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370365987 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.360845439 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.363876254 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369337612 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358598329 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361263317 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54840709 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.519045685 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357696134 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376652364 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370449954 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359449568 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.437400386 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.364780748 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361749421 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41836673 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48194276 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.441100138 seconds)
  done (took 140.715348957 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366038267 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.371752169 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366894553 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.386159243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364972697 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36165319 seconds)
  done (took 9.489951806 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366063807 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.36489684 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.365875567 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365250115 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363483104 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366744983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.36806498 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371332862 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370678436 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365580581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368009684 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364612952 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368906786 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.366850614 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.365883678 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.365560581 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364996924 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362902636 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361189121 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367807609 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367162808 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.367315026 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368217121 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366982881 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.372186743 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366685173 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373293871 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362085747 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364909057 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.370400163 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386629255 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370368363 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368420019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374266022 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.373465991 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368990278 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372275605 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.368498444 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364622836 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369287474 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.366070084 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366954806 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367090508 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.369927544 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370128732 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.374002758 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.374804841 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376007807 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.365381819 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368852141 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371399915 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366036016 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368928741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369595151 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371409201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389126995 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374159461 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369288454 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367375207 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.370840156 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.373157619 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37006573 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370757271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37478299 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.368035219 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371046042 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370802216 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37509721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368837227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368729354 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.370404455 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365399741 seconds)
  done (took 100.858535593 seconds)
done (took 369.36764216 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.827734649 seconds)
  done (took 4.105475773 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.471944703 seconds)
  done (took 3.7519862 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.322438624 seconds)
  done (took 23.607786927 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.411568199 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.460438402 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.365830835 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.363275485 seconds)
  done (took 10.880301492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.663980312 seconds)
  done (took 3.940283585 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.35889851 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.377918137 seconds)
  done (took 6.019395596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.685489103 seconds)
  done (took 3.961800067 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.761454276 seconds)
  done (took 4.047060988 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.383695455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.381571039 seconds)
  done (took 6.052579035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.366646171 seconds)
  done (took 3.643061383 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.782836019 seconds)
  done (took 17.060356906 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.363105373 seconds)
  done (took 3.646487134 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.396376546 seconds)
  done (took 3.67208655 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.085690479 seconds)
  done (took 6.361838981 seconds)
done (took 102.029240235 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.362565898 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.365483082 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.364239647 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.363563843 seconds)
  done (took 10.733038223 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403879367 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.404164443 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403967177 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.412495432 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409482695 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402352226 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393519125 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.396679125 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41477585 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408490877 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405622558 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407619169 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403786976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.400616665 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404669892 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405689151 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412919771 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405675808 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396058708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418218197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.371964238 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411090686 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409237501 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37161729 seconds)
  done (took 34.951904048 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.892136127 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.441614742 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.524290258 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423899835 seconds)
  done (took 7.561920465 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.423637614 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422391675 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.435277901 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474214331 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503044436 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433867834 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398987765 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394742348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380254543 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425233915 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.500911149 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.452252191 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.507682551 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37069153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.558509086 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370981823 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373387636 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425268668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.476557681 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500988236 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371453027 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423605185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427265863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442555382 seconds)
  done (took 35.772019065 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.372040889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386787185 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.372539857 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.370594497 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379849967 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.372860336 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371730788 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.373095926 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.371096329 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.377423029 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.372822795 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.386057145 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.373262891 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375414879 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.377703255 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374548319 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.379316603 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.3719112 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.373289583 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379016447 seconds)
  done (took 28.794355408 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.366743184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.368298044 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717852059 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623572537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.366058244 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.368002197 seconds)
  done (took 14.093063027 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.448531416 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592836824 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376429673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.752930625 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.830718159 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.37728102 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.376489448 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632509067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971572433 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.965238412 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434556216 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445581024 seconds)
  done (took 20.489394343 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.383708957 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.372181717 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.383452593 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.389266797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.435719692 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381790158 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38344801 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.370927341 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437329932 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436214599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377712004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.436879563 seconds)
  done (took 22.071738471 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45830948 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370584238 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376755475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431746086 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376258094 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582002103 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443427439 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151990649 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398275926 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645659121 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381731442 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461738812 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627607313 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379860887 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373041999 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36340626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602913319 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886770626 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373159642 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381390384 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400319888 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378726569 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378973709 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607498141 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375643239 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372111667 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635969741 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372806059 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67917611 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390067951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383830982 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375482853 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648753832 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072324492 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491378321 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60371835 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381002004 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377561518 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.374026075 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.388251293 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393265716 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380332049 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384828414 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374160273 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373426546 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378732634 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165923625 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401539537 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.371422923 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374210361 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65427599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475422428 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378854768 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373378167 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376269642 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378095345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380184926 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47539701 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951031007 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381272119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385753707 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.377676673 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380509315 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392020674 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035533621 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.383727518 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378867078 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379755719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37719316 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383840897 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397421826 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376910402 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401416415 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375242998 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12801907 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38026883 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400915783 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951507478 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386648113 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.374379711 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606867262 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377755875 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378489343 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.376597515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375607192 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13246466 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385215094 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361384053 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418613945 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159375662 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629418024 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398431816 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401427796 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599963419 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.361973223 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379908186 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.390025733 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382436084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400480173 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165571818 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398969632 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381019917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635566638 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588818804 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395109617 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.377787747 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913144826 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4127152 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.392430753 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381543374 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609706589 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.009132519 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397647674 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38805166 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400219647 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380563392 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174818431 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395155064 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480925988 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379662684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685902598 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219768942 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383738616 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449536131 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383490869 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379352105 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385676553 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383762564 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382195705 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.605542634 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405604461 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392920851 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.383599608 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382164151 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.393064417 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383278365 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.385704732 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606916455 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387539144 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660396105 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382064418 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379637781 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380360253 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606807161 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.395488511 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.71916658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644139136 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391018476 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391117291 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395733357 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401861683 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481665707 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407064176 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.381467064 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642507283 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.386868065 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386721258 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396269607 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389315121 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393372437 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389276832 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388620328 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013476598 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365973476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385518176 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272808076 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.396763322 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451362315 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387719984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618016614 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.384672777 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40232916 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390599205 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.394872505 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609497159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394421653 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.39313253 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468168943 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.911344876 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031820062 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400999409 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.386980981 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.382448915 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.381100044 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384219158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384743528 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386280806 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619025485 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401744607 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399189563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014066781 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390183454 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396880021 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.395115493 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396714622 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392875692 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386810072 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388731395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403405443 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394644632 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396405807 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529504598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.400028176 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3865088 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.903028318 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3943817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386729091 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385327364 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420487083 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402050937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272385725 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645674197 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398793819 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665402049 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402460325 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40689224 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.385302349 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387269229 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398958568 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39736121 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398250581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.401211032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401647831 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392561566 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953191247 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179814338 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974740235 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391327913 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.394727122 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387710267 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177883616 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407772969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387812488 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635183599 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175493358 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408489881 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922524917 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.406354511 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215766762 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672160424 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622337705 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387950369 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.411468265 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674700298 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603728351 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423337037 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394206965 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386899417 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.375064469 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01179069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415573663 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469690832 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181037542 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409999518 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396833064 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.430367694 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411723201 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837672174 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410333743 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391378648 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397386702 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388482753 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248145693 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390176244 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392552734 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050844618 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392712377 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.920427732 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412640182 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62699195 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404819798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396409713 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.396402924 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.399686981 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649822639 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671909426 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397904042 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393794398 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976383281 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251541831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397433407 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391877954 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183617535 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403809108 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700046289 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394062019 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398921883 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397056994 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394274529 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391594125 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.391331319 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39663818 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370566837 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913185446 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.400465296 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395853422 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416728721 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237983183 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648361692 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407037239 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026186777 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622131732 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39409954 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416027168 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395948024 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400383578 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384508493 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394352942 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630859096 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471477038 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620573839 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392870577 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.401793396 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424579835 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606793451 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392586311 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395998683 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662503617 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.395088188 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.413395296 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166326954 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420723406 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400253699 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397567612 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394896172 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416429679 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466096078 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632885343 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.409644272 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.407711543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84447997 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418253133 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400051098 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.411167028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489872833 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397056035 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411932996 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170828277 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030320993 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168952896 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034224259 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68347942 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401563622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397914466 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396099531 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54585119 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396485636 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669518026 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397972581 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.396732839 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419747379 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402427973 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40495121 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610435171 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672664334 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398118318 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413122271 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397319255 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.399055041 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408858728 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609028191 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922296943 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983305221 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397903225 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400630217 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191460055 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693873866 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399733659 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402178152 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39976241 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.422213476 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401803805 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.428275879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406032262 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548710438 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68129279 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110532053 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429372565 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.426782938 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175246763 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400187573 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655100913 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399788205 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639403015 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038732906 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161682966 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664016233 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468632987 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636608314 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.400543155 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546807464 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.399846148 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401438023 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400081952 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293201682 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.397418468 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.411660049 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039591766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664565218 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403498589 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.398960351 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425067123 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.410207006 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624623928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174936475 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626805019 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410267937 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401387451 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402358567 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042517856 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690158891 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403674198 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404520502 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665775363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404595767 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424448686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856571932 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.400222864 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987962679 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.375209888 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424513858 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414318875 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167331754 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048197332 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405545663 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949298969 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403825843 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403820321 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674893234 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406504217 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403425701 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700893194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408007218 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417513325 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644772281 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043519813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241323412 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.42878719 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408731442 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.407804353 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404343649 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407445271 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406710153 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410247863 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.870979698 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425781337 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403696341 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415156576 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.406306233 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4087898 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.40441251 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403577371 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410267157 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.418447006 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.40021549 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413015074 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505956605 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033710394 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423126098 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081831859 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.736425888 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660960404 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413916592 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.395017296 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410030524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403726562 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404204881 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403659713 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422038218 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9920866 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.419001093 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4176736 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409164223 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621796467 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616746729 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41221025 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646701972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40922126 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440353639 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.392266369 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404095389 seconds)
  done (took 985.134784412 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442612169 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.419507278 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.420802246 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.439665841 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453349388 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45208086 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.485180761 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42626965 seconds)
  done (took 20.85597748 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418617791 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413911813 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417956087 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.418381257 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.405366427 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.907533711 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.426569956 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.414633084 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.419203979 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.420560897 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408677092 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.138059518 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.43382028 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.412185582 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.402377057 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.413726331 seconds)
  done (took 33.196232201 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.557461927 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.610022656 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.737391123 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.433193705 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.408659153 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.413056574 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.714713368 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.431096159 seconds)
  done (took 27.627628614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421556328 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419131595 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420778064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419981221 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419142669 seconds)
  done (took 8.420249768 seconds)
done (took 1250.977970755 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414044832 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.415465315 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.413449209 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417159324 seconds)
  done (took 6.979240424 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.39660614 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.39533825 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.395691934 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410251802 seconds)
  done (took 9.918313399 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.177960261 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095258997 seconds)
  done (took 5.593179623 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.40896877 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.167993721 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.143163643 seconds)
  done (took 8.040911874 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.715353785 seconds)
  done (took 3.033841893 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.816431918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.782472369 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602638353 seconds)
  done (took 6.520105231 seconds)
done (took 41.406531654 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.415466224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.657401103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.563008943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.408602708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.569488963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.562721819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.144261064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423385982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410235558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407429566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408892961 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.571314758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.198134276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.656067101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.196363019 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.668784443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.569944284 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408569734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415102453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.407582718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.143951112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409529446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429577393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411087519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.570283555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.624556755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4159765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.656395618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410240722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.438821457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.554210915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416508912 seconds)
  done (took 83.863199037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413770427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409843283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42810423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427718294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.408867579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411065978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42918472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409153259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43028277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407933047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409179101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423786288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409980641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.409308838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41173241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410082936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408725402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421379047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409799601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411532092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.410127184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423233864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413304772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410443753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426470591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430742164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432949865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409515491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411309865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418667199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412889336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431527836 seconds)
  done (took 78.65534789 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410464524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430964887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417989931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421017472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.407340487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.412141661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412750969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416822206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.409592944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.443138462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.428044609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410214406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.410766405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.409764831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411870294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411130359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.442298303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411539787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411287035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416386596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411115251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.40976278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413119015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410726584 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.420697271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41302727 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426565436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.411029754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.435191141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410611004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413994748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412973562 seconds)
  done (took 78.658972529 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616344398 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.422152336 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419964665 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357110178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421182853 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421990097 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414536122 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610739168 seconds)
  done (took 15.00834415 seconds)
done (took 257.503426315 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.419379649 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.417390678 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629121054 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.43952906 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.416043177 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443345676 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442397151 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.64989421 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.429620655 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666878732 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.442502921 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.438340337 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.428557617 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436342433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.703938123 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574028952 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.378404619 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.422166919 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.778283683 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.436219385 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.69958468 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.417935801 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.717517107 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.407052585 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.444262891 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.414661205 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.437238237 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351571075 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.458024338 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.78944259 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.424446216 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.421096476 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.525040484 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.534568037 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.642592695 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58792568 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.423515037 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.508096473 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.649917732 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.41725403 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.440750829 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.222495426 seconds)
  done (took 85.2533066 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.425889993 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.54719835 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.426847354 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.423020017 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.42541481 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.550281853 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.523964971 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.425626225 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.425222173 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.42332849 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.424923397 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.425162301 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.427199706 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.424840496 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.427391244 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.421625314 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.425858536 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.42902612 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.427738677 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.471560672 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.553233586 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.453081599 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.421086841 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.426892854 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.531874998 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.569395065 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.425488957 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.419858742 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.469782324 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.42654035 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.432348794 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.472727418 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.426846653 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.42742478 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.548220178 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.528893395 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.428499928 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.42285015 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.549698404 seconds)
  done (took 58.167022986 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.425206036 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.685228706 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.866484027 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435612902 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427253272 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.431436902 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.512830057 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431140105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.43289407 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.432659362 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.606649459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.430118744 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464078568 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.890083383 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42977981 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428916505 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428181791 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427370926 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.69306468 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438060985 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.532413889 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.430858766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513307384 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439585205 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.450223153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430201397 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432509552 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.00653325 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.430437374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.605779576 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.28371848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513154596 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.980754002 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.888669577 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.286065913 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43153009 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.42967415 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.610276751 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430697423 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.429196609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.517182552 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428395656 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.881416852 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.125079427 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.448336515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.43028923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.029330436 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.60807642 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.694114383 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438406143 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909132175 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433792101 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433094419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432539655 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.693425677 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436295937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.432379725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.063208669 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451069516 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.518650063 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432746662 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.432011162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709759704 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434980779 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.698703362 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.436351494 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441747514 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450338079 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.89500945 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437248999 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.151031196 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448009498 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429904038 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.610000834 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.695224864 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.059197506 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435892134 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707439774 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.998148384 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.514492612 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.438082525 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.996877146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.52014231 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437559597 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.433730387 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.436124673 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432628609 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481408028 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.516855023 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.08967492 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.139597511 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.086155921 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538460024 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446920613 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434745887 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.060738515 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452408691 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433717218 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.880122381 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149646533 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46428517 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439090435 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.149130448 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455520244 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.521779716 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440873667 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.89249482 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.436668473 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482953833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435553992 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442585757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.458346567 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520272072 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438295089 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.435372292 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.122832398 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.642153085 seconds)
  done (took 189.213122975 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427911764 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.426653816 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.428000042 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.429263196 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.427568193 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437882989 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428771529 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.427648204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435275008 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.428926501 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.426847987 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.430692597 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.43055713 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.429633488 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.459245749 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435530911 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.428385417 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.432664924 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.430286726 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.447963664 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.428939553 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.446670391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.430001329 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.448997133 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.426961399 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.430008797 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.430832646 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.449821285 seconds)
  done (took 65.480880997 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.435895467 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038259389 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.436972971 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.58097056 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459116596 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436291679 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.574686333 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.498885612 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.437866993 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.436661592 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.43560451 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.760008516 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.437599946 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.989598138 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.645975285 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.603843341 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.994608735 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.455660514 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436570198 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.43595065 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580513175 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449698596 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.760780138 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.041969252 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440262672 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.044565681 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431096224 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.441469961 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43981715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.043204398 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.437200837 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.76223589 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.524554664 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50813137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.046839443 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.988004162 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.004159601 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.601543169 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437680766 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436824752 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436835318 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.42929697 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042198888 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.441224951 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.43677775 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.040393401 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456537997 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.441093953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.446238515 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.438972366 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.504505505 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.508700583 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.768550717 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.049315878 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.526365048 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454270393 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.579366931 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.852314154 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442658632 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.989922754 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428678384 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.049734911 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458537147 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430756854 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.44003418 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44681564 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.602505358 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.583122219 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993573593 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.459641544 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.992629356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.62146302 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.437085532 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.438671379 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443977944 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.082168773 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.998535127 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.623695945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.590376143 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.655738932 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.433623267 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441599587 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.434522157 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526859687 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.442622219 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.051757412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.01119358 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459343598 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442973685 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.445691937 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443499216 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.634364864 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.054754175 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.526955103 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.99407622 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.785973496 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.771818901 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443724921 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507913638 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.461327076 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.771711622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.445208131 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.506979889 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.925688971 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.774726473 seconds)
  done (took 172.096246816 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.7016783 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.459140987 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543982562 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.603970495 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.061732412 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.0670556 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.4385989 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568758997 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557881215 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.715803599 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.449797129 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532665716 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.666755515 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524808552 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.182097905 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.516344462 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.546083566 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.610278645 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591231209 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445271253 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.123295618 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.760744874 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.638810543 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.462452544 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.576319412 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.245982847 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.059418195 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.977051878 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.625311092 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.440017528 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.018516396 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.440529187 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.423410836 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.155457128 seconds)
  done (took 67.080556859 seconds)
done (took 638.616068798 seconds)
SAVING RESULT...
DONE!
