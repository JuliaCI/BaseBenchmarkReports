cset: moving following pidspec: 7455
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.387256842 seconds)
loading group "string"... done (took 0.500862309 seconds)
loading group "linalg"... done (took 8.57910473 seconds)
loading group "parallel"... done (took 0.171265136 seconds)
loading group "find"... done (took 1.291900668 seconds)
loading group "tuple"... done (took 2.051428487 seconds)
loading group "dates"... done (took 1.321403438 seconds)
loading group "micro"... done (took 0.208791732 seconds)
loading group "io"... done (took 0.572389578 seconds)
loading group "scalar"... done (took 40.862194649 seconds)
loading group "sparse"... done (took 12.949203112 seconds)
loading group "broadcast"... done (took 1.036269466 seconds)
loading group "union"... done (took 14.195298411 seconds)
loading group "simd"... done (took 4.865932517 seconds)
loading group "random"... done (took 9.757394087 seconds)
loading group "problem"... done (took 2.077683997 seconds)
loading group "array"... done (took 23.40433883 seconds)
loading group "misc"... done (took 1.071116255 seconds)
loading group "sort"... done (took 3.53952941 seconds)
loading group "collection"... done (took 20.955477172 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.582134052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132837015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14679148 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173260492 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202541144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136717643 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153855952 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.45926201 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.066989295 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225819801 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123851635 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528377728 seconds)
done (took 5.688740279 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225141029 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.071852817 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125749132 seconds)
  done (took 0.899424692 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073337166 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171667218 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092889236 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107600775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10748403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109083368 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091246297 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10708685 seconds)
  done (took 1.49079921 seconds)
done (took 3.399703179 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.760579196 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.810913209 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490706427 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129140161 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154569082 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128376102 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.308816311 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.156375653 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.102961383 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112950421 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173652441 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.345036288 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.426648171 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.924511702 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092499588 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125981295 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077422725 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.708536677 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077573835 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129327294 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494023382 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108740432 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116312825 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122435055 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205375962 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128480822 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.177794076 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099914124 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675313041 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098266938 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180292358 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.093908027 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158202927 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225129076 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075337223 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104645252 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676279866 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186496411 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108944742 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095882461 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665588145 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075789523 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189554625 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104655606 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107074519 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185687443 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115412372 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075617926 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097375701 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084188775 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16668777 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.47731385 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103919969 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140133418 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106791801 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.672599916 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091886267 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151930664 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122530275 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106792841 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094496861 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112950587 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154487477 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.119727806 seconds)
  done (took 19.434100831 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114268012 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13647013 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09183684 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136230206 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135424231 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093309125 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080807359 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091204382 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106906739 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178747237 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132741027 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140637421 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088241823 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077151824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115092173 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245531515 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103857749 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117080315 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078187107 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103401612 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135683732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09331161 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106239892 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090195318 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165302952 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214834206 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1049382 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120832352 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090139756 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095960796 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139262468 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157316614 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072991516 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090743942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176380355 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117747644 seconds)
  done (took 5.060503498 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193610248 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116625446 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187665377 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.157519185 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172375759 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146099565 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161448336 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113888735 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25918672 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.170587238 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077671265 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179916706 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124962292 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096170514 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091769358 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07788574 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092085951 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.769496254 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1828676 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142471337 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101955671 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10198795 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094749893 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368574376 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081665904 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093835755 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082066527 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085355107 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168327598 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08037832 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.221830859 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118302749 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085051582 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131177011 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205409936 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108786532 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13233472 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097453899 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079010263 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193805828 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095944209 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086112275 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092825774 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117148395 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11443964 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131597162 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096321482 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103653166 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225716153 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096666836 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094031202 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.059518718 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194567286 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091018925 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093662997 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333060142 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113241536 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080466306 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096432734 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298605566 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132284237 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077384419 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074595219 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101342905 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075829678 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405962162 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084568881 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.322711234 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09201932 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152293287 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095935999 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084392014 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099533654 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09850273 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099060908 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093317632 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077757251 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075582151 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093831245 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079472515 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113515332 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097405627 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075697886 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159772778 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115340002 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096610292 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122833378 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097574541 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076818381 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124028921 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079134618 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096374499 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119836848 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10154016 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110982063 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095401361 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123303738 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0941857 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193112758 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077732824 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120245327 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096684746 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109486161 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114899735 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093905127 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080968876 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09224336 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078913793 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157264494 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078385976 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075687792 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0973014 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076590322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108318008 seconds)
  done (took 23.569889731 seconds)
done (took 48.765364359 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417681035 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107198879 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108118664 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108893453 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106029896 seconds)
  done (took 1.627840176 seconds)
done (took 2.3855681 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319090179 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194204126 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083683143 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188522876 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084145486 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193179901 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160252027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096573913 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204863735 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079919162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182399159 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079784892 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101489872 seconds)
  done (took 2.748120026 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088977559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113110119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078072046 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104672622 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072024037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087453405 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104333602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124434044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086879383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080880272 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089644425 seconds)
  done (took 1.780556529 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087551556 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112214583 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077355887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087986517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088802216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086579989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104678228 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097413323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105296519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081470287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089272599 seconds)
  done (took 1.773744497 seconds)
done (took 7.048528712 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.12679655 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.729684725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.097866159 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.188577512 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326980593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211252895 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.616957193 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111891782 seconds)
  done (took 16.342260946 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107656252 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.111079915 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079040005 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095594965 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078320151 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092865491 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076039403 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094893365 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076606856 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095159592 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076879815 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096035413 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077359595 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096186533 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07588673 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095649805 seconds)
  done (took 2.242372147 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112230225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111345938 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099540412 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085696743 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098257185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098559459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08201496 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099071398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078840878 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096417354 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086055125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101786535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083886167 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095035815 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099083613 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08646356 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095979758 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082573846 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100399023 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083492849 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101983548 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096828541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08346078 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102740761 seconds)
  done (took 3.122119681 seconds)
done (took 22.461949209 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161419211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080908598 seconds)
  done (took 1.000972746 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097043652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115171286 seconds)
  done (took 0.978204798 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102364294 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093525222 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131213556 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110995959 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077677618 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077444508 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127351993 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094639168 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077793046 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094965386 seconds)
  done (took 1.754360426 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081005124 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098038831 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085947906 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114803511 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107270953 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07900668 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100006741 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080484349 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100759078 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075654053 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10350207 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098413872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100962172 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115072376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083011264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100912316 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104784108 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081655752 seconds)
  done (took 2.476186819 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07632347 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078750868 seconds)
  done (took 0.925681536 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079350598 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09289237 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080208098 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096359862 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075452612 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092379034 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075784347 seconds)
  done (took 1.362387992 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469045094 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178576847 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320650588 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110822043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129155475 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.359100299 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13151291 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090461863 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108789107 seconds)
  done (took 2.707546823 seconds)
done (took 11.968658565 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087422071 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129738872 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.597643155 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11256266 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074026775 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155458313 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257773421 seconds)
done (took 2.186214024 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33483048 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119004946 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085917566 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075061366 seconds)
  done (took 1.382550492 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075294261 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08248747 seconds)
  done (took 0.935051036 seconds)
done (took 3.092944056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074590502 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075159401 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089516168 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074140368 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088975645 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071585721 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.12567745 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071676479 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092515005 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074156816 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093248483 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.074100744 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075114764 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089727217 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072615026 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090851742 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07223855 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088927596 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071608961 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07456991 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088979308 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074750596 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089111305 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072417294 seconds)
  done (took 2.775998847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099781456 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093543644 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081402936 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098181584 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079668425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098236544 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098235771 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.075101295 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098892584 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077837091 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096508568 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079803753 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094972549 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079949769 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094672451 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07920161 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098434454 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076403233 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094307147 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079627414 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097194538 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076971066 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096634608 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098274006 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079164608 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096061699 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07689177 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093329249 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081155401 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096294119 seconds)
  done (took 3.445613559 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081064251 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072050084 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089967546 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084831542 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089672097 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076858497 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090043532 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075705743 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094077792 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072923377 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094954726 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071783998 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075964668 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094781266 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077486871 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097513569 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090184295 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092655303 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075092035 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095567157 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077731094 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093456161 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074487985 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07281986 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090220345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071598202 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090448181 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072405944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090792935 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071833487 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078181861 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096081523 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072269701 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102262064 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079115991 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08981463 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080926861 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090314545 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077262076 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090531078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071795971 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072496981 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093416778 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08447083 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093746413 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075567047 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092888325 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077457114 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094498081 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07900916 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089655225 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075345435 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07929228 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094564779 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078944748 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089757423 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073470796 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08968932 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077888182 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089517992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072535537 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072422225 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097207186 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07403824 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113422139 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10135887 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074649678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077642238 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093611329 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081233221 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095368343 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091238614 seconds)
  done (took 6.855343457 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077024284 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101492252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074054912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092442925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070718756 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073178512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09780738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073362124 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091328483 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091335935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0908272 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07448221 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093116899 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077304736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091273286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074769513 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100899441 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071953806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091031253 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076502026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091267459 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079781698 seconds)
  done (took 2.641329211 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218019429 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101458391 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135807053 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110606783 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092458871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108783958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080484905 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098853049 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097499723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083453806 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10162415 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08048216 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110460938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10181764 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082997837 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102554429 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080303542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103114579 seconds)
  done (took 2.676571713 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088663055 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093909467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099873028 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094182295 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075319231 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096555791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082269561 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108768253 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078537139 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094262164 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103699312 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077866744 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095719882 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075894254 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095573386 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075686251 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09621751 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07605826 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103738945 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082691254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099587218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085755312 seconds)
  done (took 2.766571533 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092869432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096036235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096572602 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097532455 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074899561 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095618763 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083048301 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093575768 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085381088 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094810353 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07648105 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094994418 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083726193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093066466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102292329 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075810626 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095531038 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075858259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077729586 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091823445 seconds)
  done (took 2.567280668 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117149006 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108352741 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090370555 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119673146 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108125099 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093286442 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120129044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091524711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10790635 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121864773 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091353918 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108530827 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102732258 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115663801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108895467 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102210324 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119999004 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119707864 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090746666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107761261 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121486946 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090875462 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119320017 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090925553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107360131 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091993898 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107371921 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116514012 seconds)
  done (took 3.782340549 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074735033 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075917243 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091095567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073096239 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091603168 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073647585 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073356334 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091704458 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07545074 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090833816 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075455115 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09297112 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075891271 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075284091 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093161186 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07631603 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093765975 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073919531 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091263963 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072882515 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0755403 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09413046 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075815092 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090709222 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073114349 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094003709 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073018517 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072912134 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092565745 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073555295 seconds)
  done (took 3.23915279 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083840042 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105259283 seconds)
  done (took 0.983935819 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074487186 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110673094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072867367 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097551207 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081868148 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094455058 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086140668 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099805477 seconds)
  done (took 1.510659875 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101026378 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114596912 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0818576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106027368 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095521021 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113093666 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15848045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082522557 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102734527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078494625 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113164492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077139873 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103195069 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082435741 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103033402 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091585246 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095661558 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087989392 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103126616 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079511891 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10097459 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1114438 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088343322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10294482 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080218593 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107518122 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090700301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106708312 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082526615 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107765345 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084457836 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088502106 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081713828 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101036393 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078143742 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112753615 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112691412 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082535351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10562699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083470866 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10486161 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075259284 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106883077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084295444 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107892397 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083459792 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.1020685 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076478179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09654637 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08116263 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093803434 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080864497 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071087645 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105135001 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104992629 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096515673 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097381087 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.082816061 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100097853 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080590676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103303386 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081927866 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105437069 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080705205 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105038453 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08706778 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103293931 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076027172 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089415704 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078385717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104406564 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101592143 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107497487 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101487699 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084063734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095903536 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083501285 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102534864 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085803459 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106922253 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082334744 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103295008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088724806 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098776689 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081767554 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103066689 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079987793 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099440291 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078089273 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116274105 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08031882 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09659627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078580669 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106826096 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082069648 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099451428 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078718949 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105147144 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071444072 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101848954 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083901159 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102542688 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090770475 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101720561 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084192915 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104526786 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088609487 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100959004 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080890992 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092478483 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084266315 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098032975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086753386 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08970975 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083871801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099415214 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083811616 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106862555 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079698479 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10042305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08894495 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107236728 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079782618 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091712636 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082726015 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100567291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087582592 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107680324 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080050354 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094508286 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075710634 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104511864 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082738698 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102164371 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083024553 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100664701 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071537705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096542719 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082546133 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10609848 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08131622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102306497 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105672352 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084244532 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09809605 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087640531 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098893096 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077638416 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10481778 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082134257 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093735355 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087514552 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099569649 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079431692 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099731633 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088628281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100774397 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083459763 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098066552 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082189049 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101185645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077644645 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10060961 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080411421 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108158945 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08157465 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094457671 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0737752 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101361757 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078387469 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08086233 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096574603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082819368 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101572611 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078203279 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099173273 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080808286 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111474887 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090585586 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101707521 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102957865 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088516844 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099766317 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084485892 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099172656 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084059818 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101922631 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086887668 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102209761 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082766792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100292637 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074566454 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103015403 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087175483 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096243777 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077943531 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076966946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10015832 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106838439 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081537248 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100813317 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078940815 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083933163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105575608 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100191499 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081478916 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076978167 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100880945 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086424974 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101623169 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083782248 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107739307 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10200102 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076169721 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106273635 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078934153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104860587 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076119913 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078403298 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097613468 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083788088 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098510626 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080365826 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089458379 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087820808 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106387357 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082966692 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096024268 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082581044 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110227756 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080639101 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106492157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081909021 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10362882 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115304394 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077926824 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100597642 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098789362 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100792298 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071892782 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103292903 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080244494 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095623216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08054498 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079337342 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101921634 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102936106 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083163062 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070504084 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100422208 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079666441 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097081244 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076793292 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105766331 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082662239 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100953677 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109622675 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084401911 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101444681 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085071381 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09966567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083208802 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10206784 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083291694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101919032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081200791 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095930752 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082779575 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.096221816 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079589421 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080962357 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101434647 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082968611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103869378 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08032517 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106907556 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.100836889 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0834491 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118573682 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080148085 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097125008 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083650412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103424074 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081730422 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10047407 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07625329 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106363222 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081474929 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107595385 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082059497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092987971 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082566912 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100052179 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084048234 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101791665 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083530033 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099526179 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082034631 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100675463 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090970722 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097678988 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088793481 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103042204 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084596283 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101449582 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08239831 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09965951 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077836841 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100841363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083397622 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102727838 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081237439 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102730959 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082001038 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10033044 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079677671 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103260958 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082662656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10259014 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071847118 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097379311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078944592 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100901962 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086094274 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10197539 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080503345 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100154942 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084095432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099478409 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074855275 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10452627 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085153393 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102501298 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091452817 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097073155 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082435328 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111427974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072174674 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099480734 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079267546 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098528656 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087910168 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102415883 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088285166 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102690707 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079359017 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093740982 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083750823 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099251294 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072886942 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096985237 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08617717 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098974264 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081156891 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101365922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085850124 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103288199 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086211556 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099257974 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082822799 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10126661 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075368558 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0780486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097284127 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082819013 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102504793 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078747258 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094288255 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082046556 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101551836 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082554786 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100157067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082053612 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107335371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08205839 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101240785 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087678587 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091557691 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082349644 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100042955 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082211728 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096707568 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084274216 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102907945 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084759266 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10580972 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082539201 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103363812 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082388248 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098336763 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082556827 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101503613 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083573021 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097757251 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084747871 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108756337 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079045949 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102588635 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083957583 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098441636 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084733742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103230003 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083425216 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10480443 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083590779 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101361261 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086560871 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101005395 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084058274 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103680298 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082199322 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105995383 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078637627 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109316404 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084529845 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103363778 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081095179 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098207442 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08243733 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101045467 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081497884 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107551525 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084446607 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098359365 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078384309 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098328102 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083420954 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10804882 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088965961 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102171119 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084228939 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095821821 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075646998 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103295701 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080331623 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099966245 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085680242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106526486 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083412306 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099499112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080843971 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106975827 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086664906 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104157434 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079198903 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104297038 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08461134 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10255458 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080924327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101136498 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084366691 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103767975 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081172912 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097583755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091472566 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107132743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104144623 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081550125 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103598111 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082526702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075694888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103249207 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082410238 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105524435 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101674083 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083275343 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111447067 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078191752 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100940928 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088432705 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100171524 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088122406 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095879701 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083609968 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103026402 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085536066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095949314 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.079338586 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098213779 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083278997 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097180108 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077035785 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112354923 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088248749 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10172124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080847888 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0998847 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07690902 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095438771 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078827575 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08403343 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101887508 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110183647 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07904754 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077823407 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096348086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082325494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103615516 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084989356 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095560087 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077931365 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098502564 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084140355 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.1095115 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081291262 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103049934 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083840015 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102789384 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079603343 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108621414 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075418126 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10395858 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093807045 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10294445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084978685 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106639899 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108296653 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085136264 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096390788 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084661014 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102560709 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084264386 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103616551 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084897241 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116941824 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083697734 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097958434 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082063315 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102135959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079553212 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109999904 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085364483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103686161 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085060418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100562562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085812022 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110015448 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085251277 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105568064 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083032046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100924028 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08174444 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099691023 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081528308 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104228099 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084789987 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102243901 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085338996 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098264467 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093233697 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1090217 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084940462 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09481868 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079387906 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098613338 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077582731 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104287077 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077147556 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100458014 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081236655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101029457 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08685539 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104789927 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084167469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104819014 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083832533 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091591316 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087525541 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10340011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086447804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094321552 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083939048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104399122 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087562153 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107947026 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082126183 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10281558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082220594 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104613924 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077259005 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105469532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081733778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100851879 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.078872013 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083629653 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105556829 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084107694 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103841247 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104672013 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083829602 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105933583 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086946547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094959853 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076702392 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085672274 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099960183 seconds)
  done (took 55.939728709 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14286233 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08436982 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073433806 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094498942 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121252293 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078546513 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093161276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078943282 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09750337 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088024598 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093616159 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074467072 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116319276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123775833 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120098283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088637957 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093480178 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07846813 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093935161 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078318917 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114637171 seconds)
  done (took 2.871638459 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100111846 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112451871 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110071385 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096208507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10524292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112333035 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090930109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111943994 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115365753 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086455137 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115464598 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110911106 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08575809 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106886839 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105398704 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089139123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115935539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10443701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09333181 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11062207 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10894119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090712451 seconds)
  done (took 3.119711171 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087425882 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081564685 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107465527 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.076422593 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102178228 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076128944 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106969808 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.078796419 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106920162 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08280886 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099565516 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.082429801 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107102103 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076584134 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101253152 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.078375215 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107214966 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08284785 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103660565 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076467957 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122331881 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.077113553 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097094709 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08080889 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111544789 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083308102 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101911576 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082742045 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099282954 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08250392 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098048186 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085641415 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105118862 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080471721 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09970387 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082868246 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082502039 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096720774 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078073735 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106206945 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077071017 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102824098 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089201855 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099231668 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.078397077 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10468172 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081962336 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095698831 seconds)
  done (took 5.25215789 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113329091 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150718234 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.080584503 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141291468 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117976187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09184091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103759222 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141051184 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07634602 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102142555 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120206843 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.09518828 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102836325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107959134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.082490186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101973991 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085317386 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097330191 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088415694 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100789021 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087801118 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10612428 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116188312 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114525509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087413729 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10083186 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078684173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10789421 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112711591 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08829122 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107723 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090388332 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117928832 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103611686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081284303 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104867448 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119524792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083669324 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105314299 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077658543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105734425 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088218147 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106701863 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119343655 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084615382 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104816262 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082735646 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096404369 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114793156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08630618 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112551461 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116523815 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087424478 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10255036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089303552 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11809987 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102685567 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082438788 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105897292 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093555421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097307347 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087169584 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116152224 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104879711 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091627342 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116130462 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10397127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086771985 seconds)
  done (took 7.886747833 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110585131 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108653432 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119564904 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100098794 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108141153 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088321587 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1085469 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106753453 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088817301 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115149716 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087226246 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.15446289 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.10545397 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11461862 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088725432 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108923115 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088337983 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107885343 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087083293 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108670987 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108804652 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.098745623 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108623189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120236117 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120776874 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085301066 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107275159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087943085 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119221981 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107689617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101377013 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108508291 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107925717 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100385007 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121441239 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108898815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082165876 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108713369 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088449065 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108966406 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085162867 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119634435 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108738688 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084621186 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108283834 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088020064 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121705868 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120879309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115012605 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094966849 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109477826 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120030595 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088006431 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108967746 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120224193 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128797067 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099148694 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120436026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10809943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118973222 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099321604 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129573541 seconds)
  done (took 7.461150684 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080002254 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078824852 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097771436 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076529858 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09947848 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076781683 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078027123 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100194462 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078794532 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099001846 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07936638 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096622124 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0767791 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078403912 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097276154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076311978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097061297 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076666197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098572938 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077421959 seconds)
  done (took 2.57631235 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087860574 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120086314 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080534965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10808768 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.081876602 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108167338 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.080873493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102901628 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082547928 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102490163 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11282942 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093916236 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100828243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08686934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112838781 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10704571 seconds)
  done (took 2.428893703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100104849 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120590708 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124270703 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084485938 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.098384797 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08741639 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102448645 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075657099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095440355 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.087883185 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105348942 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085178774 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103126142 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078424135 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079659998 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106852969 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.074758649 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104319842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082283303 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125331835 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104762872 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083425212 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103574012 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081800706 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103785403 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084954781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107510396 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076535366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098706162 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083317907 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103138307 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087116133 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097283573 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083910801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098442682 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077410062 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103279992 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082969576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105844273 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083349572 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099251804 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.081567583 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10300355 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.085678796 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096474056 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083199146 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09618755 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.086179504 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10244416 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08323414 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103687186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088295351 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107952041 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090836074 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110860781 seconds)
  done (took 6.051565337 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094548524 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104014149 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0852866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098159156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08344809 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109048144 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083710977 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102654065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08211584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097314185 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082213574 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104628285 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082942537 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104301323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082040914 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103812882 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07531876 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101668708 seconds)
  done (took 2.541134963 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085523223 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078735418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108406956 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079220758 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100782614 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080948901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097525636 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077351981 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098524722 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07998754 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100333755 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082231011 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098347547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082105871 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099625758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080371549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.101586964 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078640355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078555427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09643278 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081532204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098385239 seconds)
  done (took 2.828020874 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097141671 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131975406 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094025039 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142872562 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.105266451 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084010406 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115354515 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084730012 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122674121 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084241786 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104326374 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083324752 seconds)
  done (took 2.114715041 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104478706 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138048017 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080515331 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104041116 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114502865 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085674104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105810701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084646108 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119198325 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120216871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084567051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119704132 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118426889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117383374 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093511917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114484812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105294728 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085903264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101484485 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10656206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105959834 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118866047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084478617 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106234457 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104672802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096573058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119395219 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119224319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084025229 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119255044 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114582816 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085030388 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119564044 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118864762 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082205216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119132902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104721069 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128395637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093725835 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118547983 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103237166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093996125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11943226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111964433 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09833911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105591814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113709143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085909107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10615589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134520443 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115354895 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097355174 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115073937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119255301 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098748346 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13541718 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119818692 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117605106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114388004 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118652545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097189388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11502384 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11771881 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119704871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095530955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117847953 seconds)
  done (took 8.0062402 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118842436 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103887835 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08472054 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120475965 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118665527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10548511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085726122 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105932823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085635038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102361662 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15249474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085323383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11765089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117823555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084787499 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106637529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105776179 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097067878 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103447534 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13628669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085074486 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118635873 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118091478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117510663 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119329145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094230801 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106451127 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085608304 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106528186 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106013711 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093413226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106667738 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118058009 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082278568 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117847856 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084910233 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106861641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114108149 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085594087 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115935482 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118048524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129068942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085806039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.341163947 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099057104 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106740299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106016104 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082154998 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106371715 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082198569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12055085 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120120144 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120515431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097117049 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106559738 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106310589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085829804 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106330656 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086230461 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115058734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118423015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085812797 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136006989 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106124214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084984053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118062655 seconds)
  done (took 8.064841335 seconds)
done (took 151.165676684 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098807617 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136706 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095562723 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164440894 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080504953 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136551046 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114098989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117067738 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080359851 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101684528 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.080740973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104572473 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147079551 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101621975 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080710464 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104542242 seconds)
  done (took 2.614712969 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175823515 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281879138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099904997 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107737966 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08633383 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105239941 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084721117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108878765 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081520186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113988296 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103458206 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083007059 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.11346598 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084006765 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102820052 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082949303 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11282754 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.082788172 seconds)
  done (took 2.889454918 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113025021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146438839 seconds)
  done (took 1.142461302 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115980474 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181180743 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292529269 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154824048 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110035512 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124378313 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156381647 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120254377 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199677298 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125155564 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103231083 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109010494 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133539742 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093647888 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110509901 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086521429 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135772738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109578477 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089050662 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10884996 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112215524 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.110872018 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091777489 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110974982 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182496012 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125018066 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087453118 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109178026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.109188381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088633966 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114208671 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101268123 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12309133 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186795006 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092688857 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182489578 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095025497 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.1071085 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088865547 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107615656 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091696738 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113438353 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123557733 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087163086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108827463 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094824628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109469181 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087851539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116984612 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117020081 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094954774 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114558393 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159591499 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118580922 seconds)
  done (took 7.404404857 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793714085 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15102662 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086372345 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.893790657 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139151505 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100364936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.793154205 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131441639 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233421561 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.809600261 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100791002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127810298 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227985241 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.251649107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140645178 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.332890808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674672812 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098515179 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139956619 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14868734 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115379609 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115536037 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12858586 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428788297 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10813416 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086016951 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11445288 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098512926 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178068965 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08662628 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11106308 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180174811 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263785219 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202946521 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086362003 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107199236 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08533504 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165700885 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267190488 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217144036 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174059054 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082025166 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106682843 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098152445 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129062393 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103305999 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163354656 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171486684 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170518034 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113417249 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122381047 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095469664 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120778088 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160159571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105542456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313794605 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341075299 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108003299 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094574225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127941226 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263802558 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085624482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226602557 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135051476 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187906987 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108420256 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774403346 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165753101 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085202019 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118232221 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092719368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115230916 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12084056 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164903337 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389637218 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101249259 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112714601 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084054744 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241531364 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085378452 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10791632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162752258 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086256608 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117649244 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126371911 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120404486 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171937642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248934029 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122101001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094834278 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114815143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097993053 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110876511 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208030487 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21868308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157354909 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211667359 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121868043 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162304667 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186730618 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097866144 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191695705 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094690379 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127705624 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121230732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191639949 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139415432 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109759596 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091292772 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116223156 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142504216 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089256397 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117411222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167677189 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457105183 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187569411 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082931859 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112388255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09615575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158205298 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116414295 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261868322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096461921 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164484531 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116891707 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103901613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095707097 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161887619 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124039632 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117971367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097997751 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117287887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24864266 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222071975 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125812053 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21745685 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177209164 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119525432 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173440112 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117322319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168205679 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116452039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09836084 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110240146 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745224354 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123010454 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116397462 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091148835 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185288701 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108091562 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08812726 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107682408 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083120955 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764657803 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089147934 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105508199 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087896139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118269452 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093723283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115685816 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09132299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183242573 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232825387 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099858371 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116513049 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085352257 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158032197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111005251 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085944893 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109246586 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08606431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119326526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111978996 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088653732 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171104274 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158032964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222095321 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578610513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085347466 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109067496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231601143 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086832549 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305738531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093365036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227420422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165067846 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106955943 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337808429 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169402053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187155598 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088876098 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192382845 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083478466 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114961185 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161261194 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085818433 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117528662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157075187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126499555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122000572 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.12017677 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109950928 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225710845 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08226875 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191744352 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087881472 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121578498 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309255471 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086579393 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13071918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161013365 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113054389 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087774464 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720094293 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08722024 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119739272 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096925911 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22350022 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164736242 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116810014 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115794965 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100239649 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183718429 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210458814 seconds)
  done (took 43.443770309 seconds)
done (took 58.369838167 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312550908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26083584 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.291809308 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193795595 seconds)
  done (took 2.034800876 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176878841 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148919619 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121097793 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106311692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152068152 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082781203 seconds)
  done (took 1.697038443 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.46943949 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.366898213 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.338882585 seconds)
  done (took 2.085936177 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251172203 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276636084 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.319414578 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.428767612 seconds)
  done (took 2.289217357 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202775657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122248829 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095494402 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.135374338 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.169029517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.173586287 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139770504 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.150206418 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125819284 seconds)
  done (took 2.268874906 seconds)
done (took 11.283865137 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.260403348 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.20494092 seconds)
    (3/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.262514935 seconds)
    (4/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.158757387 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.156022556 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.275344899 seconds)
    (7/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120304268 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.162706682 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105921158 seconds)
    (10/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116703977 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097826229 seconds)
    (12/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.138996005 seconds)
    (13/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.215749691 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116092173 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090629884 seconds)
    (16/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.22715476 seconds)
    (17/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.240171118 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.193745737 seconds)
    (19/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.270664305 seconds)
    (20/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19090882 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.223076231 seconds)
    (22/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.169395146 seconds)
    (23/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.219368739 seconds)
    (24/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.20955456 seconds)
    (25/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.191549621 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.221076486 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14929906 seconds)
    (28/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167991885 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119925046 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.141463966 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15563413 seconds)
    (32/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.094831912 seconds)
    (33/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.231351899 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.171294715 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.186087109 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098934631 seconds)
    (37/286) benchmarking ("sort", Float32, false)...
    done (took 0.170393218 seconds)
    (38/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.206614154 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135261739 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091455872 seconds)
    (41/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.158668207 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136991131 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.10017271 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.145794757 seconds)
    (45/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.189208157 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.176899195 seconds)
    (47/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.19863417 seconds)
    (48/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118962617 seconds)
    (49/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072209119 seconds)
    (50/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.101364605 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08594617 seconds)
    (52/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122849002 seconds)
    (53/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.129954873 seconds)
    (54/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120037283 seconds)
    (55/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211058153 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131957192 seconds)
    (57/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.17153026 seconds)
    (58/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.10186061 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 0.168614498 seconds)
    (60/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072716088 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122824252 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182876239 seconds)
    (63/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.1001208 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119554289 seconds)
    (65/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.172239351 seconds)
    (66/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123505396 seconds)
    (67/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120903606 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 0.084031199 seconds)
    (69/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114245314 seconds)
    (70/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176976403 seconds)
    (71/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.10229257 seconds)
    (72/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088676122 seconds)
    (73/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094483904 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114134249 seconds)
    (75/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119330012 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074570782 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113542799 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.09791099 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201568288 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196575887 seconds)
    (81/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118513572 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.072838338 seconds)
    (83/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112722031 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098422978 seconds)
    (85/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180184605 seconds)
    (86/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.148589327 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090130932 seconds)
    (88/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119527064 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.141143475 seconds)
    (90/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089840605 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109633748 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095632954 seconds)
    (93/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.099744286 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091384309 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131740105 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074438958 seconds)
    (97/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115696047 seconds)
    (98/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181379715 seconds)
    (99/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084821835 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131308606 seconds)
    (101/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156428915 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114514192 seconds)
    (103/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088296883 seconds)
    (104/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.104036908 seconds)
    (105/286) benchmarking ("sort", Bool, false)...
    done (took 0.180664794 seconds)
    (106/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095261216 seconds)
    (107/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121833063 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178339023 seconds)
    (109/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.079602087 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106899783 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097014498 seconds)
    (112/286) benchmarking ("sort", Float64, true)...
    done (took 0.225759004 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184130896 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.156109 seconds)
    (115/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114014209 seconds)
    (116/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.096810949 seconds)
    (117/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08946171 seconds)
    (118/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111695825 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090382306 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11342133 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073987299 seconds)
    (122/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119915857 seconds)
    (123/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175997953 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08893331 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113951956 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165348176 seconds)
    (127/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116440244 seconds)
    (128/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099738965 seconds)
    (129/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.098554739 seconds)
    (130/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246765914 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118541678 seconds)
    (132/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097681252 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114971639 seconds)
    (134/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19644301 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109547666 seconds)
    (136/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097588672 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084967197 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114537767 seconds)
    (139/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.166992523 seconds)
    (140/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169846892 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196548559 seconds)
    (142/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134031082 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095048147 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180614955 seconds)
    (145/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113410683 seconds)
    (146/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075495464 seconds)
    (147/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094780311 seconds)
    (148/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073853372 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.113306231 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076885144 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082873519 seconds)
    (152/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.110756185 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120828866 seconds)
    (154/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073388477 seconds)
    (155/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.151762782 seconds)
    (156/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09174709 seconds)
    (157/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116866065 seconds)
    (158/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089624472 seconds)
    (159/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.185701546 seconds)
    (160/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095657821 seconds)
    (161/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100492617 seconds)
    (162/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.095937132 seconds)
    (163/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243131087 seconds)
    (164/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073764921 seconds)
    (165/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.070372648 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.114885536 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114546479 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093409818 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105072554 seconds)
    (170/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09162963 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125916215 seconds)
    (172/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100272998 seconds)
    (173/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112514184 seconds)
    (174/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092039471 seconds)
    (175/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11345661 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170181992 seconds)
    (177/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.124384501 seconds)
    (178/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108593528 seconds)
    (179/286) benchmarking ("sort", Int8, true)...
    done (took 0.217558691 seconds)
    (180/286) benchmarking ("sort", Bool, true)...
    done (took 0.216310486 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088350714 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111921969 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089900934 seconds)
    (184/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.113690475 seconds)
    (185/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072410446 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123500909 seconds)
    (187/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162764981 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090758197 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114605702 seconds)
    (190/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086224317 seconds)
    (191/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.100476915 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077441576 seconds)
    (193/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112143465 seconds)
    (194/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.076023669 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099300475 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099986583 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120600417 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090616238 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115188736 seconds)
    (200/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089138077 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114552385 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130940742 seconds)
    (203/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.131965032 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09631131 seconds)
    (205/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075883025 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071944688 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116811512 seconds)
    (208/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077973657 seconds)
    (209/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108315616 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085046533 seconds)
    (211/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162025442 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101778251 seconds)
    (213/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091384232 seconds)
    (214/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180002045 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086654241 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119270248 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086450417 seconds)
    (218/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115723957 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.083891247 seconds)
    (220/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.09926702 seconds)
    (221/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075443686 seconds)
    (222/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117584969 seconds)
    (223/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080362148 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.099906101 seconds)
    (225/286) benchmarking ("sort", Float32, true)...
    done (took 0.226875495 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091385878 seconds)
    (227/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113336097 seconds)
    (228/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073413804 seconds)
    (229/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.180557774 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.089387878 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109572851 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07151146 seconds)
    (233/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136312504 seconds)
    (234/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083850828 seconds)
    (235/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.097525135 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073379964 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108209478 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.108389935 seconds)
    (239/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.148552014 seconds)
    (240/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.125183613 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090679267 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121199005 seconds)
    (243/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092687612 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115433774 seconds)
    (245/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088768598 seconds)
    (246/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.094844301 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098607918 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072301146 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11766616 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114074 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144737868 seconds)
    (252/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112485443 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073810031 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132280577 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075168045 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129466923 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080729572 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117193762 seconds)
    (259/286) benchmarking ("sort", Int8, false)...
    done (took 0.191091125 seconds)
    (260/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072586388 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109925941 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085360701 seconds)
    (263/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.104008073 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091111524 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123059441 seconds)
    (266/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080148733 seconds)
    (267/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.100772161 seconds)
    (268/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.073569744 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110824082 seconds)
    (270/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085306674 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112423887 seconds)
    (272/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073860855 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.11968847 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076783625 seconds)
    (275/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088369335 seconds)
    (276/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177575457 seconds)
    (277/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.097098155 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110427538 seconds)
    (279/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.104956558 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086844891 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103015964 seconds)
    (282/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228925356 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.073494111 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.098445314 seconds)
    (285/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.089070343 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135204781 seconds)
  done (took 36.833847257 seconds)
done (took 37.750646875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099489123 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149124028 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094832238 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139858491 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121987345 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100907828 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117443186 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097153869 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12295098 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099654145 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.122170259 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079252155 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119729509 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094313344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.120289637 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137673919 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098611874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114621316 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08816317 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110731221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.087587996 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11189307 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088878818 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102838802 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095715589 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117172016 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09104799 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119881758 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088111743 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112299199 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086083469 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115793024 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085644528 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121782838 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090177119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112185616 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09645308 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117831868 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089720615 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112986726 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092469149 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11237287 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091031815 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116586189 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088552835 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110474589 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087762385 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123228444 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113898786 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11369922 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092002857 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119622604 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095233768 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116576414 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085258974 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112729339 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08759087 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140186459 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111082521 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089083979 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115910211 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092838315 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110040228 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088177825 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111442635 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095743728 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.118589483 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.088120556 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117639109 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091659382 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106963371 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.088684623 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109030579 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085914595 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092608048 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119529831 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08194451 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11326369 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09074825 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114180631 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086889293 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111059817 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088456146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112840788 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085829505 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10428971 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08510459 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114469831 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086865624 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112816129 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090887406 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.11524018 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089821526 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119845024 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087102726 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113211556 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088005635 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113181893 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089009639 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111076955 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08295501 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110815108 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092107253 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.10880797 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088663283 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122641616 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086015503 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11513332 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086835884 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111413025 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10108042 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11976299 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088598438 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113451969 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084097882 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115747206 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085314178 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110131506 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08544936 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130847955 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088900816 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113489852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085801661 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114770301 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097702403 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108226851 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.086957169 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110401082 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087592477 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114666858 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089030082 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110171164 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08640005 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106205513 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087696702 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109034302 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.092801453 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10919341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08793807 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110995531 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088481639 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112872211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089838317 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112187427 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085981841 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104193185 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089402254 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08546294 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114217852 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087657772 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113611499 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082503539 seconds)
done (took 16.57686606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096090695 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186087931 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145734828 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148687965 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144588924 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105484462 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124197489 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143692749 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095621749 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141937913 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14388814 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108723201 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149667306 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120222442 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12998738 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094964633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117538443 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103949978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153612455 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138228298 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144646269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09608358 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142004008 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139705033 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093460487 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149430765 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121989121 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095509353 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122261642 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103180305 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136865606 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122019239 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096789426 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131882064 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101175256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119574913 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129221719 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091536634 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120099147 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095330061 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133422494 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131166006 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092104468 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127587569 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118586377 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.099615094 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11805047 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093679527 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120142398 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089394878 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125218942 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140101049 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093808719 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121716832 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.094238325 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121048461 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120241143 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098628175 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122339571 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097701579 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120836535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121647019 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100851199 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136873659 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117449285 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097039694 seconds)
  done (took 8.862234325 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110228796 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146819262 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.124314983 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.103273565 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122727059 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084081049 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107752077 seconds)
  done (took 1.779445851 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086469966 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13954628 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118699549 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142262278 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133337546 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121183889 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127000442 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08567143 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133893602 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.119452097 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113109983 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16484496 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113125443 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098214226 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147075625 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084403978 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147628316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111415583 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09413434 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142515773 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091118299 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132453525 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123083144 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086788843 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131314464 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.088761214 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175935988 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120592477 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085326117 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089525008 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115929296 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179843598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.131481175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.095829077 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107773451 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113469774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13191266 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114483384 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.110267551 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115146409 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107018285 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116889447 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092422134 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116541291 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092546765 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125580469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121352682 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09515514 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114931506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114830319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12144949 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107301843 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112479053 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089665788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121966789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091156447 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125364335 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114855816 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114708981 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117311869 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111167814 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138193532 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131534485 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112559647 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128301915 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132132915 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108140798 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114985817 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093865772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117018016 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11303868 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115217888 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095856605 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126933483 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118343865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114844534 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137668667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09089038 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124424725 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090837569 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112788403 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086945139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.12703118 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090328417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112645655 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103662798 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124608555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090049044 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114967589 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133962955 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090710991 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122655422 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096916599 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115498985 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126056423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114089948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123135399 seconds)
  done (took 12.161585032 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08844239 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087285866 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118987746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.08780297 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112987554 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087527459 seconds)
  done (took 1.572130901 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117341579 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114917391 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102199804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119209617 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155220902 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111338999 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.138746317 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095676773 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.133230901 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125338454 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111793044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137683196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142647474 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094773729 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134808285 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09521066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136524011 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090998961 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127047892 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089747829 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130107361 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118462978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091697863 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133619692 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095258876 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119351881 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093728267 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12740151 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100712096 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122866848 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11784952 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096328397 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119082591 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097613428 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137345011 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119394189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09085769 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120527114 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09700776 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119408957 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113205391 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115505475 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10020396 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122813821 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096054362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120436698 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12166453 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094684563 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136320816 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096784146 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121703738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094827351 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119885572 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096544355 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120392725 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121349917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097681288 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136664584 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095014361 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120251749 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091115511 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120459178 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096801042 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120015502 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120111328 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098293882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119554136 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091041611 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114895054 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094539396 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12148053 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090882 seconds)
  done (took 9.138396106 seconds)
done (took 34.48556657 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673095312 seconds)
  done (took 1.658861342 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.875699954 seconds)
  done (took 1.86559469 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.735241391 seconds)
  done (took 18.747576193 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496042915 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597927591 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987095223 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162473443 seconds)
  done (took 3.227471973 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.968181643 seconds)
  done (took 1.97141003 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29992557 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265138013 seconds)
  done (took 1.558222977 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.858230053 seconds)
  done (took 1.852894724 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.524400858 seconds)
  done (took 2.525014618 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349158025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196590534 seconds)
  done (took 1.556104028 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568579533 seconds)
  done (took 1.569599411 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.66450092 seconds)
  done (took 15.671352887 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238307428 seconds)
  done (took 1.254736164 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291596888 seconds)
  done (took 1.298500602 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.668289171 seconds)
  done (took 4.671379762 seconds)
done (took 60.427926396 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09731576 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124941807 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101379872 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.121608609 seconds)
  done (took 1.442824134 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103038773 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119998502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099068744 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119465333 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10181125 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120842998 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094186557 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164515048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11886361 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096141122 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120172647 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093877918 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121339525 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093684271 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118097074 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096867729 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12367805 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09412519 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121925875 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121011739 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.092280416 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120652208 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.097772314 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118302081 seconds)
  done (took 3.676667355 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097617967 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090251842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119108415 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090800984 seconds)
  done (took 1.406958812 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100796286 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132583318 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106709598 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125623443 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107364371 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133207117 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114781403 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090470136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117000277 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10049673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116170382 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110855297 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131935695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086308976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127947852 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087026595 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.111972395 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106039096 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12563054 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125925584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.089903738 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123793181 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097455035 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129390956 seconds)
  done (took 3.712785874 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170586346 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12844273 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138475955 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097077346 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165009331 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141035155 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0888008 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141581323 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088632105 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127851227 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09198798 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167431878 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124348259 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.09202421 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116005033 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120955156 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.099465332 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123525366 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092230572 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128557268 seconds)
  done (took 3.457343149 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097992964 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115093303 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086844151 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087781563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123063552 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092207213 seconds)
  done (took 1.61615764 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.088393106 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085053006 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111138418 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085597203 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115012046 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085781953 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109268496 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086415562 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084899466 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111107125 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086127588 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109282643 seconds)
  done (took 2.175852728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.378052439 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116859522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117227597 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091094849 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122040522 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089710689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127868281 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089269941 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144737297 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090217127 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114330077 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092834077 seconds)
  done (took 2.58815351 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207965631 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094765935 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263776431 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374925629 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132046791 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163913553 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281165522 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161462267 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209137228 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111828239 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2201635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130621271 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155097937 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179429313 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138301542 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.178303487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176776572 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201103471 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148177955 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206085726 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163379842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166914837 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179137627 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150733291 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135311419 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156469806 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.091671319 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126370191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174198592 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170313133 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174353579 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14816572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137795002 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202250635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213281358 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20718781 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306377797 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133981389 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.187298449 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180847329 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228274405 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139057681 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19646525 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154969799 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128461602 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181640685 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158502391 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180301071 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103328885 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139590867 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182696428 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175158165 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204993609 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10963527 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325872962 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120735981 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145367966 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181040604 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18609022 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217401135 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168907425 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092959959 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184927144 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182291107 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178579823 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144533284 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166352739 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123192819 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176783482 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193867149 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177832684 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16429598 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.213432944 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133116907 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137115413 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167828356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154116315 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177062822 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161178565 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119028408 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123150215 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136508015 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12711916 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157960572 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120948337 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203111231 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13360151 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189078041 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202684786 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157140402 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16069093 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165622665 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166218825 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145954181 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090772161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146271975 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160324589 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158298672 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129288413 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129148523 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14320687 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126235398 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151877851 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09464242 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159202315 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133601125 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167247144 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163635337 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10022758 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164609473 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150015549 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157870892 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172044728 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185266481 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130648189 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103182288 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192976296 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1590081 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135045598 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174061053 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185398556 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.165235222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135259512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169514312 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191898637 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111278137 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215248842 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113391301 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132441144 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1514307 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159156422 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155933848 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12674565 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128718077 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15332069 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194120406 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125197554 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10736886 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174894373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125382329 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126691793 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114814148 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135267727 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140578895 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118542706 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138472811 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154820961 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159968699 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152699415 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15923859 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140422146 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193791415 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130645798 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131420046 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148360464 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117436152 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177908144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184771608 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099975736 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226979903 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167902854 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196978715 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16490957 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131178154 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176890923 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098185174 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117913201 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167168545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161086282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16209695 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182713505 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193370564 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.167632746 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152805456 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148699146 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167671137 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172715072 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154997183 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143173761 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160849365 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168150357 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093047513 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121630996 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.099017618 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141240111 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12925027 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102635313 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181562198 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164160064 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213343135 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161824832 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112165656 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178786642 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125246595 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164132232 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172358793 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138425581 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183015181 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181561095 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1667351 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141412784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176381837 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090973895 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121328108 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.104667633 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164136735 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130326996 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1316841 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114247307 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180563273 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202412961 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121457051 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227620257 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171447197 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190757378 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120907949 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.135136557 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169840932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157859295 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183996535 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105806056 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159022686 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175132205 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14368106 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188038032 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162868821 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168585222 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227186602 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154741523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100810688 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147820684 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166859959 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138942727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13555495 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145280239 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133756241 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153786687 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104409478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123670803 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181600641 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143573515 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178603741 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155926145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17207108 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124272771 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14089032 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130697345 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145109851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115027126 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171473895 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185525663 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142852999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157714997 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175988069 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100029409 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308932087 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215289593 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185462579 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134382813 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113014976 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160024127 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158584099 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163923763 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176798023 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142584854 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179085075 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156198214 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113525842 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134644572 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146243268 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149061188 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121776317 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131587313 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152563857 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143436059 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186263658 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142139376 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157826951 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164224334 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117959269 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147350375 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141577143 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201336992 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158226682 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179123203 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153657375 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137156194 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228302742 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094414239 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128312595 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095544958 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177868207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132281256 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159423812 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183147046 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224997982 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131309366 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166788878 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137099257 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117920706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130291875 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148149427 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225423104 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112721351 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134566749 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190812763 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.150021873 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12850636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132824286 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310012505 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115677677 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172890994 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115830703 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277498141 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12133305 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101561695 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158822661 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170105118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135448539 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155347992 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161350528 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142816895 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159275014 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136540928 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186988004 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20556349 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170247196 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174943165 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141748627 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156808276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163545825 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174824443 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142465174 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.144076053 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132437933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182209355 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.214461102 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.103477632 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163399929 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163537294 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159340478 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172452621 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13257829 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199977029 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129559371 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166717098 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10949592 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122302825 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159545733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184219929 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13299409 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176014674 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157688462 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102871299 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125613866 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14996306 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159081743 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113401047 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1290295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178961545 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.122937887 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161853007 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150437483 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129592705 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154688981 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144743187 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108218407 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142105608 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143967874 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105376064 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168850722 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180301268 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129409052 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177428741 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176434985 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165559327 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161724588 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14292773 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635925821 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126619715 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181884811 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146740628 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184328922 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146688109 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166791179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130742199 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149355398 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166948113 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149268215 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219112096 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16573702 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158407265 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100332368 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144105741 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143243451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129858691 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121547777 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162861084 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140718187 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135371194 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15736505 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116358929 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144339757 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136397853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18254117 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117440164 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212102986 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178146406 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108342772 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166531985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20158135 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100993641 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159394675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170839119 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139142008 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149331394 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.102121398 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132604968 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178999344 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093465801 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159961496 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161234122 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163416609 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163732211 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132514269 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130620051 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140559438 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160789353 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128780566 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152627607 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127281024 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128891068 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125510079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125917522 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158764367 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157001307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125239547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143253702 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177646535 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12454238 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101910491 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309915047 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159278395 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190478491 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120923157 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133707521 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143761846 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155284457 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151295366 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129921854 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127640026 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13021086 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100191023 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181461406 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.153933509 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154947673 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184259716 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161313437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20059683 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133184498 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232332918 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138374524 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154173488 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100164228 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128075654 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142640121 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104025078 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144861897 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188577175 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177414416 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151004904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143982284 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096516744 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126157041 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130241961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131115845 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15475086 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159304172 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142796775 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086959884 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143247145 seconds)
  done (took 76.121189165 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165622556 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134725562 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146618232 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192116997 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163974142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239840591 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20339915 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223649069 seconds)
  done (took 2.576399379 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098760635 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155579157 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138043153 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121276941 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088324286 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328386534 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135418019 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120747598 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.146132678 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.130709845 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090474992 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.56263878 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.092603567 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.122926335 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111662868 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.088046699 seconds)
  done (took 3.631347122 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.317433017 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533907824 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.161676231 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.242172712 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223176822 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.149814691 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.749368688 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.182484039 seconds)
  done (took 12.665876126 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119303705 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137866616 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132431034 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160610994 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116046758 seconds)
  done (took 1.778712225 seconds)
done (took 117.852265044 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093356856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123611955 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094872194 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124815577 seconds)
  done (took 1.537293855 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.106045397 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077790196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108920633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077613367 seconds)
  done (took 1.47402694 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422758965 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108547646 seconds)
  done (took 1.672960877 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113371588 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131940818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104906786 seconds)
  done (took 1.459150413 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102691671 seconds)
  done (took 1.216533724 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096166282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096490257 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138436917 seconds)
  done (took 1.443689745 seconds)
done (took 9.918975746 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110204616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.43478844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383089194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13630729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719525349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.377540842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03783892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154680264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136520487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116941087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105704524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698119463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.058740465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344255736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.045518489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.343852145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669655141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118769478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094423611 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11884527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015307184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088271837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089427237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118290626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667675211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421245235 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088069824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3848234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115741179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09335908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405233239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088620989 seconds)
  done (took 16.884715675 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095458249 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177937514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096452103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119465345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092234191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118888232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09815746 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130143731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179395604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088031637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134979382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087296934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122774514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088413983 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137877195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088693984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119939031 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090976812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124216441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090197936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136964976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087610379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119262529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090168239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116697854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101347951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118152284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101492936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117534354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09300674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122207416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089452872 seconds)
  done (took 4.691057822 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139285558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18548133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12695308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123231231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167066347 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118033933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172814333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155942347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181365739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117212025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105586253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117616466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124445406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118574787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108928949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117892013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091244318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120551282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095165741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119809217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107621084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116772401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090139869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120242225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088929909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132112459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088407342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130901374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115804656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09375077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121713671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08982124 seconds)
  done (took 5.024742995 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096270954 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125583714 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105319244 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134040059 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090718353 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124169317 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096894326 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118885366 seconds)
  done (took 2.014532368 seconds)
done (took 29.72850344 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106414254 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093665376 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130981801 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100301616 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127148756 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.10142254 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115702497 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099537387 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130692662 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096346069 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133820828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087108422 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118406466 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.088002454 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129810492 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093600397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135893202 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098310149 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137367067 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104098788 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118214188 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100979775 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097616173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138114684 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137667314 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108642211 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133753582 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094248731 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118577392 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090436696 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13206957 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111613298 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120461248 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105354496 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122678868 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092222365 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.117973016 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091076407 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13241744 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0996646 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123136415 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.0998756 seconds)
  done (took 5.826250395 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115297671 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161397589 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088545534 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119065622 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089149043 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.157338213 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.152478196 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.08863588 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.117927395 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.113521824 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143893716 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.08881494 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118909615 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089637932 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.117161361 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.091255855 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140749602 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.113778966 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150129552 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.119355809 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162997145 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.148978187 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.122964112 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142853737 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160851324 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152870839 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110564862 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155816219 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115901732 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118627147 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.147449752 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.120767802 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118134862 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.089507367 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.159005904 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124315196 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146790052 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.15906987 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.148180001 seconds)
  done (took 6.113512708 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097585454 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131657871 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.110812197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183194687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164197723 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102460691 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.128285056 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.106460551 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134141284 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.089671687 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089658821 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148069029 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138185658 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097296616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119400686 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103476906 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138347609 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090570139 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123634872 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107762692 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136417887 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101806129 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131067368 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098778332 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117827057 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097877909 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121795936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103940593 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124101839 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096909553 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122223131 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093202562 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121743244 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100683874 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12197724 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095970947 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140803301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097258168 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13114808 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120293271 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13150111 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092483532 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141018219 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157827953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089580111 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125249739 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095963507 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127277626 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088884722 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135358009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100138576 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089100531 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133892478 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.1181706 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089251894 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133223618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090501988 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091307026 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126118898 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09511925 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137597564 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093471785 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134692958 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089018905 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125017517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088811286 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11917473 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094437572 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140698102 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092139369 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158322279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118579411 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095306227 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126531822 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.096434455 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128035205 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089973542 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102701123 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129595968 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093757403 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12977466 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092401274 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123368907 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106538831 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133256348 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127484116 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095158453 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12509434 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093662414 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118501892 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103612629 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091670719 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12413092 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106166785 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119383333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091957382 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126152492 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093908038 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118026316 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102919874 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124900862 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089778136 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129054768 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.08937183 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12304781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098176385 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123198437 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088989764 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123703458 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095713712 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118407723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092817082 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122396305 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09176135 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132107613 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097163875 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121724762 seconds)
  done (took 14.410276768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234634371 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216785191 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191843785 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300398319 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.14219053 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116851716 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212479884 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165745195 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0894121 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160285556 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177136851 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187261849 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176940035 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186661809 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173936221 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121578385 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107709659 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172228021 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215602795 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29810568 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108885688 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135464778 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161717882 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159888068 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107432989 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135888469 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142156813 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110676173 seconds)
  done (took 5.853034902 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105958203 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15591693 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097561102 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145918795 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146809603 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091128406 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124763924 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.090815417 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133205964 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.10482405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121375099 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.095893603 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.127264739 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099651236 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120366467 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098098071 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130239484 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099165189 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123096449 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092773809 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133665711 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107346155 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126363012 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091829498 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13688451 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121560199 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092442341 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141341134 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127795033 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115543902 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118184596 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100048287 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134076865 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090475842 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09272715 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123210435 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091261779 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.122995728 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091237485 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117702813 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089831268 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.11138927 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092275942 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135650811 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096521443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118880005 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09503326 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125650405 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096431124 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116268645 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092085232 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091868509 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.125116541 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100899028 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125110994 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096163296 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.125338925 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091923007 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129784237 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092340139 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118451593 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091371569 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126685844 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094061629 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129440971 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.096019574 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12229991 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.09188147 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125543264 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096341001 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123448742 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098609492 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116509622 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.092349032 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12963142 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098512579 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123425775 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091909863 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092248551 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120421547 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07766045 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119468749 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078159592 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124530374 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089943207 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.090855901 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125283916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095350523 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137155828 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130080908 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097438131 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121418371 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092411967 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124794421 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088160493 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124355578 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107776843 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140388726 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088920844 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119134174 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105141868 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121900759 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088964785 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.112217848 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100745807 seconds)
  done (took 12.766893847 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131650091 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171324615 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122187691 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109370828 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15596175 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162426236 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098959606 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127290458 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.601645455 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109221522 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12487088 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098899211 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124378782 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104028049 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162027091 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131213981 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091248553 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135296173 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095433238 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174796792 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139627388 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.129782497 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160721453 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124623033 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096093336 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.15732716 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165266641 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103713078 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133283981 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131695347 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135460353 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.166280739 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.132030359 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126422374 seconds)
  done (took 6.094303216 seconds)
done (took 52.181745165 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.213471744 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.433459405 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.210155599 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.209992862 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.283208837 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.231285833 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209276086 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.403753145 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.978581513 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.201888698 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.209885153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.209399518 seconds)
done (took 27.9395716 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.245749662 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.375069361 seconds)
    (2/2) benchmarking "String"...
    done (took 1.50775352 seconds)
  done (took 4.027867653 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.213200152 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.217137343 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46844602 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.224721339 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.214949142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.231996593 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.226497679 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.21877345 seconds)
  done (took 15.947147944 seconds)
done (took 25.576808347 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.296048834 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.410771814 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.478854452 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.229729285 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.231744243 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.225787123 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.2198263 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.267597703 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.229939602 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.226460742 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.216051779 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.487100113 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.235334388 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.610978542 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.219839683 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.214043261 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.230478679 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.46577529 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.219783973 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.228267616 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.220122914 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.203695609 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.221187708 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.240432732 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.227545157 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.230677415 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.255712359 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21695656 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.422042457 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.237022624 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.26354683 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.217863661 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.260540848 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.230259076 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.326858894 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.247553698 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.421009389 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.227809675 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.205025523 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.217742826 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.430603618 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631362805 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.217608881 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.228977324 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.219002234 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.291024794 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.211026095 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.951858343 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.224114007 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.23066786 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.227573703 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.608158964 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.227947291 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.228211275 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.232465515 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.480426043 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.221808274 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.264580345 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.257954794 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.233253382 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.217004626 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.221114468 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.239362364 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.218405546 seconds)
  done (took 144.699549666 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.219831889 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.218325189 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.218851536 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.237176581 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.222499007 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.219357855 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.219662907 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.218271995 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.219994008 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.24850933 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.223743159 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.221031642 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.223533104 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196212856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221051511 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.235810778 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.224240432 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.236511168 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236974771 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.221699098 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.221436762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.224609507 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.238364476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.219965945 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.267532295 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.312820252 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.274861924 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.226055156 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.222411727 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.222192171 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.219943335 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227042132 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849323504 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.0742079 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.232541734 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.24740655 seconds)
  done (took 80.913257623 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221204878 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.223270666 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221681665 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.221170889 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.25627363 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222575088 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816914211 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819383073 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.958762179 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.436512433 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.224439287 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.631435714 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534965119 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.224315543 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320154856 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.23757641 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222200536 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239776422 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.25159918 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222972312 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224079857 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802236429 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.235116256 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.401245996 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.398017289 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.238737197 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258843592 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.623060055 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221899486 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260890332 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.560051874 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.27168984 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223375004 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.609784115 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.782740726 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342229377 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2261451 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258091354 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223406449 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.509025093 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.22357431 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225039127 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2258375 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.230719747 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922535361 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223253322 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.808270091 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225173263 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205274044 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22879051 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22453716 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.395414844 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.932913732 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.24608565 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.225748244 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227708105 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225571458 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228149355 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258422054 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.388171557 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.341214367 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226175731 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.228371189 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260333 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226768756 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.417417852 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.243424208 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.652418319 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288961573 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.338315905 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805274497 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224226238 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327804361 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346457061 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.226272312 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.226289871 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226362727 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.227563743 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.339407949 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227198802 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.654300074 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.405008749 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.241986739 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.65629836 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326010398 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227705479 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634038965 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227954028 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.226650344 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.985922738 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323582271 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.22900198 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.231245154 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234191387 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.658206749 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811421754 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.51274857 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.231511204 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.640672953 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.232672514 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.668882513 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804074586 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926389947 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.229420614 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345830018 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.407388793 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.244484619 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228246916 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.653309377 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230477473 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.285687891 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228677607 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.230873521 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.628356177 seconds)
  done (took 369.408618966 seconds)
done (took 596.166890065 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.938963999 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886135059 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.021471898 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.915921136 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.88072236 seconds)
  done (took 10.797492794 seconds)
done (took 11.951692979 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.420769129 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.419494962 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291803416 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424404674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261552862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439911072 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407165732 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.249209242 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334265524 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312417874 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.332597759 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282138075 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264363307 seconds)
  done (took 18.59317852 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.579976895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230346479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311760572 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568221784 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271275169 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616784846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46204228 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.247589392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427825119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244240036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243405053 seconds)
  done (took 18.361728241 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.590684211 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.232254109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313933529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615352606 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270642795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566534357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434990642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.24941522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43717878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245269544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243457245 seconds)
  done (took 18.357133225 seconds)
done (took 56.469293438 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273032912 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.404093082 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260049149 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.244800504 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240140631 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242910965 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246699744 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240835222 seconds)
  done (took 11.310510993 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237045167 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239710639 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240415598 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.237356396 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.240194225 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.236779735 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.237837716 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241219352 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.235381117 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238572903 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.238643122 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.241191918 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.237348286 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.239814077 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.236892907 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240207687 seconds)
  done (took 20.977824566 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.237791631 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.234821208 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.236873215 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.236613056 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.236715927 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.236283511 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238599394 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.236507275 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.236927881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.236908141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237453161 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.236296104 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.238085096 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236552413 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.236475613 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.236938094 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236616083 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.236883469 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.240820132 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.235209428 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236613801 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.23870534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.237326032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.236911846 seconds)
  done (took 30.848530508 seconds)
done (took 64.293612002 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.246622555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.25298523 seconds)
  done (took 5.657312915 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.299989714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.297883959 seconds)
  done (took 3.758931958 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241082262 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240132675 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.240897264 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.241570804 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.242323652 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.241450551 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.241226707 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240678591 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24095875 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.243376302 seconds)
  done (took 13.573237062 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242585842 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.242528458 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.238666353 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.240976085 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.242549924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.239309626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241324132 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.239340725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.240941425 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.238736869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.243415637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.24076867 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.241985277 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.240249112 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241321718 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.240884185 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.23957505 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.238851684 seconds)
  done (took 23.49550617 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.2561148 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.260253304 seconds)
  done (took 3.676840657 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.369908254 seconds)
    (2/7) benchmarking "second"...
    done (took 1.280416782 seconds)
    (3/7) benchmarking "month"...
    done (took 1.349621906 seconds)
    (4/7) benchmarking "year"...
    done (took 1.337712003 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.283062723 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.260026411 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.279500757 seconds)
  done (took 10.321939284 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.24251742 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.434835067 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.544411797 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825636984 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.242713924 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.245109246 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.146955234 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.245761126 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.24824335 seconds)
  done (took 14.335638565 seconds)
done (took 75.976049136 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.236783709 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.256681101 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.253988744 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.250838184 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.581305623 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.259692147 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.235478871 seconds)
done (took 16.239227639 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.228925279 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.231575003 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.224269445 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.238121614 seconds)
  done (took 10.083475864 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.234723614 seconds)
    (2/2) benchmarking "read"...
    done (took 1.574048171 seconds)
  done (took 4.969923559 seconds)
done (took 16.213807805 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239876391 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.240639998 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.237635469 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.241135233 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.239687674 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.238286635 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.24265869 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.237924368 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240899265 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239854094 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.242570344 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.241251676 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242496027 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239482845 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23964756 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240129862 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238373219 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.235591848 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238533792 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.241223587 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237674013 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24215739 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.239980314 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237670281 seconds)
  done (took 30.916746707 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.240260561 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.236573669 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.240626777 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.241303883 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.237894427 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.243648472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241072344 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238196838 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.242320379 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.24136201 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238232004 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238500563 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.241302723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239465789 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240665697 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239489863 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240572578 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239535288 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240331988 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237231688 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241373446 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238902535 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236928286 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241691711 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236120929 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239686376 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244071302 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.23882313 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241991932 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239693614 seconds)
  done (took 38.360066943 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249940087 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249874455 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240508369 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.24149334 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240200985 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.242538335 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242266219 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242064123 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.241933285 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241553803 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242936297 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242388213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242054371 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242536227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243293717 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241345013 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243068833 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242869301 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24325953 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243305564 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241997666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24256813 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.242236581 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242408296 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.247827469 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243790362 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240866805 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.244761748 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.24560604 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243604396 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.244071168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.244305252 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245297399 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.244770615 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244074008 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.245080101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248614171 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.255217918 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.244368255 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245187178 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.24456157 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.242659069 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244832066 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244423164 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244586994 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.243042428 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246966498 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24270003 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245363559 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244745487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246082139 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.242619577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.24380158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244128128 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.245027953 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244482558 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245304459 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.243616681 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.246975323 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.246470175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.244736355 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245871733 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245306235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244747544 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.24550609 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24487075 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246522807 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.244590205 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246310876 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245458613 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245805004 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246537133 seconds)
  done (took 90.758645309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.247394001 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243108793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.242999344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244186334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244507229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24695372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245854914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244938867 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244784847 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247105683 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245468139 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245247387 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243649164 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247637934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246072054 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244350081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245971792 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245439942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.246311656 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24882809 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246943857 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24601052 seconds)
  done (took 28.567668257 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250573682 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24889638 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.243882596 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247627565 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246111327 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247826079 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246638817 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25007769 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246116997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244937896 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244281732 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247664931 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246773889 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245790795 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245229607 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247182368 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246454545 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246197049 seconds)
  done (took 23.607400757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248189204 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245742984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248308438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24478244 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247473683 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249508538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246494524 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250454085 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.248994936 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247248774 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.251110428 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249143834 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.251056561 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247258387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249069666 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248323114 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249088889 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248762538 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249315478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245691647 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248903299 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251332951 seconds)
  done (took 28.635116002 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251495043 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251095689 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246597754 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249259574 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247489395 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.253125117 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250370784 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247615722 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251250461 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249313502 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246656806 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247751299 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.248348417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251178643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.250139145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248844915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249969138 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247831574 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251591884 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248053899 seconds)
  done (took 26.157446033 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252878904 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252442835 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251526367 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25207518 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253131311 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252301358 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251952287 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253375306 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256941454 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253641435 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255580872 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25329274 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254182075 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254893392 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253798413 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25426648 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255608424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254667349 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252327271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25425709 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254269801 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252677575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252728475 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254389718 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253277288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252396791 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252660044 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253136086 seconds)
  done (took 36.268692718 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256355598 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251671135 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252795688 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.25453287 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.252210311 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251434836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250528255 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.249290861 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252871574 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250035818 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253899112 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255744083 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25325889 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253877398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253991152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253308652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25133337 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.250626658 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251751575 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250472632 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.252615014 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252921019 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.251358786 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250141557 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250285123 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.253992203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250813541 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251342292 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253388582 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250472433 seconds)
  done (took 38.74026258 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.292006745 seconds)
    (2/2) benchmarking "in"...
    done (took 1.2922905 seconds)
  done (took 3.755622044 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248793927 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256220796 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251977912 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248441005 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249110631 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252315922 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253251015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24908464 seconds)
  done (took 11.180614701 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256238574 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252722199 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253281062 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251931876 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253907733 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252469805 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259209334 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270479794 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.257262311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.254673456 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260456316 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264488191 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.256586679 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253875869 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.254219736 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254486553 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254026452 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254381448 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253643502 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253853107 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252146185 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256840547 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256179451 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.252786522 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257660625 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265646628 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25690615 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257172295 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252433642 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257920784 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254695032 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.252282562 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.255898751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254236192 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254006298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.25685069 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263899273 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27611348 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260637622 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255843264 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254453582 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250509207 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.25587871 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255817122 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255423083 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256872062 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256381908 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250913213 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253080058 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256437106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259871372 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255394765 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250358997 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257304909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256380722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262070716 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.272544822 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.257839822 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266337567 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268461331 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.26786355 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278023655 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257877463 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256054889 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268612983 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.279313574 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262130742 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272375142 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.249452606 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254633387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260301921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268596789 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.28299028 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252372848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256483332 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.254172689 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25482801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255614674 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261619607 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277531178 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.254026834 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255625889 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26694923 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280653212 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253977824 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25479097 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256455731 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25481628 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25428569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265922811 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271208377 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255411502 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.253487943 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.25560535 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256692564 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.255850221 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25354566 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254091486 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251262935 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.255490685 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252127939 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260000272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.264860438 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255297063 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255227381 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263360462 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.255385061 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255439002 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262587865 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255918624 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256409835 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259701823 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262795058 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252790282 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259197288 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265716309 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2559071 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.258133716 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255861593 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257527547 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267760951 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284751549 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258279497 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256683296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263753803 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270125886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255561907 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261904947 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258763403 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.254618755 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.254472685 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.258564773 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257320822 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.257558872 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257972393 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25992279 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254267191 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.258482048 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.258394999 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259485734 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259410488 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258147103 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2591404 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258660625 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.258456535 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260791085 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264019284 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259414616 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258786351 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.260266766 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255766045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257746459 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.259476957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.259473097 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25749585 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258474875 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257991928 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.259167182 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258654147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258272568 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2599238 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259030605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261857365 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258189845 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.262068188 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.259986732 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255856122 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259314776 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.260238069 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.259721582 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.259461786 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256055651 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261231222 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269812658 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260859933 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.260320331 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262358182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258740805 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261440949 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25783596 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262448021 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270207254 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257464492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.265516747 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257773181 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260528056 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.259540953 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254152567 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257324306 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259910817 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262954605 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.266029077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271441149 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282470217 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25908403 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263256629 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260398179 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263156314 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263955952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259961419 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.261308276 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259858708 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257753142 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25998506 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26318396 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259457817 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.260998272 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.260441145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.260781412 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.260911176 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260546425 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.262231542 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257176708 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.257811293 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260559834 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260499692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258951326 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.258176491 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257002237 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258848976 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.26025829 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260178077 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268140299 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260570627 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262929036 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263973953 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260937712 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.261815185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261385305 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263790851 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266063006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268245344 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27955981 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.262408372 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267479017 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280940301 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260884931 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265706154 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263260333 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.259617838 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.2666041 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27129335 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263638067 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.262763377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.263362435 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261917916 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264039868 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.269379166 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259899827 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.263570297 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263840767 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262175451 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261146586 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263948419 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264425662 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.262739063 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264133399 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262958057 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261772213 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263185336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263114485 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264002443 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260982683 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264343237 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268167962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267142052 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.261021591 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262566089 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264184898 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.266279268 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263278085 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.26094393 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261668617 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273961767 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28310647 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268995445 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280831388 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263608654 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267202295 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.280677943 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26770824 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263126547 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263689942 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263345966 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261365571 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.261197223 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263402299 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.26212376 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262712649 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264875416 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26679773 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261689027 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261635637 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263369368 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260197633 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.261059426 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261787184 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264046736 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265900476 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263557521 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262765655 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263176488 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270700395 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28177597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261732544 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262648222 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262934303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26227392 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263102897 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262298294 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266847343 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271599584 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266581127 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272020553 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.267389433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269451017 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262963119 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26864241 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270963573 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260262794 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261954423 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.263598617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263505407 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271392706 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282293099 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26661448 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271004326 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262457006 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263853686 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264631625 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262164024 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263096204 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263190929 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273615007 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286033852 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268108707 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265545719 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262239613 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263725365 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261767764 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263104508 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269690786 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265299035 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263784674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264882953 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264570359 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264355151 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265675507 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.265490986 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263916736 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265196479 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271493394 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285710128 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269272439 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.265364923 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271186494 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265969384 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273726463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28435992 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266851603 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268125351 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266964934 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266671584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265218999 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266687278 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266244036 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269760459 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268923936 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267382309 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267117881 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.268533263 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267445183 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267926476 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28036826 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293408331 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269216085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273578035 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270394019 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270819962 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281423812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.268038452 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26982233 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272517545 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280588965 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279545324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26904511 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269782523 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266319784 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269809664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26698427 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.268825017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266179782 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268507377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270043994 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.268294842 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273398394 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272260837 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26889081 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269797378 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272496418 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280445353 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27454697 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270191451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268349339 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272375786 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268717817 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271156344 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.270892676 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269769213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273278146 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272708354 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279722948 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27727369 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271348051 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273107434 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.27322598 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269185347 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271396628 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272221286 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274026646 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272387093 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272385922 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.270531321 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272633304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270615903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27202227 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27053866 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27266499 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274858701 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279227597 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273638225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269354393 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.270235423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27167859 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272084 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272878241 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277789573 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275793679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285283726 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283806977 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275771583 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272409927 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276932039 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282040115 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.274500591 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273757253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272868961 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2743709 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273081439 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276762668 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270053938 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27812508 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270704509 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271990088 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27978191 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292663274 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271787536 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27439325 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276543998 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273999282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270219931 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.27417966 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272214637 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279246573 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291199476 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274048386 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272849222 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272890708 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27385543 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275828828 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273398361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274848584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.268758224 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272217162 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272922777 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272342274 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272311012 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272872542 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274257656 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.2770506 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.283728572 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272246959 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275787829 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276507091 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.273612495 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273455535 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276441905 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271797333 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.271638853 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273699996 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274410212 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274124107 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274935377 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272232286 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27688809 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274380475 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270432814 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277806569 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28749463 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2850802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274289133 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276132835 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276540145 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278161766 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276814973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276564206 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276071452 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278639844 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27326419 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278329438 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277282815 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280417461 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292951961 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297459158 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278797688 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.279097544 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278217055 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.276174461 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274256378 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277931931 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278822513 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280147945 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282443174 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277817386 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284216159 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295556209 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279215742 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280894456 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280845359 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.286407509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281405489 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279234629 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278199724 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284698011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.296136962 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279498009 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288147714 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306631037 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298136689 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27819269 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278142641 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277521167 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.279935011 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.280231851 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279042948 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.277598105 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276968833 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277737555 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.282359955 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28574901 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.282646657 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281213294 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279171053 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280092475 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28200366 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276374515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278529048 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.281314569 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280279085 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.279724562 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279670686 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280775588 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288774343 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.305714181 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279698818 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281037249 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278727924 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283455374 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283944092 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29125184 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290156505 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.280208262 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280818259 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282317722 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281003544 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281011731 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279800698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283770075 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282239936 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277673989 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293581474 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307018899 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283869848 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279146296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280551236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281130846 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282696224 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282992721 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280690003 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284651507 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.288655567 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286060717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282734302 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.282996941 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286037 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291124034 seconds)
  done (took 756.880319411 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280130427 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280669447 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279170573 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279218643 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281927397 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280127919 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279567058 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277497682 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279159635 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279284069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279148097 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281801232 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281505389 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281344111 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277202882 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281681101 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282636854 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280558284 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281417005 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280175183 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280137982 seconds)
  done (took 28.081724177 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.282661838 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281905722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281446949 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283857697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281209366 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283939525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282540831 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287548286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285110344 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281979568 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28416624 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282507711 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.280436547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282067573 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280987133 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285529124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284978394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282300338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286619418 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283088574 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285237153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28254731 seconds)
  done (took 29.430840984 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288535716 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.286244492 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284734037 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.286394582 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286174929 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.28424392 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285364133 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.287121691 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.284815827 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.288315369 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.284810727 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.287496118 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292152234 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.290583501 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.28703033 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.286933452 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285799549 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286681126 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287004558 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.283930775 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.29224714 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.302375359 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.284777606 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.284991639 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285872131 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287483676 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.28659791 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286271463 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.287228526 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289647129 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.287672553 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.2857424 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288077535 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.288664697 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.289730259 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291338798 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28880649 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.285949842 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.287231104 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.297087093 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.309852894 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.288958249 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.292991131 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.30613633 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.288577392 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291748177 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29525855 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.286471176 seconds)
  done (took 63.072543493 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28968117 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.288706987 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285235248 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289897926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288987626 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288532652 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.287870776 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292592167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.284961511 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28461455 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28901624 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289378643 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291346155 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288574858 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289645322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286910173 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285213148 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284445053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286460313 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286249335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287995798 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289671464 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289237086 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286418759 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288246745 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287615976 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289299931 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288593796 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286081045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287293386 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290961135 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289228046 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.290245077 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287604486 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288452348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289557373 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290926884 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286285314 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29075803 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287874359 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292170681 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293205419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291178457 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292373727 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28702038 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289827506 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290681148 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288636736 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286972936 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291301995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290808595 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290574535 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288903045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291654119 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293898977 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290504808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288561474 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28953848 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292341975 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289028309 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288290322 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290495265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.289659854 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292046964 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29217556 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.288885896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28954849 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291063388 seconds)
  done (took 88.86679946 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293142729 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291357191 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295187379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292400748 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295201631 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.295105737 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294636246 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293308266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295741092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292589664 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292116387 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293484643 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.293380744 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292131638 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29320409 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294799062 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292604952 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295063026 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293357849 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29310911 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.294258343 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296848133 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294246584 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296029704 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295778424 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294226615 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29688266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296796778 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296596798 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293474919 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296318288 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294626717 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293902308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294746456 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.295038518 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.297419352 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298620118 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297007351 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294357057 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29539282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296850003 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29701587 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297285476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298573789 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294808787 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293548468 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294378989 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295253448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296645226 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296154949 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294882919 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295816504 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295563155 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296789145 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294432248 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296018605 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295953493 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29632559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297403229 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296134725 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295632683 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296567361 seconds)
  done (took 81.50383345 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301599455 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295725033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.295609159 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294894277 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297796606 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29529872 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297713545 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296102622 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297023923 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.295787007 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297299068 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295172822 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296348015 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297823236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295705303 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295395141 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296087283 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296368597 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297819097 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295325078 seconds)
  done (took 27.141683237 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293746446 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297243964 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296419223 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295756326 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298041086 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295592542 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298654702 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299040524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29709775 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297922384 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299125719 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298445295 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294412475 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295909655 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298230806 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295110064 seconds)
  done (took 21.961745496 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.296652143 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299252389 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298202247 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299213215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296913277 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.296421348 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298323923 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295422512 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296374693 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299077017 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.300053289 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.299174405 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297448868 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297821457 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.296746591 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299448764 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296817043 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296502594 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299006412 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298309808 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294959296 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298064132 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300686978 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301863487 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298188611 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296026008 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296972395 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29766728 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295849834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298518232 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29692607 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297921569 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295505732 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296928523 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.300746212 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298487383 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299485461 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.301831703 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299927036 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299354109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300392549 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297873898 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299885848 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301383247 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298565163 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301009891 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.298501265 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298310885 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.29959669 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.299553153 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301417809 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300982695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302620399 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304456991 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304216633 seconds)
  done (took 72.64532147 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302267789 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303739307 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298087894 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.303285756 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302735414 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.300059019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306090755 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.301378653 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301554626 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304022348 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298991453 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305311384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299013211 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303655817 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300243646 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302131162 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299572751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29927637 seconds)
  done (took 24.646106963 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30054342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299344578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.303746898 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301177887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300869111 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30312286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302772222 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301312364 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303702731 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30070505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301990593 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.30456649 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304137282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304152059 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303602376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300501098 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.30621821 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302475992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.301871923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301841522 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304471096 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303665514 seconds)
  done (took 29.872817301 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.304619404 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.303183402 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.303868121 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.320726854 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.322112137 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306692653 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.306550909 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.303108455 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.328059063 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.357385016 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.35102355 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.324372696 seconds)
  done (took 17.04965794 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304303675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305678114 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303857999 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304680278 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30717684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302611919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301271503 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302019394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306020194 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30438914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30324664 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305104659 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305778895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304866405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306759574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306010085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303674711 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303995359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306311475 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306840839 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303740744 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30730711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304525161 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303584081 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303223098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303812883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307235908 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306137451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306916221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309538321 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30701905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305349765 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309030251 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30711396 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307536252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307736913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306176551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306622163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307884277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306801948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307559618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308201102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308247403 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306452458 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307152813 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305021034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304845473 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302700359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305631616 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309938136 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308940718 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304983463 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308781949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309550386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308053856 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309792289 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305931067 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304471941 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312459492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307146784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308058445 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308999218 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30516151 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307578001 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309439823 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307623301 seconds)
  done (took 87.435068702 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308180943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30713922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308619038 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304830836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307580684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307928038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307508899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306591107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305568789 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306061162 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307305699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309247158 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307581215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306662734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309253183 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308942636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308786997 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307823056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309227842 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310417312 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308561843 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309779899 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308155725 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308018752 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307580438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310360503 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30935936 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308715703 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309204396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311208233 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311782014 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308264538 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308956814 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308696782 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310218601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308491443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309081354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310512633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30887916 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311773285 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309224135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310569681 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309916084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310741243 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311848878 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309738587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311443913 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310230653 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309646217 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310048706 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311930428 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310725968 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310698443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311014361 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312534716 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309370853 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311093193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311201902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310675302 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314091419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310041744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309357949 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312325408 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311896145 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309512749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310238526 seconds)
  done (took 87.648503513 seconds)
done (took 1774.347907675 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473719749 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.432004332 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312414304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.314611077 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312125334 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.33760581 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.324910209 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.310898738 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313286531 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313107687 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.314777572 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499915719 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.308236122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31127887 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313041704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408416354 seconds)
  done (took 26.827635793 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.345574801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320831853 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.436951793 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335291027 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343791048 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49651066 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.370374271 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320155636 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485636622 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359639565 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.314762288 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340147638 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317366769 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310524678 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.333471642 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.498385996 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559744555 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.318845304 seconds)
  done (took 29.036799386 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.754527737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.339004913 seconds)
  done (took 5.322987776 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340430897 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321235319 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.321854445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318790777 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.309852526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.309477812 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317518272 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.317094261 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.321070253 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441447933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320729689 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327926776 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342805178 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.321841056 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319589564 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355565613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.465272056 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315505881 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315311957 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324189896 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319909913 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405501335 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.358114019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317546824 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443340688 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32456189 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.324843624 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.329315248 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.475721836 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317305704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319582159 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319692288 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320153355 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.199508655 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766262439 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.314631155 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342605896 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327471915 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.317209691 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.457326481 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321265169 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327515513 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.315442244 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.748078065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468014985 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.432906822 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.329967961 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337223958 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32603534 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381181731 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319709319 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323457067 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365689241 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.113335727 seconds)
  done (took 84.378141873 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319897828 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.312388847 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492815135 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330228043 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31442511 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314554319 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314487102 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.599368973 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.378619244 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314644698 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.634181486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863016753 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330582663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.349733273 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.177938982 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.361701827 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317195279 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.312724887 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330206685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.313831812 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860301847 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318729115 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314276138 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.471735898 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351415904 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813947838 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.314753054 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314189902 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.313978644 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.313520985 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.815882394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329074159 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364192501 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314294643 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.578174298 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691076035 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652090403 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.322519988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348069678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.31485708 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.333388236 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810454061 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669435098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317742785 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333992012 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822608529 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318950691 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.321518561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.324180733 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562272407 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.315764247 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325482891 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317215306 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.317760058 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.317665644 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.384899896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383412691 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821675044 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319235255 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314243742 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345542745 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.320837777 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328924679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322621398 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.320428441 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679871864 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.462637828 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319459245 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6791033 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818460626 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.332442944 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.896146766 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333049739 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.350126576 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.327166063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319460711 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316665426 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821800199 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.333155466 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315214298 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664846891 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318407874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.634612911 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33438879 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320023439 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871880541 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.32659943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.321594416 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.31837522 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.332426709 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337622629 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320999049 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.601841537 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.349473271 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319344534 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.319573574 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.32047771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316849363 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.324300277 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326341518 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885818661 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.342335053 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319204136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322473839 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320065299 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.322763327 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.321167129 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32010963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583709621 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316677536 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.325760342 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32156247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317962427 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.342555184 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.468735216 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.321046634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.635184758 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327418155 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318534805 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324310195 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320080217 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353491306 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318296676 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327974869 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.234004897 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.623873553 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336623543 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319623489 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322384864 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337158046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319135477 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319522326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.342793998 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.322605209 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065726708 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.360565943 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347207069 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.32110069 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326511772 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324884411 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320287108 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326223393 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620950224 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593568985 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468254692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.32267624 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.324020709 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044631611 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34937933 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500256799 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341216502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322560502 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56999283 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.508295956 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322892504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.319967686 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.32476075 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579132617 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.320272625 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630473275 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854460748 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.338087844 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327631971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071672588 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057556437 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325763715 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.327717711 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.638816158 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.339212802 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324677607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.323286792 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32384832 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.340927831 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.340412588 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32136899 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.324399903 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.325735293 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.454286712 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513925151 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338752089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329481743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828707381 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415103423 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321560096 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326554435 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326766489 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32562258 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377612703 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.323739289 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.34222157 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.327986467 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.327206634 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.899759944 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.327667458 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.328925179 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515884612 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994232686 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.342406431 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.32728772 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.348256267 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.199310363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.850377845 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337031892 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.642687341 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.33401689 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.364095663 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.32800528 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396508065 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853304139 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328110796 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327501276 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.965580995 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.342537266 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.852571034 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.327021363 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.33836459 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904583815 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342868552 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.32787141 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.322931172 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324055942 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.620196821 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.324328614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.349420638 seconds)
  done (took 495.178340719 seconds)
done (took 641.967061312 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325850249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326323831 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.315092853 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.329995383 seconds)
  done (took 10.542892727 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338817746 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.335844218 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.336284437 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335112032 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337246341 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.334870323 seconds)
  done (took 9.264513569 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.33051349 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.328731491 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332338481 seconds)
  done (took 8.238959918 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53957711 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.348329576 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.657775307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.350999104 seconds)
  done (took 9.144433855 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336335286 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.33675812 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.337613879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337675953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341573597 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.341090096 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.336812072 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.338273243 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339902804 seconds)
  done (took 13.292572075 seconds)
done (took 51.729531559 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.332791583 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.448368663 seconds)
    (3/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.317733529 seconds)
    (4/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417049882 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.227094819 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.319529705 seconds)
    (7/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414038589 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.33149652 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.57713217 seconds)
    (10/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.432332272 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.371802756 seconds)
    (12/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339596574 seconds)
    (13/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.318759652 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357248249 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.180870742 seconds)
    (16/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.334012153 seconds)
    (17/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.320899271 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.327379543 seconds)
    (19/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298510079 seconds)
    (20/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.32504874 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.362101406 seconds)
    (22/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.076002533 seconds)
    (23/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.493313953 seconds)
    (24/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.327275519 seconds)
    (25/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.30798866 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 2.329882202 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.329121478 seconds)
    (28/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.333581009 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435066123 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.963778986 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.341320123 seconds)
    (32/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.431790904 seconds)
    (33/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.318837119 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.320628762 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.325472006 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.331931567 seconds)
    (37/286) benchmarking ("sort", Float32, false)...
    done (took 2.349902843 seconds)
    (38/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.320515275 seconds)
    (39/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.381593372 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.445295302 seconds)
    (41/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.07898552 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592685426 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.318742831 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.525301534 seconds)
    (45/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.934272737 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.332853511 seconds)
    (47/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.479998943 seconds)
    (48/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391195906 seconds)
    (49/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.322100091 seconds)
    (50/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.672311759 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390151215 seconds)
    (52/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.334591068 seconds)
    (53/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.673613413 seconds)
    (54/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.444293028 seconds)
    (55/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.322230624 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.366118742 seconds)
    (57/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.346970817 seconds)
    (58/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.324325329 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 2.334056988 seconds)
    (60/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.08887343 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.432953881 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44722606 seconds)
    (63/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.078923589 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432713929 seconds)
    (65/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.328202665 seconds)
    (66/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.345730289 seconds)
    (67/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.359821617 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 2.335002305 seconds)
    (69/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.36078865 seconds)
    (70/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.321690574 seconds)
    (71/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.713563087 seconds)
    (72/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.453430493 seconds)
    (73/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.305572053 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.663738527 seconds)
    (75/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.355055476 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.321243819 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.961908821 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.339797234 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.32001507 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.335323701 seconds)
    (81/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.449703186 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.324851142 seconds)
    (83/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.440115118 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.724965152 seconds)
    (85/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.338160497 seconds)
    (86/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.923484327 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.900941839 seconds)
    (88/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.36291241 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228048764 seconds)
    (90/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.333172418 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415137445 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553842774 seconds)
    (93/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.321521878 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360357863 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.365218013 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.32195893 seconds)
    (97/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.357958239 seconds)
    (98/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.322725923 seconds)
    (99/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.349306601 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365770314 seconds)
    (101/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.322401774 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.109027791 seconds)
    (103/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.546374048 seconds)
    (104/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.344825592 seconds)
    (105/286) benchmarking ("sort", Bool, false)...
    done (took 1.849022484 seconds)
    (106/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357301823 seconds)
    (107/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460251729 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.575839702 seconds)
    (109/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.333293901 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.854360474 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595461931 seconds)
    (112/286) benchmarking ("sort", Float64, true)...
    done (took 2.33608801 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.320230506 seconds)
    (114/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.33006509 seconds)
    (115/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.376691503 seconds)
    (116/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.482734415 seconds)
    (117/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.345865554 seconds)
    (118/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.422396132 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.35227274 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.091955475 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.331619894 seconds)
    (122/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.604121868 seconds)
    (123/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.598618254 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.533224763 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.222522482 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.323419361 seconds)
    (127/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.364605296 seconds)
    (128/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.421392253 seconds)
    (129/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.339230346 seconds)
    (130/286) benchmarking ("sort", BigInt, true)...
    done (took 2.337925234 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.467559005 seconds)
    (132/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.337676799 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.336199027 seconds)
    (134/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.332059083 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.354019852 seconds)
    (136/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.33575096 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.113086243 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.364248318 seconds)
    (139/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.333387816 seconds)
    (140/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.328435948 seconds)
    (141/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.379166702 seconds)
    (142/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.342237955 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.364699652 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.459909117 seconds)
    (145/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.795142757 seconds)
    (146/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.326836694 seconds)
    (147/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334800575 seconds)
    (148/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.244641829 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.355126769 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.323803714 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.819768687 seconds)
    (152/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36405503 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.339280516 seconds)
    (154/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.355125669 seconds)
    (155/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.389965507 seconds)
    (156/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.384275056 seconds)
    (157/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.426210528 seconds)
    (158/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.343701942 seconds)
    (159/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.461282724 seconds)
    (160/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.343446415 seconds)
    (161/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.340061472 seconds)
    (162/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.88282304 seconds)
    (163/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.339723967 seconds)
    (164/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.325300989 seconds)
    (165/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.669950206 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.17599342 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.364766223 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.340930403 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.334087452 seconds)
    (170/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.441182703 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384628951 seconds)
    (172/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.425756472 seconds)
    (173/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.350082132 seconds)
    (174/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366221119 seconds)
    (175/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404230585 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.325020844 seconds)
    (177/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.683468622 seconds)
    (178/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.191725404 seconds)
    (179/286) benchmarking ("sort", Int8, true)...
    done (took 2.338812855 seconds)
    (180/286) benchmarking ("sort", Bool, true)...
    done (took 2.343966071 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.348187803 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402136198 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.738800952 seconds)
    (184/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.371217191 seconds)
    (185/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.11242113 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.337842111 seconds)
    (187/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.36721115 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.178975423 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743213761 seconds)
    (190/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.482761108 seconds)
    (191/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330629878 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.328162414 seconds)
    (193/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.459031993 seconds)
    (194/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.337900413 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.327054796 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.338027451 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.541850602 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.345238857 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.734591798 seconds)
    (200/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.423948572 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.242339391 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.355331046 seconds)
    (203/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.3388033 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.201653564 seconds)
    (205/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.326716124 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.329134228 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.35118195 seconds)
    (208/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.683080008 seconds)
    (209/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.593464325 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380952242 seconds)
    (211/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.342929368 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.329090251 seconds)
    (213/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.491844775 seconds)
    (214/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.331084987 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.380967339 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.347803396 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.342034738 seconds)
    (218/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.364882333 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.112637751 seconds)
    (220/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.327596927 seconds)
    (221/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.344934987 seconds)
    (222/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.358395078 seconds)
    (223/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.330814521 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.329183064 seconds)
    (225/286) benchmarking ("sort", Float32, true)...
    done (took 2.342804775 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.366284122 seconds)
    (227/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40834098 seconds)
    (228/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.329881481 seconds)
    (229/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.348160776 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.477892195 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.441711406 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182642162 seconds)
    (233/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.341587667 seconds)
    (234/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.104773993 seconds)
    (235/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.330051063 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.328904415 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.560481442 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.366921096 seconds)
    (239/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.942355064 seconds)
    (240/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.342623994 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362839685 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.347537774 seconds)
    (243/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374119163 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373024644 seconds)
    (245/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.346370248 seconds)
    (246/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.965157133 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.734864452 seconds)
    (248/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.252087072 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.367882324 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247382479 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.367714024 seconds)
    (252/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.408398251 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.333813308 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.188438928 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.347817709 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.37843325 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.338464479 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.439269943 seconds)
    (259/286) benchmarking ("sort", Int8, false)...
    done (took 2.347272262 seconds)
    (260/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.332714428 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425653374 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.464135112 seconds)
    (263/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.337787698 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.68182079 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.360290161 seconds)
    (266/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.109801561 seconds)
    (267/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.329851651 seconds)
    (268/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.877074623 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386167322 seconds)
    (270/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.852849883 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454620049 seconds)
    (272/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.835815237 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.358400093 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.356136831 seconds)
    (275/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.398117693 seconds)
    (276/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.199992782 seconds)
    (277/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.332280159 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.359885528 seconds)
    (279/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.340117056 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.368103523 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.334650381 seconds)
    (282/286) benchmarking ("sort", BigInt, false)...
    done (took 2.378047742 seconds)
    (283/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.334372676 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.344039763 seconds)
    (285/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.372299923 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.173467714 seconds)
  done (took 567.625994035 seconds)
done (took 568.872536631 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.381144938 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395281813 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363774612 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.385128738 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.470637696 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53429131 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374046481 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.365082376 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.410141116 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412641008 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359072531 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.537800135 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363943684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361925997 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361977958 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392077527 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.353278706 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.356516239 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.379093767 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.370907602 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377581356 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358895335 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411266746 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.538593623 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.366636333 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365580155 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.365090068 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.379749515 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.473876004 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364701905 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363867303 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.369545535 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350635192 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.359272237 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.354296461 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.380734204 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373105439 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.371798809 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368114855 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394128893 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.349635667 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.358614175 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.36158155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.362706855 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.363159096 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.366943871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36208092 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369933305 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391297767 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391887496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.361129983 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.372977716 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.36519426 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.363357472 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.373399546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360511258 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.365482415 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396777763 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381880139 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39570713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.361299672 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366872694 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.365438441 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.378392674 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.370993702 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.354151957 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373501638 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367996058 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355273132 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.366041061 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352704376 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.384753364 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.366092822 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377074943 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393636632 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.350895719 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.356370144 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.363030858 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.371167534 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362407046 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374255372 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394289447 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.369789747 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.364835544 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392489088 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539953048 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.376746898 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363113508 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372456062 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.384150202 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.370891135 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.373678014 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.367716232 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.360289703 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376237287 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370409325 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368383096 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368832656 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368317881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.374832379 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352936115 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394349237 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363616269 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.366535202 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.367606614 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380981232 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355886844 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360610461 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.388916067 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.413128231 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.368753881 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.365686159 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36466948 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397696338 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.375633363 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.368662159 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.361219913 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.365730117 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.363409301 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379067801 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369001873 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.362514539 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399827874 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.37016956 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.362583687 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.360322712 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363098941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39608213 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.486956122 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.379022735 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399007048 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365610744 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.372785455 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398380892 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403452277 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398334559 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.370016367 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401630572 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.381352641 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367044939 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378346357 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380480937 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371160258 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.377642919 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364800063 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.398687932 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399655378 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398280661 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.391552269 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491614449 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367331718 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.355946306 seconds)
done (took 227.106798425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427299936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.36340547 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451582319 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365447866 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.465131867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469870436 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363193552 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.363117863 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36362319 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.76514407 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365272924 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365546538 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.363757583 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36471264 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.450363411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369229324 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.366264305 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705921002 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368949248 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.439387538 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.364663229 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366012807 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370456223 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749432103 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.366690614 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.365616816 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.442558965 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.370428958 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717149462 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.36544776 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.36805339 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.712749719 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458164925 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385048905 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37617239 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.375741823 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476331902 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.383063309 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.456381114 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447907712 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450426369 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.404863182 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.367347767 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.36811308 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369038501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371579078 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369179386 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.39596123 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369327013 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366095781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707305907 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376845278 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367438366 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370752879 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369317168 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401248293 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368616118 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.372168777 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461552642 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.373940359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.431079103 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.752229322 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.74679679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370727198 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.371878921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370072879 seconds)
  done (took 106.794228835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435876024 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443394982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.484657852 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.386306286 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.422204499 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.488146406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.386283311 seconds)
  done (took 11.322271667 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376850766 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371759915 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420746955 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420895543 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370679392 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.584137519 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370188377 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.381527483 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.3689547 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448133204 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.372565991 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371126892 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376683809 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.368890558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418980146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.380420196 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487934463 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374643507 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369857858 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521983744 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371184815 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379674022 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445930055 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383519754 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.372857855 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379619571 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.300692167 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373028767 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370325506 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.371734373 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369266231 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.472461335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373285108 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.370113294 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37026515 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.532815909 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373724282 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369157705 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.372239911 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.365076466 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.372720178 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.372864133 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.37551479 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.370469544 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.373567796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398081127 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.372929556 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372138989 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374174825 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.373236303 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.445296489 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.373214558 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.372310282 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371119439 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.449837619 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380142218 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375094117 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373177217 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374177206 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370722879 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525262317 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424642897 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375111653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424209376 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374705114 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376171891 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.37473058 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375000507 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466483901 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.374680344 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423536186 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.37322388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.594452084 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397857859 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377792992 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377717828 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378495685 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375772808 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.372170798 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38330708 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.372587127 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378311396 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.383413564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371708138 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373382979 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.556446719 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.531161739 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375079862 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.39016125 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382271696 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.373903564 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.45141941 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377938828 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374203963 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427714173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491642437 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.453025325 seconds)
  done (took 142.002896123 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379791432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384768248 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378620844 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399954585 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377805289 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.375457935 seconds)
  done (took 9.577112356 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379007865 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380216799 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37659753 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.37581235 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377308384 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3787358 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.376973906 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379507925 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.380943868 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.379242333 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.378086001 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379332749 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.380343703 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.377471512 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376322182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376011222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379376218 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375917252 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378717964 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375479814 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.378789928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378506754 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379667836 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381539365 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385836946 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3781433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.383227162 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37729237 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.379184961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389222022 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39648548 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.379484913 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380021049 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.385793141 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385687286 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380108338 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385096383 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380089222 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376873566 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.378871868 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381314656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380985031 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380077379 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380647316 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382423574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388156737 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387209663 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392166378 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.3806699 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383208586 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.382292864 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379490378 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383356757 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.382094396 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.386880102 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406368231 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388129094 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.38595866 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.383366389 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383557956 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384371361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38158556 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384855712 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386954587 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380895823 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382476952 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.388398008 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390342223 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385957913 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381921467 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.38437674 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382173122 seconds)
  done (took 101.799135909 seconds)
done (took 372.767035093 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.826819874 seconds)
  done (took 4.114308469 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.485503895 seconds)
  done (took 3.774155122 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.085827798 seconds)
  done (took 23.383558143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.410019503 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.462267665 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.392897739 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.375408937 seconds)
  done (took 10.929131229 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.62973098 seconds)
  done (took 3.918023247 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.376686194 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.381653483 seconds)
  done (took 6.046136037 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.706650002 seconds)
  done (took 3.995141825 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.814673123 seconds)
  done (took 4.113227354 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.392656952 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.391871484 seconds)
  done (took 6.083347388 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.362621126 seconds)
  done (took 3.65103474 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.527279515 seconds)
  done (took 16.817172884 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.389999528 seconds)
  done (took 3.682384624 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.413829684 seconds)
  done (took 3.701416599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.038449243 seconds)
  done (took 6.325946288 seconds)
done (took 101.822701055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.377015751 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.371806386 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.373404274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.37516364 seconds)
  done (took 10.784696966 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418556236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419864108 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419654827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432889238 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422076063 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.424354945 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416083437 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412950645 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430306087 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.419088878 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419800502 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416338519 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417953175 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409459013 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41975135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418813398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.428410345 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.419476092 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.409445802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.421784164 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383435804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.43002246 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421722896 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384030357 seconds)
  done (took 35.305215345 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903999232 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.455455726 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.538606002 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439011944 seconds)
  done (took 7.624317298 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438149593 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437503043 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450882227 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490962698 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.520886447 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450974863 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.411528664 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406442503 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.39396495 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440186742 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515961317 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457675444 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53214616 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387014355 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572730055 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.386941812 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386209399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436923878 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490118139 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.53214419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38527289 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436584873 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441153792 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457847781 seconds)
  done (took 36.150766596 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.386022667 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405438767 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.387033976 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385445479 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393108014 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.386410849 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.386922378 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.387446184 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.387136233 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.392164976 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.387026593 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401445934 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385996231 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387945626 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392702111 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386647447 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39491162 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386263273 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388103193 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.393912609 seconds)
  done (took 29.095196507 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.381130098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.381107109 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734422476 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.636576143 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.383712579 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.3812084 seconds)
  done (took 14.19189594 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.457685728 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.617940428 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388552039 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.754931952 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.831251041 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385245319 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389779942 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.642872528 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.963608593 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945779787 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.446511097 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.460640561 seconds)
  done (took 20.580477471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.393555834 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.383456271 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.390666901 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.3998162 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.44549339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.410231132 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397036737 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.383224848 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448314726 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.465655321 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.409900472 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445299924 seconds)
  done (took 22.268280142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473398456 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383999233 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385552193 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413921851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381936226 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593160026 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389037855 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139748725 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.405619638 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657487417 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397835297 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474739355 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640169585 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382309891 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387362811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.37103531 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607534367 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883202718 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388180403 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386251477 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413965607 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385182234 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387227168 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608966897 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387636284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385934969 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648509893 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383676378 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682451707 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403150665 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399671032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387389077 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661676437 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06798439 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502134214 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607992803 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404562035 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386319024 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.385436116 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.383695906 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402217975 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389718063 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398192051 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386454567 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384942758 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38721695 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154863878 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.411395076 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.384221915 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388266931 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655876514 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485291851 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392319642 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386379435 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470804431 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384530788 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392658338 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486698509 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962641001 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386696081 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390561507 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.405272863 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386640611 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402996304 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042997948 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395905582 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393203552 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392028201 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38898654 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389575742 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405481326 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388605266 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.417493874 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391071328 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116241415 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394265158 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396184162 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951900559 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392464666 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.390402638 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616992774 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391153392 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389657455 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.388421988 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389680556 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116717295 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40156739 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.375112699 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41292087 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13922264 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632959839 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418083019 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421487642 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622663205 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.37540505 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394422122 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.398780054 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393155863 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410028763 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151932762 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409805737 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.391907967 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649513763 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.604481884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394983084 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391026448 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901340314 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416832872 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408065641 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390308801 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614765097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.995960768 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410112789 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393268821 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414635206 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391368502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153394936 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402123404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.496107372 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389336588 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673547213 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206526505 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394689401 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458013399 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397331148 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392483251 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400726447 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396712292 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393009628 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.605196117 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415112427 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404106283 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.3873034 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391673597 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.385495194 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41031147 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.394675759 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616486495 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402359232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669452511 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394379654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398917299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394311748 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.619503358 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.401409611 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.729793888 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652679405 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400174451 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401578142 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408208679 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411534567 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492932031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416986702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.393288976 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652867614 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.397079508 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398862405 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396837211 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397346737 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402459776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40025216 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41381358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001985504 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378695319 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395436314 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286318324 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410008902 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464129797 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400348315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620075811 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408640272 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404030106 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.416454234 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.401490072 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616565747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405563154 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.39574411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478580327 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.902244284 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018003887 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410777152 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395955285 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.39450341 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.391922737 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396463035 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395373924 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395130071 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622089751 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414483016 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400049087 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001548761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403103507 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399411102 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40307825 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408447523 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403411934 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396121398 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393507512 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418140401 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401618609 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410946217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540181114 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413139879 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398312412 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917400962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404567042 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397359613 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395858887 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432393287 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400914748 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229555615 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654840837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39625169 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66743093 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405135355 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.41870848 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397451465 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399819129 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400717552 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39949475 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40618346 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410488651 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404335511 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401886267 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967600823 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167030367 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962512652 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403155258 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.399273444 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402346164 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165330587 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416991941 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400135945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644947749 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160224693 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414084737 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911663753 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.423865948 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181488345 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668211001 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631007247 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416521717 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.399091676 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676833517 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616429629 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437263799 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402824821 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401533738 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.385457167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974618146 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416436667 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496560629 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136857386 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416046802 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404463488 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.436995096 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405317524 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831230088 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419255749 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402465861 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403450475 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408177309 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237011906 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400588811 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402902281 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058892058 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421132615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.911028793 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421551672 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626215829 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413255945 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406929724 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.414304407 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397394423 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.652546393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669500944 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40481468 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402895451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983207338 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262349482 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.410668076 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404349246 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164610461 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409731591 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702257996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.421037748 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.399653644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420314215 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405528705 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40399442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.400648721 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405828532 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380838878 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905496242 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.41966281 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412371455 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420759608 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275847518 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661007974 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.419758891 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012386119 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632303462 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407937289 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427245894 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407555414 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40852664 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.394435293 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403648786 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643095827 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46363653 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627811965 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405613324 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.394614556 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44378658 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614198433 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407177035 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414478879 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661168353 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.406826078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.411836154 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1569449 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435541794 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412360669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409994296 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403824311 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425401853 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477765431 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631240265 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.419268984 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418751187 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834977423 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434901276 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409627489 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420619451 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502385703 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419297307 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409012921 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.184049404 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019634725 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180582269 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.024177941 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682386227 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41128806 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412150682 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406416676 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553655762 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408971953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682012606 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409984022 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.407746349 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429604737 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41403027 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411602352 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622601656 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682218187 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407690647 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414198854 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411058311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.408298842 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417068298 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.619806372 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916975978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984426237 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412341397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408887087 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16365435 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699444647 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409401556 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412580162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412105062 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.419990209 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.420580041 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.417825183 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424191965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55696951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680729244 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098912221 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.435941988 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.439014922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.186789357 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423365528 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669017881 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408575582 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.634356789 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027873466 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.148855873 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676493737 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481169562 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636571554 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40918613 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560323344 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.411148572 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415556323 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411931613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2574177 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.410477661 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.424143318 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03331168 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678817252 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417464642 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.409419611 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438864762 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.425996787 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6361321 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149920288 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639981119 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420043167 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419567185 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413053149 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029458432 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688528636 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415599025 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.414285687 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665766593 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411562626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437324077 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.868318471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.41389804 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990259806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.388660686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435481286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425911103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153326591 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038021994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.419379671 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924564224 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417339033 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414885219 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69092034 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.421062837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423790189 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69204322 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.418316366 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41701355 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653326396 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.032330435 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214903995 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.425421778 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414325687 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.43485241 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414148116 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471472099 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413386476 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413843834 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862579086 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436655724 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415777473 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425204748 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.415806351 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428578306 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412836223 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417509921 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419340236 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.429874969 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.414793026 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430064388 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518136823 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999594842 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435557891 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092247329 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.745200085 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673820988 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418332616 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404117346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419562913 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417932917 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417661438 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416081296 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430845659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992914941 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.422099971 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429362505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420613166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632946582 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629256161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432255972 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647985164 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422471933 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434224183 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.404344134 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415871211 seconds)
  done (took 988.683802639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.451023504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.463706613 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.460068386 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.438843252 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.459426901 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.464821405 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.493570798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439678831 seconds)
  done (took 20.997691809 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.431535566 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.431168446 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.428675958 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.42831093 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.422505903 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.91443349 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.448932337 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.4270806 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.430823828 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.433368132 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.418925933 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.123965038 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.445414732 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.42971185 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.411222107 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.431442222 seconds)
  done (took 33.393614797 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.507061518 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.589180833 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.599856899 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.447336268 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424726771 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.426893527 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.722776738 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442885038 seconds)
  done (took 27.492713652 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.430940471 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433078914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434814273 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.432716746 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433604775 seconds)
  done (took 8.493344697 seconds)
done (took 1256.351357224 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423016858 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427673773 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425123251 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42862715 seconds)
  done (took 7.035739011 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.406427179 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.411943511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.412462809 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.425898567 seconds)
  done (took 9.985419068 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157754875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.092835412 seconds)
  done (took 5.581130965 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.425422834 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.187737143 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159938552 seconds)
  done (took 8.102901934 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735235 seconds)
  done (took 3.063665014 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.830151659 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.791028714 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.626043369 seconds)
  done (took 6.578509662 seconds)
done (took 41.676863111 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.429693113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.66806782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.579490708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.424351734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.584025137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.579475824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.16063982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.438554599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.426668039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434150814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420847789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.585102612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.213400043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.67468972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.212975065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.674556539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.584691175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422897127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447041527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427881992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.158991891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.429127258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.420492056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426676788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.587717126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.570310839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427446765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.668251955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424005999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419937054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.586862428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424662691 seconds)
  done (took 84.263786171 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.430800918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.431694448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432760627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435332475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.437600158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431501254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.422983768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429974807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423316774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.439380114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437479546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424802417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.438856344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.423767312 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.421109481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420386621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422124732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424498896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.442553656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423207548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423016299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433550031 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424246381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423375942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.429086311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.424766479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437423063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.438481914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.436682278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424382707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426840266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447957258 seconds)
  done (took 79.097379515 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.427514856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.441348721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442913282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.426577222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.441920358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428124911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429085262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42670875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446024262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.449689839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429663549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422848071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.444739701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426272121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425958337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431949149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435639319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428128267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426320531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.428792006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.428232682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427466625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435329846 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426010508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.427832666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428634496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425968135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.424263881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.448721651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426549911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428806559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.440115845 seconds)
  done (took 79.164323674 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.655973372 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438289719 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.436366474 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37106668 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436460112 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434264769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430111536 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628512679 seconds)
  done (took 15.168932155 seconds)
done (took 259.024570414 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.42880895 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.426103237 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.640050245 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.459835813 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.4347169 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45502983 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457908177 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.659035723 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.44696741 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675339459 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.464516884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454620596 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.43401636 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.471234979 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.722053082 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.585919302 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.348132469 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437779137 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.779557423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.463481648 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.707027484 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.439222915 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.715125768 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.419656191 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.446846027 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.436462261 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.426267059 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.331735395 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.473708827 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.787186685 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.439229974 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.428317783 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.518092545 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.542275194 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.654524343 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.597480467 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.432804019 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.516350596 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.659142306 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.430556277 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.439078657 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.23274908 seconds)
  done (took 85.655699402 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.438618205 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.560951697 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.436119983 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.436281263 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.440467079 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.562661116 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.535673307 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.436981467 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.440378514 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.438003275 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.438158842 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.442274954 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.447900671 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.440002842 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.438381509 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.438375386 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.437053945 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.441864073 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.440661232 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.488236104 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.566488171 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.462186986 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.435737979 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.441377813 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.543729264 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.580203335 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.440208801 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.433306438 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.482936245 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.439852883 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.441980481 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.487843345 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.441305911 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.441241713 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.565044918 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.542454606 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.460423284 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441473624 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.56185096 seconds)
  done (took 58.730375822 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.443059005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.70721237 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.879648001 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.452469088 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.450631971 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.44821525 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.525516861 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.441390893 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.445193295 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.446411534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.603295267 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445745094 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479313215 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.905465676 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44713049 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445198138 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442297558 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.443224466 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.716406355 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.453790595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.547844971 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.446312854 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.523499399 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455228967 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.466500415 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445397633 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447535266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.034337479 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449706387 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604362236 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.274970155 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.523683882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.969951379 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.89139124 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.271186613 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446190688 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444057436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.606150634 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.449290651 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.443053027 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.524598916 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.448284547 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.888187109 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.135563456 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.466922201 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445401902 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.055858662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.609835071 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.703120724 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.456612374 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914778617 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.452195231 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.448152057 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.447193153 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700606858 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.454003236 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.44411437 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.074474276 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466031464 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.527482759 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448869582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.447105732 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.721187112 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.449290612 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.708572925 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.449882777 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.456683569 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.468058565 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.89009099 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450887898 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.15975151 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.467456853 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.447649572 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604404997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.709943098 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.090308817 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.45245644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.72536462 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.987445815 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530464016 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.451800119 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.024424787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.535227621 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453985856 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.451119357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448928155 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447286577 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499194554 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.527824596 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.092955277 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158590337 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.102288335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.548160785 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.463032662 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.449288527 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.074948437 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.46747775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.449294698 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.885719531 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.163181425 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469692762 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.458515569 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.159664678 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469663302 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.532001673 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.455757321 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.903780182 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452086789 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498978108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.451573904 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.457329501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.469601808 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.532916857 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.456833146 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450936482 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132973582 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.636145033 seconds)
  done (took 190.722186205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.445135963 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.440214107 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.445500913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.437346237 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.444800985 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.45319353 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.444543146 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.44475786 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.450526891 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.44249993 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.444928027 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.443446665 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.445649431 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.44625209 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.472293246 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.452132257 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.443805536 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.445510999 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.445255387 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.46343346 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.445100596 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.460377289 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.450745321 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.442932773 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.445025697 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.445590144 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.47399171 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.445849697 seconds)
  done (took 65.911306685 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.453657345 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053171647 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.453703091 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.587131708 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.4743287 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44988932 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.585569085 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.512417973 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.454314222 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447801635 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449478532 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.773557202 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.453641779 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999742814 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.650406104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.590889259 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003317929 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.476359874 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450464089 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.45115766 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590504858 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.465143437 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.776739035 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055041362 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454880179 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054068537 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443680027 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.453841685 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.452096313 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.057367723 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.454472772 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.778834081 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.537286483 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517327889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.06047416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.004849911 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.007321238 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.605822312 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.456107093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453460388 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.452544223 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.445109899 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.060113255 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.457594986 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.453909565 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054104953 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.471514086 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.456007922 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460156007 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451757362 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.517412799 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.519894562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.78310273 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.064867192 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.535569218 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468022507 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.592870354 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.837855379 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.454040634 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00447088 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.461557368 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063071064 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.475862123 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.445242123 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45557889 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459997353 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.611838706 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.595435637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005384891 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.472959396 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.004174146 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.62741774 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.455888901 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.455342311 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45808941 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.059853998 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.011083234 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.627736 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.597062535 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.659851702 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448576977 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.456482489 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.445873001 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.534750601 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.45502718 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.061457764 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.024753375 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.473892115 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.456670636 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457837357 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456558859 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.643844486 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078247771 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.538529352 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003065329 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.80001584 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.785560924 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458233529 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519476918 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471862848 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.786718621 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.459737746 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516510315 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.918147452 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.783241083 seconds)
  done (took 173.385243037 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712083347 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.473051658 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552078371 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613905385 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.083439274 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.059074645 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.460348979 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.583314567 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569983685 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.724639021 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462227207 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.549342896 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.681692281 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537958129 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.221353407 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.530938603 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.557772752 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.609194012 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.600821342 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.455426785 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15079877 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.766273381 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.65042493 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.475693955 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.589944186 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.318636947 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.065894182 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.991816666 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.634719818 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.460865929 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.002128204 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.45412488 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.438442343 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.161623377 seconds)
  done (took 67.559780397 seconds)
done (took 643.300829395 seconds)
SAVING RESULT...
DONE!
