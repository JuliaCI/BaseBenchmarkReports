cset: moving following pidspec: 21010
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34141666 seconds)
loading group "string"... done (took 0.48606008 seconds)
loading group "linalg"... done (took 8.023110651 seconds)
loading group "parallel"... done (took 0.173596531 seconds)
loading group "find"... done (took 1.301529304 seconds)
loading group "tuple"... done (took 1.98764207 seconds)
loading group "dates"... done (took 1.339110358 seconds)
loading group "micro"... done (took 0.253123099 seconds)
loading group "io"... done (took 0.683240217 seconds)
loading group "scalar"... done (took 41.55400444 seconds)
loading group "sparse"... done (took 12.678419819 seconds)
loading group "broadcast"... done (took 1.13326914 seconds)
loading group "union"... done (took 14.150016916 seconds)
loading group "simd"... done (took 4.849210775 seconds)
loading group "random"... done (took 9.78574308 seconds)
loading group "problem"... done (took 2.004601967 seconds)
loading group "array"... done (took 22.895502092 seconds)
loading group "misc"... done (took 1.460821677 seconds)
loading group "sort"... done (took 3.646985094 seconds)
loading group "collection"... done (took 19.822772606 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54428475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147930818 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158977129 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.159669409 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.214599313 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144692106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162722459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11720035 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.947050609 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.191170876 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15944985 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522145335 seconds)
done (took 5.19513446 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228106298 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096801145 seconds)
    (2/2) benchmarking "String"...
    done (took 0.11010714 seconds)
  done (took 0.876191644 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080105812 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152129902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097584054 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097930138 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.082430492 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09846269 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082020547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.097160641 seconds)
  done (took 1.378691813 seconds)
done (took 3.240597543 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.750830685 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28508662 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.225031613 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.489124358 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.184441261 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219911464 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.698839621 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.39854274 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.271918832 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101455017 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152270184 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.413988658 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137780301 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667365691 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092370612 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128835688 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189828037 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.525856206 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087309771 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113347053 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118902718 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145645184 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13246989 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097197195 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18704616 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.099424027 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.189353139 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109825153 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082325525 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290787269 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.205493184 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69195149 seconds)
  done (took 11.191943422 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118889466 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140769727 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100198924 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159644339 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138523945 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086851381 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103094344 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083827301 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12655723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18232917 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135796903 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144332947 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096389266 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087303287 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122388948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248955233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124064007 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.109694996 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104017579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108659825 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12601279 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116021563 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112815185 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112250608 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167765306 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20888687 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116345516 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.13006674 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099909022 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120066714 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.149158911 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148838021 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09672409 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084506725 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179580009 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126447669 seconds)
  done (took 5.302227925 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194244004 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12610066 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174751493 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16606822 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146829711 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163286589 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118606024 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259771551 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.135849238 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183782585 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149728516 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116987878 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084666635 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104821233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084225523 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772976288 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169187775 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139871222 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119994725 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105067201 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091132579 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372562831 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104795466 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083199065 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102463668 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068562358 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164803733 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10612264 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.333085203 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.08705057 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12203431 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085266861 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.164039367 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134948912 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113823843 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140536069 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099951162 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08105345 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181466726 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108681064 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099666418 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11045521 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139538465 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139173153 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101826432 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097963033 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.215135621 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096582232 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101133373 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.975176557 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181616455 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096025357 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099810797 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.34326588 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101385731 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10009158 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097114637 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261409056 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095231421 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137298313 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083572636 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099448024 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098259184 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085229144 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39277376 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098220123 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.75863322 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085193776 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109520469 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100769168 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082888356 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106349505 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089400874 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117876382 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099165642 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084861379 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099540444 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082078164 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101674 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080403731 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110896038 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103815704 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08306505 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165944187 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082397115 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115217313 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130376501 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100785694 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082046517 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132531276 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102898877 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084677373 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139238995 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100846769 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092904416 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10059243 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144217784 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094565869 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082322111 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182718566 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092943208 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126979303 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100216003 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11654137 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110504472 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101831894 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103936979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081319688 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097288764 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150352904 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094808003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084588611 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102373643 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113536403 seconds)
  done (took 23.26499927 seconds)
done (took 40.428822992 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349487564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105705605 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107112998 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105474862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103995526 seconds)
  done (took 1.519801629 seconds)
done (took 2.24186627 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28732185 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177807865 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09621611 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172800443 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095218199 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.181523038 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179843677 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09903733 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203420139 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079593749 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184166102 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079957096 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096126011 seconds)
  done (took 2.682800626 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097575329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118095213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085805015 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113249555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09562934 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097627215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113086072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10392158 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113164714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104971381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080153455 seconds)
  done (took 1.843646279 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097937877 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116631303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084490021 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113128144 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079544766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113603393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112707523 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102623335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112721076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104594172 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080269048 seconds)
  done (took 1.841895561 seconds)
done (took 7.083135169 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.097504348 seconds)
  done (took 0.809267305 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.032413624 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.748238574 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120223954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159706712 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330915074 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190004473 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.590048577 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13215334 seconds)
  done (took 15.239000799 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.151316233 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090653844 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103737964 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085569311 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105493082 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103921219 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08847889 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102173437 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104560187 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088963532 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101597042 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10026068 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086274436 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102562183 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089514281 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10301956 seconds)
  done (took 2.388268148 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138611878 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138971122 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091571636 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109764425 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106386983 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090825501 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.11119196 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107327372 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089209147 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105284164 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10876699 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107501719 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090465428 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098244141 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108368116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095391689 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104184538 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108983925 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10961688 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093832776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109502205 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098553064 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090161808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10839838 seconds)
  done (took 3.328985518 seconds)
done (took 22.48438412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165180823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112146424 seconds)
  done (took 0.999914783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105874913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121371334 seconds)
  done (took 0.958734134 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111864142 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096793269 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137858148 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118687696 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098546309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083146955 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134310571 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098501149 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083185657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098862799 seconds)
  done (took 1.794247667 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090255799 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116910473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10942063 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120776231 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097058988 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104441258 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.113789408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089160497 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119528092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099808658 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093551249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117764166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108061153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119322061 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113187916 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091829704 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110070892 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106079773 seconds)
  done (took 2.655333583 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082041646 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103154281 seconds)
  done (took 0.915749366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087715112 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0989967 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088172078 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102070869 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100079792 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083700601 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098656219 seconds)
  done (took 1.389666738 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485925466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138411187 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259807209 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105122926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124815503 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.329793164 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082595225 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105332953 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104921734 seconds)
  done (took 2.505794842 seconds)
done (took 11.946977417 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09625674 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120332588 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.13553665 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473258266 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124651898 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083455741 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.16460375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.260068965 seconds)
done (took 2.196321353 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154511775 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333998077 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118983185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083011813 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082662217 seconds)
  done (took 1.355722584 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081934586 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101712689 seconds)
  done (took 0.921483887 seconds)
done (took 3.169646425 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084086503 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132074939 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097641386 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083152357 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099668075 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.080392012 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100404279 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.081504315 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096884562 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083904845 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098268349 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083223133 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083755547 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099345584 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080858229 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096634986 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08351927 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09750763 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080941485 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095676489 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083876682 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096215413 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096712939 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083109614 seconds)
  done (took 2.98422359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112831439 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099296783 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105897011 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089839093 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102834019 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105508062 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088781005 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098920412 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104780044 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086002165 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103482361 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10308479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085423544 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103370693 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101753703 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088531341 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104254113 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09948873 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086270221 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103711493 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103938264 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082725591 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103281115 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104541329 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086906018 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10320459 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100727593 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085110378 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106496648 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103142007 seconds)
  done (took 3.695721213 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089166528 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096952066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081367434 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104294886 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080766706 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102689674 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096409765 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081528336 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09823442 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080587654 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098918644 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081227848 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096923455 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082279207 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098268877 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100840415 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094179636 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097385438 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081223292 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098172261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084185781 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096987492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09949971 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080961636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096989932 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080824409 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097858012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080266876 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098229974 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096545565 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085145202 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100498397 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080270843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104350885 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084255094 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096671956 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084779357 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096539842 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09750248 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080705223 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096967138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081371736 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096836663 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087666572 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.101255372 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083474361 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096921265 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098732977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081490845 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100794917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081352123 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096423973 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083979833 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098827686 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10122048 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080238264 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098270757 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080750799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098591872 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081651515 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095989871 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096473471 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083523418 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097449202 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09692197 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104559287 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081590769 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098695543 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101127527 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082821865 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099376336 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095225977 seconds)
  done (took 7.367019038 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087280791 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10837939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083457081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099539031 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095425298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081418172 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101624906 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081796347 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099936253 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116478297 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081693978 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099590302 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09941214 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085454742 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098261216 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082746669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108097345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095815843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082008923 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101456245 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082087643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101424077 seconds)
  done (took 2.822309831 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216449638 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107107226 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144874197 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126249789 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116776883 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099230659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103495008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106531443 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088452553 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102348285 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102799631 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089783675 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107590136 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102350908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086802598 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104082748 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104420458 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088489036 seconds)
  done (took 2.746169343 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097728324 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100473185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123799606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083905806 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101639948 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087113509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107322045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116224206 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103153179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085085905 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110567925 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103680142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088026326 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100871608 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087511949 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10067825 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103635137 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08486053 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110595387 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105783501 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090749795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110958735 seconds)
  done (took 2.956622074 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100722951 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102779581 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122064623 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088074487 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099247741 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085620159 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107338953 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.1006031 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093384245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102868595 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100879247 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085048899 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106876056 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099515901 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089092182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100642911 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086774063 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100795517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102072357 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082621791 seconds)
  done (took 2.710199267 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124361562 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10150637 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.212046216 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110367694 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102597742 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101963953 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126160471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086137787 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102007972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12848776 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.085954973 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102498872 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125656548 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122455249 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085850142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124626199 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125930401 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126304827 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086306806 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101476084 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129595199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102916144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109224307 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102576724 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101944344 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085851489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101593351 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121578633 seconds)
  done (took 3.893753395 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084919764 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100324184 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081605622 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098396472 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081603941 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098926936 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081782781 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096914827 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085491632 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097127589 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.100221382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084197324 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099804792 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084373992 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100089118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08366373 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10272005 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082701528 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097256031 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097386226 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084495896 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100625837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084318834 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098004209 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081864967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100452009 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082061019 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098696808 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100731421 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081748303 seconds)
  done (took 3.508372049 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09526807 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108904195 seconds)
  done (took 0.963759474 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082911121 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11904929 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081868862 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105618826 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107320145 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085439489 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111173489 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106179519 seconds)
  done (took 1.557373992 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103662736 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119916617 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090799448 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120287191 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116596174 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117903383 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163486555 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090819344 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107708321 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083427507 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118783009 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100157403 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090133947 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101513912 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089901475 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106796461 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102767815 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100793465 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108766225 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083231972 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103194217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111539442 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087864915 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098220785 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102845118 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095648123 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110423109 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103063061 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088404364 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111258262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091097835 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094060467 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101329786 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090496831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102387619 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098342598 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11371178 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1041591 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093578067 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107617418 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127700882 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082759203 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107533147 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10736824 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095877532 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106152854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091045583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099980875 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098721833 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087375608 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100070161 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085393639 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096263449 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108886462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089568051 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118162843 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083839914 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102566554 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104397665 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088465219 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108167551 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102890976 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087155655 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101322956 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092618883 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10506193 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108499632 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083573499 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095538879 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08566819 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110917869 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124326418 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093783227 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106752544 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106821205 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086900202 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104794115 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091918321 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108631303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10991098 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089908909 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122978008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109485618 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085463091 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104397977 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114835973 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083157043 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105112886 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082537367 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117064737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101659188 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08633801 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100282438 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110220459 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087941091 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101682698 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083248832 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109786207 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079465989 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106726603 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107583274 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086687338 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113177907 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11382083 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09627742 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109277741 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113642582 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085337244 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104842382 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081197291 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107662616 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104481163 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092209315 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096368437 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087766077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104169957 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10724176 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093190666 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100489317 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089872027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110441904 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10932075 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083356918 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098911361 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088174742 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.108159465 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111677444 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092781187 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101690774 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100677334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084141916 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106271124 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089683429 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106217046 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111634256 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088047922 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096267433 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086736068 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110973364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11024703 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085671496 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102576975 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106664213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086466267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101898008 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09162089 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10421338 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083770488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105779592 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103836918 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084017017 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111029542 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104787245 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084124367 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105972525 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094508114 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104468843 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106997286 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083905658 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108694247 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106508396 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084633081 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101988459 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08393987 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112100743 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104137256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084419415 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099570238 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097817127 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100749969 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089132995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101421704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104927678 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091791769 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10424251 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085718251 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103163741 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13408651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115241194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091786868 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108849591 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094911288 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105895409 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104108911 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090592733 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108805439 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091275301 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109754169 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108201826 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09585818 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105366756 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099043522 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092579906 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109848824 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084683792 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103003272 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101058415 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089458577 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110265993 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090069999 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107697314 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100579718 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085558036 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110786466 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106149884 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089931219 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101524458 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090087756 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103212616 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116278026 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091569099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112257701 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105805048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083536296 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112339669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083856905 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108761355 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101159231 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082535107 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101422351 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092655331 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102411659 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088592221 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097529037 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110337098 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094341289 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103625791 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085639096 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107225215 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113373514 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088365096 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105567015 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10613684 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092083809 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117080782 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085371106 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105714046 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112942102 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090749416 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096694635 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107964779 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084252316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102237521 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084617832 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101814876 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088896991 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118471936 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107738755 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079468948 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105401777 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101461149 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083882876 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101869877 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093038381 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106432902 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105258344 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094842068 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108008832 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091934215 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106593078 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107330911 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091652446 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108524329 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106567172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091621354 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105304 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084753197 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105535681 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102536468 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087357137 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105215271 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090682379 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10350517 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092132097 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105116128 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102075891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08929156 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10837311 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103290605 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086637691 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102190992 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089248064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104387752 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085733673 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105364873 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10179393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093323928 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106846711 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094612989 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103356436 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099523287 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092335094 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105890118 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112943644 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09197853 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109450735 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087920193 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107997591 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105489083 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095133375 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100976963 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095720291 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109207493 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104205449 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088719108 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103233714 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088218062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10169039 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104748599 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091228142 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103234823 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085649274 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108277882 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105752305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086565648 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104954243 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091919982 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103422285 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104761603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080471459 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101917924 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08490613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107705024 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110932778 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091656928 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105234485 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084892128 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109364434 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102349033 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082419992 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118461074 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118614235 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09048139 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112474709 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102378714 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087361799 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113620031 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079380598 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102267531 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087749614 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102430753 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111657654 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091729051 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112060871 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086372928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103226598 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100852964 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091594188 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102453592 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088626392 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104908743 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106561968 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088376147 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102804955 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090875753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106588573 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10845468 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094029369 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102692235 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088157509 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108307239 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100377601 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085393803 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101619149 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088919559 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108738102 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084124959 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100187548 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107087702 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088127069 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104819923 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086258475 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10522841 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110502912 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086181304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106412096 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09486498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098653459 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106361648 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086136169 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107041831 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085078608 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107533705 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10786457 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091013518 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111221011 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091015791 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105178286 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104218316 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086979154 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107549415 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09049695 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108881062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103421749 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092284345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113008099 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087951884 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106550903 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104234858 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087878013 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109415695 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091904321 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106639355 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118186326 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08897278 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105115565 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110146645 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09114661 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107730908 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109141112 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089392376 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11102614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085288786 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113180367 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103978342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.091975736 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106927245 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084555246 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103925461 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086353821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102555492 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109535403 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091499527 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103796165 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085632413 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105098896 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10553946 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09498374 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112593272 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10612161 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089196086 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103435321 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083409205 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110003213 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08429402 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106371834 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106201352 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092475636 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107186883 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103332191 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086821899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112162619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093562585 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109630799 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102017446 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092062353 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.110130942 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089648412 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104847594 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104719244 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088882418 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110724125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087856531 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10440729 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113459925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091343356 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110107143 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106182537 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086736979 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105259162 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085781449 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110983116 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088895487 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111260851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10794738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087229045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114197499 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104178684 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086752748 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113754373 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086530265 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111385724 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102847616 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087576062 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109680417 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092327376 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103757246 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104118422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085012817 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10742033 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086480478 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.10412302 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114873259 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09428159 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106990218 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085529742 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104333393 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103144776 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085632551 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103708791 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092469455 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.1071013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114405402 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086271174 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103968459 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085601341 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104849111 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090182481 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10924407 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101588899 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085946549 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103216525 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090143799 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112061516 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103426948 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090894651 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108657442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08859961 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105564916 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113809917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083203288 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108524752 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09709773 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109690134 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105115593 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092265574 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11293089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110548509 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085878507 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110005539 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090009594 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105082742 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111565062 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089031335 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119377943 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108057416 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086893075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104204685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089029998 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104947726 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111758334 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092556114 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110626865 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091117542 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107112383 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120983286 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089735203 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110938189 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107863299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089232209 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104597717 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086862167 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104210173 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086019407 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107851771 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110326467 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09216744 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119585559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104635818 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097307462 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113079602 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110036078 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083316501 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105015946 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086859256 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104664945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092322547 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103910878 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102945245 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084658019 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103822945 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087646865 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111254879 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108464411 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.093145148 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104989511 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08130943 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106859422 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107851399 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088194134 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102201635 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091954084 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111799262 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110288284 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098750902 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10700464 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08959873 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108971338 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087912112 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10469334 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112281983 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086764557 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109332557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086745236 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107275491 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111498666 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090108942 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118122044 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108734074 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089296195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117537397 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095284114 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102895592 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102988479 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092585468 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107390241 seconds)
  done (took 60.39609056 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151968814 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092301608 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102689466 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081453318 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11893411 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105778284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082482521 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105820338 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1054733 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08863604 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101182983 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082357272 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115524569 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129137473 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119918465 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110673225 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082971155 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105714308 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082792116 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105235772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116504117 seconds)
  done (took 2.997206247 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109227604 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120971754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119181882 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123963609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111730725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100283993 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117715313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11932675 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122787491 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11323131 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104434794 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119917512 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114115176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114601856 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094630167 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116343154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12236428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112838402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101546841 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118360968 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116123198 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117546294 seconds)
  done (took 3.321941988 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095201368 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109673944 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091092081 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101120345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086412353 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101297378 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11458823 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084549364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109395872 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085851351 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103833054 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085545123 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110105433 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.100955426 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.085346668 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.103442035 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157785659 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110654243 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089515506 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107887906 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.084189503 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106993036 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103771313 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084697131 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105056344 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.099054913 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107236176 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087100952 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105442274 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104859216 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091454673 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104359467 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08775032 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10676827 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085408863 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105069679 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105470304 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090245126 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.103618176 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088065794 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106727106 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085594074 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.11057132 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107433862 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087902634 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103969272 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087695685 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106634077 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.081631507 seconds)
  done (took 5.68179902 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120423812 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159424977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08886722 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129245697 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124045114 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12008771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111792355 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147830012 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084576871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110873623 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128675576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125465981 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0906513 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115346446 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113497825 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091664092 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111812196 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104919208 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114900269 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087772794 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116286595 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114665774 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105225912 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122628158 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115099415 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109192765 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087125935 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115630678 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121705281 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116283791 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096479414 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116451118 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125443431 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108413078 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086389818 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11326998 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127308618 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09163969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113596078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104229377 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.093812118 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115922045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114782997 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12788684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091283389 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111893062 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110633125 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084333788 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121837422 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113422022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120497051 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122894035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095684303 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111527559 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1169881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106030973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110232716 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108748011 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.094994145 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121877172 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105569315 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113698404 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103675658 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113006479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11922592 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122893946 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092965546 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114877799 seconds)
  done (took 8.544556898 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11895305 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118132238 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12844336 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129375764 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118432508 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.098697077 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117965351 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117884436 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116396907 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105210906 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117922214 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165090362 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11317152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122675976 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098013243 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11837497 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118565267 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118468374 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098792128 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11737961 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118899064 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128396108 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118623817 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128569789 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108655471 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112289117 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118782427 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118064494 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129056407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098126095 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128729589 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118490117 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118293762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129643748 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127016087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09715574 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109300429 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118605461 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099351766 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118082595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11198317 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129118655 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09793673 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112381399 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118029808 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11778978 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.129587796 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109059741 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122528064 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125011151 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117667253 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129582675 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118293809 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098571873 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129791771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134138927 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128002222 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129900274 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119031643 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128798291 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128758774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133705009 seconds)
  done (took 8.194433995 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14000742 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10219231 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.128254006 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103980478 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085882432 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115460382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104960616 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085277878 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121989085 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121894539 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124132453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095818905 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119019716 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123846951 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116119236 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119369286 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096658433 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115938427 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122096729 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115969242 seconds)
  done (took 3.082911811 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096510088 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127938507 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.109943488 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09590377 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111626445 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115638828 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090001231 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111972887 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108812507 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092044052 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122011773 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12174327 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089102769 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115809831 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120348227 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115770075 seconds)
  done (took 2.570269068 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10155334 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129877379 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127509369 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108237149 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.085067238 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106696848 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09182341 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104730659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104629423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104799766 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110097976 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114033371 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091007844 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106295762 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084921988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114831498 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104009744 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086411779 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110975883 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12883118 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099575418 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108483627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112115814 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090123954 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108526397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115124047 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088866135 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107066843 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087007675 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111258541 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108777262 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096313983 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10465594 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107132348 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085857132 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105850588 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091307582 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111837576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113706889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091173496 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107187362 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10722075 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090917397 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110037761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085143252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112001809 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104399507 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095535098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107404994 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109373437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091246372 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111256108 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090170435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11885521 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112307686 seconds)
  done (took 6.542113257 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103259917 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113002135 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083324571 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106497798 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112828115 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.091385087 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112467086 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091205298 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109814559 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106492481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090408475 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113126348 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111282204 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092370047 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111143791 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091974575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103285114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110390231 seconds)
  done (took 2.687034792 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094015339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109145083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095515582 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1089019 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108522959 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090351328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104473079 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087685661 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106663349 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089259888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108867598 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.112158768 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086949806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111245201 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089687222 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108853884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110902208 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086615706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109632915 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085125131 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110394492 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107291987 seconds)
  done (took 3.057374396 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125163578 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128668605 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.116666168 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.220695361 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107392056 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136010491 seconds)
  done (took 1.669858645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112868707 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146978605 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109610746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093573527 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121384198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114084078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094345852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114044171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125189427 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128148411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115067488 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105767345 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125506735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124795375 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12141652 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121841855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094868748 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115648195 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109783366 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133483564 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094476127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125342813 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115536169 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113963528 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093706124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124977243 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126097669 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127898996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113942076 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125867692 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102056364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114773292 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125512603 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12708943 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092427462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126070025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113841465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134498214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121158526 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125699393 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091794995 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122420165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126145459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122115228 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104471252 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114874722 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12096797 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114266074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09407508 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141945211 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122179142 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12560767 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121825136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126143347 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106264763 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161487411 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127261944 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105407271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122410234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127754236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126153148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12217861 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12565631 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127654271 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102188614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124516226 seconds)
  done (took 8.646076315 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129144039 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110970832 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115439837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12852373 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126405317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093868666 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115007255 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114970323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095298015 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110460528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158677482 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116827183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126392637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125184798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093891109 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114759369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115257499 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125359969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089778424 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140554628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114626873 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125969154 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126354832 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125396926 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127603145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101985203 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116461725 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11502197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093953806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114729864 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121643394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115082906 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124042516 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089966179 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125370726 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115167479 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095182846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121263188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115215474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121650218 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126404246 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133502854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095250123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115239553 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128183952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114805329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094257808 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112169047 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114507967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090226645 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128119589 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127847954 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127748867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125602944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115618054 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093632299 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115425165 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115279089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095873852 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121214702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125052522 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11478441 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142335715 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11578661 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094973256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126916423 seconds)
  done (took 8.511785668 seconds)
done (took 161.844339594 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105111979 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142889173 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.122494811 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151774903 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.110109193 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122782269 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142489704 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123707959 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088736993 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110665471 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088268333 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112746489 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155461247 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10944498 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109205988 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090928226 seconds)
  done (took 2.732604865 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206234493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.276905824 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126979276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.086484903 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114456469 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089080219 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109117424 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117522294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090110745 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109310678 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089071195 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110073057 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088719148 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109864378 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111629146 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088235448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109520886 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089251874 seconds)
  done (took 2.977393148 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116855043 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150115693 seconds)
  done (took 1.12017815 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124352112 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188687697 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305710684 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158470331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.144798099 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131008442 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158664422 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.115035187 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.229885689 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12708306 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107126925 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122376855 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146682282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118799737 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097497698 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121717993 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147761561 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117159531 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097849767 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121505905 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142191454 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089696926 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119206155 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117292624 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193548137 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.103441353 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109267426 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108914987 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099220258 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11882294 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115872736 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129873052 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103399585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.190997132 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107385568 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187735977 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121180397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095085841 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118743964 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11462919 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102030548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123076576 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128692887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10125705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11101994 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12273552 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08844699 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108734982 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117211358 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102413495 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117603293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116057173 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164953992 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122139762 seconds)
  done (took 7.842460536 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.824222473 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155758331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116594829 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.927881989 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119083825 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12972372 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.817764078 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137351217 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242346293 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.808701163 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136729488 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125758414 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242022827 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246946195 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.029148733 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329180487 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694231093 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128779499 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144587873 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162090326 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122971834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142243319 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112232093 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460877164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098341177 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115425538 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120863133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102642917 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192778065 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094416754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118005637 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189211957 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.280787086 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216596443 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097134116 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115001891 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093107663 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202918909 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279024134 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22781328 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185046244 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09009735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115571306 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125846966 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112657849 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11176084 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17445341 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.208245779 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182033906 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117864636 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123814332 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100615139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12538775 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175843782 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12635558 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335188785 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331979134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115351165 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123984775 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108071225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273100874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127520392 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239949689 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141887176 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225456908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093442274 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792279986 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180238934 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113647449 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121538107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100474994 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119812171 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123375879 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174547403 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.416985735 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127610488 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096826086 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113486865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239788037 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093928603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113891079 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171886223 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120014236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122936592 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105968566 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126193898 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180269116 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267436358 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125771265 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100918988 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11855772 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127063397 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097498894 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.240593408 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233987811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17403513 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244525231 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10338755 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196627018 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178692046 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12560291 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185163697 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121421142 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130439279 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1036432 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229053213 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.174068723 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10773909 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118351326 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121725134 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155623129 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097119808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121415774 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18101147 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491584192 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178410082 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111026057 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118904665 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102942868 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193071289 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100547983 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273124782 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125182922 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181034028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12131178 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112946329 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101165135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.195123001 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105151711 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122642832 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126118586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122706949 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.244440322 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231704741 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126757678 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22935688 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.208595685 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100484022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204546463 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101455662 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198196393 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102317937 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125304231 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119683289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784591595 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104933169 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120534192 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119885682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195072715 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093331187 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128615249 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115874924 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090274667 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811359233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117209187 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104521512 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128604521 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121209807 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12210295 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098641978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118040265 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171804386 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243934298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125024579 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121715962 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094537706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190271588 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098255126 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115189117 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115380845 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093862164 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123440225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118303941 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108845416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201772412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170513796 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23571789 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566225967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09354253 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115752608 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243466986 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115719967 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301928143 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100853993 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239576282 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19484994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105124076 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326906115 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.196452464 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195561013 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096752857 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205939636 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090205425 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120859609 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196336472 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092718149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122103901 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171591561 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12863116 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126561661 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970795421 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0931664 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257359376 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090902057 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202509413 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098240275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124271244 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309414006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115108988 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109657677 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196876448 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09691354 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114522076 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.883597788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094295396 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126157989 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12149312 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236107618 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173307982 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121955233 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100027389 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124445433 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172693948 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23873215 seconds)
  done (took 45.793541363 seconds)
done (took 61.315917473 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282420205 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214440052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258051482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168410978 seconds)
  done (took 1.877632147 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185883006 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148381474 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.148517673 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087638509 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156391782 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109634027 seconds)
  done (took 1.719688358 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368770556 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279175658 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242054789 seconds)
  done (took 1.7738063 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251837459 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273637475 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331690257 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419116783 seconds)
  done (took 2.262603743 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.238977694 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14467957 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130867545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127458516 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223561841 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.265344825 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1594407 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.215679008 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141447007 seconds)
  done (took 2.576781594 seconds)
done (took 11.095749002 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.189446664 seconds)
    (2/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.266777745 seconds)
    (3/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.141068607 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119020831 seconds)
    (5/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.216323136 seconds)
    (6/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.227502663 seconds)
    (7/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107983485 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124143943 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131525716 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102958623 seconds)
    (11/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.224427857 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11875795 seconds)
    (13/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.105814658 seconds)
    (14/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.125723108 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.142286333 seconds)
    (16/286) benchmarking ("sort", Float64, true)...
    done (took 0.242400046 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.223646982 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.159035366 seconds)
    (19/286) benchmarking ("sort", Float32, false)...
    done (took 0.160803105 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19393185 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.217212167 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126500024 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.181806729 seconds)
    (24/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119706093 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.264959013 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.174235229 seconds)
    (27/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078239881 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.236607892 seconds)
    (29/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.142298599 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121670597 seconds)
    (31/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09406581 seconds)
    (32/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.182186962 seconds)
    (33/286) benchmarking ("sort", Int8, false)...
    done (took 0.20147894 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139339121 seconds)
    (35/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.244512221 seconds)
    (36/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068826428 seconds)
    (37/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091518042 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114309077 seconds)
    (39/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.18104703 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119162926 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.153018976 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096323783 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112018854 seconds)
    (44/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.207913157 seconds)
    (45/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079342538 seconds)
    (46/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123807494 seconds)
    (47/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.211552372 seconds)
    (48/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.150667577 seconds)
    (49/286) benchmarking ("sort", Int8, true)...
    done (took 0.230848023 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11454664 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153763554 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10892494 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143109861 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12784121 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19463062 seconds)
    (56/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101780547 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119884114 seconds)
    (58/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.1833092 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116256889 seconds)
    (60/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.121081406 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128137914 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119165376 seconds)
    (63/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.123145843 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141747661 seconds)
    (65/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097199173 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140591595 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141861648 seconds)
    (68/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.129849596 seconds)
    (69/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127128303 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068611273 seconds)
    (71/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.197951394 seconds)
    (72/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159908935 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.123439766 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150233677 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111778303 seconds)
    (76/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100772824 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189801247 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.246332969 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.112267163 seconds)
    (80/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069877655 seconds)
    (81/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120543391 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13942426 seconds)
    (83/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088781666 seconds)
    (84/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087435739 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.177066466 seconds)
    (86/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114509466 seconds)
    (87/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099991336 seconds)
    (88/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168727226 seconds)
    (89/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086012475 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182788853 seconds)
    (91/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114506327 seconds)
    (92/286) benchmarking ("sort", Float32, true)...
    done (took 0.244479815 seconds)
    (93/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.126141655 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185349435 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139083546 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139500584 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113536497 seconds)
    (98/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.198403322 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108053604 seconds)
    (100/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096605814 seconds)
    (101/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193554303 seconds)
    (102/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129800341 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.163500207 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.093766742 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071559823 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125154812 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120871329 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094943024 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11845287 seconds)
    (110/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085482373 seconds)
    (111/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1856661 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127669602 seconds)
    (113/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078429058 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090174828 seconds)
    (115/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182541834 seconds)
    (116/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116241581 seconds)
    (117/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078433217 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.190902903 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122498665 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089273382 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119782882 seconds)
    (122/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125545941 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088895377 seconds)
    (124/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11953629 seconds)
    (125/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068946434 seconds)
    (126/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112885662 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095549007 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11947489 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.148146877 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109480687 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121909755 seconds)
    (132/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093760049 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138914237 seconds)
    (134/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.159322211 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096581125 seconds)
    (136/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.189488544 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094282739 seconds)
    (138/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.146126721 seconds)
    (139/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114712755 seconds)
    (140/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069908195 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112302144 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089345285 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11970689 seconds)
    (144/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138657377 seconds)
    (145/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069630465 seconds)
    (146/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.187837576 seconds)
    (147/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069360121 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.188352008 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185829714 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100055765 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.113724336 seconds)
    (152/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.148998837 seconds)
    (153/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100298414 seconds)
    (154/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12032199 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103395397 seconds)
    (156/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.101504515 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.162213431 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114291396 seconds)
    (159/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119916947 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105323722 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19825069 seconds)
    (162/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121864474 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089127801 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.113646059 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186298017 seconds)
    (166/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079031613 seconds)
    (167/286) benchmarking ("sort", Float64, false)...
    done (took 0.182423745 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096958854 seconds)
    (169/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.10175366 seconds)
    (170/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072064448 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070290528 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174836214 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168838154 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072153689 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112234887 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120525088 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.130441794 seconds)
    (178/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.313119676 seconds)
    (179/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069110209 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123520472 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09001251 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112717666 seconds)
    (183/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092392606 seconds)
    (184/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.096313814 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07159041 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.121547969 seconds)
    (187/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078976416 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.233995035 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.1115254 seconds)
    (190/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09189067 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120987626 seconds)
    (192/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091058632 seconds)
    (193/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.094251585 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097591356 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.247249515 seconds)
    (196/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.093047043 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099551672 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12243655 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138888194 seconds)
    (200/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090967697 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.096784201 seconds)
    (202/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.123766362 seconds)
    (203/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174000873 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118564974 seconds)
    (205/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070508601 seconds)
    (206/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102512504 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11272723 seconds)
    (208/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070216436 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.095308512 seconds)
    (210/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098284934 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111847627 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097332765 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093967023 seconds)
    (214/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102603129 seconds)
    (215/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172146801 seconds)
    (216/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093914612 seconds)
    (217/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077055572 seconds)
    (218/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08900004 seconds)
    (219/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146966701 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.100452795 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149797847 seconds)
    (222/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113387113 seconds)
    (223/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092468086 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111698128 seconds)
    (225/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089882206 seconds)
    (226/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095241837 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070169353 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.094523892 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0707318 seconds)
    (230/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114499072 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08874073 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186601738 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113238129 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.116514323 seconds)
    (235/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096194733 seconds)
    (236/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069778975 seconds)
    (237/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119931786 seconds)
    (238/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.132049678 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119767207 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.071657211 seconds)
    (241/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.070023322 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121067245 seconds)
    (243/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119391482 seconds)
    (244/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099422318 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143423792 seconds)
    (246/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069470424 seconds)
    (247/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095806774 seconds)
    (248/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070122797 seconds)
    (249/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119716934 seconds)
    (250/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248850887 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139906479 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089139168 seconds)
    (253/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070391984 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093818653 seconds)
    (255/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09904547 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120931002 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069188061 seconds)
    (258/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092818685 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088390185 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.091811094 seconds)
    (261/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069250367 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.117431735 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088408667 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117695741 seconds)
    (265/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088919294 seconds)
    (266/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131433947 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120945043 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091741012 seconds)
    (269/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082293262 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111883851 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.114048089 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088449369 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094280354 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096101248 seconds)
    (275/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092832095 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072687302 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167143185 seconds)
    (278/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090070953 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119376897 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07036934 seconds)
    (281/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190336128 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.12050724 seconds)
    (283/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230017969 seconds)
    (284/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090327821 seconds)
    (285/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.093612124 seconds)
    (286/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09316346 seconds)
  done (took 37.352518891 seconds)
done (took 38.244825723 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104186536 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15522641 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.124877194 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120059791 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127416353 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118069772 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098127426 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.125559205 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103427896 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127195556 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126323583 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071568071 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124330532 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100061289 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123182539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145724187 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104629218 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120656188 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122154415 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089117712 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122297835 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091062176 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.1146592 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071665117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124924887 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098370902 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119022646 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124717868 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089584463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11386102 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095365343 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121529359 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09093455 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126468606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.12016919 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.09880321 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124578633 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099551141 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115620908 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113796743 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.097586483 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113702401 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097013986 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121413847 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096075783 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119272507 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122864138 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103651138 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145886254 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118664444 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097801573 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124625539 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100368104 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119932765 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094335923 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121055777 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119218211 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121867283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12203319 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118568622 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097189913 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121656154 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095211091 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122151667 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122161581 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100622103 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126164463 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096170019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124007363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118916049 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089909918 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123039234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093019391 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113475027 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099560532 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124574563 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088711014 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118445101 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120633724 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095010403 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113372539 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092321655 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11500392 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096941611 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115015497 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071832147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117365731 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097322682 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112758955 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.12245245 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096513629 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120519443 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092574806 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124864644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089811957 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118650844 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114023689 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.09025926 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116206005 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09384986 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114162174 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093303753 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123245038 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09215594 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119249307 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127882382 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08957318 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120024251 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089697487 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113217112 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12836027 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101470725 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113646228 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096031584 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.113319618 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.097879933 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113161749 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090854466 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112893532 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113631996 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096006731 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11409702 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093520603 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120831724 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105900501 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.113976587 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094935911 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116324337 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113913465 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096097736 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114694674 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089877934 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116671025 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079478794 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116570339 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090583259 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122096322 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09273859 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.123282431 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11612656 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100159273 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118632806 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096645811 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119111188 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090149411 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099548202 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095711082 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116570805 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092969324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113754172 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115684833 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091002671 seconds)
done (took 17.57308454 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090033811 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18835124 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159287031 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148376179 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13622971 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.090433382 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126998117 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146529967 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093106557 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147388107 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138319837 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135201394 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129023166 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112846139 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113953314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094493654 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116871625 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.106564219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151563214 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136877134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.169514936 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113280371 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127474025 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138023838 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123834568 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141109847 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091539272 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118886612 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094554241 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130864334 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134784252 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.094970794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115502584 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113209628 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1320238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123747578 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090554611 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121796947 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090341867 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114596692 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14546656 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135869448 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09585609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120299176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094560588 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12298368 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093155072 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123242743 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126268075 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095550999 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129582461 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161091898 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118931378 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107291534 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113404289 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126139615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107796972 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122261748 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09209569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122690663 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114459925 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.093993331 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130606272 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147072817 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095322782 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130695477 seconds)
  done (took 8.948691346 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108472685 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145459429 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133663428 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109771155 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115023328 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090957635 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115507066 seconds)
  done (took 1.771924957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092403902 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142627006 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135225053 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141478168 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139203533 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118858524 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12036977 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116048928 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111153983 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11740918 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140614453 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13331403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116649631 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124055687 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120156684 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115866813 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142995302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090991155 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119416584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119040438 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119002145 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135070388 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093403892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115545615 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111510706 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115219115 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164947967 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097137811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113644518 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120419168 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090709726 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156082236 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134838508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100224179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11700045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112312453 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134929293 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113913191 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.108244363 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122057233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134129945 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092003968 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117677271 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09051084 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121201578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105707562 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120470226 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117126597 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094866401 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140341658 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092715544 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134177559 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092920952 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120252838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118035516 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09559937 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126480774 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09400257 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140007491 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114318746 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112785969 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136223681 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134031114 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112137906 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118829121 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110325255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133226102 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119895599 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093729904 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120776886 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111690625 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114202406 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118465856 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106192882 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118524487 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120124944 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144606551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121025693 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103980019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118895393 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093585604 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11648909 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144105569 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096271168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117735472 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095934455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119357822 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114026868 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092420716 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121535382 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091399392 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119177689 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09669531 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117549227 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095618956 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136616128 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118161637 seconds)
  done (took 12.312569018 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094405213 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118430135 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097800459 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118052896 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093786249 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118358929 seconds)
  done (took 1.603136013 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12085571 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120414494 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132175604 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098619079 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159072391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13574281 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112332675 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126446547 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136569215 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105779264 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135422484 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137872392 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142380445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098764191 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135668148 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12357762 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11294615 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128248582 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130676904 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10117493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140578049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125166305 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100222554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138464958 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12222917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099349613 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128746106 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131635291 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105111112 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127410071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124153748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097273694 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125140751 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126728624 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112568998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124604722 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12395907 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.098319968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128971612 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121875197 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112801154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12672133 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129573228 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098172126 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127991547 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124050163 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097240766 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129144716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136292808 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097476022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123074748 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099346593 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121352029 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123764357 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100216655 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126153796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122622176 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112387916 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124202877 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124552191 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098089714 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122339398 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128013698 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097648179 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133617762 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122433063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100815141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124785315 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124741571 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098980631 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123223087 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12110825 seconds)
  done (took 9.615234206 seconds)
done (took 35.1980548 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695383193 seconds)
  done (took 1.655989503 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826639068 seconds)
  done (took 1.789063884 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.575576054 seconds)
  done (took 17.568949575 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501281027 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582010747 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.020312691 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179782714 seconds)
  done (took 3.247531106 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952657597 seconds)
  done (took 1.932404641 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286321939 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260658448 seconds)
  done (took 1.515167856 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777279253 seconds)
  done (took 1.750544563 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.459422777 seconds)
  done (took 2.431978222 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328097608 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190593343 seconds)
  done (took 1.502481906 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.565905665 seconds)
  done (took 1.545195809 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.154333503 seconds)
  done (took 11.136550385 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.275963342 seconds)
  done (took 1.270945834 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309196137 seconds)
  done (took 1.296146885 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.462106307 seconds)
  done (took 4.448562581 seconds)
done (took 54.057182472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102407516 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130721355 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104913561 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12746396 seconds)
  done (took 1.444778492 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109524354 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125501087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108573384 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122848473 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134966219 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099533832 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12750172 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130732195 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099366464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126841358 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100411629 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122795725 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129233995 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101684528 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121493765 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128653837 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104835492 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124805996 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129046264 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100613418 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122068241 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102606561 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128268343 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123895887 seconds)
  done (took 3.813143043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103847761 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122989253 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099174078 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122318452 seconds)
  done (took 1.437155089 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104068871 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135860263 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109795131 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128018205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136124023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109436231 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120752947 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096129318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123103616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129171931 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094227303 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144155959 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135134984 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10366343 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129856762 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093078319 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119603905 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135788336 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103072398 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129640671 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097706393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127633141 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118802528 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.112878485 seconds)
  done (took 3.828411484 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176833882 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130316166 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142309422 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099260851 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163175517 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143847529 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091737632 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.145146607 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.117087584 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108784545 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.121361538 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164260104 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108086001 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117225553 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116029539 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09196392 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131085817 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105753233 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.120061205 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131030484 seconds)
  done (took 3.520593031 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102189324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121020032 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092262515 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120224372 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103998165 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124822322 seconds)
  done (took 1.656923669 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099935635 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119293507 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096310545 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120077536 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098213313 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117306223 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09222687 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118886494 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118890981 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.091679862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119142407 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092056432 seconds)
  done (took 2.277579802 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514154412 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122786096 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12369847 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092020923 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127204031 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117718103 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108959217 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121745994 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146731955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091913835 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118917365 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093988203 seconds)
  done (took 2.778856407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233549794 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129514236 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28864947 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362537264 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203163242 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169756872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284935056 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169786172 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208256532 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16125975 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232110795 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185035203 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158002324 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208892031 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142955795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146936948 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197678855 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272338359 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157717832 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244091079 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173074235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172037184 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186272878 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155917104 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141972354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178132259 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099809977 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134409396 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190834311 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208244701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195222192 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166610445 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16127857 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.457833808 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26297465 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197535165 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289356209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138465262 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174507565 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173219564 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265227169 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142473306 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210508831 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164777738 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134482632 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208188946 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.34203914 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183599554 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149133914 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14614657 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202806579 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225389878 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199338554 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141731186 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328294699 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155657103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164677983 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197986021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214751222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233960912 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196705927 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123536862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194266372 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225214566 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191829602 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160093692 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186879054 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154306722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178810434 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222653647 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179005203 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174597929 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209905448 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116970072 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171624653 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200888224 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174793805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264024617 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188882972 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124504633 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171617531 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152816276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112316981 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199620484 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127947586 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218146812 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145171837 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166786426 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21472457 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161430432 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163168442 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21643582 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178561594 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150155481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086589206 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159098623 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158096818 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176956966 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141911017 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161332571 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155196384 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135822839 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1740559 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101037442 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216764827 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093854784 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.356462739 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187965979 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130754632 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166549958 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152910448 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15400392 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187782452 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20271485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144552652 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137993755 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215748261 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211131855 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119104606 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207263812 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207168363 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147381304 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154520234 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207183496 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244573008 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144757133 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206751195 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153888792 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139786333 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109531944 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216116718 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161936715 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163884825 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113039772 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.214245883 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20709669 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129550579 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143328051 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202759989 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138708573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135369178 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149600817 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125364544 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138998566 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144640091 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150507617 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18048332 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182531068 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15718916 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168866556 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14943956 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245319712 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145638016 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153247422 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124938818 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123371622 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201046211 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232020792 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134867068 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20761647 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172257605 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233575776 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171976542 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138128934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1786052 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107305384 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124682661 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199623968 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19332431 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163724064 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199234706 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206787147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211693327 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186620727 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171135592 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206577194 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.145309209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152739138 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140280818 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164133893 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160003112 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128150026 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118349231 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138415344 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152868339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146011221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139800747 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199938978 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177002933 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222145009 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163036848 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155203486 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18705133 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133289585 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176260659 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.403374047 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153034251 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20083076 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22406232 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192711956 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144589262 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2079337 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124636545 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128095433 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121800665 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196417578 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114330101 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138890263 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165460512 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187114918 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.354445944 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177574724 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242449935 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183860722 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197266845 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125378036 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171685275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182874127 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184210244 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180844678 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143901848 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126261616 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183757422 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156085845 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238163093 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171822093 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178905245 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228907043 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152705375 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109114635 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152507014 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174495802 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158854592 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178905424 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149926341 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1426414 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312285222 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134135484 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166362586 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21274667 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167720175 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182440225 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154021264 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191805867 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13129563 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166453445 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16301945 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168581745 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111538298 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330454805 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225045987 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121811109 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.341088316 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186677563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135855084 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316515999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207127888 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.361127295 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141562307 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160774738 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163965233 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167286962 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317114617 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181801436 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162990284 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216521999 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133573183 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139043135 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142632956 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153377414 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156940597 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109858146 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151939777 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.210164649 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112389438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213955805 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151703569 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160318328 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176513529 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12682825 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148306482 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157081482 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246767863 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189577901 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192501735 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152972842 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179940098 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234297819 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102455948 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135742333 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137617983 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180835936 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141083568 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197267291 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.220069545 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207602477 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188031057 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202176706 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115886674 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124405198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163693931 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175400653 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238349275 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148617344 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.126391486 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230505036 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111891848 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136173282 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166898587 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316859603 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122836154 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218988918 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082426805 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28979365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128894201 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136652397 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167040701 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189859897 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140311734 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155177352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169595005 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155902078 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168455994 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15226867 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224322899 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216506961 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235876823 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187142813 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137681408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163983283 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317091039 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216281477 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164142174 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112107366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190505707 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227091281 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196192866 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147218818 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173938816 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173916819 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16396869 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22085077 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114466988 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235929125 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111081986 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229263312 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158688682 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148330808 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17877903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194433733 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143807775 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214326969 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190356387 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138681985 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109820147 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164431338 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210693255 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153273511 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10382371 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209839342 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101707417 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226114561 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241453505 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139858697 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15989563 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150113543 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141366884 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160329645 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164691014 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142006732 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142358522 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225912249 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112832287 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217872769 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20892304 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175773721 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341783177 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146180974 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.712236953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107223998 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227657004 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150872481 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181945863 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153620894 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176200468 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164015428 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171668461 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202178267 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162140703 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23636525 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228555963 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18419644 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136622609 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164102182 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152364581 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148393144 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129687077 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199192857 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162459327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123636506 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.214116742 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161064492 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110928127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143434563 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232355283 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124527318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212315947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182422574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115717993 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204434924 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194675156 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137932552 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188510089 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190750031 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146723378 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153777889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141551691 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15795215 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270679834 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101055826 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215166604 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191574995 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164938351 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172439229 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152570067 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199218156 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163173109 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221086255 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147964473 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162419559 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162158632 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117920382 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133867156 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159793255 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171859445 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154722964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167753557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168671093 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201516068 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127247552 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122417636 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318748187 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180197747 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245052318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111544288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139804574 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163956573 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1496587 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18459329 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18520592 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140498618 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139555573 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140317722 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135134459 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140954916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160811172 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202485741 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317899835 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237889253 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.14120502 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282731077 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116288159 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159642504 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11843094 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109919621 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154211397 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15129591 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15672054 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227058428 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244158573 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150176634 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.139261933 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156037926 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128748811 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112912495 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16955999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16470652 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185696053 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146034055 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111628467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161067886 seconds)
  done (took 86.567934645 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174301461 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137265146 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152665992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205938777 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183458237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297778354 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213498814 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260691109 seconds)
  done (took 2.712182086 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096508409 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.155546189 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160760739 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.139106448 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094569432 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122732224 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.389367504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136149077 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094271398 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.153305741 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.150822044 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121135838 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.646313651 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122607241 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122813159 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.159813154 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118479612 seconds)
  done (took 4.06496703 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.146694863 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495137271 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.930100876 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198093835 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163446199 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119789712 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.712477076 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.123776608 seconds)
  done (took 11.978600234 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.127666807 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14883469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.166390618 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139942143 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.153196943 seconds)
  done (took 1.829688222 seconds)
done (took 128.89046478 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101250369 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131523678 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102304991 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132700782 seconds)
  done (took 1.549430991 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099517942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073569246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103396732 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077249199 seconds)
  done (took 1.446795683 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.197371262 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173344299 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400830342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074633048 seconds)
  done (took 1.599836432 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119069578 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136266269 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.136454231 seconds)
  done (took 1.492976765 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109432077 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132518094 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106125641 seconds)
  done (took 1.438327909 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110373011 seconds)
  done (took 1.207709808 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114395742 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.144471898 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11543133 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142008365 seconds)
  done (took 1.614247098 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101598896 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130666772 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116411677 seconds)
  done (took 1.447558953 seconds)
done (took 13.260200026 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111140614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434525096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422618856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113422567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729810766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413284832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031938559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149777202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172980839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124541464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114556299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705046802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.086922452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3537901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.074213063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.47199319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679717549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123272268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09613026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123859352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016747051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122194482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12459147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095370016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706738051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430190914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098404166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.473068065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095844916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132782056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384474172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125051685 seconds)
  done (took 17.425198692 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101747669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184972457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135841637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098093104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131050568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097854314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127426427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124549966 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188989899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097349396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145729905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096996535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129825807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125776255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11789522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124500777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12523941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09667804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123442775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098324132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143679872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096085029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125760757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124215999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098174821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138967197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125573226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096803581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124444368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105318682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127733594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09841842 seconds)
  done (took 4.978572336 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147017642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193800881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136174646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15835794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177564976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097997541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205418004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151380886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191630817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125679524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115767082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124423065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160258187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098858935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146397442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096744684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12506621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124251308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096335475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125313739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116591695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124118543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125771918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095615334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125946708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14043432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09804408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124393672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096841505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126614513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098693171 seconds)
  done (took 5.311383839 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100564247 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130072011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113322282 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141514407 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126819242 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101259948 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129377814 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098797982 seconds)
  done (took 2.049557061 seconds)
done (took 30.86226043 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114331713 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130247274 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110493458 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137946746 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134393856 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110314123 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123437522 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107738769 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136693183 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104760997 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14070409 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122898638 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097370384 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.123555533 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.110546991 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129903335 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.139234276 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10625304 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139667815 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110766969 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126118639 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136377065 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106755722 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139718785 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111977037 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139474164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141752148 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103680141 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12657522 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098208244 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130080539 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109405713 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126567843 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139961859 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102249264 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.129404014 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09768122 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.128764434 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137227155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107718336 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132130144 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108067013 seconds)
  done (took 6.207061329 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113294796 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145525303 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109665685 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112566286 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090032976 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083118187 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142110921 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082349373 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111606065 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11259313 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104818798 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079528359 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109055242 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076114085 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07869452 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.105974945 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081950321 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077763999 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106554102 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079378651 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.110448448 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075540205 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08137325 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.109103786 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077612359 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111666503 seconds)
  done (took 3.683340325 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103868704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145687378 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117871558 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180222968 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160003614 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.133878987 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109011139 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145524219 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113200533 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124208947 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128101806 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126571421 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142553179 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10382169 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128178191 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140664363 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111598685 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127104453 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106507544 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14504417 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141594846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106812742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144348154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135796178 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095554819 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127162189 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103377036 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139022153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103697353 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134805442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13153341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099711023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126578113 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136906697 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102604142 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126275458 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117388753 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139212912 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134102379 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098064656 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132982678 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098621497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146395124 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164035611 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097149043 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133025131 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099152546 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135400103 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126806377 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114774707 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13448485 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09709888 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128251822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125671678 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098519614 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141114847 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097934672 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127092444 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105010983 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130056407 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137955397 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101123604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141784314 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.096873399 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131899534 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125899297 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096138659 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122545695 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119452295 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132014917 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166162452 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097735777 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126419977 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107274728 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132027456 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132963427 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097001229 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142692988 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106111598 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127647138 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136273059 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099440213 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128407267 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11513435 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127424492 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126692066 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098974124 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131833721 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.098568381 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126722908 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140542958 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096026338 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128230666 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109892024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124469361 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098125586 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132295877 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130184876 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095027718 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138543208 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101982188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12547282 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135832315 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09599879 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127849235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107041135 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129580438 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124966431 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101223665 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132725439 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096935793 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129811795 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099042597 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126855354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134582516 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103554893 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130280016 seconds)
  done (took 15.412523637 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236167209 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224268953 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.194602165 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302714573 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138417063 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.151258118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219857675 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.160454648 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096309342 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.164259765 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175737302 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188250795 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176686646 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185773569 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.175605591 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126148622 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11639517 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171665467 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.252881153 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.271895412 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146675034 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134538137 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.166576818 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165401503 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.110222069 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136158474 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145803404 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109631018 seconds)
  done (took 5.96407878 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11409392 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158452235 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.131709237 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.11946696 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153009059 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126886649 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101601226 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128560737 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11052233 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140183356 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126859725 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102981883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.134156051 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135658123 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.097975266 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.135438878 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10659125 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127692647 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12910868 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101231289 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.137386097 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10680825 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129627774 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096781422 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135009565 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125035958 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091712758 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148041017 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125332546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118994641 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124853842 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104792259 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139507203 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126792139 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096759925 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128086527 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099537384 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.128328514 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099009285 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124139831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124556956 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080173419 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096197906 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141567205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131639091 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.082935327 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13267373 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103332607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126368194 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123193271 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10004656 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128413171 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100224007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.134445876 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099240256 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127022227 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100719817 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117088827 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103091289 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128482117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086875552 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125360185 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131025477 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09194263 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136071754 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102130023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125247494 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.100152943 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130405752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13325712 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099046075 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132225854 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094940294 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.129271198 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100119011 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130639785 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100282849 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124404976 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125698177 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097000694 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106856848 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097601837 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077061184 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129629725 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12429762 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097179392 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.128281775 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.103899393 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142993139 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128301337 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106711943 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127163197 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.09671632 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129899311 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086807216 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129875555 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143273499 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117516718 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127074918 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125681825 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111875431 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129264708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097034251 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108188189 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107032929 seconds)
  done (took 13.460820873 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135323871 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157811436 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129719028 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116199521 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161876552 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.16180607 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104460704 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13395761 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127895462 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117088638 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128138204 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106917647 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126859293 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111582995 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161540486 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.136612661 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098948151 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141504035 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131363292 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173468106 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.115549305 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14636535 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.114944937 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126953067 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132264133 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115201632 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164908325 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.141388938 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111587358 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14652815 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.1121861 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164399646 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147048559 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101886689 seconds)
  done (took 5.646707716 seconds)
done (took 51.48175913 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20250251 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440920749 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195696358 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.046897577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.217689359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22502283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208063893 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.197478697 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.772000851 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.197451449 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450647484 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.714022785 seconds)
done (took 59.993781613 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.231664004 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351232131 seconds)
    (2/2) benchmarking "String"...
    done (took 1.515236333 seconds)
  done (took 3.986908537 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.748121858 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.120243714 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454971939 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.215615976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197643461 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486994099 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.884734465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.563378538 seconds)
  done (took 28.04390358 seconds)
done (took 42.133832504 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.196860552 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.231797044 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234303883 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181827636 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306685185 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235358428 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.472338047 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.225396415 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.217585759 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17855504 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.194682139 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202986701 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.201742967 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.478500119 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199136123 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194680636 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.225540777 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.725031716 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.588181308 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202141697 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225626513 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.257251296 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.197579848 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197383261 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.218850473 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.197071376 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208411712 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216004478 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.594392487 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199235947 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.199313731 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.654510579 seconds)
  done (took 190.181527158 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197214624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.040924711 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.143868168 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.253300337 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.613603321 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393377737 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342934974 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.685584767 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217522635 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209164738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.410431639 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19841581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.456352488 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167213865 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225631171 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.270740202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.418845081 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.488444866 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23577864 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.353797324 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.197554057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.256523658 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.174427709 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.38363899 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.217916733 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.27708501 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.222192133 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.240294962 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.404354246 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.365622235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.215616814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.199539166 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.793147627 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049394172 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.199415591 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219802275 seconds)
  done (took 148.860684513 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196183422 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195664721 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195675654 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226160356 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195259012 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.741240675 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.746309484 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710465984 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.52085928 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.437415288 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.415886546 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195091985 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291236844 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210947215 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198878667 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214339404 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239520064 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205301329 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199587107 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730895481 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212360954 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.25534195 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384595088 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214363492 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229282039 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586318704 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199654451 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229609559 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.456356163 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.526089551 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246012253 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199325366 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199657611 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.555320516 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314611714 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200601901 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229851582 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200733872 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476814472 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200024424 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200985278 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202558787 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854486054 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202775971 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.741459373 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204703961 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.111425609 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200221681 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20137224 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.453216641 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.848041767 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221358718 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200806432 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202590481 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.202162059 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201103396 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232561955 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.453603355 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20449517 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290520667 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.217785486 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203577626 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232495265 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202211982 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.271344756 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217087838 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.301420497 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.278474305 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305923257 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728505963 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200007936 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296484689 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318218292 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201298604 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199867683 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19998021 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199592124 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.30996452 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200013698 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19980461 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.578995817 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.368505473 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217581615 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.456343468 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295657813 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200177898 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574494346 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202608777 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199612458 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906360746 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293441961 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199701762 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198902386 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200136564 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.57173383 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730117662 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.406785061 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202881598 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199721044 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.461372795 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198507261 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.591560546 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.708903267 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.805151923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200945707 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309353892 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368331521 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217059671 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200341727 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.43506648 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204404892 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255429754 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2000858 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595424773 seconds)
  done (took 363.779075842 seconds)
done (took 703.943780709 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.807288818 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.796883154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.904051169 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.793454873 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.75561251 seconds)
  done (took 10.181553448 seconds)
done (took 11.306016632 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379746124 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379749186 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256089671 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380751481 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231263522 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396689811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358755922 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221513706 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298833303 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277113518 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29864454 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251941309 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233358752 seconds)
  done (took 18.088318931 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533406734 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528111483 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264514114 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524310323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242582119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5065211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39830988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408149856 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413851663 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233225468 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214900581 seconds)
  done (took 16.393742005 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519395212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537053009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268978252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529946542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242782363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521756506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405029941 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417247555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419775601 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23200074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214377497 seconds)
  done (took 16.43330949 seconds)
done (took 52.039584002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211233776 seconds)
  done (took 2.336686959 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24521134 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405967008 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227717869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216456046 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211449771 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213298536 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218973937 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212410485 seconds)
  done (took 11.077923168 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211881703 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211255388 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207822039 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207566451 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21116309 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20832453 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210069474 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209170704 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211178458 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211118125 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.20751233 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208545106 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207604506 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208449191 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211716977 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211474113 seconds)
  done (took 20.482560925 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21048734 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209430801 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20846091 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208963339 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208274589 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210307163 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209066211 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20936074 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208615273 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208600526 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21008719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209200086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208814272 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209052881 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209209444 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209720842 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209261054 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209515657 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21481301 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210719437 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209157436 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209377956 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208411799 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212731165 seconds)
  done (took 30.160521799 seconds)
done (took 65.184969166 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.791141239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.605916411 seconds)
  done (took 6.524638623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.271405723 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.273298366 seconds)
  done (took 3.673957672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211080418 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210960223 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211500419 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21094369 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210912119 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210760834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213894308 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211200465 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211142399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211031991 seconds)
  done (took 13.241089949 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210925331 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210919361 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20940683 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214897149 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21085402 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.2082107 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210815413 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210336127 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211345137 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208821495 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211604444 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214604501 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211499907 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209493861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211220593 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208666367 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209313926 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209241336 seconds)
  done (took 22.920043542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211479049 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234189351 seconds)
  done (took 3.572765384 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.337307367 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250358289 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31979329 seconds)
    (4/7) benchmarking "year"...
    done (took 1.306216156 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.25108032 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230200164 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254933803 seconds)
  done (took 10.07682652 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211156363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392325653 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499032067 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.804748616 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21130144 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216544384 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.108249799 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21515085 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217216475 seconds)
  done (took 14.002090902 seconds)
done (took 75.140071802 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.181008856 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.218648357 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.377944067 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210323832 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234283217 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503950427 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.216300993 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.331012385 seconds)
done (took 37.401890821 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.204734311 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.191783084 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.847108838 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.206138567 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.211310554 seconds)
  done (took 18.582669008 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.167389892 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537510614 seconds)
  done (took 4.831748868 seconds)
done (took 30.746304884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211309614 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20825904 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209456636 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212092968 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211707624 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.207635843 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211514371 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.208943077 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20856897 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210470686 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211871688 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.211729604 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.211336624 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210486041 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207619232 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208220222 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212154965 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209380739 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209242051 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21007521 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211903848 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208940357 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209300179 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212773569 seconds)
  done (took 30.172624843 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212388674 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21068471 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212467881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212121503 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209322219 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211855809 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212467066 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20941089 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21161809 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211230477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209894416 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209426882 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211895731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209439775 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212172419 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211222368 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212854168 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21025132 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212561237 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209924869 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212329835 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210219951 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211889154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211915155 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21012554 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209709646 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21257033 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210379297 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21449645 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211459279 seconds)
  done (took 37.466690523 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217495645 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.218762249 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213604367 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212527934 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214406151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213046055 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214779958 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213091679 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214889613 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214626809 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214290065 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213930262 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214987811 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214153326 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214348379 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214196986 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214395721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214280621 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215307834 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215411277 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215178287 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212989332 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214690639 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215118907 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215229134 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214444044 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214466197 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21650834 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214449844 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214909352 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214603824 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21618307 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215024065 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21566177 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215872724 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216057393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220716594 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221713554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216171824 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216611144 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217162192 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216252763 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216466594 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216315901 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215686497 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215448723 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217022015 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215815918 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216315698 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216129389 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216040129 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217073495 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215833171 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216337993 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217664919 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216216871 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217555766 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216656267 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216881234 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217662657 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218271982 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217052685 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216881257 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21707754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217210361 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217137311 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217614619 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218487441 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217400665 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217201601 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217424241 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218219868 seconds)
  done (took 88.681054542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216596539 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21595976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215446396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216425075 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215213056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217651079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215226384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218346929 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214974956 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218581675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218823407 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216122871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216041696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218158814 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220008752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216034346 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219055597 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215001305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218366553 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219900874 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218427209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216031684 seconds)
  done (took 27.910165147 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218500539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224051015 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216710104 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221192463 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219469748 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220634861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219587253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22126937 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219516807 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216363657 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218000236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221399944 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218608507 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217461738 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21713374 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219191478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22128852 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219176985 seconds)
  done (took 23.085251752 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217023726 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217842528 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220824046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218070304 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218098974 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222791567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217845796 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221306977 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220640109 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219647257 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221307194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220768402 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222271832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218375347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222189244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21878709 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221012605 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217608382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221457738 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218573601 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218310769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221983529 seconds)
  done (took 27.973032428 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22266924 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221419759 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218519985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219806994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219270047 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221549676 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221809253 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218750932 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223784946 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221998914 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219629852 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221624738 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221155458 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220808743 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22063156 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219275527 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223448199 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220135178 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223098406 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220237765 seconds)
  done (took 25.557318608 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22366038 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223780905 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224415156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223735324 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224223033 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222732883 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224381619 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223725553 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223840175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224860479 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223628266 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224125661 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224678345 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224356087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224789357 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224659472 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224602224 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224376187 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22563495 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224740698 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225385678 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224844523 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224328856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225481978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224854929 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225631536 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22499992 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225542457 seconds)
  done (took 35.424635651 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224370153 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22555154 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221929078 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223231776 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222590529 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.223710879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223478062 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223967572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225875896 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222607489 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226359686 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225351654 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226799206 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226141929 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2275107 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226338048 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226680227 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223274905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224817688 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22466352 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226991304 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226401373 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226593695 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224796102 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225859268 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.227643072 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223711163 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224802993 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226447915 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224605316 seconds)
  done (took 37.894208994 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245474897 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245725448 seconds)
  done (took 3.633646686 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224740848 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227278515 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226156614 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225051899 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224890198 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227083142 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227834912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224573728 seconds)
  done (took 10.949681212 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228999014 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.228374678 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.229190198 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229029441 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22943704 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228735007 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237031225 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246288436 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.22883926 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229238804 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235563968 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235944231 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230823654 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229271554 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229567568 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232192554 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229492038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229736739 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229948146 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230151335 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229526105 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23308437 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233210354 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2284198 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.232051995 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.240939842 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25275754 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.231352776 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229709269 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234035978 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.230579215 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.227835265 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230870264 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230391229 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230821909 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230151372 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24084342 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251171098 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237822276 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248938819 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232277052 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228694766 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232451831 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233122622 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232250325 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23359444 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232515906 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.22900329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231105766 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234342508 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.235598773 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231986062 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229666201 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235912979 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232999552 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240205403 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250183943 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235761474 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241151983 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242844942 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261435899 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254943131 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234461759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.233390358 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242174081 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253119378 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240674474 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.246853418 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230566945 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232780385 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239404342 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262245187 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256225697 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23311749 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234364554 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233873211 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233812565 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234076781 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241367039 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.254066529 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.234532561 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235047082 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243415267 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253805997 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233465235 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.235616987 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234992562 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233795741 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235748295 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245430107 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.252663073 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235389627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234571208 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233738939 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235618637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235916685 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233814566 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236878777 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23208051 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.236119408 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235611564 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239208226 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.243003118 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235239241 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235928396 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242491608 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.253123061 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236307064 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.242157451 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252923275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237158419 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.238137319 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241497231 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232906552 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239660945 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243500731 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.237457009 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237736582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236598685 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236909845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246557449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25971559 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.237194006 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237139464 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24157416 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24563331 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237440849 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.240019074 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.238439511 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23550501 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234957174 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238728106 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.238364552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238886378 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237776168 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239459384 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234823318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.236022039 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239252931 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238485223 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.239354545 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238897047 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238148987 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239965572 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.239631281 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239463465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246320597 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.255338994 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.238080972 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.239063587 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236500343 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239281952 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238178815 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238106051 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238665578 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238437653 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238568532 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23913325 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240476879 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238826708 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239249033 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.239131012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242059921 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238621689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242338841 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238758392 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236970833 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239637053 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239010441 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239963156 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238494914 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237807553 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243826291 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247289478 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239627082 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.240352424 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24160798 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24056953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240053361 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241206141 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24337845 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246307687 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240215364 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247412452 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258219803 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242148623 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240679048 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241365997 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240271817 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240698334 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243475957 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247244017 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254287046 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26497262 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24221269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245043882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242593554 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245102283 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245177781 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242557586 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.243336997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242179404 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241780545 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241746633 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242963223 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242274334 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24190682 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242752225 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242237112 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242879605 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243244543 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242718149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243211662 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240656333 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243672917 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24337242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242817746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239589631 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242543187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242821128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243560497 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243730237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249626532 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.257844936 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2437319 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245510049 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243649079 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.242229836 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243714 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245322651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243879067 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250475624 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259942995 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244339436 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250555175 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.262213891 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.2432389 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245877523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244519211 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.242823338 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247839138 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250824775 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244420723 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.245514259 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244277108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244718058 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246337842 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251916832 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259251726 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.246242903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245144158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.246273782 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242644479 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246222528 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246344528 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.245573888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247455253 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24561382 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246754882 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246825285 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24670779 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246208538 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246977021 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248422817 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253353989 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.250911944 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26254061 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247218456 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247904157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249789228 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248324931 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246473375 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.246622114 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257867573 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270333908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254583998 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263829877 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247015601 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253901325 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264503954 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250100351 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247228731 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247862066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247505756 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246774133 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244865285 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248097841 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.247618341 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248326919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.250020758 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250058471 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24835528 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247670734 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.24855958 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24879856 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248507241 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247771386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248483016 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24990008 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250521459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248140838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248755588 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257067071 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266721749 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249006687 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24757428 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248339241 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247426976 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249104198 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.249624159 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252002018 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257289483 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251949032 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257234777 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250481637 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260260369 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266319695 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.254108669 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.25653065 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247008948 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248405019 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248841094 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249655608 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257953216 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267156839 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251087972 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253841306 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251424068 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250397255 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249201052 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.251272953 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250421862 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.250075769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260036102 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.270766752 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253094862 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251988769 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248101001 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251302902 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251409906 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250769502 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253804343 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.252033392 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253244542 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25099687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25248655 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250675596 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253743837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.253280149 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249471715 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252295493 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258402352 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270813445 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255208544 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252583064 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260208313 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270145545 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259162107 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269721386 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252943953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251690402 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251895759 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253919332 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.252288401 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253264314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252979058 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254281887 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257058348 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253998838 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253907783 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253805267 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25473085 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254751379 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262820608 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274036255 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25552674 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258112723 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251311182 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255621269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.258364728 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.255191832 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253344359 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257406998 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263624681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261204382 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.254927045 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.255120197 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256009982 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254730118 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254764434 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254697808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253297247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255368856 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.255441504 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253772127 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25817594 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254238992 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255357877 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256140999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255674038 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264259649 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272213626 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25578668 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256460068 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25726439 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255127426 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255621243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256450039 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256302742 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256028511 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25703309 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262379483 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260894081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258414855 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255877258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256990729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256989666 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256605785 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256011449 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.257233823 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256615755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256618496 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.257147252 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256670961 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256130135 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257495117 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257247792 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256941029 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259459943 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262705443 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256675178 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254340256 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257049593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256850591 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255885651 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25809572 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263803059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276487534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.267359603 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264596114 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261148122 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259204046 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260263866 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26368857 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256935563 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258938252 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258757341 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258753939 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.260006125 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261654326 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258976217 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26478053 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.27686724 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258145188 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26773056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279121994 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259736215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260039895 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262306538 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259405015 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.256681498 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259167622 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259233941 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266820949 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276558912 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259587967 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260434791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259457916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261078262 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262447048 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259916368 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259919393 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256015663 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26066229 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259744067 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259802117 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257971724 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260813511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.260317734 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.262549388 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.265788685 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.257581258 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261731927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260276309 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259795966 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260491584 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260936086 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257456984 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258070817 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259796945 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260621744 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262057648 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26130681 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26099903 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261959553 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26095104 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261704705 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264266513 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.271267449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267688621 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25936394 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260582226 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.262382351 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263560386 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262402966 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262358293 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262689489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262535001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261096065 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263080778 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261880061 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264719324 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277197617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281756528 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26287964 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262098826 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265717461 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.263361119 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260884114 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262745536 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.263674388 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267159582 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270802616 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263823867 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269748773 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280101023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263936189 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267140369 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267553811 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269728114 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.265797634 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263977509 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.265009934 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268825069 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278973015 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282005392 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273507998 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291116697 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282040397 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264648303 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.265777961 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264123083 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26517331 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266100902 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265382715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264915937 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265670784 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265345283 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265653844 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269930731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26556627 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266616836 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.264776309 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264832233 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.266009507 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261725266 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265745392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265910927 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265894455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266144756 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265402609 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.266419969 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277796331 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290350327 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266144879 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266755037 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.263703844 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268947111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269715103 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276154848 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272015595 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266277519 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26709908 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267161547 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265911485 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.266212442 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26614934 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266544071 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267033259 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262894339 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278534021 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287901626 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271852357 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284840368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267587564 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267909308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26752443 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267875067 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267618542 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.269018585 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268874559 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271753764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266032892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266803168 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270476987 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273703084 seconds)
  done (took 746.947626078 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264492076 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264656007 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264716238 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265037245 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265005153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266015851 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265465516 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266504908 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265793937 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266213903 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266587358 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266238456 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265830989 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266691943 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265895555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26571785 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267198624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266773886 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265650306 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267066221 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268153084 seconds)
  done (took 27.764832422 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269013123 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266418624 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266064111 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270417653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267270196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270487278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267089581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269790735 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270370643 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267790682 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271017341 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27128038 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267778676 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268461651 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267989333 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270171385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270008197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268503329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269816196 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267460582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270118222 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268478729 seconds)
  done (took 29.097200113 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271363228 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270239799 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.271273404 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268188815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271423536 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268215758 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270875654 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.271321378 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27193077 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.272187252 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.270150173 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.273290977 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277502731 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.273978899 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.273281404 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.271043202 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.415597387 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272316988 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272703958 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2725297 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.267810031 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277288477 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.287906797 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.269027421 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.270962656 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273388228 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.272232769 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.27159172 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273422166 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.273971005 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.276942194 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272954284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272408446 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.272948742 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.271761188 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273952002 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275879246 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272888949 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270234796 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.272909421 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283629439 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291190424 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273675952 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279378794 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.290864568 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.272828966 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.277472619 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281367996 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.270857551 seconds)
  done (took 63.754581184 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.273231601 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274677472 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270808186 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273742885 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274378703 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273559598 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.273673885 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274104814 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271041194 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270908398 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273499249 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272600854 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271017266 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.274436904 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.273791647 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271732744 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271994622 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272146844 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271869468 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271455988 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.271666177 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.274413887 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.275310138 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273280802 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276255551 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272634477 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271800673 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.275289092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.273184561 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.273351449 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.275505442 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274597142 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276135713 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.27316702 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272242816 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.275544282 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276845186 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27394253 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275925397 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277224602 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.2763065 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277530956 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276246216 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.27573445 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274832608 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273405671 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273900706 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274168041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27497488 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275715079 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.276489166 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273880095 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275533419 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274537628 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278196022 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276140688 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273026489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273409696 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.276696939 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274208746 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.274315741 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277116106 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.274674693 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277782725 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278001759 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.275246179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275138053 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276887441 seconds)
  done (took 87.843551205 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27818959 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278743182 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276738395 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277062082 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278826155 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278939531 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278864177 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279192313 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277791128 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278992927 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279438024 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276667725 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279743319 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278782135 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278948199 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27854223 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27934627 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279493859 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279545133 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279983713 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279341016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280093251 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.280232465 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279617412 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281162779 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279363229 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2809406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279624029 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279651799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279410933 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279248111 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280842325 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280168684 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279256161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28087845 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279737626 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279827081 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280494823 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280153197 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279302097 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280737623 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280672766 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279488638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28065725 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280143316 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281158685 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281799236 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280516805 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280886974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281628701 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279664209 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281051517 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281259498 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280255039 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28081198 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280990192 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281904573 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281414648 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281923945 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281149959 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281807789 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281360024 seconds)
  done (took 80.545755709 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281588339 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281639668 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280263446 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280111073 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282229266 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281203215 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281933549 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281399759 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282225853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280825868 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283941509 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280075066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280364191 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283494829 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279800808 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281489689 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282197371 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280708659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282527469 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281579286 seconds)
  done (took 26.821477119 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28020711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282885246 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280930889 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281230457 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283359146 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280818703 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283354937 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283086924 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28092666 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284554878 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284174043 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285307298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281708734 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281429411 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284703839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282214914 seconds)
  done (took 21.714345083 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282405804 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284076304 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284460083 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284444386 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282008954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282053203 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284669925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282199359 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281713151 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284451775 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284289625 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.284152814 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284635439 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284956002 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282123071 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285457155 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281887021 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282254936 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285294772 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284469377 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282878312 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282614745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286123876 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284276814 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28218875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283303635 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282582138 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283912287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282640115 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285696989 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.282911638 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284473575 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283393565 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283677684 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285526687 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283438721 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286223442 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286354599 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285330158 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287080293 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287229104 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.28389108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286781104 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287067844 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283264431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286659544 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283971033 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284494343 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283719836 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284571929 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287095419 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286455593 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287071612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287589842 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287089845 seconds)
  done (took 71.840258729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28779951 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287282981 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285502308 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288314258 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287893855 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284825009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287607049 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28660806 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285824285 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28825269 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286490228 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289727573 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286606991 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288651576 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287528402 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288130733 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286253018 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286170188 seconds)
  done (took 24.367454502 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285714051 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285655244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.288018599 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285171131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286343766 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28959577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287341897 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289194022 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288888588 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28691889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285697673 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289774905 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28801289 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288615134 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286881362 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287725507 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29088961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290199603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286993815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287466962 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290018055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289968636 seconds)
  done (took 29.535242978 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289595202 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.289123272 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.290172342 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305503529 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.307045701 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.311104312 seconds)
  done (took 8.992223058 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296612216 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289728625 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287484774 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291140165 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289853514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288076891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288367442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289217123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290061239 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288357257 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287361176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290974019 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291349463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288013107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290985612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291181564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288180759 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28891278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289470242 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290716944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288272169 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291099513 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288800975 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289504218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289542786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289663841 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29114107 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288307361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289452135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291854458 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292096579 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289524337 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292738413 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290792711 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293685436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29220758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290364812 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291561706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292812594 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290890645 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293837692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292656641 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293111034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290917765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293506056 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289114519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291919686 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290698408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289419946 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295144406 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293254664 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290681735 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294983222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295274105 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29387981 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295189808 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29110123 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291754821 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293308965 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291989629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29122343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294480481 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291682193 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292333998 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294218029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291506402 seconds)
  done (took 86.440305773 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293141597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29103807 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292707227 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294053617 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29126308 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293927477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293522848 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293651922 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29305637 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292870135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296163349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294545701 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292726219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292547584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293208718 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292817011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294597438 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29443813 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293912318 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296643464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29261311 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293171654 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294435537 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294019082 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294029452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295954255 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293880139 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294923757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29458144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292647657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294544317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293738124 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295110426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293621576 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293868717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294114824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293689295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293065255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294130891 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298118411 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296943433 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299830845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296548685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296848351 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296005282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296139416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29548031 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295373605 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296207555 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296279679 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296094573 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296370788 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296905339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296751332 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295930411 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296938548 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296569597 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297047691 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296218061 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298186939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296851463 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296663517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300008795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296472879 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298302929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297993969 seconds)
  done (took 86.680690725 seconds)
done (took 1742.221504294 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462512767 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415860169 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298995088 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.34926056 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298950883 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.323241298 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.296572045 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298209418 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297583413 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298678426 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298966973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486099106 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.35201681 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298681153 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298463297 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39368052 seconds)
  done (took 42.678130365 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324724006 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304506542 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.411112376 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324230082 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325578993 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.479712014 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.359108019 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305953599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.464262964 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.342027135 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.779439554 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.324934143 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303477287 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.379090885 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324734623 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.480537069 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.542337864 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.789703033 seconds)
  done (took 29.775425781 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.725842101 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332128981 seconds)
  done (took 9.268539534 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323032257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304868812 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305421226 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303419154 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296460042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296486058 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30668488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303103172 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.725937706 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.427421257 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327793421 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314254032 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320670526 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304428774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300750474 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339780611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445431306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302890037 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299274115 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308299591 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302646094 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.40154678 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.358691604 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302347874 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.42141416 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.737358128 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.31192364 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310454284 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.446417862 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302502317 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.303005362 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302321078 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305171287 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.175145103 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.811178209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.3021458 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32858875 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.315796972 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301855589 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451503358 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305988077 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309784445 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.296542187 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.778652001 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.429724735 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.4133051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.443299974 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.323028624 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307038723 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.364523775 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.30860726 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307727615 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347597021 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.071467835 seconds)
  done (took 109.578206824 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.334650194 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.700405659 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467820969 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319987757 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0873971 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013922436 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313582642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.569609899 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376910602 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300721143 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.583128729 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793668304 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327431902 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.364514847 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791190085 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.345142578 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304466214 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.154833034 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.320052538 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.303076432 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782317858 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305537838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315481165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.466838961 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338099825 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744548887 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.624853587 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.684584882 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322826683 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300757172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758188751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32097909 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.316110039 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303000733 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.555554366 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648530413 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641920217 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326862678 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.332258949 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.304607934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328553419 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732350813 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641496985 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316330695 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30711547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.743353921 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317122596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.305277198 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.307441178 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509049384 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.947759429 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304651736 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.620560226 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.308211182 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.571221328 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364326359 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318882273 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767699792 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317345732 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.357786282 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347131532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303270492 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308771645 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307719002 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30514606 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63177153 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.435271473 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303251961 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.629685793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.765935938 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317439842 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832118269 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.222522108 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308390787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.412559411 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310461023 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.95030927 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775204289 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334070339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304844644 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619486184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319569823 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.576544768 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317741746 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304246178 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810472027 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.313456446 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.334269337 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.30393067 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.30663318 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.055107552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308695305 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.579159164 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.331152863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305386412 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.303966266 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.339802999 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305598341 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319252718 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310910207 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820264841 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.325445223 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.279245283 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328322722 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31498984 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311748854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.306770794 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307667925 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529396387 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.754204787 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328606572 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30762418 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.305454512 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.329859587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.47122543 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309882824 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.595501699 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322019317 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306583322 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312106424 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.057934814 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352674626 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306109155 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307230111 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.187387929 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513521378 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324174371 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.306731733 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306846804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331810666 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.481799328 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325052434 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.383248543 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306023014 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002019264 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346466398 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316661607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.609961699 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310671417 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.145082158 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327888129 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309444207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.590817625 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.564418492 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.360679857 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31131087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.322842777 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995277979 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351814643 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444935186 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327269745 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.333116454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503601217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.724476567 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310540792 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.909111603 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.310011509 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524341637 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309561077 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620317007 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786490675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323701205 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315932348 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.007129779 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.996659267 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.063699819 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.310806698 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579295522 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.2881957 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776218076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.309468593 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318348846 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.877070846 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310960776 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318586724 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.310503035 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309778171 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.602039784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486066216 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.559460845 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31105184 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742516448 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.348202386 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309981316 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313434739 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315121165 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.658582947 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.352125296 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.315414072 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.357317011 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.311997441 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314506738 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.766907863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.268700857 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.316751034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460316304 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927415264 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.330893852 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311221719 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.918533621 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.541906789 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845618958 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.392181599 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.603798725 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.329485631 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347681595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05939019 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.403625381 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769075856 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327993988 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311989387 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893554703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.332106794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664618961 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.312025534 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311918839 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849422495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329238035 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.317857122 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.509190134 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330086234 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580895291 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.315343999 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.33396431 seconds)
  done (took 1104.600861913 seconds)
done (took 1297.109899045 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313865414 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319970867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297418981 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314191829 seconds)
  done (took 26.473631964 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.337042995 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319126719 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320635862 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31871654 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321749582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.319660881 seconds)
  done (took 9.165615973 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.38190556 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312281908 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319404205 seconds)
  done (took 19.241278801 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.520163132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.549277687 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.636337795 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.382504004 seconds)
  done (took 10.316332511 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.322574241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.32148396 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321762374 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322581817 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334901814 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335888497 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.325164832 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.324105866 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336331226 seconds)
  done (took 13.173169265 seconds)
done (took 79.597891871 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.214868347 seconds)
    (2/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.038033826 seconds)
    (3/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.401731257 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.745505559 seconds)
    (5/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.334566393 seconds)
    (6/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.882756607 seconds)
    (7/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.580172834 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.342199083 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.584096449 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.371981326 seconds)
    (11/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.293888981 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.362880741 seconds)
    (13/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.416238483 seconds)
    (14/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.402613121 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.014207064 seconds)
    (16/286) benchmarking ("sort", Float64, true)...
    done (took 6.33611841 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.294921531 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.203773985 seconds)
    (19/286) benchmarking ("sort", Float32, false)...
    done (took 5.317513851 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.310236176 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.295773574 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.318442649 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.736470957 seconds)
    (24/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357225853 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.891378421 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.502538441 seconds)
    (27/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.04602034 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.316774917 seconds)
    (29/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325730047 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42697794 seconds)
    (31/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.302306319 seconds)
    (32/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.91022239 seconds)
    (33/286) benchmarking ("sort", Int8, false)...
    done (took 4.406431691 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.915698418 seconds)
    (35/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.811730571 seconds)
    (36/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.676286327 seconds)
    (37/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207288949 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.724192578 seconds)
    (39/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.096346109 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448666764 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.201498216 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.575925362 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.724874983 seconds)
    (44/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.001836602 seconds)
    (45/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.578305237 seconds)
    (46/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.348255154 seconds)
    (47/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.648468098 seconds)
    (48/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316039786 seconds)
    (49/286) benchmarking ("sort", Int8, true)...
    done (took 6.336602239 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.39281609 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.696898158 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.67551773 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.329500433 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.457628134 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.663585887 seconds)
    (56/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329175576 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344971172 seconds)
    (58/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.310682353 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.200040148 seconds)
    (60/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.319174034 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.499681323 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.339238112 seconds)
    (63/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41215729 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.693205325 seconds)
    (65/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345987605 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.851023236 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.585277664 seconds)
    (68/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.701929033 seconds)
    (69/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.490862999 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.100912222 seconds)
    (71/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.921235696 seconds)
    (72/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.435766612 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.422594599 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.299513143 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.934966223 seconds)
    (76/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.339388955 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.308064834 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.435044317 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.520746728 seconds)
    (80/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.298512286 seconds)
    (81/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.392110834 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.698539221 seconds)
    (83/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.76838322 seconds)
    (84/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.29875384 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.522389346 seconds)
    (86/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.387826125 seconds)
    (87/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.41838026 seconds)
    (88/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.322113742 seconds)
    (89/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327211779 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.136759386 seconds)
    (91/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.437862353 seconds)
    (92/286) benchmarking ("sort", Float32, true)...
    done (took 6.320483132 seconds)
    (93/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.917684613 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.514529615 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.175206129 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.356979011 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338409107 seconds)
    (98/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.301047058 seconds)
    (99/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.302274118 seconds)
    (100/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348196797 seconds)
    (101/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.818118379 seconds)
    (102/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.619569711 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.422331115 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.329176717 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.30449477 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.330897164 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.520979404 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.065109192 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339267024 seconds)
    (110/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.023323997 seconds)
    (111/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.315827123 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.042293558 seconds)
    (113/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.558647972 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.323192772 seconds)
    (115/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.139814923 seconds)
    (116/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.405030364 seconds)
    (117/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.540523902 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.838841312 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.364322369 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.151176511 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.580080393 seconds)
    (122/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408287625 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.929982087 seconds)
    (124/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.349556609 seconds)
    (125/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.512055956 seconds)
    (126/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.323397031 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.049660889 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580673091 seconds)
    (129/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.918287618 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.62638529 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.434935701 seconds)
    (132/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.388753285 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.383676609 seconds)
    (134/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.67215394 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.035481136 seconds)
    (136/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.303875316 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.34449064 seconds)
    (138/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.101825466 seconds)
    (139/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.461677516 seconds)
    (140/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.303978282 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.053006855 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.05965551 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.354463385 seconds)
    (144/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.35550998 seconds)
    (145/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.831918066 seconds)
    (146/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.309084927 seconds)
    (147/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.278134043 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.303854969 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.308899081 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346855063 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.348930263 seconds)
    (152/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.681989294 seconds)
    (153/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367392877 seconds)
    (154/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406972875 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.430409024 seconds)
    (156/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.537988475 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.341104498 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.472190013 seconds)
    (159/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.433298043 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.646555252 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.823975244 seconds)
    (162/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.334694932 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.221057733 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335483127 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310028455 seconds)
    (166/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.561921128 seconds)
    (167/286) benchmarking ("sort", Float64, false)...
    done (took 5.585933245 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352921682 seconds)
    (169/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.045148283 seconds)
    (170/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.305373895 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.324495561 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.691613296 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.320042822 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.306700534 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.956582643 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353857909 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.426986066 seconds)
    (178/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.323116328 seconds)
    (179/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.05241701 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382698862 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333050073 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.674312698 seconds)
    (183/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.447830609 seconds)
    (184/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.335564213 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.310693959 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.426319825 seconds)
    (187/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.693103242 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 5.351293587 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.401302033 seconds)
    (190/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390824889 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.145709014 seconds)
    (192/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.371786165 seconds)
    (193/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.311444003 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.448412382 seconds)
    (195/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.330560709 seconds)
    (196/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.255536008 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.969246183 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.539696451 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.343768642 seconds)
    (200/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.380209251 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.309864354 seconds)
    (202/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.526616479 seconds)
    (203/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.548317033 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352707306 seconds)
    (205/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.17445698 seconds)
    (206/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.354787595 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.950546961 seconds)
    (208/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.793081664 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308644248 seconds)
    (210/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.357713764 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371314873 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356497384 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.309165551 seconds)
    (214/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.431071175 seconds)
    (215/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.309317327 seconds)
    (216/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.307740832 seconds)
    (217/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.683284104 seconds)
    (218/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435843021 seconds)
    (219/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.125465216 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.697894593 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.336306983 seconds)
    (222/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105774658 seconds)
    (223/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394791356 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.167555885 seconds)
    (225/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.535681407 seconds)
    (226/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.339471094 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.310680225 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.310375413 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.765315961 seconds)
    (230/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.41509245 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.53430421 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436684258 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.344088839 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.624733189 seconds)
    (235/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.316429387 seconds)
    (236/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.314487394 seconds)
    (237/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.438004283 seconds)
    (238/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.708783456 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357410141 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.716263217 seconds)
    (241/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.548774542 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.715583355 seconds)
    (243/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.462582831 seconds)
    (244/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.333295128 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.461138546 seconds)
    (246/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.509870321 seconds)
    (247/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.311852625 seconds)
    (248/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.340542009 seconds)
    (249/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360671158 seconds)
    (250/286) benchmarking ("sort", BigInt, true)...
    done (took 6.333107556 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.786810618 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.735813034 seconds)
    (253/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.563409145 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.311548718 seconds)
    (255/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357007701 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415201891 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.14607543 seconds)
    (258/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.563785369 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.431722481 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.511328072 seconds)
    (261/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.901910057 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.335033118 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.505926184 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.337228963 seconds)
    (265/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.437313805 seconds)
    (266/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.198932302 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.129388407 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.392328397 seconds)
    (269/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.312749747 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.227838547 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.334754695 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.680368092 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.327310064 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374856551 seconds)
    (275/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.83799202 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.312414488 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.34069243 seconds)
    (278/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.134260866 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351914592 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.313590423 seconds)
    (281/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.429480268 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358106152 seconds)
    (283/286) benchmarking ("sort", BigInt, false)...
    done (took 6.333735834 seconds)
    (284/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.703411292 seconds)
    (285/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.318232811 seconds)
    (286/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.378128742 seconds)
  done (took 932.284068292 seconds)
done (took 933.514088 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.367788872 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36951797 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345799897 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367716603 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.462510533 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368699023 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356631557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349354688 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394053082 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.397100561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350728288 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.365765372 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354163006 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352117459 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34709152 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368535497 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360832943 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353179561 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369120143 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356986669 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.369939775 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351226606 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.395662106 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.368498433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351436032 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350411634 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356225149 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372120575 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.465782828 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357576416 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350800421 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365044967 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.358902942 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346052857 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342798973 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.373051513 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364175353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.35975027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353306555 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385564719 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.748749707 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368112927 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.356256977 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.350243761 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348905726 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353954222 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357480617 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354747831 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368862811 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368707744 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.734786511 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.385882657 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.358978859 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35005954 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.360046044 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356135922 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354035395 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372286157 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.375736844 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372303224 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.346825078 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.355965701 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.352609261 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.373601619 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363471725 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.776710127 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360885745 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.354523066 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.747428083 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.372926173 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.775014208 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380610291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351823244 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370476275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387508709 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.361695629 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.346174554 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.350249641 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366079868 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355835094 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361389952 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371141848 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.357386901 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3519999 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373973046 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374499491 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.362361198 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358334743 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361645055 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.377245343 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.365683355 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.369324323 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.355199919 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.347421376 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362570012 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35547266 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360539945 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36106604 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357761974 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.362840277 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.746863476 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39326311 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349771495 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351290798 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352537796 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.372236604 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.747687833 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.374689969 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.375466788 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.400837722 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355766112 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.35147774 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.363163955 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377978089 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361507279 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356981662 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349395545 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.350073534 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.742147649 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390599597 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.355747197 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359539751 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378459306 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356001866 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35259725 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.365167764 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.356441385 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375359279 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.48175618 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.367343032 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391295113 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357758422 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357883254 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.382252538 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376985588 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.392167026 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357687922 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37702514 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.376564154 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352740737 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371519634 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366343869 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356859058 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.362578744 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350219951 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380755339 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37581376 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375714378 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.377934723 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483451373 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352610028 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.356222504 seconds)
done (took 228.09324265 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415785788 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.349789128 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440175082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352717575 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.451812089 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452705039 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349264517 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351127723 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.3495525 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730780152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.351536982 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351123279 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.35148898 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350950171 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436344102 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352526439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350332798 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.69326323 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353500247 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425015699 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347339416 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349108876 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.353992905 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734361662 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.348189453 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349841559 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.425193421 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353522203 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70142573 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.356206953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.350220271 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.698400478 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.445056542 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371707233 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362478837 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361622828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455001774 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372307133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435948696 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436024332 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.440064113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391866614 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.35509664 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.348458 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35634746 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.35526467 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353974063 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3828248 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.356604571 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352347057 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.696123414 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.364446769 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362642199 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352691838 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352510405 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.377282375 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.354623133 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356294893 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.446528389 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35657515 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.419151072 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735991629 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733935204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355213907 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.351449363 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354439407 seconds)
  done (took 149.789815567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423229038 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.428763885 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46606602 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372799384 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.4060361 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.47162243 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.37378308 seconds)
  done (took 11.202676153 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362749584 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357266238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415177974 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407098634 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358578883 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.535501398 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358185805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368043246 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355810826 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.4100459 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360816108 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359501913 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36480206 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352274652 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40417656 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.367271347 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473102535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359617091 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358706472 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520032763 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354932058 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36363515 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410561856 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369159616 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359644655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364818709 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.214159701 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358838279 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35727583 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357980683 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355698812 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.434929531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359259781 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.356491667 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356258736 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473120531 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358986157 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356393802 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359415648 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.356130774 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359980234 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360573372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359879288 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356946929 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359603054 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.382467754 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359121265 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.360215929 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.360364595 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361291913 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409906274 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361542086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357445963 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357258961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.412622618 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367306178 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361606755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358325527 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361073623 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357795256 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.523433347 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.409137386 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361320365 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408010918 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362251161 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361352147 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.36092126 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362644256 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414797941 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360736995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412619629 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.359683519 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542527194 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.386602258 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363446333 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365075834 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.36542042 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36255128 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363244949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.366667785 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358405162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.363285117 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.3675256 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361462031 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359547303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.53025035 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48171758 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360156912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375099838 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.369117466 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360973128 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.4166015 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362708409 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.359201852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414668753 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478893729 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414924058 seconds)
  done (took 156.262897575 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368450858 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370561865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366661851 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.386681456 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381762795 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363517325 seconds)
  done (took 9.504894074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.368422246 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364359185 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364514579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364832563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365373193 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.364852318 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365163142 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36750464 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.369223412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.366272189 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365740496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.368572741 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.367624008 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364957517 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364560534 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.365694298 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.36656631 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362491376 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.367263822 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364313171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.474028297 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.366664733 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365685067 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366560968 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370344598 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36520648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372559408 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365540029 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366876853 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374218805 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384211946 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.367398877 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368273869 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371994616 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370301255 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367457812 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369445112 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.370942796 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365729029 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368051467 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372310617 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367906789 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.368069072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372088541 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370485921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372370529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375935147 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373734275 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367024581 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371326893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371178646 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.368743412 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368518741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.371520079 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.37115926 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387689069 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.375361191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368865864 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.368549053 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.370967885 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.369257807 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367695634 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371603591 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372538731 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369041689 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37420826 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370645657 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371326503 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370178463 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368817076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.373267943 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367367056 seconds)
  done (took 100.961239422 seconds)
done (took 428.979481767 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.727678717 seconds)
  done (took 8.000131653 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.424804049 seconds)
  done (took 7.699256334 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.464581362 seconds)
  done (took 21.74357614 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.410909632 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.402449775 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.389126182 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.365245526 seconds)
  done (took 26.842210685 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.744233864 seconds)
  done (took 8.01904349 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.361558468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37824471 seconds)
  done (took 14.016787036 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.986742563 seconds)
  done (took 8.262246228 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.017788852 seconds)
  done (took 8.298077605 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.370018872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374643648 seconds)
  done (took 14.284179463 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.339165909 seconds)
  done (took 7.610051158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.528822519 seconds)
  done (took 11.801859489 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.363045262 seconds)
  done (took 7.635941432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.431470563 seconds)
  done (took 7.702657042 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.251427507 seconds)
  done (took 9.522806851 seconds)
done (took 162.713297241 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.361108513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.361926149 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.360284499 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361798657 seconds)
  done (took 26.716071163 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401965872 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400525923 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401525066 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.412710142 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404091904 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401948605 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393875712 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.393117811 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41250242 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40471229 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403948025 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.404749722 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.401440276 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394042132 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404877995 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.403690845 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.4141138 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402508262 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395128494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406002936 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.370800838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.4134439 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406231683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370515191 seconds)
  done (took 34.890339209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893091543 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.441489565 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523827659 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423630269 seconds)
  done (took 7.55491614 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.421585598 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423891965 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436702465 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47675816 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509868616 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433491894 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39736357 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.391955938 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379554051 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424410583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498486438 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440422027 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.515033414 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.370722172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.584747206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370577679 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370980793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423641804 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474017936 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492943768 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.370804251 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42225991 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.426992348 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440265822 seconds)
  done (took 35.771800863 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369827082 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.388402824 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.36909542 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369887241 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378303575 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.370927164 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37010677 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.369818239 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.369880125 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.376527354 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369501493 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382735184 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369402974 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.37082719 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.378247539 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371297453 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378188548 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370760143 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.370188935 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.376762741 seconds)
  done (took 28.744108644 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.364141452 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.405273214 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717692353 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.622308545 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364563428 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.369403981 seconds)
  done (took 28.118548717 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440101658 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585005775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.371596617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.718019901 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.81061911 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388642745 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372561926 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.606912713 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919217852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.912292755 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427978119 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437901393 seconds)
  done (took 20.268056628 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.371226487 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.36963292 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.371988111 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.384815426 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.425543212 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392729635 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.378860884 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366490291 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.429982098 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44574375 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391536458 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.426888785 seconds)
  done (took 38.031765926 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455454589 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411496859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.347162526 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38147311 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101165979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580115263 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409148217 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090051216 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394852426 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645653995 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377297621 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464070532 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626628196 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376152428 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377377014 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.295132859 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616968005 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850017482 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378073405 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307390041 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396975696 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372806325 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.381783716 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60294527 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606451189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350873918 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633626598 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150557156 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6530875 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388996656 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383773322 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374761525 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64725294 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.323810538 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470203197 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585410452 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395217678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.004490163 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.361466056 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.308083794 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377906404 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380091396 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385628168 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374724818 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307868327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374799732 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.407113242 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379881433 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085847271 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374558864 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628186227 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471314019 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37850273 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.945481776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462549107 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.38195942 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378897592 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46966758 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967504999 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552176669 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3857887 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.312946091 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376500474 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312512613 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979184807 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398464086 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380312365 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379243871 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310341485 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.307745418 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392015189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528865087 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402535871 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937419739 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044811558 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398306845 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310887167 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922657121 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396311405 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.313979985 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603447572 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153392156 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313041103 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322185944 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31119408 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063241105 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389489366 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.779923475 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399146331 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116642138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609615264 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41480607 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400561726 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600014046 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.2531502 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37947663 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.389516242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510070637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400139719 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087823406 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330299951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381450169 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63412726 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588916145 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379026108 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308175296 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153569627 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383905402 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400626356 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393002634 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593735726 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.964955035 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410583466 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.560926804 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399339143 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154975857 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107600622 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399185363 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.385956209 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388462131 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648864184 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.113647444 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279712449 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448571976 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38174954 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379639925 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.336715817 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229455469 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.27655181 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.575926321 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401348327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410169307 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.38126629 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328535009 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.387096025 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385035657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.162327507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602956192 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381267242 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673567371 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315108014 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527250716 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389578361 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.603373686 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.556079634 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402817405 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63944138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386332059 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396608819 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395724519 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401342778 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481273169 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403548805 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.386290703 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640047135 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.386205731 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386253428 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33916245 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159459676 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386481461 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388921429 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389165569 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953983572 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376610874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393518807 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30615004 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397807255 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449955258 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389203045 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598359023 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.618052056 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399549229 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387413219 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.381099068 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622962589 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393563801 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.335077715 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463283646 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.863725277 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972029703 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413421276 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318077711 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.09309455 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.076130156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384629978 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572207787 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384107142 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597964515 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41797042 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385019357 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959634223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402691059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.344735551 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388649433 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396785967 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.655059318 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40131318 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.599748964 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.602734497 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38995975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399697856 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527433417 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397830057 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318759594 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901871292 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389764155 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384724536 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.159420397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420244413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.371236396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641577553 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669478904 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397342397 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644684486 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.451904928 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420636078 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382917325 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392082362 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401211681 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393292657 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395400004 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.398463415 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.343361705 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.825010981 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95606388 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090761944 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918065593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639662378 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.409332207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271160946 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114135927 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339699155 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04407453 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61926518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122960828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349137407 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142202154 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561310225 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159856616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644236072 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617554529 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618775715 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.414161721 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646287489 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600089836 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422308861 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400494096 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320092696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.905235884 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342471293 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388055494 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485970979 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455416876 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401030224 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167951039 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.402317573 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.095389522 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.051468087 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.937912902 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.776132379 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403671889 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399906287 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.608091593 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41226575 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914523845 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996025489 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412604194 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.872895449 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343778131 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605841062 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422680631 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.385290543 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.919552967 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.403865681 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644223509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646453565 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326102923 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392021912 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909711197 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262498302 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396441093 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832679883 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116527544 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40634775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676208143 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.392921674 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.607410965 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410525939 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325304087 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325066633 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.083804752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392122122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366177524 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875301001 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.41433212 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397985841 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411401337 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240655329 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646924523 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406279157 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96328841 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635578136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404510232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417925192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394709203 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399346019 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.37111559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289543395 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627748787 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399491971 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634091013 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.361316337 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.295537915 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.474137734 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605151282 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.320225788 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401676016 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622435561 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.125616597 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.412416596 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103961316 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43809334 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402989048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405205236 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407184932 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415998303 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483392492 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610780277 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.427717203 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.404992137 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.036263994 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411716693 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395808402 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.408075324 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488140853 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.623511043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.614746895 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.182584943 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969277574 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122943378 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98778559 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670004174 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396707287 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40462512 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329277992 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544411617 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92131281 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669139671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523813586 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.397406816 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434759316 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397649622 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399432543 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613199425 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672020161 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266100095 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406491463 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060238818 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.551128946 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406080083 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607726289 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884905188 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951805423 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692295208 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401718721 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126142861 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690846549 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.487070259 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395487945 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985057008 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.399405927 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.103344325 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.406551782 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412951628 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544551506 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653898354 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.334246582 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410991682 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.558097446 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.17010783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371986035 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652632399 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.827563926 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617845105 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99594241 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106029217 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661196638 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46812142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616837768 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.522728878 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546263703 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.401210993 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278333392 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398980994 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244820106 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.107364899 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41028153 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978230725 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677635574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.401694607 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.403657933 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421851467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408035965 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621979836 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099506016 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627869849 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408203832 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401708019 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.969438097 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97819679 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675250211 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334845423 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40325188 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626961625 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658117287 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424317745 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852402989 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110843721 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954383476 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.375926563 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422623921 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401248151 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098758737 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983862289 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.642293021 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901458542 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062663107 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411827826 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680365028 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408191704 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411816176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680191472 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405080941 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401541826 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642268539 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.997762097 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184802284 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403354017 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408570513 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.337580216 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627907918 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489335222 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360644424 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41241359 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.82206836 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423058129 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532868106 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413585795 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.401519954 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430478587 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.158377035 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684190221 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408044967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.39956211 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.382769554 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406473117 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502828551 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409686979 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411530455 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.076040216 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.754108437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659343374 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404018623 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.385669257 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408315379 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403777411 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121703067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373691054 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413005704 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949735691 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.406983665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.418500506 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40670249 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619843885 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614605256 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406551905 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624625288 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421825132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423371048 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.308562905 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171427522 seconds)
  done (took 1698.120768205 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412360194 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.42836641 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.437559083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.430507848 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444146362 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.49234769 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.473855924 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495826046 seconds)
  done (took 52.929089512 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.417120105 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.56096561 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.434116578 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.40865331 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.417544257 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417313003 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.857769657 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.428914737 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.41351803 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.415553642 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.411388334 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.411281875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.023157529 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.415753662 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.406875983 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.411754849 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.414586308 seconds)
  done (took 66.584729912 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.472134241 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.749334169 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.269399543 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.482942869 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.422953198 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.418377611 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.99049327 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.432179683 seconds)
  done (took 59.552657172 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417883522 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418717706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419019339 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417929985 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422416146 seconds)
  done (took 8.411329368 seconds)
done (took 2106.967967166 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411633946 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414493152 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.41103739 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413444088 seconds)
  done (took 6.965707336 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.386479066 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.076454182 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.392377088 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40374618 seconds)
  done (took 18.574556792 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.428791613 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.428907359 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.07724161 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.996057426 seconds)
  done (took 5.390610146 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.158020466 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170194274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155056251 seconds)
  done (took 7.799152425 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.406103884 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.412394979 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.412080588 seconds)
  done (took 20.547258956 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70462001 seconds)
  done (took 3.020998637 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.55652034 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.60648579 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.726515784 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.746126761 seconds)
  done (took 7.953327261 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.798414301 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.781222195 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.603381871 seconds)
  done (took 6.500294217 seconds)
done (took 90.925421811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.203126209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410764839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.615483012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.215490124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644066362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.61531153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.606291077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.186188122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.68419729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.673645032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.177905402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643800982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.767163271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411518477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.764802546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.790114865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.768538951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.24728537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.862609857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.098036943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.606945926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.816340614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.009647901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.836283797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.765374186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.644822264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.391668428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.796099185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.03531899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.414573599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.575659257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.269651816 seconds)
  done (took 192.866369656 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412255037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410907631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428458186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426217697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422684984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410576557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.428774647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425118008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.42713693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.432622338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41052911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416330266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4136917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426253622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415168337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413500743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437027055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.412678088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412582501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440813476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412050515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426485197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413962951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422720193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.412593107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.429388594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429963595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426749087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413866185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412869137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.413346912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429471687 seconds)
  done (took 206.787181601 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414528214 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415528047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41353478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427941096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416567743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413902124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41388835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413515037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414629734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427108361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.413497713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41507387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431349147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416300394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.429513919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.429647541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413575495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414346393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.429695535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41458348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414832968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414716115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414803557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414867625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422468608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.414753232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.433070451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414715238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415692629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.430405056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414853412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430802482 seconds)
  done (took 206.735942598 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.617262985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.422550869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.423423268 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376148351 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424531214 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423053009 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418707786 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.613768846 seconds)
  done (took 15.042286512 seconds)
done (took 622.748164208 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.685995215 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.410730238 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.625235663 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441775248 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.189230256 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.46115495 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44372002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.607956174 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.337090005 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.616832814 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.6882029 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456914972 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.831311098 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441750592 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.698327655 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540904915 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.332061582 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452788854 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.757137821 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.958645331 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.70428956 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.877435012 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.629566803 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.342302544 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.844977256 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.878768716 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.140178098 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.3233768 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459595755 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.76584546 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.084144205 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.396367485 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.484623443 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.500337668 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.560068412 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.539706264 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.38274801 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500759446 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.64443577 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642167232 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943122985 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.157124835 seconds)
  done (took 95.104617624 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.407318329 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.408241214 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.406770159 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.406947107 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.411820396 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407689918 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.407347201 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.409619993 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.409594863 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.408493315 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406523556 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409294146 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.407570096 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.407847345 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.40826191 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409602856 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409363272 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409928851 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.407752038 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.407550338 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.408940367 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.408450412 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.407766896 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.406883043 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.408182832 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408926553 seconds)
  done (took 37.94545912 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427742016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.673364125 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.839956785 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435411622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429460848 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432369894 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.505007286 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.430635044 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431814467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.432894051 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581263849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432992082 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461493312 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.865392116 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431496186 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43186333 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431186637 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.429693394 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.681135511 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439958015 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.525196687 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.430834247 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.508275238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439181941 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451813886 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431871756 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.436640705 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.99596328 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449920441 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.581496663 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217202904 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.508475419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.952004731 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.877358998 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.229383311 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.436206534 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.431008819 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.585627683 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.434233437 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431798844 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.508149844 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.430992885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853895835 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112805683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451692274 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433715357 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018368681 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.604919286 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.673478124 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442174711 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879228532 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.438008827 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.432500546 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432926333 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.673999431 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440208289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433609218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040935722 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.454608938 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.509530636 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.435728077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433751227 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.687017162 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434019828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.676303477 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433737937 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44218774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454295327 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.854549961 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.442059234 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.133685617 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452571701 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.434759926 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.585088282 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.678557726 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051415017 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.4552833 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.693181497 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96348798 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.526503702 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439936416 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.990872437 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.528837813 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43903464 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437339702 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.436831722 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.434968835 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484552971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.509325776 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.065477422 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.150780793 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.069835359 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.529533626 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441698249 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.436475936 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.046571189 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452379456 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436426593 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.848473942 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137073294 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.456689374 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.443310109 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.141642906 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457761325 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.514058925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440448884 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.864386387 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.438085921 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.486538536 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.43523762 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.443713115 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.45995751 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.514989865 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440958295 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434967189 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.106960087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.610232987 seconds)
  done (took 188.451223861 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.444198605 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.42882159 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.437557962 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.430205882 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.429309245 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438670575 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.431387173 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.431340444 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435991122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.43111987 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.433231233 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.430628061 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.43128509 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.438270052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.46009291 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438215449 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.037489195 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.431552991 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.431730554 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.431573913 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.224081612 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.43846986 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.430429796 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.430178874 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.430433654 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.434379916 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.43597577 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.45100281 seconds)
  done (took 154.913108966 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438156592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.990874045 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.45602946 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.567946988 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458790437 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.4361273 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.5665992 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494927449 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.455283862 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.436413149 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.437515415 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.737268905 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.441192914 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.943292528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.626569071 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.583749145 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.943480857 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456743893 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.437410604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.438206473 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.570839941 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.44516378 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.735150759 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.000777405 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458772381 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.995418024 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42361626 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439114377 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43793663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.998336937 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.452664624 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.737694914 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.51593911 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.500015262 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023526253 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.9660929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.96158732 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.585006591 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439127117 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439714517 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437020905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.422407349 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997306944 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458780983 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.438222328 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984380545 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.457584034 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.440472544 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.447730576 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.439643022 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.499532533 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.515746402 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.758182502 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.005523769 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.531805332 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454897294 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.5695582 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.821677309 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.444425381 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.948826578 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.424010138 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017788836 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.464291808 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.421081937 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441440593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448618935 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.589265794 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.572386219 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.951485297 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458245417 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.950943609 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.604345856 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.442809993 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442687955 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443111858 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017094387 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968438049 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.60308442 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.576643829 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.638741562 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.427239343 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.443310547 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.423840933 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.517221876 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.446307484 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.006236097 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.968106418 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459748966 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445238282 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442842598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.4441785 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.617115652 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.040135071 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.540856388 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.939592326 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.764233026 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.753394302 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.44739937 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.501237771 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.457227459 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.748967068 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447549211 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.499047605 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.872101216 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.748762005 seconds)
  done (took 170.767042728 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.678598198 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.610382387 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.530865016 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.594960413 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.038433791 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.998148386 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742933714 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585509119 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.55062293 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.69969892 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.597664901 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.552222926 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.654661731 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.523293074 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.170544527 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.531124878 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.551589091 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.590084489 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.600560536 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.449753842 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.118417137 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.720937592 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.631714393 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.349642323 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53779637 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.195020531 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.998902706 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.955696988 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.619166257 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.742662478 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.978573013 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.559320958 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.400760222 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.132918413 seconds)
  done (took 68.53644184 seconds)
done (took 717.041426966 seconds)
SAVING RESULT...
DONE!
